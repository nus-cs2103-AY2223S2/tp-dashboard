[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"# LoyaltyLift","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-T09-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-T09-3/tp/actions)","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-T09-3/tp/branch/master/graph/badge.svg?token\u003dJCKBOH0UD8)](https://codecov.io/gh/AY2223S2-CS2103T-T09-3/tp)","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"\u003e ### _Manage. Reward. Grow. LoyaltyLift._","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"**LoyaltyLift** is an application for small business owners to manage customers and their orders to boost customer satisfaction and retention rate.","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"It stores customers\u0027 profile, preferences and tracks ongoing and past orders. Furthermore, it provides a simple reward system to better engage youur customers.","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"It is optimised for use via the _Command Line Interface (CLI)_ while being complimented by an intuitive _Graphical User Interface (GUI)_.","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"## User Guide","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"For detailed information on how to use LoyaltyLift, do refer to the [User Guide](docs/UserGuide.md)","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"## Developer Guide","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"We welcome contributions to LoyaltyLift! To understand how you can do so, head over to the [Developer Guide](docs/DeveloperGuide.md).","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"## Acknowledgements","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"Junyi00":19,"-":7}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"mainClassName \u003d \u0027seedu.loyaltylift.Main\u0027","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"Junyi00"},"content":"    archiveFileName \u003d \u0027loyaltylift.jar\u0027","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"JavonTeo"},"content":"run {","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"JavonTeo"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Junyi00":2,"JavonTeo":2,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"jednghk"},"content":"Our team was formed to complete a Team Project (tp)","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"jednghk"},"content":"as a graded component in our module, [CS2103T](https://nusmods.com/modules/CS2103T/software-engineering).","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"jednghk"},"content":"### Jed Ng","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"jednghk"},"content":"\u003cimg src\u003d\"images/jednghk.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"jednghk"},"content":"[[github](https://github.com/jednghk)]","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"jednghk"},"content":"[[portfolio](team/jednghk.md)]","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"jednghk"},"content":"### Ryo Hilmawan","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"jednghk"},"content":"\u003cimg src\u003d\"images/cloudhill.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"jednghk"},"content":"[[github](http://github.com/CloudHill)]","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"jednghk"},"content":"[[portfolio](team/CloudHill.md)]","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"jednghk"},"content":"* Role: Developer","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"### Dawson Nui","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"jednghk"},"content":"\u003cimg src\u003d\"images/infrix.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"jednghk"},"content":"[[github](http://github.com/Infrix)]","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"jednghk"},"content":"[[portfolio](team/Infrix.md)]","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"jednghk"},"content":"### Javon Teo","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"jednghk"},"content":"\u003cimg src\u003d\"images/javonteo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"jednghk"},"content":"[[github](http://github.com/JavonTeo)]","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"jednghk"},"content":"[[portfolio](team/JavonTeo.md)]","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"jednghk"},"content":"### Goh Jun Yi","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"jednghk"},"content":"\u003cimg src\u003d\"images/junyi00.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"jednghk"},"content":"[[github](http://github.com/Junyi00)]","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"jednghk"},"content":"[[portfolio](team/Junyi00.md)]","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jednghk":22,"Infrix":1,"-":31}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"Infrix"},"content":"### Add/Deduct reward points feature","lastModifiedDate":"2023-03-24"},{"lineNumber":159,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":160,"author":{"gitId":"Infrix"},"content":"#### Implementation","lastModifiedDate":"2023-03-24"},{"lineNumber":161,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":162,"author":{"gitId":"Infrix"},"content":"From `Points` class, a new feature of adding and deducting from the points a customer has, was required.","lastModifiedDate":"2023-03-24"},{"lineNumber":163,"author":{"gitId":"Infrix"},"content":"A cumulative points system also had to be introduced. Adding points should increase the cumulative points a customer","lastModifiedDate":"2023-03-24"},{"lineNumber":164,"author":{"gitId":"Infrix"},"content":"has while deducting points should not affect the cumulative points of the customer.","lastModifiedDate":"2023-03-24"},{"lineNumber":165,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":166,"author":{"gitId":"Infrix"},"content":"As a result, a new attribute, `cumulative` was introduced to `Points`.","lastModifiedDate":"2023-03-24"},{"lineNumber":167,"author":{"gitId":"Infrix"},"content":"For the parsing of the `addpoints` command, I had to consider between different design choices.","lastModifiedDate":"2023-03-24"},{"lineNumber":168,"author":{"gitId":"Infrix"},"content":"The one I ultimately settled on was merely utilising `Integer.valueOf` method to parse the points inputted by the user.","lastModifiedDate":"2023-03-24"},{"lineNumber":169,"author":{"gitId":"Infrix"},"content":"Also, in the execution of `AddPointsCommand` class, the points to add would exist as an Integer object instead of a","lastModifiedDate":"2023-03-24"},{"lineNumber":170,"author":{"gitId":"Infrix"},"content":"`Points` object. The addition or subtraction of points from the `Points` class would then be as simple as adding the","lastModifiedDate":"2023-03-24"},{"lineNumber":171,"author":{"gitId":"Infrix"},"content":"points to current points and cumulative points when it is positive, and subtracting from current points when it is ","lastModifiedDate":"2023-03-24"},{"lineNumber":172,"author":{"gitId":"Infrix"},"content":"negative. This simple design would be sufficient to achieve the intended feature.","lastModifiedDate":"2023-03-24"},{"lineNumber":173,"author":{"gitId":"Infrix"},"content":"Lastly, to store the cumulative points of `Customer`, a new attribute, `cumulativePoints` was introduced to the","lastModifiedDate":"2023-03-24"},{"lineNumber":174,"author":{"gitId":"Infrix"},"content":"`JsonAdaptedCustomer`.","lastModifiedDate":"2023-03-24"},{"lineNumber":175,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":176,"author":{"gitId":"Infrix"},"content":"### Alternatives considered","lastModifiedDate":"2023-03-28"},{"lineNumber":177,"author":{"gitId":"Infrix"},"content":"There were other designs I was considering, listed below.","lastModifiedDate":"2023-03-24"},{"lineNumber":178,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":179,"author":{"gitId":"Infrix"},"content":"1. A design choice I had to make was for the `addpoints` command, originally I intended for the command users inputted","lastModifiedDate":"2023-03-24"},{"lineNumber":180,"author":{"gitId":"Infrix"},"content":"to include a modifier syntax for the user to specify if he or she wishes to add or subtract points.","lastModifiedDate":"2023-03-24"},{"lineNumber":181,"author":{"gitId":"Infrix"},"content":"For instance, the command could be `addpoints 1 mod/- pt/100` to indicate that the user wants to subtract 100 points","lastModifiedDate":"2023-03-24"},{"lineNumber":182,"author":{"gitId":"Infrix"},"content":"from the customer in the first index. I wanted to follow this implementation as many commands follow the syntax of","lastModifiedDate":"2023-03-24"},{"lineNumber":183,"author":{"gitId":"Infrix"},"content":"`[PREFIX]/` for the user to specify their command. However, I subsequently decided that this may be too inconvenient for","lastModifiedDate":"2023-03-24"},{"lineNumber":184,"author":{"gitId":"Infrix"},"content":"the user, and since it is intuitive for 100 or -100 points to exist, I decided to allow the specification of the","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"Infrix"},"content":"modifier of points to come after `pt/`","lastModifiedDate":"2023-03-24"},{"lineNumber":186,"author":{"gitId":"Infrix"},"content":"2. I also considered to have a static inner class, as encapsulation of the information of the addition or subtraction","lastModifiedDate":"2023-03-24"},{"lineNumber":187,"author":{"gitId":"Infrix"},"content":"of points, and for `AddPointsCommand` to take in a `Points.AddPoints` as an attribute. This would allow an enum","lastModifiedDate":"2023-03-24"},{"lineNumber":188,"author":{"gitId":"Infrix"},"content":"modifier to exist within the `AddPoints` inner class, allowing future extension of editing reward points by simply","lastModifiedDate":"2023-03-24"},{"lineNumber":189,"author":{"gitId":"Infrix"},"content":"including new enumeration of modifiers. This would also allow a validity check of the points to be added or deducted.","lastModifiedDate":"2023-03-24"},{"lineNumber":190,"author":{"gitId":"Infrix"},"content":"However, with the help of my teammate, I later decided that this may not be necessary as checking the validity of the","lastModifiedDate":"2023-03-24"},{"lineNumber":191,"author":{"gitId":"Infrix"},"content":"resultant `Points` after adding or subtracting is sufficient. Moreover, utilising the `Integer.valueOf` method in","lastModifiedDate":"2023-03-24"},{"lineNumber":192,"author":{"gitId":"Infrix"},"content":"`AddPointsCommandParser` would make parsing much simpler as compared to evaluating the modifier in front of points.","lastModifiedDate":"2023-03-24"},{"lineNumber":193,"author":{"gitId":"Infrix"},"content":"This simpler design would also be sufficient as we had no plans to incorporate","lastModifiedDate":"2023-03-24"},{"lineNumber":194,"author":{"gitId":"Infrix"},"content":"features other than the addition or subtraction of points.","lastModifiedDate":"2023-03-24"},{"lineNumber":195,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":196,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":197,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":198,"author":{"gitId":"CloudHill"},"content":"### Customer and Order Notes","lastModifiedDate":"2023-03-25"},{"lineNumber":199,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":200,"author":{"gitId":"CloudHill"},"content":"#### Implementation","lastModifiedDate":"2023-03-25"},{"lineNumber":201,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":202,"author":{"gitId":"CloudHill"},"content":"A **note** is any string that is associated with a `Customer` or an `Order`.","lastModifiedDate":"2023-03-25"},{"lineNumber":203,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":204,"author":{"gitId":"CloudHill"},"content":"To implement this, a new `note` field of type `Note` has been added to `Customer` and `Order`.","lastModifiedDate":"2023-03-25"},{"lineNumber":205,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":206,"author":{"gitId":"CloudHill"},"content":"* `Note` is a class with a `String` field that can take any value except `null`.","lastModifiedDate":"2023-03-25"},{"lineNumber":207,"author":{"gitId":"CloudHill"},"content":"* If a `Customer` or `Order` has a note, a **Note** section will be shown in their view panel","lastModifiedDate":"2023-03-25"},{"lineNumber":208,"author":{"gitId":"CloudHill"},"content":"* An empty note is indicated by a blank string, in which case the **Note** section will not be shown.","lastModifiedDate":"2023-03-25"},{"lineNumber":209,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":210,"author":{"gitId":"CloudHill"},"content":"There are four commands to manipulate a given customer/order\u0027s note","lastModifiedDate":"2023-03-25"},{"lineNumber":211,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":212,"author":{"gitId":"CloudHill"},"content":"* `setnotec` to set or overwrite a `Customer`\u0027s note","lastModifiedDate":"2023-03-25"},{"lineNumber":213,"author":{"gitId":"CloudHill"},"content":"* `appendnotec` to add some string to the end of a `Customer`\u0027s existing note","lastModifiedDate":"2023-03-25"},{"lineNumber":214,"author":{"gitId":"CloudHill"},"content":"* `setnoteo` to set or overwrite an `Order`\u0027s note","lastModifiedDate":"2023-03-25"},{"lineNumber":215,"author":{"gitId":"CloudHill"},"content":"* `appendnoteo` to add some string to the end of an `Order`\u0027s existing note","lastModifiedDate":"2023-03-25"},{"lineNumber":216,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":217,"author":{"gitId":"CloudHill"},"content":"We settled on just a **set** and **append** command as deleting a note can be done by simply setting the note to an empty string. On the other hand, there is no clear way to edit text in a CLI application.","lastModifiedDate":"2023-03-25"},{"lineNumber":218,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":219,"author":{"gitId":"CloudHill"},"content":"#### Potential Enhancements","lastModifiedDate":"2023-03-25"},{"lineNumber":220,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":221,"author":{"gitId":"CloudHill"},"content":"* **Multiple Notes**","lastModifiedDate":"2023-03-25"},{"lineNumber":222,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":223,"author":{"gitId":"CloudHill"},"content":"  Currently, a customer/order can have a single note. It may be useful if  they can have multiple notes instead. This would involve an alternative set of commands to add and remove notes for a given customer/order.","lastModifiedDate":"2023-03-25"},{"lineNumber":224,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":225,"author":{"gitId":"CloudHill"},"content":"* **Note Tags**","lastModifiedDate":"2023-03-25"},{"lineNumber":226,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":227,"author":{"gitId":"CloudHill"},"content":"  Different notes between different customers and orders may have related themes. Thus, the ability to add tags to these related notes can help the user group their notes.","lastModifiedDate":"2023-03-25"},{"lineNumber":228,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":229,"author":{"gitId":"CloudHill"},"content":"  This could be done inline using a special character (e.g. `#`) within the note itself, where the system would automatically detect the tags.","lastModifiedDate":"2023-03-25"},{"lineNumber":230,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":231,"author":{"gitId":"CloudHill"},"content":"  We can then provide an additional command to view all the notes with a specific tag, along with their associated customer/order.","lastModifiedDate":"2023-03-25"},{"lineNumber":232,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":233,"author":{"gitId":"CloudHill"},"content":"### Sorting feature","lastModifiedDate":"2023-03-26"},{"lineNumber":234,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":235,"author":{"gitId":"CloudHill"},"content":"Customers and Orders can be sorted by certain attributes. We decided to implement the sorting as a parameter for the list commands.","lastModifiedDate":"2023-03-27"},{"lineNumber":236,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":237,"author":{"gitId":"CloudHill"},"content":"The sorting is done by adding a JavaFX `SortedList` to the `Model`, with the original `FilteredList` as its source. This `SortedList` is then used to display the customer and order list in place of the `FilteredList`.","lastModifiedDate":"2023-03-27"},{"lineNumber":238,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":239,"author":{"gitId":"CloudHill"},"content":"The `SortedList` can be sorted by a `Comparator`.","lastModifiedDate":"2023-03-26"},{"lineNumber":240,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":241,"author":{"gitId":"CloudHill"},"content":"* The `Comparator`s for each sorting option is provided as static constants by the `Customer` and `Order` class.","lastModifiedDate":"2023-03-27"},{"lineNumber":242,"author":{"gitId":"CloudHill"},"content":"* To facilitate the comparators, the relevant attribute classes (e.g. `Name` and `Points`) will also implement the `Comparable` interface.","lastModifiedDate":"2023-03-27"},{"lineNumber":243,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":244,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":245,"author":{"gitId":"Junyi00"},"content":"### Order Status","lastModifiedDate":"2023-03-28"},{"lineNumber":246,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":247,"author":{"gitId":"Junyi00"},"content":"An order\u0027s `status` attribute represents the stage of an order, which can be one of these:","lastModifiedDate":"2023-03-28"},{"lineNumber":248,"author":{"gitId":"Junyi00"},"content":"* Pending","lastModifiedDate":"2023-03-28"},{"lineNumber":249,"author":{"gitId":"Junyi00"},"content":"* Paid","lastModifiedDate":"2023-03-28"},{"lineNumber":250,"author":{"gitId":"Junyi00"},"content":"* Shipped","lastModifiedDate":"2023-03-28"},{"lineNumber":251,"author":{"gitId":"Junyi00"},"content":"* Completed","lastModifiedDate":"2023-03-28"},{"lineNumber":252,"author":{"gitId":"Junyi00"},"content":"* Cancelled","lastModifiedDate":"2023-03-28"},{"lineNumber":253,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":254,"author":{"gitId":"Junyi00"},"content":"**Note:** Other than the `Cancelled` stage, an order is expected to start from `Pending` and proceed along the order as mentioned above.","lastModifiedDate":"2023-03-28"},{"lineNumber":255,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":256,"author":{"gitId":"Junyi00"},"content":"For the implementation, we introduce a few classes. Firstly, `StatusValue` is an enumeration whose values are the stages mentioned above.","lastModifiedDate":"2023-03-28"},{"lineNumber":257,"author":{"gitId":"Junyi00"},"content":"Next, a `StatusUpdate` class encapsulates a `StatusValue` and a date. ","lastModifiedDate":"2023-03-28"},{"lineNumber":258,"author":{"gitId":"Junyi00"},"content":"Finally, a `Status` class serves as the attribute of an Order that has many `StatusUpdate`.","lastModifiedDate":"2023-03-28"},{"lineNumber":259,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":260,"author":{"gitId":"Junyi00"},"content":"A `StatusUpdate` represents the information of when the `Order` transitions into the stage of `StatusValue` it has. ","lastModifiedDate":"2023-03-28"},{"lineNumber":261,"author":{"gitId":"Junyi00"},"content":"Thus, an order\u0027s `Status` has an association with many `StatusUpdate` to represent the history of how an order progresses from one stage to another.","lastModifiedDate":"2023-03-28"},{"lineNumber":262,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":263,"author":{"gitId":"Junyi00"},"content":"#### Alternative Approaches","lastModifiedDate":"2023-03-28"},{"lineNumber":264,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":265,"author":{"gitId":"Junyi00"},"content":"We also considered implementing the status attribute as an array of dates with a size of 5. ","lastModifiedDate":"2023-03-28"},{"lineNumber":266,"author":{"gitId":"Junyi00"},"content":"Each entry of this array would correspond to each possible stage of the order.","lastModifiedDate":"2023-03-28"},{"lineNumber":267,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":268,"author":{"gitId":"Junyi00"},"content":"However, this design would not be extensible for including other information such as a note or comment for each stage.","lastModifiedDate":"2023-03-28"},{"lineNumber":269,"author":{"gitId":"Junyi00"},"content":"Furthermore, this design assumes that the order\u0027s status can only move forward in progress and cannot revert without losing information.","lastModifiedDate":"2023-03-28"},{"lineNumber":270,"author":{"gitId":"Junyi00"},"content":"E.g. An order may return from `Shipped` to `Paid` again if the shipping fails to succeed for the business owner.","lastModifiedDate":"2023-03-28"},{"lineNumber":271,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":272,"author":{"gitId":"Junyi00"},"content":"With the current implemented approach, `StatusUpdate` can encapsulate other information such as the comment or note. ","lastModifiedDate":"2023-03-28"},{"lineNumber":273,"author":{"gitId":"Junyi00"},"content":"Furthermore, `Status` class which has many `StatusUpdate` which does not assume the size of it or any other information.","lastModifiedDate":"2023-03-28"},{"lineNumber":274,"author":{"gitId":"Junyi00"},"content":"Hence, this potentially allows subsequent `StatusUpdate` to have a stage that is before the previous entry of `StatusUpdate`.","lastModifiedDate":"2023-03-28"},{"lineNumber":275,"author":{"gitId":"Junyi00"},"content":"More details are explained in **Potential Enhancements**.","lastModifiedDate":"2023-03-28"},{"lineNumber":276,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":277,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":278,"author":{"gitId":"Junyi00"},"content":"#### Potential Enhancements","lastModifiedDate":"2023-03-28"},{"lineNumber":279,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":280,"author":{"gitId":"Junyi00"},"content":"* **Improvement in Reverting Order Progress**","lastModifiedDate":"2023-03-28"},{"lineNumber":281,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":282,"author":{"gitId":"Junyi00"},"content":"  Currently, the implementation reverts an order\u0027s status by deleting the latest `StatusUpdate`. ","lastModifiedDate":"2023-03-28"},{"lineNumber":283,"author":{"gitId":"Junyi00"},"content":"  Hence, information is lost that an order was once in that state before returning back.","lastModifiedDate":"2023-03-28"},{"lineNumber":284,"author":{"gitId":"Junyi00"},"content":"  Furthermore, `Status` sorts `StatusUpdate` by its `StatusValue` so that the assumption that the latest entry is the latest is always true.","lastModifiedDate":"2023-03-28"},{"lineNumber":285,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":286,"author":{"gitId":"Junyi00"},"content":"  In the future, it may be useful that the information are preserved and not deleted from the system. ","lastModifiedDate":"2023-03-28"},{"lineNumber":287,"author":{"gitId":"Junyi00"},"content":"  A potential implementation is by appending new `StatusUpdate` into `Status` instead of deleting the latest entry.","lastModifiedDate":"2023-03-28"},{"lineNumber":288,"author":{"gitId":"Junyi00"},"content":"  However, do note that the sorting logic must be updated.","lastModifiedDate":"2023-03-28"},{"lineNumber":289,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":290,"author":{"gitId":"Junyi00"},"content":"* **More Status Information**","lastModifiedDate":"2023-03-28"},{"lineNumber":291,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":292,"author":{"gitId":"Junyi00"},"content":"  In the future, the user may find it useful to provide additional information when updating its order status.","lastModifiedDate":"2023-03-28"},{"lineNumber":293,"author":{"gitId":"Junyi00"},"content":"  Eg. Add notes about the shipping details when the order updates from `Paid` to `Shipped`.","lastModifiedDate":"2023-03-28"},{"lineNumber":294,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":295,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":296,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":386,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":387,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":388,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":389,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"Infrix"},"content":"* small business owner that has a need to manage a sizeable number of customers and orders","lastModifiedDate":"2023-02-25"},{"lineNumber":399,"author":{"gitId":"Infrix"},"content":"* increase customer loyalty and retention rate","lastModifiedDate":"2023-02-25"},{"lineNumber":400,"author":{"gitId":"Infrix"},"content":"* engage with their customers and build long-term relationships with customers by providing incentives","lastModifiedDate":"2023-02-25"},{"lineNumber":401,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":404,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"Infrix"},"content":"**Value proposition**:","lastModifiedDate":"2023-02-25"},{"lineNumber":407,"author":{"gitId":"Infrix"},"content":"Help small business owners manage customers and their orders to boost customer satisfaction and retention rate, ultimately growing their business.","lastModifiedDate":"2023-02-25"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"Infrix"},"content":"| `* * *`  | small business owner | create, view, update and delete basic profile information of my customers | - |","lastModifiedDate":"2023-02-25"},{"lineNumber":416,"author":{"gitId":"Infrix"},"content":"| `* * *`  | small business owner |\tview a centralized tab containing all customers |\tview all the customers’ information. |","lastModifiedDate":"2023-02-25"},{"lineNumber":417,"author":{"gitId":"Infrix"},"content":"| `* * *`  | small business owner |\tsave the addresses of my customers | provide an easier checkout experience to frequent customers |","lastModifiedDate":"2023-02-25"},{"lineNumber":418,"author":{"gitId":"Infrix"},"content":"| `* * *`  | forgetful small business owner |\tbookmark customers for required updates | remind myself to communicate with some customers |","lastModifiedDate":"2023-02-25"},{"lineNumber":419,"author":{"gitId":"Infrix"},"content":"| `* * *`  | attentive business owner | track reward points given associated to my customers | determine who I should reward as part of the reward system |","lastModifiedDate":"2023-02-25"},{"lineNumber":420,"author":{"gitId":"Infrix"},"content":"| `* * *`  | small business owner | create, view, update and delete basic profile information of my orders | - |","lastModifiedDate":"2023-02-25"},{"lineNumber":421,"author":{"gitId":"Infrix"},"content":"| `* * *`  | small business owner | view a centralized tab containing all orders | view all the orders\u0027 information |","lastModifiedDate":"2023-02-25"},{"lineNumber":422,"author":{"gitId":"Infrix"},"content":"| `* * *`  | small business owner |\tset an order as paid for | - |","lastModifiedDate":"2023-02-25"},{"lineNumber":423,"author":{"gitId":"Infrix"},"content":"| `* * *`  | customer-focused small business owner | see which orders have been paid for | ship it out as soon as possible |","lastModifiedDate":"2023-02-25"},{"lineNumber":424,"author":{"gitId":"Infrix"},"content":"| `* * *`  | customer-focused small business owner | see how long an order has been unprocessed | prevent customers from waiting for too long |","lastModifiedDate":"2023-02-25"},{"lineNumber":425,"author":{"gitId":"Infrix"},"content":"| `* * *`  | small business owner | view the orders that I have completed | send a feedback form to the customer if necessary |","lastModifiedDate":"2023-02-25"},{"lineNumber":426,"author":{"gitId":"Infrix"},"content":"| `* * *`  | forgetful small business owner | move an order from \"paid\" to \"shipped\" | reference in future if the order has been shipped out |","lastModifiedDate":"2023-02-25"},{"lineNumber":427,"author":{"gitId":"Infrix"},"content":"| `* * *`  | occupied small business owner | move orders between different statuses (eg. To ship, Pending payment) | see what order I should focus on |","lastModifiedDate":"2023-02-25"},{"lineNumber":428,"author":{"gitId":"Infrix"},"content":"| `* * *`  | customer-focused small business owner | sort the order list by status of its timeline | be on track with customers\u0027 orders |","lastModifiedDate":"2023-02-25"},{"lineNumber":429,"author":{"gitId":"Infrix"},"content":"| `* * *`  | small business owner | view or search my customers’ previous orders | easily navigate to their previous orders to view relevant information |","lastModifiedDate":"2023-02-25"},{"lineNumber":430,"author":{"gitId":"Infrix"},"content":"| `* *`  | small business owner | categorize my customers by a few metrics | - |","lastModifiedDate":"2023-02-25"},{"lineNumber":431,"author":{"gitId":"Infrix"},"content":"| `* *`  | analytical small business owner | view some basic summary of my customer base | understand the demographics of my customers better |","lastModifiedDate":"2023-02-25"},{"lineNumber":432,"author":{"gitId":"Infrix"},"content":"| `* *`  | attentive small business owner | add customised notes to each customer | track more specific details of each customer |","lastModifiedDate":"2023-02-25"},{"lineNumber":433,"author":{"gitId":"Infrix"},"content":"| `* *`  | small business owner | include tags in my customer notes | view notes from multiple customers with a similar theme |","lastModifiedDate":"2023-02-25"},{"lineNumber":434,"author":{"gitId":"Infrix"},"content":"| `* *`  | small business owner | sort customers by their reward points | determine who are my loyal customers |","lastModifiedDate":"2023-02-25"},{"lineNumber":435,"author":{"gitId":"Infrix"},"content":"| `* *`  | small business owner | spend points for my customers | redeem rewards for them |","lastModifiedDate":"2023-02-25"},{"lineNumber":436,"author":{"gitId":"Infrix"},"content":"| `* *`  | devoted small business owner | keep a list of rewards and its availability and points | know what rewards I have prepared to give away to loyal customers |","lastModifiedDate":"2023-02-25"},{"lineNumber":437,"author":{"gitId":"Infrix"},"content":"| `* *`  | small business owner | add enterprise customers | include other companies in my list |","lastModifiedDate":"2023-02-25"},{"lineNumber":438,"author":{"gitId":"Infrix"},"content":"| `* *`  | small business owner | filter between individual and enterprise customers | - |","lastModifiedDate":"2023-02-25"},{"lineNumber":439,"author":{"gitId":"Infrix"},"content":"| `* *`  | small business owner | assign individuals to an enterprise | group individuals working in the enterprise |","lastModifiedDate":"2023-02-25"},{"lineNumber":440,"author":{"gitId":"Infrix"},"content":"| `* *`  | small business owner | view an order timeline for each order | refer to it for future reference |","lastModifiedDate":"2023-02-25"},{"lineNumber":441,"author":{"gitId":"Infrix"},"content":"| `* *`  | attentive small business owner | view what were my customers’ previous preferences for my product | can easily communicate with the customer about their previous preferences to provide a good service |","lastModifiedDate":"2023-02-25"},{"lineNumber":442,"author":{"gitId":"Infrix"},"content":"| `* *`  | analytical small business owner | view an overall history tab to have a high level view of the orders I have completed on any particular date | see what orders are popular or unpopular to decide on goods to sell |","lastModifiedDate":"2023-02-25"},{"lineNumber":443,"author":{"gitId":"Infrix"},"content":"| `* *`  | small business owner | tag an order to a specific customer | resolve conflicts regarding a particular order swiftly |","lastModifiedDate":"2023-02-25"},{"lineNumber":444,"author":{"gitId":"Infrix"},"content":"| `* *`  | small business owner who wants to reduce costs | group orders with delivery addresses close to each other | order delivery can be done more efficiently |","lastModifiedDate":"2023-02-25"},{"lineNumber":445,"author":{"gitId":"Infrix"},"content":"| `*`  | small business owner | search for customers using a keyword | easily find specific customers |","lastModifiedDate":"2023-02-25"},{"lineNumber":446,"author":{"gitId":"Infrix"},"content":"| `*`  | small business owner | search for orders using a keyword | easily find specific orders |","lastModifiedDate":"2023-02-25"},{"lineNumber":447,"author":{"gitId":"Infrix"},"content":"| `*`  | small business owner | save the customers and orders list | - |","lastModifiedDate":"2023-02-25"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"CloudHill"},"content":"For all use cases below, the **System** is `LoyaltyLift (LL)` and the **Actor** is the `user`, unless specified otherwise.","lastModifiedDate":"2023-03-02"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"CloudHill"},"content":"#### Use case: UC C1 - List Customers","lastModifiedDate":"2023-03-02"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"CloudHill"},"content":"1.  User requests list of customers.","lastModifiedDate":"2023-03-02"},{"lineNumber":458,"author":{"gitId":"CloudHill"},"content":"2.  LL displays list of customers.","lastModifiedDate":"2023-03-02"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"CloudHill"},"content":"* 2a. Customer list is empty.","lastModifiedDate":"2023-03-02"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"CloudHill"},"content":"#### Use case: UC C2 - View Customer","lastModifiedDate":"2023-03-02"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"CloudHill"},"content":"**MSS**","lastModifiedDate":"2023-03-02"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"CloudHill"},"content":"1.  User gets \u003cu\u003elist of customers (UC C1)\u003c/u\u003e.","lastModifiedDate":"2023-03-02"},{"lineNumber":473,"author":{"gitId":"CloudHill"},"content":"2.  User requests to view a customer.","lastModifiedDate":"2023-03-02"},{"lineNumber":474,"author":{"gitId":"CloudHill"},"content":"3.  LL displays the customer information.","lastModifiedDate":"2023-03-02"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"CloudHill"},"content":"    Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":477,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":478,"author":{"gitId":"CloudHill"},"content":"**Extensions**","lastModifiedDate":"2023-03-02"},{"lineNumber":479,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":480,"author":{"gitId":"CloudHill"},"content":"* 2a. Requested customer does not exist.","lastModifiedDate":"2023-03-02"},{"lineNumber":481,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":482,"author":{"gitId":"CloudHill"},"content":"    * 2a1. LL shows an error message.","lastModifiedDate":"2023-03-02"},{"lineNumber":483,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":484,"author":{"gitId":"CloudHill"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-03-02"},{"lineNumber":485,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":486,"author":{"gitId":"CloudHill"},"content":"#### Use case: UC C3 - Delete Customer","lastModifiedDate":"2023-03-02"},{"lineNumber":487,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":488,"author":{"gitId":"CloudHill"},"content":"**MSS**","lastModifiedDate":"2023-03-02"},{"lineNumber":489,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":490,"author":{"gitId":"CloudHill"},"content":"1.  User gets \u003cu\u003elist of customers (UC C1)\u003c/u\u003e.","lastModifiedDate":"2023-03-02"},{"lineNumber":491,"author":{"gitId":"CloudHill"},"content":"2.  User requests to delete a customer.","lastModifiedDate":"2023-03-02"},{"lineNumber":492,"author":{"gitId":"CloudHill"},"content":"3.  LL deletes the customer.","lastModifiedDate":"2023-03-02"},{"lineNumber":493,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":494,"author":{"gitId":"CloudHill"},"content":"    Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":495,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":496,"author":{"gitId":"CloudHill"},"content":"**Extensions**","lastModifiedDate":"2023-03-02"},{"lineNumber":497,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":498,"author":{"gitId":"CloudHill"},"content":"* 2a. Requested customer does not exist.","lastModifiedDate":"2023-03-02"},{"lineNumber":499,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":500,"author":{"gitId":"CloudHill"},"content":"    * 2a1. LL shows an error message.","lastModifiedDate":"2023-03-02"},{"lineNumber":501,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":502,"author":{"gitId":"CloudHill"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-03-02"},{"lineNumber":503,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":504,"author":{"gitId":"CloudHill"},"content":"#### Use case: UC C4 - Update Customer","lastModifiedDate":"2023-03-02"},{"lineNumber":505,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":506,"author":{"gitId":"CloudHill"},"content":"**MSS**","lastModifiedDate":"2023-03-02"},{"lineNumber":507,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":508,"author":{"gitId":"CloudHill"},"content":"1.  User \u003cu\u003egets list of customers (UC C1)\u003c/u\u003e.","lastModifiedDate":"2023-03-02"},{"lineNumber":509,"author":{"gitId":"CloudHill"},"content":"2.  User enters new data for a customer.","lastModifiedDate":"2023-03-02"},{"lineNumber":510,"author":{"gitId":"CloudHill"},"content":"3.  LL updates the customer and displays the customer information.","lastModifiedDate":"2023-03-02"},{"lineNumber":511,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":512,"author":{"gitId":"CloudHill"},"content":"    Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":513,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":514,"author":{"gitId":"CloudHill"},"content":"**Extensions**","lastModifiedDate":"2023-03-02"},{"lineNumber":515,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":516,"author":{"gitId":"CloudHill"},"content":"* 2a. Requested customer does not exist.","lastModifiedDate":"2023-03-02"},{"lineNumber":517,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":518,"author":{"gitId":"CloudHill"},"content":"    * 2a1. LL shows an error message.","lastModifiedDate":"2023-03-02"},{"lineNumber":519,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":520,"author":{"gitId":"CloudHill"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-03-02"},{"lineNumber":521,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":522,"author":{"gitId":"CloudHill"},"content":"* 2b. LL detects invalid input data.","lastModifiedDate":"2023-03-02"},{"lineNumber":523,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":524,"author":{"gitId":"CloudHill"},"content":"    * 2b1. LL shows an error message.","lastModifiedDate":"2023-03-02"},{"lineNumber":525,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":526,"author":{"gitId":"CloudHill"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-03-02"},{"lineNumber":527,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":528,"author":{"gitId":"CloudHill"},"content":"#### Use case: UC C5 - Bookmark or Unbookmark Customer","lastModifiedDate":"2023-03-02"},{"lineNumber":529,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":530,"author":{"gitId":"CloudHill"},"content":"**MSS**","lastModifiedDate":"2023-03-02"},{"lineNumber":531,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":532,"author":{"gitId":"CloudHill"},"content":"1.  User gets \u003cu\u003elist of customers (UC C1)\u003c/u\u003e.","lastModifiedDate":"2023-03-02"},{"lineNumber":533,"author":{"gitId":"CloudHill"},"content":"2.  User requests to bookmark or unbookmark a customer.","lastModifiedDate":"2023-03-02"},{"lineNumber":534,"author":{"gitId":"CloudHill"},"content":"3.  LL bookmarks or unbookmarks the customer.","lastModifiedDate":"2023-03-02"},{"lineNumber":535,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":536,"author":{"gitId":"CloudHill"},"content":"    Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":537,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":538,"author":{"gitId":"CloudHill"},"content":"**Extensions**","lastModifiedDate":"2023-03-02"},{"lineNumber":539,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":540,"author":{"gitId":"CloudHill"},"content":"* 2a. Requested customer does not exist.","lastModifiedDate":"2023-03-02"},{"lineNumber":541,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":542,"author":{"gitId":"CloudHill"},"content":"    * 2a1. LL shows an error message.","lastModifiedDate":"2023-03-02"},{"lineNumber":543,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":544,"author":{"gitId":"CloudHill"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-03-02"},{"lineNumber":545,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":546,"author":{"gitId":"CloudHill"},"content":"#### Use case: UC C6 - Assign Individual to Enterprise","lastModifiedDate":"2023-03-02"},{"lineNumber":547,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":548,"author":{"gitId":"CloudHill"},"content":"**MSS**","lastModifiedDate":"2023-03-02"},{"lineNumber":549,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":550,"author":{"gitId":"CloudHill"},"content":"1.  User gets \u003cu\u003elist of customers (UC C1)\u003c/u\u003e.","lastModifiedDate":"2023-03-02"},{"lineNumber":551,"author":{"gitId":"CloudHill"},"content":"2.  User requests to assign an individual to an enterprise.","lastModifiedDate":"2023-03-02"},{"lineNumber":552,"author":{"gitId":"CloudHill"},"content":"3.  LL assigns the individual to the enterprise and displays the enterprise information.","lastModifiedDate":"2023-03-02"},{"lineNumber":553,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":554,"author":{"gitId":"CloudHill"},"content":"    Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":555,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":556,"author":{"gitId":"CloudHill"},"content":"**Extensions**","lastModifiedDate":"2023-03-02"},{"lineNumber":557,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":558,"author":{"gitId":"CloudHill"},"content":"* 2a. Requested individual or enterprise does not exist.","lastModifiedDate":"2023-03-02"},{"lineNumber":559,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":560,"author":{"gitId":"CloudHill"},"content":"    * 2a1. LL shows an error message.","lastModifiedDate":"2023-03-02"},{"lineNumber":561,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":562,"author":{"gitId":"CloudHill"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-03-02"},{"lineNumber":563,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":564,"author":{"gitId":"CloudHill"},"content":"#### Use case: UC C7 - Create Customer Note","lastModifiedDate":"2023-03-02"},{"lineNumber":565,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":566,"author":{"gitId":"CloudHill"},"content":"**MSS**","lastModifiedDate":"2023-03-02"},{"lineNumber":567,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":568,"author":{"gitId":"CloudHill"},"content":"1.  User \u003cu\u003egets list of customers (UC C1)\u003c/u\u003e.","lastModifiedDate":"2023-03-02"},{"lineNumber":569,"author":{"gitId":"CloudHill"},"content":"2.  User enters note for a customer.","lastModifiedDate":"2023-03-02"},{"lineNumber":570,"author":{"gitId":"CloudHill"},"content":"3.  LL adds note to the customer and displays the customer information.","lastModifiedDate":"2023-03-02"},{"lineNumber":571,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":572,"author":{"gitId":"CloudHill"},"content":"    Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":573,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":574,"author":{"gitId":"CloudHill"},"content":"**Extensions**","lastModifiedDate":"2023-03-02"},{"lineNumber":575,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":576,"author":{"gitId":"CloudHill"},"content":"* 2a. Requested customer does not exist.","lastModifiedDate":"2023-03-02"},{"lineNumber":577,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":578,"author":{"gitId":"CloudHill"},"content":"    * 2a1. LL shows an error message.","lastModifiedDate":"2023-03-02"},{"lineNumber":579,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":580,"author":{"gitId":"CloudHill"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-03-02"},{"lineNumber":581,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":582,"author":{"gitId":"CloudHill"},"content":"#### Use case: UC C8 - Append Customer Note","lastModifiedDate":"2023-03-06"},{"lineNumber":583,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":584,"author":{"gitId":"CloudHill"},"content":"**MSS**","lastModifiedDate":"2023-03-06"},{"lineNumber":585,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":586,"author":{"gitId":"CloudHill"},"content":"1.  User \u003cu\u003egets list of customers (UC C1)\u003c/u\u003e.","lastModifiedDate":"2023-03-06"},{"lineNumber":587,"author":{"gitId":"CloudHill"},"content":"2.  User enters new note data to append.","lastModifiedDate":"2023-03-06"},{"lineNumber":588,"author":{"gitId":"CloudHill"},"content":"3.  LL updates the note and displays the customer information.","lastModifiedDate":"2023-03-06"},{"lineNumber":589,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":590,"author":{"gitId":"CloudHill"},"content":"    Use case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":591,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":592,"author":{"gitId":"CloudHill"},"content":"**Extensions**","lastModifiedDate":"2023-03-06"},{"lineNumber":593,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":594,"author":{"gitId":"CloudHill"},"content":"* 2a. Requested customer does not exist.","lastModifiedDate":"2023-03-06"},{"lineNumber":595,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":596,"author":{"gitId":"CloudHill"},"content":"    * 2a1. LL shows an error message.","lastModifiedDate":"2023-03-06"},{"lineNumber":597,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":598,"author":{"gitId":"CloudHill"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-03-06"},{"lineNumber":599,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":600,"author":{"gitId":"CloudHill"},"content":"* 2b. Requested note does not exist.","lastModifiedDate":"2023-03-06"},{"lineNumber":601,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":602,"author":{"gitId":"CloudHill"},"content":"    * 2b1. LL shows an error message.","lastModifiedDate":"2023-03-06"},{"lineNumber":603,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":604,"author":{"gitId":"CloudHill"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-03-06"},{"lineNumber":605,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":606,"author":{"gitId":"CloudHill"},"content":"#### Use case: UC C9 - Delete Customer Note","lastModifiedDate":"2023-03-06"},{"lineNumber":607,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":608,"author":{"gitId":"CloudHill"},"content":"**MSS**","lastModifiedDate":"2023-03-02"},{"lineNumber":609,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":610,"author":{"gitId":"CloudHill"},"content":"1.  User \u003cu\u003egets list of customers (UC C1)\u003c/u\u003e.","lastModifiedDate":"2023-03-02"},{"lineNumber":611,"author":{"gitId":"CloudHill"},"content":"2.  User requests to delete a customer note.","lastModifiedDate":"2023-03-02"},{"lineNumber":612,"author":{"gitId":"CloudHill"},"content":"3.  LL deletes the note and displays the customer information.","lastModifiedDate":"2023-03-02"},{"lineNumber":613,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":614,"author":{"gitId":"CloudHill"},"content":"    Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":615,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":616,"author":{"gitId":"CloudHill"},"content":"**Extensions**","lastModifiedDate":"2023-03-02"},{"lineNumber":617,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":618,"author":{"gitId":"CloudHill"},"content":"* 2a. Requested customer does not exist.","lastModifiedDate":"2023-03-02"},{"lineNumber":619,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":620,"author":{"gitId":"CloudHill"},"content":"    * 2a1. LL shows an error message.","lastModifiedDate":"2023-03-02"},{"lineNumber":621,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":622,"author":{"gitId":"CloudHill"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-03-02"},{"lineNumber":623,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":624,"author":{"gitId":"CloudHill"},"content":"* 2b. Requested note does not exist.","lastModifiedDate":"2023-03-02"},{"lineNumber":625,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":626,"author":{"gitId":"CloudHill"},"content":"    * 2b1. LL shows an error message.","lastModifiedDate":"2023-03-02"},{"lineNumber":627,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":628,"author":{"gitId":"CloudHill"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-03-02"},{"lineNumber":629,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":630,"author":{"gitId":"CloudHill"},"content":"#### Use case: UC O1 - List Orders","lastModifiedDate":"2023-03-02"},{"lineNumber":631,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":632,"author":{"gitId":"CloudHill"},"content":"**MSS**","lastModifiedDate":"2023-03-02"},{"lineNumber":633,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":634,"author":{"gitId":"CloudHill"},"content":"1.  User requests list of orders.","lastModifiedDate":"2023-03-02"},{"lineNumber":635,"author":{"gitId":"CloudHill"},"content":"2.  LL displays list of orders.","lastModifiedDate":"2023-03-02"},{"lineNumber":636,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":637,"author":{"gitId":"CloudHill"},"content":"    Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":638,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":639,"author":{"gitId":"CloudHill"},"content":"**Extensions**","lastModifiedDate":"2023-03-02"},{"lineNumber":640,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":641,"author":{"gitId":"CloudHill"},"content":"* 2a. Order list is empty.","lastModifiedDate":"2023-03-02"},{"lineNumber":642,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":643,"author":{"gitId":"CloudHill"},"content":"  Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":644,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":645,"author":{"gitId":"CloudHill"},"content":"#### Use case: UC O2 - Create Order","lastModifiedDate":"2023-03-06"},{"lineNumber":646,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":647,"author":{"gitId":"CloudHill"},"content":"**MSS**","lastModifiedDate":"2023-03-06"},{"lineNumber":648,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":649,"author":{"gitId":"CloudHill"},"content":"1.  User gets \u003cu\u003elist of customers (UC O1)\u003c/u\u003e.","lastModifiedDate":"2023-03-06"},{"lineNumber":650,"author":{"gitId":"CloudHill"},"content":"2.  User enters customer id and new data order.","lastModifiedDate":"2023-03-06"},{"lineNumber":651,"author":{"gitId":"CloudHill"},"content":"3.  LL creates the order and assigns the order to the customer.","lastModifiedDate":"2023-03-06"},{"lineNumber":652,"author":{"gitId":"CloudHill"},"content":"4.  LL displays the order information.","lastModifiedDate":"2023-03-06"},{"lineNumber":653,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":654,"author":{"gitId":"CloudHill"},"content":"    Use case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":655,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":656,"author":{"gitId":"CloudHill"},"content":"**Extensions**","lastModifiedDate":"2023-03-06"},{"lineNumber":657,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":658,"author":{"gitId":"CloudHill"},"content":"* 2a. Requested customer does not exist.","lastModifiedDate":"2023-03-06"},{"lineNumber":659,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":660,"author":{"gitId":"CloudHill"},"content":"    * 2a1. LL shows an error message.","lastModifiedDate":"2023-03-06"},{"lineNumber":661,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":662,"author":{"gitId":"CloudHill"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-03-06"},{"lineNumber":663,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":664,"author":{"gitId":"CloudHill"},"content":"* 2b. LL detects invalid input data.","lastModifiedDate":"2023-03-06"},{"lineNumber":665,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":666,"author":{"gitId":"CloudHill"},"content":"    * 2b1. LL shows an error message.","lastModifiedDate":"2023-03-06"},{"lineNumber":667,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":668,"author":{"gitId":"CloudHill"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-03-06"},{"lineNumber":669,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":670,"author":{"gitId":"CloudHill"},"content":"#### Use case: UC O3 - View Order","lastModifiedDate":"2023-03-06"},{"lineNumber":671,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":672,"author":{"gitId":"CloudHill"},"content":"**MSS**","lastModifiedDate":"2023-03-02"},{"lineNumber":673,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":674,"author":{"gitId":"CloudHill"},"content":"1.  User gets \u003cu\u003elist of orders (UC O1)\u003c/u\u003e.","lastModifiedDate":"2023-03-02"},{"lineNumber":675,"author":{"gitId":"CloudHill"},"content":"2.  User requests to view an order.","lastModifiedDate":"2023-03-02"},{"lineNumber":676,"author":{"gitId":"CloudHill"},"content":"3.  LL displays the order information.","lastModifiedDate":"2023-03-02"},{"lineNumber":677,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":678,"author":{"gitId":"CloudHill"},"content":"    Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":679,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":680,"author":{"gitId":"CloudHill"},"content":"**Extensions**","lastModifiedDate":"2023-03-02"},{"lineNumber":681,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":682,"author":{"gitId":"CloudHill"},"content":"* 2a. Requested order does not exist.","lastModifiedDate":"2023-03-02"},{"lineNumber":683,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":684,"author":{"gitId":"CloudHill"},"content":"    * 2a1. LL shows an error message.","lastModifiedDate":"2023-03-02"},{"lineNumber":685,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":686,"author":{"gitId":"CloudHill"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-03-02"},{"lineNumber":687,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":688,"author":{"gitId":"CloudHill"},"content":"#### Use case: UC O4 - Delete Order","lastModifiedDate":"2023-03-06"},{"lineNumber":689,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":690,"author":{"gitId":"CloudHill"},"content":"**MSS**","lastModifiedDate":"2023-03-02"},{"lineNumber":691,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":692,"author":{"gitId":"CloudHill"},"content":"1.  User gets \u003cu\u003elist of orders (UC O1)\u003c/u\u003e.","lastModifiedDate":"2023-03-02"},{"lineNumber":693,"author":{"gitId":"CloudHill"},"content":"2.  User requests to delete an order.","lastModifiedDate":"2023-03-02"},{"lineNumber":694,"author":{"gitId":"CloudHill"},"content":"3.  LL deletes the order.","lastModifiedDate":"2023-03-02"},{"lineNumber":695,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":696,"author":{"gitId":"CloudHill"},"content":"    Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":697,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":698,"author":{"gitId":"CloudHill"},"content":"**Extensions**","lastModifiedDate":"2023-03-02"},{"lineNumber":699,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":700,"author":{"gitId":"CloudHill"},"content":"* 2a. Requested order does not exist.","lastModifiedDate":"2023-03-02"},{"lineNumber":701,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":702,"author":{"gitId":"CloudHill"},"content":"    * 2a1. LL shows an error message.","lastModifiedDate":"2023-03-02"},{"lineNumber":703,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":704,"author":{"gitId":"CloudHill"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-03-02"},{"lineNumber":705,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":706,"author":{"gitId":"CloudHill"},"content":"#### Use case: UC O5 - Update Order","lastModifiedDate":"2023-03-06"},{"lineNumber":707,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":708,"author":{"gitId":"CloudHill"},"content":"**MSS**","lastModifiedDate":"2023-03-02"},{"lineNumber":709,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":710,"author":{"gitId":"CloudHill"},"content":"1.  User \u003cu\u003egets list of orders (UC O1)\u003c/u\u003e.","lastModifiedDate":"2023-03-02"},{"lineNumber":711,"author":{"gitId":"CloudHill"},"content":"2.  User enters new data for an order.","lastModifiedDate":"2023-03-02"},{"lineNumber":712,"author":{"gitId":"CloudHill"},"content":"3.  LL updates the order and displays the order information.","lastModifiedDate":"2023-03-02"},{"lineNumber":713,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":714,"author":{"gitId":"CloudHill"},"content":"    Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":715,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":716,"author":{"gitId":"CloudHill"},"content":"**Extensions**","lastModifiedDate":"2023-03-02"},{"lineNumber":717,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":718,"author":{"gitId":"CloudHill"},"content":"* 2a. Requested order does not exist.","lastModifiedDate":"2023-03-02"},{"lineNumber":719,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":720,"author":{"gitId":"CloudHill"},"content":"    * 2a1. LL shows an error message.","lastModifiedDate":"2023-03-02"},{"lineNumber":721,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":722,"author":{"gitId":"CloudHill"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-03-02"},{"lineNumber":723,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":724,"author":{"gitId":"CloudHill"},"content":"* 2b. LL detects invalid input data.","lastModifiedDate":"2023-03-02"},{"lineNumber":725,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":726,"author":{"gitId":"CloudHill"},"content":"    * 2b1. LL shows an error message.","lastModifiedDate":"2023-03-02"},{"lineNumber":727,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":728,"author":{"gitId":"CloudHill"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-03-02"},{"lineNumber":729,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":730,"author":{"gitId":"CloudHill"},"content":"#### Use case: UC O6 - Advance Order Status","lastModifiedDate":"2023-03-06"},{"lineNumber":731,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":732,"author":{"gitId":"CloudHill"},"content":"**MSS**","lastModifiedDate":"2023-03-02"},{"lineNumber":733,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":734,"author":{"gitId":"CloudHill"},"content":"1.  User \u003cu\u003egets list of orders (UC O1)\u003c/u\u003e.","lastModifiedDate":"2023-03-02"},{"lineNumber":735,"author":{"gitId":"CloudHill"},"content":"2.  User requests to advance an order\u0027s status.","lastModifiedDate":"2023-03-02"},{"lineNumber":736,"author":{"gitId":"CloudHill"},"content":"3.  LL updates the order\u0027s status and displays the order information.","lastModifiedDate":"2023-03-02"},{"lineNumber":737,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":738,"author":{"gitId":"CloudHill"},"content":"    Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":739,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":740,"author":{"gitId":"CloudHill"},"content":"**Extensions**","lastModifiedDate":"2023-03-02"},{"lineNumber":741,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":742,"author":{"gitId":"CloudHill"},"content":"* 2a. Requested order does not exist.","lastModifiedDate":"2023-03-02"},{"lineNumber":743,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":744,"author":{"gitId":"CloudHill"},"content":"    * 2a1. LL shows an error message.","lastModifiedDate":"2023-03-02"},{"lineNumber":745,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":746,"author":{"gitId":"CloudHill"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-03-02"},{"lineNumber":747,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":748,"author":{"gitId":"CloudHill"},"content":"* 2b. Requested order is already at last stage.","lastModifiedDate":"2023-03-02"},{"lineNumber":749,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":750,"author":{"gitId":"CloudHill"},"content":"    * 2b1. LL shows an error message.","lastModifiedDate":"2023-03-02"},{"lineNumber":751,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":752,"author":{"gitId":"CloudHill"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-03-02"},{"lineNumber":753,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":754,"author":{"gitId":"CloudHill"},"content":"#### Use case: UC R1 - List Rewards","lastModifiedDate":"2023-03-02"},{"lineNumber":755,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":756,"author":{"gitId":"CloudHill"},"content":"**MSS**","lastModifiedDate":"2023-03-02"},{"lineNumber":757,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":758,"author":{"gitId":"CloudHill"},"content":"1.  User requests list of rewards.","lastModifiedDate":"2023-03-02"},{"lineNumber":759,"author":{"gitId":"CloudHill"},"content":"2.  LL displays list of rewards.","lastModifiedDate":"2023-03-02"},{"lineNumber":760,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":761,"author":{"gitId":"CloudHill"},"content":"    Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":762,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":763,"author":{"gitId":"CloudHill"},"content":"**Extensions**","lastModifiedDate":"2023-03-02"},{"lineNumber":764,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":765,"author":{"gitId":"CloudHill"},"content":"* 2a. Reward list is empty.","lastModifiedDate":"2023-03-02"},{"lineNumber":766,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":767,"author":{"gitId":"CloudHill"},"content":"  Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":768,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":769,"author":{"gitId":"CloudHill"},"content":"#### Use case: UC R2 - View Reward","lastModifiedDate":"2023-03-02"},{"lineNumber":770,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":771,"author":{"gitId":"CloudHill"},"content":"**MSS**","lastModifiedDate":"2023-03-02"},{"lineNumber":772,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":773,"author":{"gitId":"CloudHill"},"content":"1.  User gets \u003cu\u003elist of rewards (UC R1)\u003c/u\u003e.","lastModifiedDate":"2023-03-02"},{"lineNumber":774,"author":{"gitId":"CloudHill"},"content":"2.  User requests to view a reward.","lastModifiedDate":"2023-03-02"},{"lineNumber":775,"author":{"gitId":"CloudHill"},"content":"3.  LL displays the reward information.","lastModifiedDate":"2023-03-02"},{"lineNumber":776,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":777,"author":{"gitId":"CloudHill"},"content":"    Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":778,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":779,"author":{"gitId":"CloudHill"},"content":"**Extensions**","lastModifiedDate":"2023-03-02"},{"lineNumber":780,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":781,"author":{"gitId":"CloudHill"},"content":"* 2a. Requested reward does not exist.","lastModifiedDate":"2023-03-02"},{"lineNumber":782,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":783,"author":{"gitId":"CloudHill"},"content":"    * 2a1. LL shows an error message.","lastModifiedDate":"2023-03-02"},{"lineNumber":784,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":785,"author":{"gitId":"CloudHill"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-03-02"},{"lineNumber":786,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":787,"author":{"gitId":"CloudHill"},"content":"#### Use case: UC R3 - Delete Reward","lastModifiedDate":"2023-03-02"},{"lineNumber":788,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":789,"author":{"gitId":"CloudHill"},"content":"**MSS**","lastModifiedDate":"2023-03-02"},{"lineNumber":790,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":791,"author":{"gitId":"CloudHill"},"content":"1.  User gets \u003cu\u003elist of rewards (UC R1)\u003c/u\u003e.","lastModifiedDate":"2023-03-02"},{"lineNumber":792,"author":{"gitId":"CloudHill"},"content":"2.  User requests to delete a reward.","lastModifiedDate":"2023-03-02"},{"lineNumber":793,"author":{"gitId":"CloudHill"},"content":"3.  LL deletes the reward.","lastModifiedDate":"2023-03-02"},{"lineNumber":794,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":795,"author":{"gitId":"CloudHill"},"content":"    Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":796,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":797,"author":{"gitId":"CloudHill"},"content":"**Extensions**","lastModifiedDate":"2023-03-02"},{"lineNumber":798,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":799,"author":{"gitId":"CloudHill"},"content":"* 2a. Requested reward does not exist.","lastModifiedDate":"2023-03-02"},{"lineNumber":800,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":801,"author":{"gitId":"CloudHill"},"content":"    * 2a1. LL shows an error message.","lastModifiedDate":"2023-03-02"},{"lineNumber":802,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":803,"author":{"gitId":"CloudHill"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-03-02"},{"lineNumber":804,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":805,"author":{"gitId":"CloudHill"},"content":"#### Use case: UC R4 - Update Reward","lastModifiedDate":"2023-03-02"},{"lineNumber":806,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":807,"author":{"gitId":"CloudHill"},"content":"**MSS**","lastModifiedDate":"2023-03-02"},{"lineNumber":808,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":809,"author":{"gitId":"CloudHill"},"content":"1.  User \u003cu\u003egets list of rewards (UC R1)\u003c/u\u003e.","lastModifiedDate":"2023-03-02"},{"lineNumber":810,"author":{"gitId":"CloudHill"},"content":"2.  User enters new data for a reward.","lastModifiedDate":"2023-03-02"},{"lineNumber":811,"author":{"gitId":"CloudHill"},"content":"3.  LL updates the reward and displays the reward information.","lastModifiedDate":"2023-03-02"},{"lineNumber":812,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":813,"author":{"gitId":"CloudHill"},"content":"    Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":814,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":815,"author":{"gitId":"CloudHill"},"content":"**Extensions**","lastModifiedDate":"2023-03-02"},{"lineNumber":816,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":817,"author":{"gitId":"CloudHill"},"content":"* 2a. Requested reward does not exist.","lastModifiedDate":"2023-03-02"},{"lineNumber":818,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":819,"author":{"gitId":"CloudHill"},"content":"    * 2a1. LL shows an error message.","lastModifiedDate":"2023-03-02"},{"lineNumber":820,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":821,"author":{"gitId":"CloudHill"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-03-02"},{"lineNumber":822,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":823,"author":{"gitId":"CloudHill"},"content":"* 2b. LL detects invalid input data.","lastModifiedDate":"2023-03-02"},{"lineNumber":824,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":825,"author":{"gitId":"CloudHill"},"content":"    * 2b1. LL shows an error message.","lastModifiedDate":"2023-03-02"},{"lineNumber":826,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":827,"author":{"gitId":"CloudHill"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-03-02"},{"lineNumber":828,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":829,"author":{"gitId":"CloudHill"},"content":"#### Use case: UC R5 - Set/Add Customer Points","lastModifiedDate":"2023-03-06"},{"lineNumber":830,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":831,"author":{"gitId":"CloudHill"},"content":"**MSS**","lastModifiedDate":"2023-03-06"},{"lineNumber":832,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":833,"author":{"gitId":"CloudHill"},"content":"1.  User \u003cu\u003egets list of customers (UC C1)\u003c/u\u003e.","lastModifiedDate":"2023-03-06"},{"lineNumber":834,"author":{"gitId":"CloudHill"},"content":"2.  User enters customer points.","lastModifiedDate":"2023-03-06"},{"lineNumber":835,"author":{"gitId":"CloudHill"},"content":"3.  LL updates the customer\u0027s points and displays the customer.","lastModifiedDate":"2023-03-06"},{"lineNumber":836,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":837,"author":{"gitId":"CloudHill"},"content":"    Use case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":838,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":839,"author":{"gitId":"CloudHill"},"content":"**Extensions**","lastModifiedDate":"2023-03-06"},{"lineNumber":840,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":841,"author":{"gitId":"CloudHill"},"content":"* 2a. Requested customer does not exist.","lastModifiedDate":"2023-03-06"},{"lineNumber":842,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":843,"author":{"gitId":"CloudHill"},"content":"    * 2a1. LL shows an error message.","lastModifiedDate":"2023-03-06"},{"lineNumber":844,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":845,"author":{"gitId":"CloudHill"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-03-06"},{"lineNumber":846,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":847,"author":{"gitId":"CloudHill"},"content":"* 2b. LL detects invalid input data.","lastModifiedDate":"2023-03-06"},{"lineNumber":848,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":849,"author":{"gitId":"CloudHill"},"content":"    * 2b1. LL shows an error message.","lastModifiedDate":"2023-03-06"},{"lineNumber":850,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":851,"author":{"gitId":"CloudHill"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-03-06"},{"lineNumber":852,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":853,"author":{"gitId":"CloudHill"},"content":"#### Use case: UC R6 - Give Reward to Customer","lastModifiedDate":"2023-03-06"},{"lineNumber":854,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":855,"author":{"gitId":"CloudHill"},"content":"**MSS**","lastModifiedDate":"2023-03-02"},{"lineNumber":856,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":857,"author":{"gitId":"CloudHill"},"content":"1.  User \u003cu\u003egets list of customers (UC C1)\u003c/u\u003e.","lastModifiedDate":"2023-03-02"},{"lineNumber":858,"author":{"gitId":"CloudHill"},"content":"2.  User \u003cu\u003egets list of rewards (UC R1)\u003c/u\u003e.","lastModifiedDate":"2023-03-02"},{"lineNumber":859,"author":{"gitId":"CloudHill"},"content":"3.  User requests to give a reward to a customer.","lastModifiedDate":"2023-03-02"},{"lineNumber":860,"author":{"gitId":"CloudHill"},"content":"4.  LL deducts points from the customer.","lastModifiedDate":"2023-03-02"},{"lineNumber":861,"author":{"gitId":"CloudHill"},"content":"5.  LL adds the reward to the customer and displays the customer information.","lastModifiedDate":"2023-03-02"},{"lineNumber":862,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":863,"author":{"gitId":"CloudHill"},"content":"    Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":864,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":865,"author":{"gitId":"CloudHill"},"content":"**Extensions**","lastModifiedDate":"2023-03-02"},{"lineNumber":866,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":867,"author":{"gitId":"CloudHill"},"content":"* 3a. Requested reward does not exist.","lastModifiedDate":"2023-03-02"},{"lineNumber":868,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":869,"author":{"gitId":"CloudHill"},"content":"    * 3a1. LL shows an error message.","lastModifiedDate":"2023-03-02"},{"lineNumber":870,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":871,"author":{"gitId":"CloudHill"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2023-03-02"},{"lineNumber":872,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":873,"author":{"gitId":"CloudHill"},"content":"* 3b. Requested customer does not exist.","lastModifiedDate":"2023-03-02"},{"lineNumber":874,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":875,"author":{"gitId":"CloudHill"},"content":"    * 3b1. LL shows an error message.","lastModifiedDate":"2023-03-02"},{"lineNumber":876,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":877,"author":{"gitId":"CloudHill"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2023-03-02"},{"lineNumber":878,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":879,"author":{"gitId":"CloudHill"},"content":"* 4a. Customer does not have enough points.","lastModifiedDate":"2023-03-02"},{"lineNumber":880,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":881,"author":{"gitId":"CloudHill"},"content":"    * 4a1. LL shows an error message.","lastModifiedDate":"2023-03-02"},{"lineNumber":882,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":883,"author":{"gitId":"CloudHill"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2023-03-02"},{"lineNumber":884,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":885,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":886,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":887,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":888,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":889,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":890,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":891,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":892,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":893,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":894,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":895,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":896,"author":{"gitId":"Infrix"},"content":"* **Small business**: product-selling business that has much fewer employees and lower revenue than a regular-sized business.","lastModifiedDate":"2023-02-25"},{"lineNumber":897,"author":{"gitId":"Infrix"},"content":"* **Enterprise customers**: companies that order a large amount of products, much more than individual customers","lastModifiedDate":"2023-02-25"},{"lineNumber":898,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":899,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":900,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":901,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":902,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":903,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":904,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":905,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":906,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":907,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":908,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":909,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":910,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":911,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":912,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":913,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":914,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":915,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":916,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":917,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":918,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":919,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":920,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":921,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":922,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":923,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":924,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":925,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":926,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":927,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":928,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":929,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":930,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":931,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":932,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":933,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":934,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":935,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":936,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":937,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":938,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":939,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":940,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":941,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":942,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":943,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":944,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":945,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":946,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":947,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":948,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":949,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":950,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Junyi00":50,"CloudHill":464,"Infrix":83,"-":353}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"   1. Run the `seedu.loyaltylift.Main` and try a few commands.","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"Junyi00":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"   e.g. `seedu.loyaltylift.commons.StringUtilTest`","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"   e.g. `seedu.loyaltylift.storage.StorageManagerTest`","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"   e.g. `seedu.loyaltylift.logic.LogicManagerTest`","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Junyi00":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"AddressBook Level 3 (AB3) is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, AB3 can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Download the latest `addressbook.jar` from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar addressbook.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"   * `listc` : Lists all customers.","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"   * `addc n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a customer named `John Doe` to the Address Book.","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"   * `clear` : Deletes all customers and orders.","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":63,"author":{"gitId":"Junyi00"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `listc`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"Junyi00"},"content":"### Adding a customer : `addc`","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"Junyi00"},"content":"Adds a customer to the current list.","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"Junyi00"},"content":"Format: `addc [ct/{ind/ent}] n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS`","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"JavonTeo"},"content":"Customers are \u0027Individuals\u0027 by default!","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"Junyi00"},"content":"ind - Individuals","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"Junyi00"},"content":"ent - Enterprise","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"Junyi00"},"content":"* `addc ct/ind n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"Junyi00"},"content":"* `addc ct/ent n/The Potato Farm e/thepotatofarm@example.com a/South street, block 983, #02-01 p/1234567`","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"Junyi00"},"content":"* `addc n/Mary Jane p/93130151 e/maryjane@example.com a/Mary Lamb Street, block 23, #01-12`","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"Junyi00"},"content":"### Listing all customers : `listc`","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"Junyi00"},"content":"Shows a list of all customers.","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"JavonTeo"},"content":"Format: `listc [s/{name|points}] [f/marked]`","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":99,"author":{"gitId":"CloudHill"},"content":"* Lists all customer with the specified sorting option.","lastModifiedDate":"2023-03-26"},{"lineNumber":100,"author":{"gitId":"CloudHill"},"content":"* Be default, customers are sorted by name","lastModifiedDate":"2023-03-26"},{"lineNumber":101,"author":{"gitId":"JavonTeo"},"content":"* If `f/marked` is provided, then shows only bookmarked customers.","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":103,"author":{"gitId":"CloudHill"},"content":"Examples:","lastModifiedDate":"2023-03-26"},{"lineNumber":104,"author":{"gitId":"CloudHill"},"content":"* `listc` lists all customers sorted by name","lastModifiedDate":"2023-03-26"},{"lineNumber":105,"author":{"gitId":"CloudHill"},"content":"* `listc s/points` lists all customers sorted by points","lastModifiedDate":"2023-03-26"},{"lineNumber":106,"author":{"gitId":"JavonTeo"},"content":"* `listc f/marked` lists all bookmarked customers. ","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"Junyi00"},"content":"### View a customer : `viewc`","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"Junyi00"},"content":"Display a customer\u0027s information in the information panel.","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"Junyi00"},"content":"Format: `viewc INDEX`","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"Junyi00"},"content":"* Displays the customer\u0027s information at the specified `INDEX`.","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"Junyi00"},"content":"* * The index refers to the index number shown in the displayed customer list.","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"Junyi00"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-03-27"},{"lineNumber":119,"author":{"gitId":"Junyi00"},"content":"You can click on the customer in the table directly for the same effect!","lastModifiedDate":"2023-03-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"Junyi00"},"content":"* `listc` and `viewc 2` opens `Bernice Yu` on the information panel on the right","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"Junyi00"},"content":"  ![result for \u0027viewc 2\u0027](images/viewcBerniceYuResult.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"Junyi00"},"content":"### Deleting a customer : `deletec`","lastModifiedDate":"2023-02-28"},{"lineNumber":128,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":129,"author":{"gitId":"Junyi00"},"content":"Delete a customer from the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":130,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":131,"author":{"gitId":"Junyi00"},"content":"Format: `deletec INDEX`","lastModifiedDate":"2023-02-28"},{"lineNumber":132,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":133,"author":{"gitId":"Junyi00"},"content":"* Deletes the customer at the specified `INDEX`.","lastModifiedDate":"2023-02-28"},{"lineNumber":134,"author":{"gitId":"Junyi00"},"content":"* The index refers to the index number shown in the displayed customer list.","lastModifiedDate":"2023-02-28"},{"lineNumber":135,"author":{"gitId":"Junyi00"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-02-28"},{"lineNumber":136,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":137,"author":{"gitId":"Junyi00"},"content":"Examples:","lastModifiedDate":"2023-02-28"},{"lineNumber":138,"author":{"gitId":"Junyi00"},"content":"* `listc` followed by `deletec 2` deletes the 2nd person in the address book.","lastModifiedDate":"2023-02-28"},{"lineNumber":139,"author":{"gitId":"Junyi00"},"content":"* `findc Betsy` followed by `deletec 1` deletes the 1st person in the results of the `findc` command.","lastModifiedDate":"2023-03-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"JavonTeo"},"content":"### Marking a person: `markc`","lastModifiedDate":"2023-03-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":143,"author":{"gitId":"JavonTeo"},"content":"Bookmarks a customer from the list of customers.","lastModifiedDate":"2023-03-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":145,"author":{"gitId":"JavonTeo"},"content":"Format: `markc INDEX`","lastModifiedDate":"2023-03-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":147,"author":{"gitId":"JavonTeo"},"content":"* Bookmarks the customer at the specified `INDEX`.","lastModifiedDate":"2023-03-10"},{"lineNumber":148,"author":{"gitId":"JavonTeo"},"content":"* The index refers to the index number shown in the displayed customer list.","lastModifiedDate":"2023-03-10"},{"lineNumber":149,"author":{"gitId":"JavonTeo"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":151,"author":{"gitId":"JavonTeo"},"content":"Examples:","lastModifiedDate":"2023-03-10"},{"lineNumber":152,"author":{"gitId":"JavonTeo"},"content":"* `listc` followed by `markc 2` bookmarks the 2nd person in the address book.","lastModifiedDate":"2023-03-10"},{"lineNumber":153,"author":{"gitId":"JavonTeo"},"content":"* `findc Betsy` followed by `markc 1` bookmarks the 1st person in the results of the `findc` command.","lastModifiedDate":"2023-03-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":155,"author":{"gitId":"JavonTeo"},"content":"### Unmarking a person: `unmarkc`","lastModifiedDate":"2023-03-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":157,"author":{"gitId":"JavonTeo"},"content":"Un-bookmarks a customer from the list of customers.","lastModifiedDate":"2023-03-10"},{"lineNumber":158,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":159,"author":{"gitId":"JavonTeo"},"content":"Format: `unmarkc INDEX`","lastModifiedDate":"2023-03-11"},{"lineNumber":160,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":161,"author":{"gitId":"JavonTeo"},"content":"* Un-bookmarks the customer at the specified `INDEX`.","lastModifiedDate":"2023-03-10"},{"lineNumber":162,"author":{"gitId":"JavonTeo"},"content":"* The index refers to the index number shown in the displayed customer list.","lastModifiedDate":"2023-03-10"},{"lineNumber":163,"author":{"gitId":"JavonTeo"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-10"},{"lineNumber":164,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":165,"author":{"gitId":"JavonTeo"},"content":"Examples:","lastModifiedDate":"2023-03-10"},{"lineNumber":166,"author":{"gitId":"JavonTeo"},"content":"* `listc` followed by `unmarkc 2` un-bookmarks the 2nd person in the address book.","lastModifiedDate":"2023-03-10"},{"lineNumber":167,"author":{"gitId":"JavonTeo"},"content":"* `findc Betsy` followed by `unmarkc 1` bookmarks the 1st person in the results of the `findc` command.","lastModifiedDate":"2023-03-10"},{"lineNumber":168,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":169,"author":{"gitId":"Infrix"},"content":"### Setting reward points for a customer : `setpoints`","lastModifiedDate":"2023-03-08"},{"lineNumber":170,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":171,"author":{"gitId":"Infrix"},"content":"Sets a customer\u0027s reward points.","lastModifiedDate":"2023-03-08"},{"lineNumber":172,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":173,"author":{"gitId":"Infrix"},"content":"Format: `setpoints INDEX pt/POINTS`","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":175,"author":{"gitId":"Infrix"},"content":"* Sets the points of the customer at the specified `INDEX` to `POINTS`.","lastModifiedDate":"2023-03-08"},{"lineNumber":176,"author":{"gitId":"Infrix"},"content":"* Customers by default, have 0 points initially.","lastModifiedDate":"2023-03-08"},{"lineNumber":177,"author":{"gitId":"Infrix"},"content":"* The index refers to the index number shown in the displayed customer list.","lastModifiedDate":"2023-03-08"},{"lineNumber":178,"author":{"gitId":"Infrix"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"Infrix"},"content":"* The points refers to the reward points of the customer","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"Infrix"},"content":"* The points **must be a positive integer** 1, 2, 3, ​​…","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"Infrix"},"content":"* The points can only range from 0 to 999999","lastModifiedDate":"2023-03-15"},{"lineNumber":182,"author":{"gitId":"Infrix"},"content":"* Setting points will also set cumulative points to the same amount, if you wish to keep the current cumulative points,","lastModifiedDate":"2023-03-17"},{"lineNumber":183,"author":{"gitId":"Infrix"},"content":"use the `addpoints` command instead.","lastModifiedDate":"2023-03-17"},{"lineNumber":184,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"Infrix"},"content":"Examples:","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"Infrix"},"content":"* `listc` followed by `setpoints 2 pt/100` sets the 2nd customer points as 100.","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"Infrix"},"content":"* `findc Betsy` followed by `setpoints 1 pt/300` sets the 1st customer points as 300 in the results of the `findc` command.","lastModifiedDate":"2023-03-13"},{"lineNumber":188,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":189,"author":{"gitId":"Infrix"},"content":"### Adding points for a customer / Removing points from a customer : `addpoints`","lastModifiedDate":"2023-03-08"},{"lineNumber":190,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":191,"author":{"gitId":"Infrix"},"content":"Edits a customer\u0027s reward points by adding or removing from it.","lastModifiedDate":"2023-03-08"},{"lineNumber":192,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"Infrix"},"content":"Format: `addpoints INDEX pt/[+/-]POINTS`","lastModifiedDate":"2023-03-17"},{"lineNumber":194,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":195,"author":{"gitId":"Infrix"},"content":"* Add or subtract the points of the customer at the specified `INDEX` to `POINTS`.","lastModifiedDate":"2023-03-08"},{"lineNumber":196,"author":{"gitId":"Infrix"},"content":"* If the points subtracted is greater than what the user has, the command will not be executed","lastModifiedDate":"2023-03-08"},{"lineNumber":197,"author":{"gitId":"Infrix"},"content":"* If + or - is not explictly stated, the command will default to an addition of `POINTS`.","lastModifiedDate":"2023-03-08"},{"lineNumber":198,"author":{"gitId":"Infrix"},"content":"* The index refers to the index number shown in the displayed customer list.","lastModifiedDate":"2023-03-08"},{"lineNumber":199,"author":{"gitId":"Infrix"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-08"},{"lineNumber":200,"author":{"gitId":"Infrix"},"content":"* The +/- refers to whether you wish to add or subtract from the reward points of the customer, + to add, - to subtract","lastModifiedDate":"2023-03-08"},{"lineNumber":201,"author":{"gitId":"Infrix"},"content":"* The points refers to how much you wish to add or subtract the reward points of the customer","lastModifiedDate":"2023-03-08"},{"lineNumber":202,"author":{"gitId":"Infrix"},"content":"* The points **must be a positive integer** 1, 2, 3, ​​…","lastModifiedDate":"2023-03-08"},{"lineNumber":203,"author":{"gitId":"Infrix"},"content":"* Addition will also result in an addition of cumulative points, subtraction will not change cumulative points.","lastModifiedDate":"2023-03-17"},{"lineNumber":204,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":205,"author":{"gitId":"Infrix"},"content":"Examples:","lastModifiedDate":"2023-03-08"},{"lineNumber":206,"author":{"gitId":"Infrix"},"content":"* `listc` followed by `addpoints 2 pt/100` adds 100 reward points to the 2nd customer.","lastModifiedDate":"2023-03-17"},{"lineNumber":207,"author":{"gitId":"Infrix"},"content":"* `findc Betsy` followed by `addpoints 1 pt/-300` deducts 300 reward points from","lastModifiedDate":"2023-03-17"},{"lineNumber":208,"author":{"gitId":"Infrix"},"content":"the 1st customer in the results of the `findc` command.","lastModifiedDate":"2023-03-17"},{"lineNumber":209,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":210,"author":{"gitId":"Infrix"},"content":"### Setting tiers for your reward system : `settier`","lastModifiedDate":"2023-03-08"},{"lineNumber":211,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":212,"author":{"gitId":"Infrix"},"content":"Sets a tier for your reward system with a point threshold. Customers above the point threshold are automatically in this tier, and the tiers below it.","lastModifiedDate":"2023-03-08"},{"lineNumber":213,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":214,"author":{"gitId":"Infrix"},"content":"Format: `settier TIER_NUM POINT_THRESHOLD`","lastModifiedDate":"2023-03-08"},{"lineNumber":215,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":216,"author":{"gitId":"Infrix"},"content":"* There are 3 tiers by default, tiers 1, 2 and 3 will be initially set to 999997 999998 and 999999 respectively.","lastModifiedDate":"2023-03-08"},{"lineNumber":217,"author":{"gitId":"Infrix"},"content":"* The points threshold of tiers must go in the following order, 1 \u003c 2 \u003c 3","lastModifiedDate":"2023-03-08"},{"lineNumber":218,"author":{"gitId":"Infrix"},"content":"* The tier_num refers to the particular tier that you want to set the point_threshold","lastModifiedDate":"2023-03-08"},{"lineNumber":219,"author":{"gitId":"Infrix"},"content":"* The tier_num **must be 1, 2 or 3**","lastModifiedDate":"2023-03-08"},{"lineNumber":220,"author":{"gitId":"Infrix"},"content":"* The point_threshold refers to how much points you want a customer to accmulate before he is in the tier, tier_num","lastModifiedDate":"2023-03-08"},{"lineNumber":221,"author":{"gitId":"Infrix"},"content":"* The points **must be a positive integer** 1, 2, 3, ​​…","lastModifiedDate":"2023-03-08"},{"lineNumber":222,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":223,"author":{"gitId":"Infrix"},"content":"Examples:","lastModifiedDate":"2023-03-08"},{"lineNumber":224,"author":{"gitId":"Infrix"},"content":"* `settier 1 500` Sets tier 1 with a point threshold of 500, any customer above 500 points will automatically be","lastModifiedDate":"2023-03-14"},{"lineNumber":225,"author":{"gitId":"Infrix"},"content":"in tier 1.","lastModifiedDate":"2023-03-14"},{"lineNumber":226,"author":{"gitId":"Infrix"},"content":"* `settier 1 500` followed by `settier 2 450` will not be allowed as tier 1 must have a lower point threshold","lastModifiedDate":"2023-03-14"},{"lineNumber":227,"author":{"gitId":"Infrix"},"content":"than tier 2.","lastModifiedDate":"2023-03-14"},{"lineNumber":228,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":229,"author":{"gitId":"Junyi00"},"content":"### Editing a person : `editc`","lastModifiedDate":"2023-03-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"Junyi00"},"content":"Edits an existing customer in the address book.","lastModifiedDate":"2023-03-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"Junyi00"},"content":"Format: `editc INDEX [ct/{ind|env}] [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS]`","lastModifiedDate":"2023-03-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"Junyi00"},"content":"* Edits the customer at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"Junyi00"},"content":"*  `editc 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2023-03-27"},{"lineNumber":241,"author":{"gitId":"Junyi00"},"content":"*  `editc 2 ct/ind n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2023-03-27"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"CloudHill"},"content":"### Setting a customer\u0027s note : `setnotec`","lastModifiedDate":"2023-03-18"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":245,"author":{"gitId":"CloudHill"},"content":"Sets a customer\u0027s note.","lastModifiedDate":"2023-03-18"},{"lineNumber":246,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":247,"author":{"gitId":"CloudHill"},"content":"Format: `setnotec INDEX nt/NOTE`","lastModifiedDate":"2023-03-18"},{"lineNumber":248,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":249,"author":{"gitId":"CloudHill"},"content":"* Sets the note of the customer at the specified `INDEX` to `NOTE`.","lastModifiedDate":"2023-03-18"},{"lineNumber":250,"author":{"gitId":"CloudHill"},"content":"* Customers, by default, have a blank note.","lastModifiedDate":"2023-03-18"},{"lineNumber":251,"author":{"gitId":"CloudHill"},"content":"* The index refers to the index number shown in the displayed customer list.","lastModifiedDate":"2023-03-18"},{"lineNumber":252,"author":{"gitId":"CloudHill"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-18"},{"lineNumber":253,"author":{"gitId":"CloudHill"},"content":"* The note refers to the customer\u0027s new note.","lastModifiedDate":"2023-03-18"},{"lineNumber":254,"author":{"gitId":"CloudHill"},"content":"* Any existing note will be overwritten.","lastModifiedDate":"2023-03-18"},{"lineNumber":255,"author":{"gitId":"CloudHill"},"content":"* A customer\u0027s note can be removed by setting an empty note.","lastModifiedDate":"2023-03-25"},{"lineNumber":256,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":257,"author":{"gitId":"CloudHill"},"content":"Examples:","lastModifiedDate":"2023-03-18"},{"lineNumber":258,"author":{"gitId":"CloudHill"},"content":"* `listc` followed by `setnotec 2 nt/Very friendly!` sets the 2nd customer\u0027s note as \"Very friendly!\".","lastModifiedDate":"2023-03-18"},{"lineNumber":259,"author":{"gitId":"CloudHill"},"content":"* `listc` followed by `setnotec 2 nt/` removes the 2nd customer\u0027s note.","lastModifiedDate":"2023-03-25"},{"lineNumber":260,"author":{"gitId":"CloudHill"},"content":"* `findc Betsy` followed by `setnotec 1 nt/Vegetarian` sets the 1st customer\u0027s note as \"Vegetarian\" in the results of the `findc` command.","lastModifiedDate":"2023-03-18"},{"lineNumber":261,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":262,"author":{"gitId":"CloudHill"},"content":"### Appending a customer\u0027s note : `appendnotec`","lastModifiedDate":"2023-03-18"},{"lineNumber":263,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":264,"author":{"gitId":"CloudHill"},"content":"Adds more text to a customer\u0027s note.","lastModifiedDate":"2023-03-18"},{"lineNumber":265,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":266,"author":{"gitId":"CloudHill"},"content":"Format: `appendnotec INDEX nt/NOTE`","lastModifiedDate":"2023-03-18"},{"lineNumber":267,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":268,"author":{"gitId":"CloudHill"},"content":"* Adds `NOTE` to any existing note of the customer at the specified `INDEX`.","lastModifiedDate":"2023-03-18"},{"lineNumber":269,"author":{"gitId":"CloudHill"},"content":"* The index refers to the index number shown in the displayed customer list.","lastModifiedDate":"2023-03-18"},{"lineNumber":270,"author":{"gitId":"CloudHill"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-18"},{"lineNumber":271,"author":{"gitId":"CloudHill"},"content":"* The note refers to the new text that will be added to the end of the customer\u0027s existing note.","lastModifiedDate":"2023-03-18"},{"lineNumber":272,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":273,"author":{"gitId":"CloudHill"},"content":"Examples:","lastModifiedDate":"2023-03-18"},{"lineNumber":274,"author":{"gitId":"Junyi00"},"content":"* `listc` followed by `appendnotec 2 nt/Very friendly!` will add \"Very friendly!\" to the 2nd customer\u0027s existing note.","lastModifiedDate":"2023-03-27"},{"lineNumber":275,"author":{"gitId":"Junyi00"},"content":"* `findc Betsy` followed by `appendnotec 1 nt/Vegetarian` adds \"Vegetarian\" to the note of the 1st customer in the results of the `findc` command.","lastModifiedDate":"2023-03-27"},{"lineNumber":276,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":277,"author":{"gitId":"Junyi00"},"content":"### Locating persons by name: `findc`","lastModifiedDate":"2023-03-27"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"Junyi00"},"content":"Format: `findc KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-03-27"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"Junyi00"},"content":"* `findc John` returns `john` and `John Doe`","lastModifiedDate":"2023-03-27"},{"lineNumber":292,"author":{"gitId":"Junyi00"},"content":"* `findc alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":293,"author":{"gitId":"Junyi00"},"content":"  ![result for \u0027findc alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"jednghk"},"content":"### Adding an order : `addo`","lastModifiedDate":"2023-03-07"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"jednghk"},"content":"Adds an order tagged to a customer, to the list of orders.","lastModifiedDate":"2023-03-07"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"Junyi00"},"content":"Format: `addo CUSTOMER_INDEX n/NAME [q/QUANTITY] [a/ADDRESS]`","lastModifiedDate":"2023-03-27"},{"lineNumber":300,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":301,"author":{"gitId":"jednghk"},"content":"* Adds an order, tagged to CUSTOMER_INDEX.","lastModifiedDate":"2023-03-07"},{"lineNumber":302,"author":{"gitId":"jednghk"},"content":"* ADDRESS is optional and will be set to the customer\u0027s address by default","lastModifiedDate":"2023-03-07"},{"lineNumber":303,"author":{"gitId":"jednghk"},"content":"* The index **must be a valid integer** (i.e. if there is 1 customer, CUSTOMER_INDEX can only be 1)","lastModifiedDate":"2023-03-07"},{"lineNumber":304,"author":{"gitId":"jednghk"},"content":"* QUANTITY is optional and will be set to 1 by default. Otherwise, it must be a positive integer 1, 2, 3...","lastModifiedDate":"2023-03-07"},{"lineNumber":305,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":306,"author":{"gitId":"jednghk"},"content":"Examples:","lastModifiedDate":"2023-03-07"},{"lineNumber":307,"author":{"gitId":"Junyi00"},"content":"* addo 1 n/Banana Cake 1 q/2","lastModifiedDate":"2023-03-27"},{"lineNumber":308,"author":{"gitId":"Junyi00"},"content":"  * Adds the order, 2 x Banana cakes to the list, tags it to customer 1, and status is \"pending\", address is the customer\u0027s address.","lastModifiedDate":"2023-03-27"},{"lineNumber":309,"author":{"gitId":"Junyi00"},"content":"* addo 4 n/Strawberry ice cream","lastModifiedDate":"2023-03-27"},{"lineNumber":310,"author":{"gitId":"Junyi00"},"content":"  * Adds the order 1 x Strawberry ice cream, tags it to customer 4, and sets status to \"pending\", address is the customer\u0027s address.","lastModifiedDate":"2023-03-27"},{"lineNumber":311,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":312,"author":{"gitId":"CloudHill"},"content":"### Listing all orders : `listo`","lastModifiedDate":"2023-03-28"},{"lineNumber":313,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":314,"author":{"gitId":"CloudHill"},"content":"Shows a list of all orders.","lastModifiedDate":"2023-03-27"},{"lineNumber":315,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":316,"author":{"gitId":"CloudHill"},"content":"Format: `listo [s/{created|name|status}] [f/STATUS]`","lastModifiedDate":"2023-03-27"},{"lineNumber":317,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":318,"author":{"gitId":"CloudHill"},"content":"* Lists all orders with the specified sorting option.","lastModifiedDate":"2023-03-27"},{"lineNumber":319,"author":{"gitId":"CloudHill"},"content":"* By default, orders are sorted by their created date.","lastModifiedDate":"2023-03-28"},{"lineNumber":320,"author":{"gitId":"CloudHill"},"content":"* If `f/STATUS` is provided, then show only the given status.","lastModifiedDate":"2023-03-28"},{"lineNumber":321,"author":{"gitId":"CloudHill"},"content":"* `STATUS` is case-insensitive and can be one of: pending, paid, shipped, completed, cancelled.","lastModifiedDate":"2023-03-28"},{"lineNumber":322,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":323,"author":{"gitId":"jednghk"},"content":"Examples:","lastModifiedDate":"2023-03-07"},{"lineNumber":324,"author":{"gitId":"CloudHill"},"content":"* `listo` lists all orders sorted by created date.","lastModifiedDate":"2023-03-27"},{"lineNumber":325,"author":{"gitId":"CloudHill"},"content":"* `listo s/status` lists all orders sorted by status.","lastModifiedDate":"2023-03-27"},{"lineNumber":326,"author":{"gitId":"CloudHill"},"content":"* `listo f/pending` lists all orders with \"pending\" status.","lastModifiedDate":"2023-03-27"},{"lineNumber":327,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":328,"author":{"gitId":"jednghk"},"content":"### Editing an order : `edito`","lastModifiedDate":"2023-03-12"},{"lineNumber":329,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":330,"author":{"gitId":"jednghk"},"content":"Edits an existing order in LoyaltyLift.","lastModifiedDate":"2023-03-07"},{"lineNumber":331,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":332,"author":{"gitId":"Junyi00"},"content":"Format: `edito ORDER_INDEX [n/PRODUCT_NAME] [q/QUANTITY] [a/ADDRESS]`","lastModifiedDate":"2023-03-27"},{"lineNumber":333,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":334,"author":{"gitId":"jednghk"},"content":"* Edits the order at the specified `ORDER_INDEX`. The index refers to the index number shown in the displayed order list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-07"},{"lineNumber":335,"author":{"gitId":"jednghk"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2023-03-07"},{"lineNumber":336,"author":{"gitId":"jednghk"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2023-03-07"},{"lineNumber":337,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":338,"author":{"gitId":"jednghk"},"content":"Examples:","lastModifiedDate":"2023-03-07"},{"lineNumber":339,"author":{"gitId":"jednghk"},"content":"*  `edito 1 s/paid` Edits order of id 1, and changes the status to \"paid\".","lastModifiedDate":"2023-03-07"},{"lineNumber":340,"author":{"gitId":"jednghk"},"content":"*  `edito 2 n/Brownies q/10` Edits the name of the 2nd order to be `Brownies` and the quantity to 10.","lastModifiedDate":"2023-03-07"},{"lineNumber":341,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":342,"author":{"gitId":"CloudHill"},"content":"### Setting an order\u0027s note : `setnoteo`","lastModifiedDate":"2023-03-18"},{"lineNumber":343,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":344,"author":{"gitId":"CloudHill"},"content":"Sets an order\u0027s note.","lastModifiedDate":"2023-03-18"},{"lineNumber":345,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":346,"author":{"gitId":"CloudHill"},"content":"Format: `setnoteo INDEX nt/NOTE`","lastModifiedDate":"2023-03-18"},{"lineNumber":347,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":348,"author":{"gitId":"CloudHill"},"content":"* Sets the note of the order at the specified `INDEX` to `NOTE`.","lastModifiedDate":"2023-03-18"},{"lineNumber":349,"author":{"gitId":"CloudHill"},"content":"* Orders, by default, have a blank note.","lastModifiedDate":"2023-03-18"},{"lineNumber":350,"author":{"gitId":"CloudHill"},"content":"* The index refers to the index number shown in the displayed order list.","lastModifiedDate":"2023-03-18"},{"lineNumber":351,"author":{"gitId":"CloudHill"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-18"},{"lineNumber":352,"author":{"gitId":"CloudHill"},"content":"* The note refers to the order\u0027s new note.","lastModifiedDate":"2023-03-18"},{"lineNumber":353,"author":{"gitId":"CloudHill"},"content":"* Any existing note will be overwritten.","lastModifiedDate":"2023-03-18"},{"lineNumber":354,"author":{"gitId":"CloudHill"},"content":"* An order\u0027s note can be removed by setting an empty note.","lastModifiedDate":"2023-03-25"},{"lineNumber":355,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":356,"author":{"gitId":"CloudHill"},"content":"Examples:","lastModifiedDate":"2023-03-18"},{"lineNumber":357,"author":{"gitId":"CloudHill"},"content":"* `listo` followed by `setnoteo 2 nt/Keep cool` sets the 2nd order\u0027s note as \"Keep cool\".","lastModifiedDate":"2023-03-18"},{"lineNumber":358,"author":{"gitId":"Junyi00"},"content":"* `listc` followed by `setnoteo 2 nt/` removes the 2nd order\u0027s note.","lastModifiedDate":"2023-03-27"},{"lineNumber":359,"author":{"gitId":"CloudHill"},"content":"* `findo Brownies` followed by `setnoteo 1 nt/Vegan-friendly` sets the 1st order\u0027s note as \"Vegan-friendly\" in the results of the `findo` command.","lastModifiedDate":"2023-03-18"},{"lineNumber":360,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":361,"author":{"gitId":"CloudHill"},"content":"### Appending an order\u0027s note : `appendnoteo`","lastModifiedDate":"2023-03-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":363,"author":{"gitId":"CloudHill"},"content":"Adds more text to an order\u0027s note.","lastModifiedDate":"2023-03-18"},{"lineNumber":364,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":365,"author":{"gitId":"CloudHill"},"content":"Format: `appendnoteo INDEX nt/NOTE`","lastModifiedDate":"2023-03-18"},{"lineNumber":366,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":367,"author":{"gitId":"CloudHill"},"content":"* Adds `NOTE` to any existing note of the order at the specified `INDEX`.","lastModifiedDate":"2023-03-18"},{"lineNumber":368,"author":{"gitId":"CloudHill"},"content":"* The index refers to the index number shown in the displayed order list.","lastModifiedDate":"2023-03-18"},{"lineNumber":369,"author":{"gitId":"CloudHill"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-18"},{"lineNumber":370,"author":{"gitId":"CloudHill"},"content":"* The note refers to the new text that will be added to the end of the order\u0027s existing note.","lastModifiedDate":"2023-03-18"},{"lineNumber":371,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":372,"author":{"gitId":"CloudHill"},"content":"Examples:","lastModifiedDate":"2023-03-18"},{"lineNumber":373,"author":{"gitId":"Junyi00"},"content":"* `listo` followed by `appendnoteo 2 nt/Keep cool` will add \"Keep cool\" to the 2nd order\u0027s existing note.","lastModifiedDate":"2023-03-27"},{"lineNumber":374,"author":{"gitId":"Junyi00"},"content":"* `findo Brownies` followed by `appendnoteo 1 nt/Vegan-friendly` adds \"Vegan-friendly\" to the note of the 1st order in the results of the `findo` command.","lastModifiedDate":"2023-03-27"},{"lineNumber":375,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":376,"author":{"gitId":"jednghk"},"content":"### Locating orders by name: `findo`","lastModifiedDate":"2023-03-07"},{"lineNumber":377,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":378,"author":{"gitId":"CloudHill"},"content":"Finds orders whose names contain any of the given keywords.","lastModifiedDate":"2023-03-23"},{"lineNumber":379,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":380,"author":{"gitId":"jednghk"},"content":"Format: `findo KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-03-07"},{"lineNumber":381,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":382,"author":{"gitId":"jednghk"},"content":"* The search is case-insensitive. e.g `chocolate` will match `Chocolate`","lastModifiedDate":"2023-03-07"},{"lineNumber":383,"author":{"gitId":"jednghk"},"content":"* The order of the keywords does not matter. e.g. `chocolate cake` will match ` cake chocolate`.","lastModifiedDate":"2023-03-07"},{"lineNumber":384,"author":{"gitId":"jednghk"},"content":"* Only the order name is searched.","lastModifiedDate":"2023-03-07"},{"lineNumber":385,"author":{"gitId":"jednghk"},"content":"* Only full words will be matched e.g. `chocolate` will not match `chocolatey`","lastModifiedDate":"2023-03-07"},{"lineNumber":386,"author":{"gitId":"CloudHill"},"content":"* Orders matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-03-23"},{"lineNumber":387,"author":{"gitId":"jednghk"},"content":"  e.g. `chocolate cake` will return `chocolate muffin`, `crepe cake`","lastModifiedDate":"2023-03-07"},{"lineNumber":388,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":389,"author":{"gitId":"jednghk"},"content":"Examples:","lastModifiedDate":"2023-03-07"},{"lineNumber":390,"author":{"gitId":"jednghk"},"content":"* `findo chocolate` returns `chocolate cake` and `chocolate muffin`","lastModifiedDate":"2023-03-07"},{"lineNumber":391,"author":{"gitId":"jednghk"},"content":"* `findo banana muffin` returns `banana cake`, `chocolate muffin`\u003cbr\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":392,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":393,"author":{"gitId":"jednghk"},"content":"### Deleting an order : `deleteo`","lastModifiedDate":"2023-03-12"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":397,"author":{"gitId":"jednghk"},"content":"Format: `deleteo ORDER_INDEX`","lastModifiedDate":"2023-03-07"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":399,"author":{"gitId":"jednghk"},"content":"* Deletes the order at the specified `ORDER_INDEX`.","lastModifiedDate":"2023-03-07"},{"lineNumber":400,"author":{"gitId":"jednghk"},"content":"* The index refers to the index number shown in the displayed order list.","lastModifiedDate":"2023-03-07"},{"lineNumber":401,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-07"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":403,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-07"},{"lineNumber":404,"author":{"gitId":"jednghk"},"content":"* `listo` followed by `delete 2` deletes the 2nd order on the displayed order list.","lastModifiedDate":"2023-03-07"},{"lineNumber":405,"author":{"gitId":"jednghk"},"content":"* `findo chocolate` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2023-03-07"},{"lineNumber":406,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":408,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2023-03-27"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"Junyi00"},"content":"Clears all customers and orders from the address book.","lastModifiedDate":"2023-03-27"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2023-03-27"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":426,"author":{"gitId":"-"},"content":"AddressBook data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-02-04"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":428,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":429,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-04"},{"lineNumber":430,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":432,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"Junyi00"},"content":"### Customer","lastModifiedDate":"2023-03-27"},{"lineNumber":448,"author":{"gitId":"Junyi00"},"content":"|                       Action | Format, Examples                                                                                                                                                             |","lastModifiedDate":"2023-03-27"},{"lineNumber":449,"author":{"gitId":"Junyi00"},"content":"|-----------------------------:|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-27"},{"lineNumber":450,"author":{"gitId":"Junyi00"},"content":"|             **Add Customer** | `addc [ct/{ind/ent}] n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS` \u003cbr\u003e e.g., `addc n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague` |","lastModifiedDate":"2023-03-27"},{"lineNumber":451,"author":{"gitId":"Junyi00"},"content":"|            **List Customer** | `listc` \u003cbr\u003e                                                                                                                                                                 |","lastModifiedDate":"2023-03-27"},{"lineNumber":452,"author":{"gitId":"Junyi00"},"content":"|            **Find Customer** | `findc KEYWORD [MORE_KEYWORDS]` \u003cbr\u003e e.g., `findc Hans Bo`                                                                                                                   |","lastModifiedDate":"2023-03-27"},{"lineNumber":453,"author":{"gitId":"Junyi00"},"content":"|            **View Customer** | `viewc INDEX` \u003cbr\u003e e.g. `viewc 2`                                                                                                                                            |","lastModifiedDate":"2023-03-27"},{"lineNumber":454,"author":{"gitId":"Junyi00"},"content":"|            **Edit Customer** | `editc INDEX [ct/{ind\u0026#124;env}] [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS]` \u003cbr\u003e e.g. `editc 1 p/91234567 e/johndoe@example.com`                                              |","lastModifiedDate":"2023-03-27"},{"lineNumber":455,"author":{"gitId":"Junyi00"},"content":"|          **Delete Customer** | `deletec INDEX`\u003cbr\u003e e.g., `deletec 3`                                                                                                                                        |","lastModifiedDate":"2023-03-27"},{"lineNumber":456,"author":{"gitId":"Junyi00"},"content":"|            **Mark Customer** | `markc INDEX` \u003cbr\u003e e.g., `markc 1`                                                                                                                                           |","lastModifiedDate":"2023-03-27"},{"lineNumber":457,"author":{"gitId":"Junyi00"},"content":"|          **Unmark Customer** | `unmarkc INDEX` \u003cbr\u003e e.g., `unmarkc 1`                                                                                                                                       |                                                                                                                                      |","lastModifiedDate":"2023-03-27"},{"lineNumber":458,"author":{"gitId":"Junyi00"},"content":"|    **Set Note for Customer** | `setnotec INDEX nt/NOTE` \u003cbr\u003e e.g., `setnotec 2 nt/Very friendly!`                                                                                                           |","lastModifiedDate":"2023-03-27"},{"lineNumber":459,"author":{"gitId":"Junyi00"},"content":"| **Append Note for Customer** | `appendnotec INDEX nt/NOTE` \u003cbr\u003e e.g., `appendnotec 2 nt/Very friendly!`                                                                                                     |","lastModifiedDate":"2023-03-27"},{"lineNumber":460,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":461,"author":{"gitId":"Junyi00"},"content":"### Rewards","lastModifiedDate":"2023-03-27"},{"lineNumber":462,"author":{"gitId":"Junyi00"},"content":"|              Action | Format, Examples                                                                       |","lastModifiedDate":"2023-03-27"},{"lineNumber":463,"author":{"gitId":"Junyi00"},"content":"|--------------------:|----------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-27"},{"lineNumber":464,"author":{"gitId":"Junyi00"},"content":"|      **Set Points** | `setpoints INDEX pt/POINTS` \u003cbr\u003e e.g., `setpoints 2 pt/100`                            |","lastModifiedDate":"2023-03-27"},{"lineNumber":465,"author":{"gitId":"Junyi00"},"content":"|      **Add Points** | `addpoints INDEX pt/[+/-]POINTS` \u003cbr\u003e e.g., `addpoints 2 pt/100`, `addpoints 1 pt/-50` |","lastModifiedDate":"2023-03-27"},{"lineNumber":466,"author":{"gitId":"Junyi00"},"content":"| **Set Reward Tier** | `settier TIER_NUM POINT_THRESHOLD` \u003cbr\u003e e.g., `settier 1 500`                          |","lastModifiedDate":"2023-03-27"},{"lineNumber":467,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":468,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":469,"author":{"gitId":"Junyi00"},"content":"### Order","lastModifiedDate":"2023-03-27"},{"lineNumber":470,"author":{"gitId":"Junyi00"},"content":"|                    Action | Format, Examples                                                                                   |","lastModifiedDate":"2023-03-27"},{"lineNumber":471,"author":{"gitId":"Junyi00"},"content":"|--------------------------:|----------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-27"},{"lineNumber":472,"author":{"gitId":"Junyi00"},"content":"|             **Add Order** | `addo CUSTOMER_INDEX n/NAME [q/QUANTITY] [a/ADDRESS]` \u003cbr\u003e e.g., `addo 1 n/Banana Cake 1 q/2`      |","lastModifiedDate":"2023-03-27"},{"lineNumber":473,"author":{"gitId":"Junyi00"},"content":"|            **List Order** | `listo` \u003cbr\u003e                                                                                       |","lastModifiedDate":"2023-03-27"},{"lineNumber":474,"author":{"gitId":"Junyi00"},"content":"|            **Find Order** | `findo KEYWORD [MORE_KEYWORDS]` \u003cbr\u003e e.g., `findo banana muffin`                                   |","lastModifiedDate":"2023-03-27"},{"lineNumber":475,"author":{"gitId":"Junyi00"},"content":"|            **View Order** | `viewo INDEX` \u003cbr\u003e e.g. `viewo 2`                                                                  |","lastModifiedDate":"2023-03-27"},{"lineNumber":476,"author":{"gitId":"Junyi00"},"content":"|            **Edit Order** | `edito ORDER_INDEX [n/PRODUCT_NAME] [q/QUANTITY] [a/ADDRESS]` \u003cbr\u003e e.g., `edito 2 n/Brownies q/10` |","lastModifiedDate":"2023-03-27"},{"lineNumber":477,"author":{"gitId":"Junyi00"},"content":"|          **Delete Order** | `deleteo INDEX`\u003cbr\u003e e.g., `deletec 3`                                                              |                                                                                                                                     |","lastModifiedDate":"2023-03-27"},{"lineNumber":478,"author":{"gitId":"Junyi00"},"content":"|    **Set Note for Order** | `setnoteo INDEX nt/NOTE` \u003cbr\u003e e.g., `setnoteo 2 nt/Very friendly!`                                 |","lastModifiedDate":"2023-03-27"},{"lineNumber":479,"author":{"gitId":"Junyi00"},"content":"| **Append Note for Order** | `appendnoteo INDEX nt/NOTE` \u003cbr\u003e e.g., `appendnoteo 2 nt/Very friendly!`                           |","lastModifiedDate":"2023-03-27"},{"lineNumber":480,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":481,"author":{"gitId":"Junyi00"},"content":"### Miscellaneous","lastModifiedDate":"2023-03-27"},{"lineNumber":482,"author":{"gitId":"jednghk"},"content":"|              Action | Format, Examples                                                                                                                                                             |","lastModifiedDate":"2023-03-06"},{"lineNumber":483,"author":{"gitId":"Junyi00"},"content":"|--------------------:|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-27"},{"lineNumber":484,"author":{"gitId":"jednghk"},"content":"|           **Clear** | `clear`                                                                                                                                                                      |","lastModifiedDate":"2023-03-06"},{"lineNumber":485,"author":{"gitId":"jednghk"},"content":"|            **Help** | `help`                                                                                                                                                                       |","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Junyi00":101,"JavonTeo":26,"CloudHill":80,"jednghk":54,"Infrix":60,"-":164}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"Junyi00"},"content":"    content: \"LoyaltyLift\";","lastModifiedDate":"2023-02-20"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"Junyi00":1,"-":294}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"ecp -\u003e ec ++: index, editCustomerDescriptor","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"Junyi00":1,"-":20}},{"path":"docs/team/cloudhill.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"layout: page","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"title: Ryo Hilmawan\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"## Project: LoyaltyLift","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"LoyaltyLift is a desktop application for small business owners to manage customers and their orders to boost customer satisfaction and retention rate. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"* **New Feature**: ...","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"  * What it does: ...","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"  * Justification: ...","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"  * Highlights: ...","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"  * Credits: ...","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dcloudhill\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"* **Project management**:","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"  * ...","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"  * ...","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"  * User Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"    * ...","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"  * Developer Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"    * ...","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"* **Community**:","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"  * ...","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"* **Tools**:","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"  * ...","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"* ...","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"CloudHill":38}},{"path":"docs/team/infrix.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"layout: page","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"title: Dawson Nui Jun Yi\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"### Project: LoyaltyLift","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"LoyaltyLift is an application for small business owners to manage customers and their orders to boost customer satisfaction and retention rate. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"* **New Feature**: ...","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"  * What it does: ...","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"  * Justification: ...","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"  * Highlights: ... (highlight challenges faced, like if in-depth analysis was required)","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"  * Credits: ... (ideas from third-party)","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dInfrix\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"* **Project management**:","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"  * ... (What realease you managed)","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"  * ...","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"  * User Guide:","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"    * ...","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"  * Developer Guide:","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"    * ...","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"* **Community**:","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"  * ... (What did you peer review)","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"* **Tools**:","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"  * ...","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"* ...","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Infrix":38}},{"path":"docs/team/javonteo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"---","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"layout: page","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"title: Javon Teo\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"---","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"## Project: LoyaltyLift","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"LoyaltyLift is an application for small business owners to manage customers and their orders to boost customer satisfaction and retention rate. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"* **New Feature**: [to be added soon]","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"    * What it does: [to be added soon]","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"    * Justification: [to be added soon]","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"    * Highlights: [to be added soon]","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"* **New Feature**: [to be added soon]","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"* **Code contributed**: [to be added soon]","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"* **Project management**:","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"    * [to be added soon]","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"    * [to be added soon]","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"    * User Guide:","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"        * [to be added soon]","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"JavonTeo"},"content":"        * Added non-functional requirements and glossary to the DeveloperGuide.md","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"JavonTeo"},"content":"* **Community**:","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"JavonTeo"},"content":"    * [to be added soon]","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"* **Tools**:","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"JavonTeo"},"content":"    * [to be added soon]","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"JavonTeo":38}},{"path":"docs/team/jednghk.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jednghk"},"content":"---","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"jednghk"},"content":"layout: page","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"jednghk"},"content":"title: Jed Ng\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"jednghk"},"content":"---","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"jednghk"},"content":"## Project: LoyaltyLift","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"jednghk"},"content":"LoyaltyLift is an application for small business owners to manage customers and their orders to boost customer satisfaction and retention rate. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"jednghk"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"jednghk"},"content":"* **New Feature**: [to be added soon]","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"jednghk"},"content":"    * What it does: [to be added soon]","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"jednghk"},"content":"    * Justification: [to be added soon]","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"jednghk"},"content":"    * Highlights: [to be added soon]","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"jednghk"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"jednghk"},"content":"* **New Feature**: [to be added soon]","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"jednghk"},"content":"* **Code contributed**: [to be added soon]","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"jednghk"},"content":"* **Project management**:","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"jednghk"},"content":"    * [to be added soon]","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"jednghk"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"jednghk"},"content":"    * [to be added soon]","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"jednghk"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"jednghk"},"content":"    * User Guide:","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"jednghk"},"content":"        * [to be added soon]","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"jednghk"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"jednghk"},"content":"        * [to be added soon]","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"jednghk"},"content":"* **Community**:","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"jednghk"},"content":"    * [to be added soon]","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"jednghk"},"content":"* **Tools**:","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"jednghk"},"content":"    * [to be added soon]","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"jednghk":38}},{"path":"docs/team/junyi00.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"---","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"layout: page","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"title: Goh Jun Yi\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"---","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"## Project: LoyaltyLift","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"LoyaltyLift is an application for small business owners to manage customers and their orders to boost customer satisfaction and retention rate. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"* **New Feature**: [to be added soon]","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"    * What it does: [to be added soon]","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"    * Justification: [to be added soon]","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"    * Highlights: [to be added soon]","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"* **New Feature**: [to be added soon]","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"* **Code contributed**: [to be added soon]","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"* **Project management**:","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"    * [to be added soon]","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"    * [to be added soon]","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"    * User Guide:","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"        * [to be added soon]","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"        * [to be added soon]","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"* **Community**:","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"    * [to be added soon]","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"* **Tools**:","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"    * [to be added soon]","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"Junyi00":38}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"Junyi00"},"content":"Create a `RemarkCommandParser` class in the `seedu.loyaltylift.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2023-02-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"Junyi00"},"content":"Create a new `Remark` in `seedu.loyaltylift.model.customer`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-03-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"Junyi00"},"content":"Simply add the following to [`seedu.loyaltylift.ui.CustomerCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-03-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"Junyi00":6,"-":395}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"jednghk"},"content":"The `address` field in `Person` is actually an instance of the `seedu.loyaltylift.model.attribute.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jednghk":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.loyaltylift.logic.Logic`.","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"A quick look at the `seedu.loyaltylift.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"Junyi00"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editCustomerDescriptor);","lastModifiedDate":"2023-03-05"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Junyi00":3,"-":298}},{"path":"src/main/java/seedu/loyaltylift/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.LogsCenter;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.util.FileUtil;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"Junyi00":3,"-":61}},{"path":"src/main/java/seedu/loyaltylift/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"Junyi00":1,"-":24}},{"path":"src/main/java/seedu/loyaltylift/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.Config;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.LogsCenter;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.Version;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.util.ConfigUtil;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.util.StringUtil;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.Logic;","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.LogicManager;","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.AddressBook;","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ModelManager;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.UserPrefs;","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.util.SampleDataUtil;","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.storage.AddressBookStorage;","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.storage.JsonAddressBookStorage;","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.storage.Storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.storage.StorageManager;","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.storage.UserPrefsStorage;","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.ui.Ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.ui.UiManager;","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Junyi00":24,"-":159}},{"path":"src/main/java/seedu/loyaltylift/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.commons.core;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Junyi00":1,"-":62}},{"path":"src/main/java/seedu/loyaltylift/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.commons.core;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Junyi00":1,"-":78}},{"path":"src/main/java/seedu/loyaltylift/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.commons.core;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Junyi00":1,"-":111}},{"path":"src/main/java/seedu/loyaltylift/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.commons.core;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"    public static final String MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX \u003d \"The customer index provided is invalid\";","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"jednghk"},"content":"    public static final String MESSAGE_INVALID_ORDER_DISPLAYED_INDEX \u003d \"The order index provided is invalid\";","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"    public static final String MESSAGE_CUSTOMERS_LISTED_OVERVIEW \u003d \"%1$d customers listed!\";","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"    public static final String MESSAGE_ORDERS_LISTED_OVERVIEW \u003d \"%1$d orders listed!\";","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Junyi00":3,"CloudHill":1,"jednghk":1,"-":10}},{"path":"src/main/java/seedu/loyaltylift/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.commons.core;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Junyi00":1,"-":115}},{"path":"src/main/java/seedu/loyaltylift/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.commons.core.index;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Junyi00":1,"-":53}},{"path":"src/main/java/seedu/loyaltylift/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.commons.exceptions;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Junyi00":1,"-":10}},{"path":"src/main/java/seedu/loyaltylift/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.commons.exceptions;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Junyi00":1,"-":20}},{"path":"src/main/java/seedu/loyaltylift/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.commons.util;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.MainApp;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Junyi00":2,"-":40}},{"path":"src/main/java/seedu/loyaltylift/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.commons.util;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Junyi00":1,"-":34}},{"path":"src/main/java/seedu/loyaltylift/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.commons.util;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.Config;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Junyi00":3,"-":20}},{"path":"src/main/java/seedu/loyaltylift/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.commons.util;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Junyi00":1,"-":82}},{"path":"src/main/java/seedu/loyaltylift/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.commons.util;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.LogsCenter;","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Junyi00":3,"-":140}},{"path":"src/main/java/seedu/loyaltylift/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.commons.util;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Junyi00":2,"-":66}},{"path":"src/main/java/seedu/loyaltylift/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.GuiSettings;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.CommandResult;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"     * @see seedu.loyaltylift.model.Model#getAddressBook()","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"    /** Returns an unmodifiable view of the filtered list of customers */","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"    ObservableList\u003cCustomer\u003e getFilteredCustomerList();","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"    /** Returns an unmodifiable view of the filtered list of orders */","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"    ObservableList\u003cOrder\u003e getFilteredOrderList();","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"    /** Returns an unmodifiable view of the filtered list of orders belonging to a customer */","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"    ObservableList\u003cOrder\u003e getFilteredCustomerOrderList();","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"    /** Returns an unmodifiable view of the filtered list of orders belonging to a customer */","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"    void updateFilteredCustomerOrderList(Customer customer);","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Junyi00":16,"CloudHill":4,"-":40}},{"path":"src/main/java/seedu/loyaltylift/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.GuiSettings;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.LogsCenter;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.Command;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.CommandResult;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.parser.AddressBookParser;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.storage.Storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":"    public ObservableList\u003cCustomer\u003e getFilteredCustomerList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"Junyi00"},"content":"        return model.getFilteredCustomerList();","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"CloudHill"},"content":"    public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"CloudHill"},"content":"        return model.getFilteredOrderList();","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Junyi00"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"Junyi00"},"content":"    public ObservableList\u003cOrder\u003e getFilteredCustomerOrderList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"Junyi00"},"content":"        return model.getFilteredCustomerOrderList();","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"Junyi00"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"Junyi00"},"content":"    public void updateFilteredCustomerOrderList(Customer customer) {","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"Junyi00"},"content":"        model.updateFilteredCustomerOrderList(customer);","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Junyi00":22,"CloudHill":6,"-":69}},{"path":"src/main/java/seedu/loyaltylift/logic/commands/AddCustomerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_CUSTOMER_TYPE;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":" * Adds a customer to the address book.","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"public class AddCustomerCommand extends Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"    public static final String COMMAND_WORD \u003d \"addc\";","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a customer to the address book. \\n\"","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"            + \"[\" + PREFIX_CUSTOMER_TYPE + \"{ind|ent}] \"","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"            + PREFIX_CUSTOMER_TYPE + \"ind \"","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New customer added: \\n%1$s\";","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"    public static final String MESSAGE_DUPLICATE_CUSTOMER \u003d \"This customer already exists in the address book\";","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"    private final Customer toAdd;","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"     * Creates an AddCustomerCommand to add the specified {@code Customer}","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"    public AddCustomerCommand(Customer customer) {","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"        requireNonNull(customer);","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"        toAdd \u003d customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"Junyi00"},"content":"        if (model.hasCustomer(toAdd)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Junyi00"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"Junyi00"},"content":"        model.addCustomer(toAdd);","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"Junyi00"},"content":"                || (other instanceof AddCustomerCommand // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Junyi00"},"content":"                \u0026\u0026 toAdd.equals(((AddCustomerCommand) other).toAdd));","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Junyi00":28,"-":42}},{"path":"src/main/java/seedu/loyaltylift/logic/commands/AddOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jednghk"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"jednghk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"jednghk"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"jednghk"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.attribute.Address;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.attribute.Name;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.order.Quantity;","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.order.Status;","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"jednghk"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"jednghk"},"content":" * Adds an order to LoyaltyLift.","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"jednghk"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"jednghk"},"content":"public class AddOrderCommand extends Command {","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"jednghk"},"content":"    public static final String COMMAND_WORD \u003d \"addo\";","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"jednghk"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an order to LoyaltyLift. \\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"jednghk"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"jednghk"},"content":"            + PREFIX_NAME + \"ORDER_NAME \"","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"jednghk"},"content":"            + \"[\" + PREFIX_QUANTITY + \"QUANTITY] \"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"jednghk"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS]\";","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"jednghk"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New order added: \\n%1$s\";","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"jednghk"},"content":"    private final Index customerIndex;","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"jednghk"},"content":"    private final AddOrderDescriptor addOrderDescriptor;","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"jednghk"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"jednghk"},"content":"     * Creates an AddOrderCommand to add the specified {@code Order}","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"jednghk"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"jednghk"},"content":"    public AddOrderCommand(Index customerIndex, AddOrderDescriptor addOrderDescriptor) {","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"jednghk"},"content":"        requireNonNull(customerIndex);","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"jednghk"},"content":"        requireNonNull(addOrderDescriptor);","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"jednghk"},"content":"        this.customerIndex \u003d customerIndex;","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"jednghk"},"content":"        this.addOrderDescriptor \u003d addOrderDescriptor;","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"jednghk"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"jednghk"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"jednghk"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"jednghk"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"jednghk"},"content":"        List\u003cCustomer\u003e lastShownList \u003d model.getFilteredCustomerList();","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"jednghk"},"content":"        if (customerIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"jednghk"},"content":"            throw new CommandException(MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"jednghk"},"content":"        Customer taggedCustomer \u003d lastShownList.get(customerIndex.getZeroBased());","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"jednghk"},"content":"        Order createdOrder \u003d createOrder(taggedCustomer, addOrderDescriptor);","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"jednghk"},"content":"        model.addOrder(createdOrder);","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"jednghk"},"content":"        model.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"jednghk"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, createdOrder));","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"jednghk"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"jednghk"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"jednghk"},"content":"     * Creates and returns a {@code Order} with the details of {@code orderToAdd}","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"jednghk"},"content":"     * created with {@code addOrderDescriptor}.","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"jednghk"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"jednghk"},"content":"    private static Order createOrder(","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"jednghk"},"content":"            Customer taggedCustomer, AddOrderDescriptor addOrderDescriptor) {","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"jednghk"},"content":"        assert taggedCustomer !\u003d null;","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"jednghk"},"content":"        Name name \u003d addOrderDescriptor.getName();","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"jednghk"},"content":"        Address address \u003d addOrderDescriptor.getAddress().orElse(taggedCustomer.getAddress());","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"jednghk"},"content":"        Quantity quantity \u003d addOrderDescriptor.getQuantity().orElse(new Quantity(1));","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"Junyi00"},"content":"        Status status \u003d new Status();","lastModifiedDate":"2023-03-25"},{"lineNumber":81,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"CloudHill"},"content":"        return new Order(taggedCustomer, name, quantity, address);","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"jednghk"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"jednghk"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"jednghk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"jednghk"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"jednghk"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"jednghk"},"content":"            return true;","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"jednghk"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"jednghk"},"content":"        if (!(other instanceof AddOrderCommand)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"jednghk"},"content":"            return false;","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"jednghk"},"content":"        // state check","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"jednghk"},"content":"        AddOrderCommand e \u003d (AddOrderCommand) other;","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"jednghk"},"content":"        return customerIndex.equals(e.customerIndex)","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"jednghk"},"content":"                \u0026\u0026 addOrderDescriptor.equals(e.addOrderDescriptor);","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"jednghk"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"jednghk"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"jednghk"},"content":"     * Stores the details to add the order with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"jednghk"},"content":"     * corresponding field value of the order.","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"jednghk"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":107,"author":{"gitId":"jednghk"},"content":"    public static class AddOrderDescriptor {","lastModifiedDate":"2023-03-21"},{"lineNumber":108,"author":{"gitId":"jednghk"},"content":"        private Quantity quantity;","lastModifiedDate":"2023-03-21"},{"lineNumber":109,"author":{"gitId":"jednghk"},"content":"        private Name name;","lastModifiedDate":"2023-03-21"},{"lineNumber":110,"author":{"gitId":"jednghk"},"content":"        private Address address;","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"jednghk"},"content":"        public AddOrderDescriptor() {}","lastModifiedDate":"2023-03-21"},{"lineNumber":113,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":114,"author":{"gitId":"jednghk"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-03-21"},{"lineNumber":115,"author":{"gitId":"jednghk"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-03-21"},{"lineNumber":116,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":117,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":118,"author":{"gitId":"jednghk"},"content":"        public Name getName() {","lastModifiedDate":"2023-03-21"},{"lineNumber":119,"author":{"gitId":"jednghk"},"content":"            return this.name;","lastModifiedDate":"2023-03-21"},{"lineNumber":120,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":121,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":122,"author":{"gitId":"jednghk"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2023-03-21"},{"lineNumber":123,"author":{"gitId":"jednghk"},"content":"            this.address \u003d address;","lastModifiedDate":"2023-03-21"},{"lineNumber":124,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":125,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":126,"author":{"gitId":"jednghk"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2023-03-21"},{"lineNumber":127,"author":{"gitId":"jednghk"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2023-03-21"},{"lineNumber":128,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":129,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":130,"author":{"gitId":"jednghk"},"content":"        public void setQuantity(Quantity quantity) {","lastModifiedDate":"2023-03-21"},{"lineNumber":131,"author":{"gitId":"jednghk"},"content":"            this.quantity \u003d quantity;","lastModifiedDate":"2023-03-21"},{"lineNumber":132,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":133,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":134,"author":{"gitId":"jednghk"},"content":"        public Optional\u003cQuantity\u003e getQuantity() {","lastModifiedDate":"2023-03-21"},{"lineNumber":135,"author":{"gitId":"jednghk"},"content":"            return Optional.ofNullable(quantity);","lastModifiedDate":"2023-03-21"},{"lineNumber":136,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":137,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":138,"author":{"gitId":"jednghk"},"content":"        @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":139,"author":{"gitId":"jednghk"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-21"},{"lineNumber":140,"author":{"gitId":"jednghk"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-21"},{"lineNumber":141,"author":{"gitId":"jednghk"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-21"},{"lineNumber":142,"author":{"gitId":"jednghk"},"content":"                return true;","lastModifiedDate":"2023-03-21"},{"lineNumber":143,"author":{"gitId":"jednghk"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":144,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":145,"author":{"gitId":"jednghk"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-21"},{"lineNumber":146,"author":{"gitId":"jednghk"},"content":"            if (!(other instanceof AddOrderDescriptor)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":147,"author":{"gitId":"jednghk"},"content":"                return false;","lastModifiedDate":"2023-03-21"},{"lineNumber":148,"author":{"gitId":"jednghk"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":149,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":150,"author":{"gitId":"jednghk"},"content":"            // state check","lastModifiedDate":"2023-03-21"},{"lineNumber":151,"author":{"gitId":"jednghk"},"content":"            AddOrderDescriptor e \u003d (AddOrderDescriptor) other;","lastModifiedDate":"2023-03-21"},{"lineNumber":152,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":153,"author":{"gitId":"jednghk"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2023-03-21"},{"lineNumber":154,"author":{"gitId":"jednghk"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2023-03-21"},{"lineNumber":155,"author":{"gitId":"jednghk"},"content":"                    \u0026\u0026 getQuantity().equals(e.getQuantity());","lastModifiedDate":"2023-03-21"},{"lineNumber":156,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":157,"author":{"gitId":"jednghk"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":158,"author":{"gitId":"jednghk"},"content":"}","lastModifiedDate":"2023-03-12"},{"lineNumber":159,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"Junyi00":2,"CloudHill":1,"jednghk":156}},{"path":"src/main/java/seedu/loyaltylift/logic/commands/AddPointsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import static seedu.loyaltylift.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import static seedu.loyaltylift.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import java.util.List;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.commons.core.Messages;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.model.attribute.Address;","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.model.attribute.Name;","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Note;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.model.customer.CustomerType;","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.model.customer.Email;","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.customer.Marked;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.model.customer.Phone;","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.model.customer.Points;","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.model.tag.Tag;","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":" * Adds the reward points of a customer","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":" * Points added could be negative","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"public class AddPointsCommand extends Command {","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"    public static final String COMMAND_WORD \u003d \"addpoints\";","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"            + \": edits points of the customer identified by the index number used in the displayed customer list. \\n\"","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"            + \"INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"            + PREFIX_POINTS + \"[POINTS]\\n\"","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"            + \" 1 \"","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"            + PREFIX_POINTS","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"            + \"-100\";","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$s, Points: %2$s\";","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"Infrix"},"content":"    public static final String MESSAGE_SET_POINTS_SUCCESS \u003d \"Current points for Customer: %1$s\";","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"Infrix"},"content":"    public static final String MESSAGE_INVALID_POINTS \u003d \"This customer will have invalid points\";","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"Infrix"},"content":"    private final Index index;","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"Infrix"},"content":"    private final Integer addPoints;","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"Infrix"},"content":"     * @param index of the customer in the filtered person list to set points","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"Infrix"},"content":"     * @param addPoints points to be added or subtracted","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"Infrix"},"content":"    public AddPointsCommand(Index index, Integer addPoints) {","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"Infrix"},"content":"        requireAllNonNull(index, addPoints);","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"Infrix"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"Infrix"},"content":"        this.addPoints \u003d addPoints;","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"Infrix"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"Infrix"},"content":"        List\u003cCustomer\u003e lastShownList \u003d model.getFilteredCustomerList();","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"Infrix"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"Infrix"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"Infrix"},"content":"        Customer customerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"Infrix"},"content":"        Customer editedCustomerWithPoints \u003d createEditedCustomer(customerToEdit);","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"Infrix"},"content":"        model.setCustomer(customerToEdit, editedCustomerWithPoints);","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"Infrix"},"content":"        model.updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"Infrix"},"content":"        return new CommandResult(generateSuccessMessage(editedCustomerWithPoints));","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"Infrix"},"content":"     * Creates and returns a {@code Customer} with the details of {@code customerToEdit}","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"Infrix"},"content":"    private Customer createEditedCustomer(Customer customerToEdit) throws CommandException {","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"Infrix"},"content":"        assert customerToEdit !\u003d null;","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"Infrix"},"content":"        CustomerType customerType \u003d customerToEdit.getCustomerType();","lastModifiedDate":"2023-03-17"},{"lineNumber":85,"author":{"gitId":"Infrix"},"content":"        Name name \u003d customerToEdit.getName();","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"Infrix"},"content":"        Phone phone \u003d customerToEdit.getPhone();","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"Infrix"},"content":"        Email email \u003d customerToEdit.getEmail();","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"Infrix"},"content":"        Address address \u003d customerToEdit.getAddress();","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"Infrix"},"content":"        Set\u003cTag\u003e tags \u003d customerToEdit.getTags();","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"Infrix"},"content":"        Points points \u003d customerToEdit.getPoints();","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"JavonTeo"},"content":"        Marked marked \u003d customerToEdit.getMarked();","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"CloudHill"},"content":"        Note note \u003d customerToEdit.getNote();","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":94,"author":{"gitId":"Infrix"},"content":"        Points newPoints;","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"Infrix"},"content":"        try {","lastModifiedDate":"2023-03-17"},{"lineNumber":96,"author":{"gitId":"Infrix"},"content":"            newPoints \u003d points.editPoints(this.addPoints);","lastModifiedDate":"2023-03-17"},{"lineNumber":97,"author":{"gitId":"Infrix"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"Infrix"},"content":"            throw new CommandException(MESSAGE_INVALID_POINTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":99,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"CloudHill"},"content":"        return new Customer(customerType, name, phone, email, address, tags, newPoints, marked, note);","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"Infrix"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"Infrix"},"content":"     * the points are added","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"Infrix"},"content":"    private String generateSuccessMessage(Customer editedCustomer) {","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"Infrix"},"content":"        String message \u003d MESSAGE_SET_POINTS_SUCCESS;","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"Infrix"},"content":"        return String.format(message, editedCustomer);","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"Infrix"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":117,"author":{"gitId":"Infrix"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-17"},{"lineNumber":118,"author":{"gitId":"Infrix"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"Infrix"},"content":"            return true;","lastModifiedDate":"2023-03-17"},{"lineNumber":120,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":121,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":122,"author":{"gitId":"Infrix"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-17"},{"lineNumber":123,"author":{"gitId":"Infrix"},"content":"        if (!(other instanceof AddPointsCommand)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":124,"author":{"gitId":"Infrix"},"content":"            return false;","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"Infrix"},"content":"        // state check","lastModifiedDate":"2023-03-17"},{"lineNumber":128,"author":{"gitId":"Infrix"},"content":"        AddPointsCommand e \u003d (AddPointsCommand) other;","lastModifiedDate":"2023-03-17"},{"lineNumber":129,"author":{"gitId":"Infrix"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"Infrix"},"content":"                \u0026\u0026 addPoints.equals(e.addPoints);","lastModifiedDate":"2023-03-17"},{"lineNumber":131,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":132,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"CloudHill":3,"JavonTeo":2,"Infrix":128}},{"path":"src/main/java/seedu/loyaltylift/logic/commands/AppendCustomerNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import java.util.List;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.commons.core.Messages;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Address;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Name;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Note;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.CustomerType;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.Email;","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.Marked;","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.Phone;","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.Points;","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":" * Overwrites the note of an existing customer in the address book.","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"public class AppendCustomerNoteCommand extends Command {","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"    public static final String COMMAND_WORD \u003d \"appendnotec\";","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Appends the note of the customer identified \"","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"            + \"by the index number used in the displayed customer list. \"","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"            + \"The input will be added to the end of the existing note.\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"            + PREFIX_NOTE + \"NOTE\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"            + PREFIX_NOTE + \"Example note\";","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"    public static final String MESSAGE_APPEND_NOTE_SUCCESS \u003d \"Appended note for customer: \\n%1$s\";","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"    private final Index index;","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"    private final String noteToAppend;","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"     * @param index of the customer in the filtered customer list to edit","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"     * @param noteToAppend of the customer to be set","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"    public AppendCustomerNoteCommand(Index index, String noteToAppend) {","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(noteToAppend);","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"CloudHill"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"CloudHill"},"content":"        this.noteToAppend \u003d noteToAppend;","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"CloudHill"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"CloudHill"},"content":"        List\u003cCustomer\u003e lastShownList \u003d model.getFilteredCustomerList();","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"CloudHill"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"CloudHill"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"CloudHill"},"content":"        Customer customerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"CloudHill"},"content":"        Note newNote \u003d new Note(customerToEdit.getNote().value + this.noteToAppend);","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"CloudHill"},"content":"        Customer editedCustomer \u003d createEditedCustomer(customerToEdit, newNote);","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"CloudHill"},"content":"        model.setCustomer(customerToEdit, editedCustomer);","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"CloudHill"},"content":"        model.updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"CloudHill"},"content":"        return new CommandResult(String.format(MESSAGE_APPEND_NOTE_SUCCESS, editedCustomer));","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"CloudHill"},"content":"     * Creates and returns a {@code Customer} with the details of {@code customerToEdit}","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"CloudHill"},"content":"     * with the edited {@code note}.","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"CloudHill"},"content":"    private static Customer createEditedCustomer(Customer customerToEdit, Note note) {","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"CloudHill"},"content":"        assert customerToEdit !\u003d null;","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"CloudHill"},"content":"        Name name \u003d customerToEdit.getName();","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"CloudHill"},"content":"        Phone phone \u003d customerToEdit.getPhone();","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"CloudHill"},"content":"        Email email \u003d customerToEdit.getEmail();","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"CloudHill"},"content":"        Address address \u003d customerToEdit.getAddress();","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"CloudHill"},"content":"        Set\u003cTag\u003e tags \u003d customerToEdit.getTags();","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"CloudHill"},"content":"        CustomerType customerType \u003d customerToEdit.getCustomerType();","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"CloudHill"},"content":"        Points points \u003d customerToEdit.getPoints();","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"CloudHill"},"content":"        Marked marked \u003d customerToEdit.getMarked();","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"CloudHill"},"content":"        return new Customer(customerType, name, phone, email, address, tags, points, marked, note);","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"CloudHill"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"CloudHill"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"CloudHill"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"CloudHill"},"content":"            return true;","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"CloudHill"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"CloudHill"},"content":"        if (!(other instanceof AppendCustomerNoteCommand)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"CloudHill"},"content":"            return false;","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"CloudHill"},"content":"        // state check","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"CloudHill"},"content":"        AppendCustomerNoteCommand e \u003d (AppendCustomerNoteCommand) other;","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"CloudHill"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"CloudHill"},"content":"                \u0026\u0026 noteToAppend.equals(e.noteToAppend);","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"CloudHill":111}},{"path":"src/main/java/seedu/loyaltylift/logic/commands/AppendOrderNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import java.util.List;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.commons.core.Messages;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Address;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Name;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Note;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.CreatedDate;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Quantity;","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Status;","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":" * Overwrites the note of an existing order in the address book.","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"public class AppendOrderNoteCommand extends Command {","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"    public static final String COMMAND_WORD \u003d \"appendnoteo\";","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Appends the note of the order identified \"","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"            + \"by the index number used in the displayed order list. \"","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"            + \"The input will be added to the end of the existing note.\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"            + PREFIX_NOTE + \"NOTE\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"            + PREFIX_NOTE + \"Example note\";","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"    public static final String MESSAGE_APPEND_NOTE_SUCCESS \u003d \"Append note for order: \\n%1$s\";","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"    private final Index index;","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"    private final String noteToAppend;","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"     * @param index of the order in the filtered order list to edit","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"     * @param noteToAppend of the customer to be set","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"    public AppendOrderNoteCommand(Index index, String noteToAppend) {","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(noteToAppend);","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"CloudHill"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"        this.noteToAppend \u003d noteToAppend;","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"CloudHill"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"CloudHill"},"content":"        List\u003cOrder\u003e lastShownList \u003d model.getFilteredOrderList();","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"CloudHill"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"CloudHill"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"CloudHill"},"content":"        Order orderToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"CloudHill"},"content":"        Note newNote \u003d new Note(orderToEdit.getNote().value + this.noteToAppend);","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"CloudHill"},"content":"        Order editedOrder \u003d createEditedOrder(orderToEdit, newNote);","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"CloudHill"},"content":"        model.setOrder(orderToEdit, editedOrder);","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"CloudHill"},"content":"        model.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"CloudHill"},"content":"        return new CommandResult(String.format(MESSAGE_APPEND_NOTE_SUCCESS, editedOrder));","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"CloudHill"},"content":"     * Creates and returns a {@code Order} with the details of {@code orderToEdit}","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"CloudHill"},"content":"     * with the edited {@code note}.","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"CloudHill"},"content":"    private static Order createEditedOrder(Order orderToEdit, Note note) {","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"CloudHill"},"content":"        assert orderToEdit !\u003d null;","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"CloudHill"},"content":"        Customer customer \u003d orderToEdit.getCustomer();","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"CloudHill"},"content":"        Name name \u003d orderToEdit.getName();","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"CloudHill"},"content":"        Quantity quantity \u003d orderToEdit.getQuantity();","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"CloudHill"},"content":"        Address address \u003d orderToEdit.getAddress();","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"CloudHill"},"content":"        Status status \u003d orderToEdit.getStatus();","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"CloudHill"},"content":"        CreatedDate createdDate \u003d orderToEdit.getCreatedDate();","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"CloudHill"},"content":"        return new Order(customer, name, quantity, address, status, createdDate, note);","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"CloudHill"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"CloudHill"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"CloudHill"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"CloudHill"},"content":"            return true;","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"CloudHill"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"CloudHill"},"content":"        if (!(other instanceof AppendOrderNoteCommand)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"CloudHill"},"content":"            return false;","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"CloudHill"},"content":"        // state check","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"CloudHill"},"content":"        AppendOrderNoteCommand e \u003d (AppendOrderNoteCommand) other;","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"CloudHill"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"CloudHill"},"content":"                \u0026\u0026 noteToAppend.equals(e.noteToAppend);","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"CloudHill":106}},{"path":"src/main/java/seedu/loyaltylift/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.AddressBook;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Junyi00":3,"-":20}},{"path":"src/main/java/seedu/loyaltylift/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Junyi00":3,"-":17}},{"path":"src/main/java/seedu/loyaltylift/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"    /** The application should select \u0026 view a specific customer */","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"    private final Integer customerIndex;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"    /** The application should select \u0026 view a specific order */","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"    private final Integer orderIndex;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit,","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"                         Integer customerIndex, Integer orderIndex) {","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"        this.customerIndex \u003d customerIndex;","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"        this.orderIndex \u003d orderIndex;","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"        this(feedbackToUser, false, false, null, null);","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"     * The index of the customer in the current displayed listview to display.","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"     * @return The index of the customer in the current listview, 0-indexed.","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"    public Integer getCustomerIndex() {","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"        return customerIndex;","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"     * The index of the order in the current displayed listview to display.","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"Junyi00"},"content":"     * @return The index of the order in the current listview, 0-indexed.","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"Junyi00"},"content":"    public Integer getOrderIndex() {","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"Junyi00"},"content":"        return orderIndex;","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"CloudHill"},"content":"    public boolean isShowCustomerSelection() {","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"CloudHill"},"content":"        return customerIndex !\u003d null;","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Junyi00"},"content":"    public boolean isShowOrderSelection() {","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"Junyi00"},"content":"        return orderIndex !\u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"Junyi00"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Junyi00"},"content":"                \u0026\u0026 Objects.equals(customerIndex, otherCommandResult.customerIndex)","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"Junyi00"},"content":"                \u0026\u0026 Objects.equals(orderIndex, otherCommandResult.orderIndex);","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"Junyi00"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, customerIndex, orderIndex);","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Junyi00":37,"CloudHill":3,"-":66}},{"path":"src/main/java/seedu/loyaltylift/logic/commands/DeleteCustomerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.Messages;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":" * Deletes a customer identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"public class DeleteCustomerCommand extends Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"    public static final String COMMAND_WORD \u003d \"deletec\";","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"            + \": Deletes the customer identified by the index number used in the displayed customer list.\\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"    public static final String MESSAGE_DELETE_CUSTOMER_SUCCESS \u003d \"Deleted Customer: %1$s\";","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"    public DeleteCustomerCommand(Index targetIndex) {","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"        List\u003cCustomer\u003e lastShownList \u003d model.getFilteredCustomerList();","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"        Customer customerToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"        model.deleteCustomer(customerToDelete);","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CUSTOMER_SUCCESS, customerToDelete));","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"                || (other instanceof DeleteCustomerCommand // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCustomerCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Junyi00":19,"-":34}},{"path":"src/main/java/seedu/loyaltylift/logic/commands/DeleteOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jednghk"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"jednghk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"jednghk"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.commons.core.Messages;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"jednghk"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"jednghk"},"content":" * Deletes an order identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"jednghk"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"jednghk"},"content":"public class DeleteOrderCommand extends Command {","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"jednghk"},"content":"    public static final String COMMAND_WORD \u003d \"deleteo\";","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"jednghk"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"jednghk"},"content":"            + \": Deletes the order identified by the index number used in the displayed order list.\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"jednghk"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"jednghk"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"jednghk"},"content":"    public static final String MESSAGE_DELETE_ORDER_SUCCESS \u003d \"Deleted Order: %1$s\";","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"jednghk"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"jednghk"},"content":"    public DeleteOrderCommand(Index targetIndex) {","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"jednghk"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"jednghk"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"jednghk"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"jednghk"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"jednghk"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"jednghk"},"content":"        List\u003cOrder\u003e lastShownList \u003d model.getFilteredOrderList();","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"jednghk"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"jednghk"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"jednghk"},"content":"        Order orderToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"jednghk"},"content":"        model.deleteOrder(orderToDelete);","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"jednghk"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_ORDER_SUCCESS, orderToDelete));","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"jednghk"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"jednghk"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"jednghk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"jednghk"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"jednghk"},"content":"                || (other instanceof DeleteOrderCommand // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"jednghk"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteOrderCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"jednghk"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"jednghk"},"content":"}","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"jednghk":54}},{"path":"src/main/java/seedu/loyaltylift/logic/commands/EditCustomerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.Messages;","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.util.CollectionUtil;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.attribute.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.attribute.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Note;","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.CustomerType;","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Email;","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.Marked;","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Phone;","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.Points;","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.tag.Tag;","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":" * Edits the details of an existing customer in the address book.","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"public class EditCustomerCommand extends Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"    public static final String COMMAND_WORD \u003d \"editc\";","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the customer identified \"","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"            + \"by the index number used in the displayed customer list. \"","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"    public static final String MESSAGE_EDIT_CUSTOMER_SUCCESS \u003d \"Edited Customer: \\n%1$s\";","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"    public static final String MESSAGE_DUPLICATE_CUSTOMER \u003d \"This customer already exists in the address book.\";","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"    private final EditCustomerDescriptor editCustomerDescriptor;","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"     * @param index of the customer in the filtered customer list to edit","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"Junyi00"},"content":"     * @param editCustomerDescriptor details to edit the customer with","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":"    public EditCustomerCommand(Index index, EditCustomerDescriptor editCustomerDescriptor) {","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"Junyi00"},"content":"        requireNonNull(editCustomerDescriptor);","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"Junyi00"},"content":"        this.editCustomerDescriptor \u003d new EditCustomerDescriptor(editCustomerDescriptor);","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"Junyi00"},"content":"        List\u003cCustomer\u003e lastShownList \u003d model.getFilteredCustomerList();","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"Junyi00"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"Junyi00"},"content":"        Customer customerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"Junyi00"},"content":"        Customer editedCustomer \u003d createEditedCustomer(customerToEdit, editCustomerDescriptor);","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"Junyi00"},"content":"        if (!customerToEdit.isSameCustomer(editedCustomer) \u0026\u0026 model.hasCustomer(editedCustomer)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"Junyi00"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"Junyi00"},"content":"        model.setCustomer(customerToEdit, editedCustomer);","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"Junyi00"},"content":"        model.updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"Junyi00"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_CUSTOMER_SUCCESS, editedCustomer));","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"Junyi00"},"content":"     * Creates and returns a {@code Customer} with the details of {@code customerToEdit}","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"Junyi00"},"content":"     * edited with {@code editCustomerDescriptor}.","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"Junyi00"},"content":"    private static Customer createEditedCustomer(","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"Junyi00"},"content":"            Customer customerToEdit, EditCustomerDescriptor editCustomerDescriptor) {","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"Junyi00"},"content":"        assert customerToEdit !\u003d null;","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"Junyi00"},"content":"        Name updatedName \u003d editCustomerDescriptor.getName().orElse(customerToEdit.getName());","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"Junyi00"},"content":"        Phone updatedPhone \u003d editCustomerDescriptor.getPhone().orElse(customerToEdit.getPhone());","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"Junyi00"},"content":"        Email updatedEmail \u003d editCustomerDescriptor.getEmail().orElse(customerToEdit.getEmail());","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"Junyi00"},"content":"        Address updatedAddress \u003d editCustomerDescriptor.getAddress().orElse(customerToEdit.getAddress());","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"Junyi00"},"content":"        Set\u003cTag\u003e updatedTags \u003d editCustomerDescriptor.getTags().orElse(customerToEdit.getTags());","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"Junyi00"},"content":"        CustomerType updatedCustomerType \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":107,"author":{"gitId":"Junyi00"},"content":"                editCustomerDescriptor.getCustomerType().orElse(customerToEdit.getCustomerType());","lastModifiedDate":"2023-03-07"},{"lineNumber":108,"author":{"gitId":"CloudHill"},"content":"        Points points \u003d customerToEdit.getPoints();","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"CloudHill"},"content":"        Marked marked \u003d customerToEdit.getMarked();","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"CloudHill"},"content":"        Note note \u003d customerToEdit.getNote();","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"CloudHill"},"content":"        return new Customer(updatedCustomerType, updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags,","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"CloudHill"},"content":"                points, marked, note);","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"Junyi00"},"content":"        if (!(other instanceof EditCustomerCommand)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"Junyi00"},"content":"        EditCustomerCommand e \u003d (EditCustomerCommand) other;","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":131,"author":{"gitId":"Junyi00"},"content":"                \u0026\u0026 editCustomerDescriptor.equals(e.editCustomerDescriptor);","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"Junyi00"},"content":"     * Stores the details to edit the customer with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"Junyi00"},"content":"     * corresponding field value of the customer.","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"Junyi00"},"content":"    public static class EditCustomerDescriptor {","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"Junyi00"},"content":"        private CustomerType customerType;","lastModifiedDate":"2023-03-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"Junyi00"},"content":"        public EditCustomerDescriptor() {}","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"Junyi00"},"content":"        public EditCustomerDescriptor(EditCustomerDescriptor toCopy) {","lastModifiedDate":"2023-03-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":158,"author":{"gitId":"Junyi00"},"content":"            setCustomerType(toCopy.customerType);","lastModifiedDate":"2023-03-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"Junyi00"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags, customerType);","lastModifiedDate":"2023-03-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"Junyi00"},"content":"        public void setCustomerType(CustomerType customerType) {","lastModifiedDate":"2023-03-07"},{"lineNumber":218,"author":{"gitId":"Junyi00"},"content":"            this.customerType \u003d customerType;","lastModifiedDate":"2023-03-07"},{"lineNumber":219,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":220,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":221,"author":{"gitId":"Junyi00"},"content":"        public Optional\u003cCustomerType\u003e getCustomerType() {","lastModifiedDate":"2023-03-07"},{"lineNumber":222,"author":{"gitId":"Junyi00"},"content":"            return Optional.ofNullable(customerType);","lastModifiedDate":"2023-03-07"},{"lineNumber":223,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":224,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"Junyi00"},"content":"            if (!(other instanceof EditCustomerDescriptor)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"Junyi00"},"content":"            EditCustomerDescriptor e \u003d (EditCustomerDescriptor) other;","lastModifiedDate":"2023-03-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":244,"author":{"gitId":"Junyi00"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2023-03-07"},{"lineNumber":245,"author":{"gitId":"Junyi00"},"content":"                    \u0026\u0026 getCustomerType().equals(e.getCustomerType());","lastModifiedDate":"2023-03-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Junyi00":69,"CloudHill":8,"jednghk":7,"-":164}},{"path":"src/main/java/seedu/loyaltylift/logic/commands/EditOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jednghk"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"jednghk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"jednghk"},"content":"import java.util.List;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"jednghk"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.commons.core.Messages;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.attribute.Address;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.attribute.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Note;","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.order.CreatedDate;","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.order.Quantity;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.order.Status;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"jednghk"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"jednghk"},"content":" * Edits the details of an existing order in the address book.","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"jednghk"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"jednghk"},"content":"public class EditOrderCommand extends Command {","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"jednghk"},"content":"    public static final String COMMAND_WORD \u003d \"edito\";","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"jednghk"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the order identified \"","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"jednghk"},"content":"            + \"by the index number used in the displayed order list. \"","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"jednghk"},"content":"            + \"Existing values will be overwritten by the input values. \"","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"jednghk"},"content":"            + \"Note, if you\u0027d like to edit the status, use the advo and revo commands. \\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"jednghk"},"content":"            + \"Parameters: ORDER_INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"jednghk"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"jednghk"},"content":"            + \"[\" + PREFIX_QUANTITY + \"QUANTITY] \"","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"jednghk"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"jednghk"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"jednghk"},"content":"            + PREFIX_NAME + \"Signature Fudgy Brownies \"","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"jednghk"},"content":"            + PREFIX_QUANTITY + \"4 \"","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"jednghk"},"content":"            + PREFIX_ADDRESS + \"5 Bishan Road\";","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"jednghk"},"content":"    public static final String MESSAGE_EDIT_ORDER_SUCCESS \u003d \"Edited Order: \\n%1$s\";","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"jednghk"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"jednghk"},"content":"    private final Index index;","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"jednghk"},"content":"    private final EditOrderDescriptor editOrderDescriptor;","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"jednghk"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"jednghk"},"content":"     * @param index of the order in the filtered order list to edit","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"jednghk"},"content":"     * @param editOrderDescriptor details to edit the order with","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"jednghk"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"jednghk"},"content":"    public EditOrderCommand(Index index, EditOrderDescriptor editOrderDescriptor) {","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"jednghk"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"jednghk"},"content":"        requireNonNull(editOrderDescriptor);","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"jednghk"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"jednghk"},"content":"        this.editOrderDescriptor \u003d new EditOrderDescriptor(editOrderDescriptor);","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"jednghk"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"jednghk"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"jednghk"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"jednghk"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"jednghk"},"content":"        List\u003cOrder\u003e lastShownList \u003d model.getFilteredOrderList();","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"jednghk"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"jednghk"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"jednghk"},"content":"        Order orderToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"jednghk"},"content":"        Order editedOrder \u003d createEditedOrder(orderToEdit, editOrderDescriptor);","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"jednghk"},"content":"        model.setOrder(orderToEdit, editedOrder);","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"jednghk"},"content":"        model.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"jednghk"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_ORDER_SUCCESS, editedOrder));","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"jednghk"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"jednghk"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"jednghk"},"content":"     * Creates and returns a {@code Order} with the details of {@code orderToEdit}","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"jednghk"},"content":"     * edited with {@code editOrderDescriptor}.","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"jednghk"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"jednghk"},"content":"    private static Order createEditedOrder(","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"jednghk"},"content":"            Order orderToEdit, EditOrderDescriptor editOrderDescriptor) {","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"jednghk"},"content":"        assert orderToEdit !\u003d null;","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"jednghk"},"content":"        Customer currentCustomer \u003d orderToEdit.getCustomer();","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"jednghk"},"content":"        Name updatedName \u003d editOrderDescriptor.getName().orElse(orderToEdit.getName());","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"jednghk"},"content":"        Quantity updatedQuantity \u003d editOrderDescriptor.getQuantity().orElse(orderToEdit.getQuantity());","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"jednghk"},"content":"        Address updatedAddress \u003d editOrderDescriptor.getAddress().orElse(orderToEdit.getAddress());","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"CloudHill"},"content":"        Status currentStatus \u003d orderToEdit.getStatus();","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"jednghk"},"content":"        CreatedDate createdDate \u003d orderToEdit.getCreatedDate();","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"CloudHill"},"content":"        Note currentNote \u003d orderToEdit.getNote();","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"CloudHill"},"content":"        return new Order(currentCustomer, updatedName, updatedQuantity, updatedAddress,","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"CloudHill"},"content":"                currentStatus, createdDate, currentNote);","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"jednghk"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"jednghk"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"jednghk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"jednghk"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"jednghk"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"jednghk"},"content":"            return true;","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"jednghk"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"jednghk"},"content":"        if (!(other instanceof EditOrderCommand)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":110,"author":{"gitId":"jednghk"},"content":"            return false;","lastModifiedDate":"2023-03-16"},{"lineNumber":111,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":113,"author":{"gitId":"jednghk"},"content":"        // state check","lastModifiedDate":"2023-03-16"},{"lineNumber":114,"author":{"gitId":"jednghk"},"content":"        EditOrderCommand e \u003d (EditOrderCommand) other;","lastModifiedDate":"2023-03-16"},{"lineNumber":115,"author":{"gitId":"jednghk"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-16"},{"lineNumber":116,"author":{"gitId":"jednghk"},"content":"                \u0026\u0026 editOrderDescriptor.equals(e.editOrderDescriptor);","lastModifiedDate":"2023-03-16"},{"lineNumber":117,"author":{"gitId":"jednghk"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":118,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":119,"author":{"gitId":"jednghk"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":120,"author":{"gitId":"jednghk"},"content":"     * Stores the details to edit the order with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"jednghk"},"content":"     * corresponding field value of the order.","lastModifiedDate":"2023-03-16"},{"lineNumber":122,"author":{"gitId":"jednghk"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":123,"author":{"gitId":"jednghk"},"content":"    public static class EditOrderDescriptor {","lastModifiedDate":"2023-03-16"},{"lineNumber":124,"author":{"gitId":"jednghk"},"content":"        private Name name;","lastModifiedDate":"2023-03-16"},{"lineNumber":125,"author":{"gitId":"jednghk"},"content":"        private Quantity quantity;","lastModifiedDate":"2023-03-16"},{"lineNumber":126,"author":{"gitId":"jednghk"},"content":"        private Address address;","lastModifiedDate":"2023-03-16"},{"lineNumber":127,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":128,"author":{"gitId":"jednghk"},"content":"        public EditOrderDescriptor() {}","lastModifiedDate":"2023-03-16"},{"lineNumber":129,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":130,"author":{"gitId":"jednghk"},"content":"        /**","lastModifiedDate":"2023-03-21"},{"lineNumber":131,"author":{"gitId":"jednghk"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-21"},{"lineNumber":132,"author":{"gitId":"jednghk"},"content":"         */","lastModifiedDate":"2023-03-21"},{"lineNumber":133,"author":{"gitId":"jednghk"},"content":"        public EditOrderDescriptor(EditOrderDescriptor toCopy) {","lastModifiedDate":"2023-03-16"},{"lineNumber":134,"author":{"gitId":"jednghk"},"content":"            setName(toCopy.name);","lastModifiedDate":"2023-03-16"},{"lineNumber":135,"author":{"gitId":"jednghk"},"content":"            setQuantity(toCopy.quantity);","lastModifiedDate":"2023-03-16"},{"lineNumber":136,"author":{"gitId":"jednghk"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2023-03-16"},{"lineNumber":137,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":138,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":139,"author":{"gitId":"jednghk"},"content":"        /**","lastModifiedDate":"2023-03-16"},{"lineNumber":140,"author":{"gitId":"jednghk"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-16"},{"lineNumber":141,"author":{"gitId":"jednghk"},"content":"         */","lastModifiedDate":"2023-03-16"},{"lineNumber":142,"author":{"gitId":"jednghk"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-16"},{"lineNumber":143,"author":{"gitId":"jednghk"},"content":"            return CollectionUtil.isAnyNonNull(name, quantity, address);","lastModifiedDate":"2023-03-16"},{"lineNumber":144,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":145,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":146,"author":{"gitId":"jednghk"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-03-16"},{"lineNumber":147,"author":{"gitId":"jednghk"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-03-16"},{"lineNumber":148,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":149,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":150,"author":{"gitId":"jednghk"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2023-03-16"},{"lineNumber":151,"author":{"gitId":"jednghk"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2023-03-16"},{"lineNumber":152,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":153,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":154,"author":{"gitId":"jednghk"},"content":"        public void setQuantity(Quantity quantity) {","lastModifiedDate":"2023-03-16"},{"lineNumber":155,"author":{"gitId":"jednghk"},"content":"            this.quantity \u003d quantity;","lastModifiedDate":"2023-03-16"},{"lineNumber":156,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":157,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":158,"author":{"gitId":"jednghk"},"content":"        public Optional\u003cQuantity\u003e getQuantity() {","lastModifiedDate":"2023-03-16"},{"lineNumber":159,"author":{"gitId":"jednghk"},"content":"            return Optional.ofNullable(quantity);","lastModifiedDate":"2023-03-16"},{"lineNumber":160,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":161,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":162,"author":{"gitId":"jednghk"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2023-03-16"},{"lineNumber":163,"author":{"gitId":"jednghk"},"content":"            this.address \u003d address;","lastModifiedDate":"2023-03-16"},{"lineNumber":164,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":165,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":166,"author":{"gitId":"jednghk"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2023-03-16"},{"lineNumber":167,"author":{"gitId":"jednghk"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2023-03-16"},{"lineNumber":168,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":169,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":170,"author":{"gitId":"jednghk"},"content":"        @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":171,"author":{"gitId":"jednghk"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":172,"author":{"gitId":"jednghk"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-16"},{"lineNumber":173,"author":{"gitId":"jednghk"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-16"},{"lineNumber":174,"author":{"gitId":"jednghk"},"content":"                return true;","lastModifiedDate":"2023-03-16"},{"lineNumber":175,"author":{"gitId":"jednghk"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":176,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":177,"author":{"gitId":"jednghk"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-16"},{"lineNumber":178,"author":{"gitId":"jednghk"},"content":"            if (!(other instanceof EditOrderDescriptor)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":179,"author":{"gitId":"jednghk"},"content":"                return false;","lastModifiedDate":"2023-03-16"},{"lineNumber":180,"author":{"gitId":"jednghk"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":181,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":182,"author":{"gitId":"jednghk"},"content":"            // state check","lastModifiedDate":"2023-03-16"},{"lineNumber":183,"author":{"gitId":"jednghk"},"content":"            EditOrderDescriptor e \u003d (EditOrderDescriptor) other;","lastModifiedDate":"2023-03-16"},{"lineNumber":184,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":185,"author":{"gitId":"jednghk"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2023-03-16"},{"lineNumber":186,"author":{"gitId":"jednghk"},"content":"                    \u0026\u0026 getName().equals(e.getName())","lastModifiedDate":"2023-03-16"},{"lineNumber":187,"author":{"gitId":"jednghk"},"content":"                    \u0026\u0026 getQuantity().equals(e.getQuantity())","lastModifiedDate":"2023-03-16"},{"lineNumber":188,"author":{"gitId":"jednghk"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress());","lastModifiedDate":"2023-03-16"},{"lineNumber":189,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":190,"author":{"gitId":"jednghk"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":191,"author":{"gitId":"jednghk"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"CloudHill":5,"jednghk":186}},{"path":"src/main/java/seedu/loyaltylift/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, null, null);","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Junyi00":3,"-":16}},{"path":"src/main/java/seedu/loyaltylift/logic/commands/FindCustomerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.Messages;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.CustomerNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":" * Finds and lists all customers in address book whose name contains any of the argument keywords.","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"public class FindCustomerCommand extends Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"    public static final String COMMAND_WORD \u003d \"findc\";","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all customers whose names contain any of \"","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"    private final CustomerNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"    public FindCustomerCommand(CustomerNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"        model.sortFilteredCustomerList(Customer.SORT_NAME);","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"        model.updateFilteredCustomerList(predicate);","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"                String.format(Messages.MESSAGE_CUSTOMERS_LISTED_OVERVIEW, model.getFilteredCustomerList().size()));","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"                || (other instanceof FindCustomerCommand // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"                \u0026\u0026 predicate.equals(((FindCustomerCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Junyi00":11,"CloudHill":5,"-":28}},{"path":"src/main/java/seedu/loyaltylift/logic/commands/FindOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.commons.core.Messages;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.OrderNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":" * Finds and lists all orders in address book whose name contains any of the argument keywords.","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"public class FindOrderCommand extends Command {","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"    public static final String COMMAND_WORD \u003d \"findo\";","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all orders whose names contain any of \"","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"    private final OrderNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"    public FindOrderCommand(OrderNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"        model.sortFilteredOrderList(Order.SORT_NAME);","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"        model.updateFilteredOrderList(predicate);","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"                String.format(Messages.MESSAGE_ORDERS_LISTED_OVERVIEW, model.getFilteredOrderList().size()));","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"                || (other instanceof FindOrderCommand // instanceof handles nulls","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"                \u0026\u0026 predicate.equals(((FindOrderCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"CloudHill":44}},{"path":"src/main/java/seedu/loyaltylift/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, null, null);","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Junyi00":3,"-":18}},{"path":"src/main/java/seedu/loyaltylift/logic/commands/ListCustomerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_FILTER;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_SORT;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":" * Lists all customers in the address book to the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"public class ListCustomerCommand extends Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"    public static final String COMMAND_WORD \u003d \"listc\";","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all customers with an optional sort option \"","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"            + \"(name by default) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"            + \"Parameters: [\" + PREFIX_SORT + \"{name|points}] + [\" + PREFIX_FILTER + \"STATUS\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"            + \"Example: \" + COMMAND_WORD + \" s/points f/marked\";","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all customers\";","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"    public static final String MESSAGE_INVALID_SORT \u003d \"Unrecognized sort option\";","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"    public static final String MESSAGE_INVALID_FILTER \u003d \"Unrecognized filter option\";","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"    private final Comparator\u003cCustomer\u003e comparator;","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"    private final Predicate\u003cCustomer\u003e predicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"     * Constructs a default {@code ListCustomerCommand}","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"    public ListCustomerCommand() {","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"        this(Customer.SORT_NAME, PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"     * Constructs a {@code ListCustomerCommand} with the given {@code comparator}","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"JavonTeo"},"content":"    public ListCustomerCommand(Comparator\u003cCustomer\u003e comparator, Predicate\u003cCustomer\u003e predicate) {","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"        this.comparator \u003d comparator;","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"JavonTeo"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"        model.sortFilteredCustomerList(comparator);","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"JavonTeo"},"content":"        model.updateFilteredCustomerList(predicate);","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"CloudHill"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"CloudHill"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"CloudHill"},"content":"                || (other instanceof ListCustomerCommand // instanceof handles nulls","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"JavonTeo"},"content":"                \u0026\u0026 comparator.equals(((ListCustomerCommand) other).comparator)","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"JavonTeo"},"content":"                \u0026\u0026 predicate.equals(((ListCustomerCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Junyi00":7,"JavonTeo":12,"CloudHill":28,"-":16}},{"path":"src/main/java/seedu/loyaltylift/logic/commands/ListOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jednghk"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"jednghk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_FILTER;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_SORT;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"jednghk"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"jednghk"},"content":" * Lists all orders in LoyaltyLift to the user.","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"jednghk"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"jednghk"},"content":"public class ListOrderCommand extends Command {","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"jednghk"},"content":"    public static final String COMMAND_WORD \u003d \"listo\";","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all orders with an optional sort option \"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"        + \"(created date by default) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"        + \"Parameters: [\" + PREFIX_SORT + \"{created|name|status}] + [\" + PREFIX_FILTER + \"STATUS]\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"        + \"Example: \" + COMMAND_WORD + \" s/name f/pending\";","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"jednghk"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all orders\";","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"    public static final String MESSAGE_INVALID_SORT \u003d \"Unrecognized sort option\";","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"    public static final String MESSAGE_INVALID_FILTER \u003d \"Unrecognized filter option\";","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"    private final Comparator\u003cOrder\u003e comparator;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"    private final Predicate\u003cOrder\u003e predicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"     * Constructs a default {@code ListOrderCommand}","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"    public ListOrderCommand() {","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"        this(Order.SORT_CREATED_DATE, PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"     * Constructs a {@code ListOrderCommand} with the given {@code comparator} and {@code predicate}","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"    public ListOrderCommand(Comparator\u003cOrder\u003e comparator, Predicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"        this.comparator \u003d comparator;","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"jednghk"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"jednghk"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"jednghk"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"        model.sortFilteredOrderList(comparator);","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"        model.updateFilteredOrderList(predicate);","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"jednghk"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"jednghk"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"CloudHill"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"CloudHill"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"CloudHill"},"content":"                || (other instanceof ListOrderCommand // instanceof handles nulls","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"CloudHill"},"content":"                \u0026\u0026 comparator.equals(((ListOrderCommand) other).comparator)","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"CloudHill"},"content":"                \u0026\u0026 predicate.equals(((ListOrderCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"jednghk"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"CloudHill":40,"jednghk":23}},{"path":"src/main/java/seedu/loyaltylift/logic/commands/MarkCustomerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"import static seedu.loyaltylift.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"import java.util.List;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.attribute.Address;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.attribute.Name;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Note;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.customer.CustomerType;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.customer.Email;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.customer.Marked;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.customer.Phone;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.customer.Points;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.tag.Tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":" * Bookmarks an existing customer in the address book.","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"public class MarkCustomerCommand extends Command {","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"    public static final String COMMAND_WORD \u003d \"markc\";","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"JavonTeo"},"content":"            + \": Bookmarks the customer identified by the index number used in the displayed customer list.\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"JavonTeo"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"    public static final String MESSAGE_MARK_CUSTOMER_SUCCESS \u003d \"Bookmarked Customer: %1$s\";","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"JavonTeo"},"content":"    private final Index index;","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"JavonTeo"},"content":"     * @param index of the customer in the filtered customer list to bookmark.","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"JavonTeo"},"content":"    public MarkCustomerCommand(Index index) {","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"JavonTeo"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"JavonTeo"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"JavonTeo"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"JavonTeo"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"JavonTeo"},"content":"        List\u003cCustomer\u003e lastShownList \u003d model.getFilteredCustomerList();","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"JavonTeo"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"JavonTeo"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"JavonTeo"},"content":"        Customer customerToMark \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"JavonTeo"},"content":"        Customer markedCustomer \u003d createMarkedCustomer(customerToMark);","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"JavonTeo"},"content":"        model.setCustomer(customerToMark, markedCustomer);","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"JavonTeo"},"content":"        model.updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"JavonTeo"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_CUSTOMER_SUCCESS, markedCustomer));","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"JavonTeo"},"content":"     * Creates and returns a {@code Customer} with the same details as {@code customerToMark}","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"JavonTeo"},"content":"     * but with the boolean {@code marked} set to true.","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"JavonTeo"},"content":"    private static Customer createMarkedCustomer(Customer customerToMark) {","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"JavonTeo"},"content":"        assert customerToMark !\u003d null;","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"JavonTeo"},"content":"        CustomerType customerType \u003d customerToMark.getCustomerType();","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"JavonTeo"},"content":"        Name name \u003d customerToMark.getName();","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"JavonTeo"},"content":"        Phone phone \u003d customerToMark.getPhone();","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"JavonTeo"},"content":"        Email email \u003d customerToMark.getEmail();","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"JavonTeo"},"content":"        Address address \u003d customerToMark.getAddress();","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"JavonTeo"},"content":"        Set\u003cTag\u003e tags \u003d customerToMark.getTags();","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"JavonTeo"},"content":"        Points points \u003d customerToMark.getPoints();","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"CloudHill"},"content":"        Note note \u003d customerToMark.getNote();","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"JavonTeo"},"content":"        Marked marked \u003d new Marked(true);","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"CloudHill"},"content":"        return new Customer(customerType, name, phone, email, address, tags, points, marked, note);","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"JavonTeo"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"JavonTeo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"JavonTeo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"JavonTeo"},"content":"                || (other instanceof MarkCustomerCommand // instanceof handles nulls","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"JavonTeo"},"content":"                \u0026\u0026 index.equals(((MarkCustomerCommand) other).index)); // state check","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"JavonTeo":86,"CloudHill":3}},{"path":"src/main/java/seedu/loyaltylift/logic/commands/SetCustomerNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import java.util.List;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.commons.core.Messages;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Address;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Name;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Note;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.CustomerType;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.Email;","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.Marked;","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.Phone;","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.Points;","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":" * Overwrites the note of an existing customer in the address book.","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"public class SetCustomerNoteCommand extends Command {","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"    public static final String COMMAND_WORD \u003d \"setnotec\";","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Overwrites the note of the customer identified \"","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"            + \"by the index number used in the displayed customer list. \"","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"            + \"Existing note will be overwritten by the input.\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"            + PREFIX_NOTE + \"NOTE\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"            + PREFIX_NOTE + \"Example note\";","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"    public static final String MESSAGE_SET_NOTE_SUCCESS \u003d \"Set note for customer: \\n%1$s\";","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"    private final Index index;","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"    private final Note note;","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"     * @param index of the customer in the filtered customer list to edit","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"     * @param note of the customer to be set","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"    public SetCustomerNoteCommand(Index index, Note note) {","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(note);","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"CloudHill"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"CloudHill"},"content":"        this.note \u003d note;","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"CloudHill"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"CloudHill"},"content":"        List\u003cCustomer\u003e lastShownList \u003d model.getFilteredCustomerList();","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"CloudHill"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"CloudHill"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"CloudHill"},"content":"        Customer customerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"CloudHill"},"content":"        Customer editedCustomer \u003d createEditedCustomer(customerToEdit, this.note);","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"CloudHill"},"content":"        model.setCustomer(customerToEdit, editedCustomer);","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"CloudHill"},"content":"        model.updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"CloudHill"},"content":"        return new CommandResult(String.format(MESSAGE_SET_NOTE_SUCCESS, editedCustomer));","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"CloudHill"},"content":"     * Creates and returns a {@code Customer} with the details of {@code customerToEdit}","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"CloudHill"},"content":"     * with the edited {@code note}.","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"CloudHill"},"content":"    private static Customer createEditedCustomer(Customer customerToEdit, Note note) {","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"CloudHill"},"content":"        assert customerToEdit !\u003d null;","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"CloudHill"},"content":"        Name name \u003d customerToEdit.getName();","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"CloudHill"},"content":"        Phone phone \u003d customerToEdit.getPhone();","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"CloudHill"},"content":"        Email email \u003d customerToEdit.getEmail();","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"CloudHill"},"content":"        Address address \u003d customerToEdit.getAddress();","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"CloudHill"},"content":"        Set\u003cTag\u003e tags \u003d customerToEdit.getTags();","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"CloudHill"},"content":"        CustomerType customerType \u003d customerToEdit.getCustomerType();","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"CloudHill"},"content":"        Points points \u003d customerToEdit.getPoints();","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"CloudHill"},"content":"        Marked marked \u003d customerToEdit.getMarked();","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"CloudHill"},"content":"        return new Customer(customerType, name, phone, email, address, tags, points, marked, note);","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"CloudHill"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"CloudHill"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"CloudHill"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"CloudHill"},"content":"            return true;","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"CloudHill"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"CloudHill"},"content":"        if (!(other instanceof SetCustomerNoteCommand)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"CloudHill"},"content":"            return false;","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"CloudHill"},"content":"        // state check","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"CloudHill"},"content":"        SetCustomerNoteCommand e \u003d (SetCustomerNoteCommand) other;","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"CloudHill"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"CloudHill"},"content":"                \u0026\u0026 note.equals(e.note);","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"CloudHill":110}},{"path":"src/main/java/seedu/loyaltylift/logic/commands/SetOrderNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import java.util.List;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.commons.core.Messages;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Address;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Name;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Note;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.CreatedDate;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Quantity;","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Status;","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":" * Overwrites the note of an existing order in the address book.","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"public class SetOrderNoteCommand extends Command {","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"    public static final String COMMAND_WORD \u003d \"setnoteo\";","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Overwrites the note of the order identified \"","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"            + \"by the index number used in the displayed order list. \"","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"            + \"Existing note will be overwritten by the input.\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"            + PREFIX_NOTE + \"NOTE\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"            + PREFIX_NOTE + \"Example note\";","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"    public static final String MESSAGE_SET_NOTE_SUCCESS \u003d \"Set note for order: \\n%1$s\";","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"    private final Index index;","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"    private final Note note;","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"     * @param index of the order in the filtered order list to edit","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"     * @param note of the order to be set","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"    public SetOrderNoteCommand(Index index, Note note) {","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(note);","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"CloudHill"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"        this.note \u003d note;","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"CloudHill"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"CloudHill"},"content":"        List\u003cOrder\u003e lastShownList \u003d model.getFilteredOrderList();","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"CloudHill"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"CloudHill"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"CloudHill"},"content":"        Order orderToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"CloudHill"},"content":"        Order editedOrder \u003d createEditedOrder(orderToEdit, this.note);","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"CloudHill"},"content":"        model.setOrder(orderToEdit, editedOrder);","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"CloudHill"},"content":"        model.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"CloudHill"},"content":"        return new CommandResult(String.format(MESSAGE_SET_NOTE_SUCCESS, editedOrder));","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"CloudHill"},"content":"     * Creates and returns a {@code Order} with the details of {@code orderToEdit}","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"CloudHill"},"content":"     * with the edited {@code note}.","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"CloudHill"},"content":"    private static Order createEditedOrder(Order orderToEdit, Note note) {","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"CloudHill"},"content":"        assert orderToEdit !\u003d null;","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"CloudHill"},"content":"        Customer customer \u003d orderToEdit.getCustomer();","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"CloudHill"},"content":"        Name name \u003d orderToEdit.getName();","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"CloudHill"},"content":"        Quantity quantity \u003d orderToEdit.getQuantity();","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"CloudHill"},"content":"        Address address \u003d orderToEdit.getAddress();","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"CloudHill"},"content":"        Status status \u003d orderToEdit.getStatus();","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"CloudHill"},"content":"        CreatedDate createdDate \u003d orderToEdit.getCreatedDate();","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"CloudHill"},"content":"        return new Order(customer, name, quantity, address, status, createdDate, note);","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"CloudHill"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"CloudHill"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"CloudHill"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"CloudHill"},"content":"            return true;","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"CloudHill"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"CloudHill"},"content":"        if (!(other instanceof SetOrderNoteCommand)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"CloudHill"},"content":"            return false;","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"CloudHill"},"content":"        // state check","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"CloudHill"},"content":"        SetOrderNoteCommand e \u003d (SetOrderNoteCommand) other;","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"CloudHill"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"CloudHill"},"content":"                \u0026\u0026 note.equals(e.note);","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"CloudHill":105}},{"path":"src/main/java/seedu/loyaltylift/logic/commands/SetPointsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import static seedu.loyaltylift.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import static seedu.loyaltylift.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.attribute.Address;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.attribute.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Note;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.model.customer.CustomerType;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.model.customer.Email;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.customer.Marked;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.model.customer.Phone;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.model.customer.Points;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.model.tag.Tag;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":" * Sets the reward points of a customer","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"public class SetPointsCommand extends Command {","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"    public static final String COMMAND_WORD \u003d \"setpoints\";","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"            + \": Sets points of the customer identified by the index number used in the displayed customer list. \\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"            + \"INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"            + PREFIX_POINTS + \"[POINTS]\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"            + \" 1 \"","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"            + PREFIX_POINTS","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"            + \"100\";","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$s, Points: %2$s\";","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"    public static final String MESSAGE_SET_POINTS_SUCCESS \u003d \"Set points for Customer: %1$s\";","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"Infrix"},"content":"    private final Index index;","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"Infrix"},"content":"    private final Points points;","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"Infrix"},"content":"     * @param index of the customer in the filtered person list to set points","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"Infrix"},"content":"     * @param points of the customer to be set","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"Infrix"},"content":"    public SetPointsCommand(Index index, Points points) {","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"Infrix"},"content":"        requireAllNonNull(index, points);","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"Infrix"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"Infrix"},"content":"        this.points \u003d points;","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"Infrix"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"Infrix"},"content":"        List\u003cCustomer\u003e lastShownList \u003d model.getFilteredCustomerList();","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"Infrix"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"Infrix"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"Infrix"},"content":"        Customer customerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"Infrix"},"content":"        Customer editedCustomerWithPoints \u003d createEditedCustomer(customerToEdit);","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"Infrix"},"content":"        model.setCustomer(customerToEdit, editedCustomerWithPoints);","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"Infrix"},"content":"        model.updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"Infrix"},"content":"        return new CommandResult(generateSuccessMessage(editedCustomerWithPoints));","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"Infrix"},"content":"     * Creates and returns a {@code Customer} with the details of {@code customerToEdit}","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"Infrix"},"content":"    private Customer createEditedCustomer(Customer customerToEdit) {","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"Infrix"},"content":"        assert customerToEdit !\u003d null;","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"Infrix"},"content":"        CustomerType customerType \u003d customerToEdit.getCustomerType();","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"Infrix"},"content":"        Name name \u003d customerToEdit.getName();","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"Infrix"},"content":"        Phone phone \u003d customerToEdit.getPhone();","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"Infrix"},"content":"        Email email \u003d customerToEdit.getEmail();","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"Infrix"},"content":"        Address address \u003d customerToEdit.getAddress();","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"Infrix"},"content":"        Set\u003cTag\u003e tags \u003d customerToEdit.getTags();","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"JavonTeo"},"content":"        Marked marked \u003d customerToEdit.getMarked();","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"CloudHill"},"content":"        Note note \u003d customerToEdit.getNote();","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"CloudHill"},"content":"        return new Customer(customerType, name, phone, email, address, tags, this.points, marked, note);","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"Infrix"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"Infrix"},"content":"     * the points are set","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"Infrix"},"content":"    private String generateSuccessMessage(Customer editedCustomer) {","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"Infrix"},"content":"        String message \u003d MESSAGE_SET_POINTS_SUCCESS;","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"Infrix"},"content":"        return String.format(message, editedCustomer);","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"Infrix"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"Infrix"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"Infrix"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"Infrix"},"content":"            return true;","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"Infrix"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"Infrix"},"content":"        if (!(other instanceof SetPointsCommand)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"Infrix"},"content":"            return false;","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"Infrix"},"content":"        // state check","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"Infrix"},"content":"        SetPointsCommand e \u003d (SetPointsCommand) other;","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"Infrix"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"Infrix"},"content":"                \u0026\u0026 points.equals(e.points);","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"Junyi00":2,"CloudHill":3,"JavonTeo":2,"Infrix":113}},{"path":"src/main/java/seedu/loyaltylift/logic/commands/UnmarkCustomerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"import static seedu.loyaltylift.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"import java.util.List;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.attribute.Address;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.attribute.Name;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Note;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.customer.CustomerType;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.customer.Email;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.customer.Marked;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.customer.Phone;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.customer.Points;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.tag.Tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":" * Un-bookmarks an existing customer in the address book.","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"public class UnmarkCustomerCommand extends Command {","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"    public static final String COMMAND_WORD \u003d \"unmarkc\";","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"            + \": Un-bookmarks the customer identified by the index number used in the displayed customer list.\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"JavonTeo"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"JavonTeo"},"content":"    public static final String MESSAGE_UNMARK_CUSTOMER_SUCCESS \u003d \"Un-bookmarked Customer: %1$s\";","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"    private final Index index;","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"JavonTeo"},"content":"     * @param index of the customer in the filtered customer list to un-bookmark.","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"JavonTeo"},"content":"    public UnmarkCustomerCommand(Index index) {","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"JavonTeo"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"JavonTeo"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"JavonTeo"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"JavonTeo"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"JavonTeo"},"content":"        List\u003cCustomer\u003e lastShownList \u003d model.getFilteredCustomerList();","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"JavonTeo"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"JavonTeo"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"JavonTeo"},"content":"        Customer customerToUnmark \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"JavonTeo"},"content":"        Customer unmarkedCustomer \u003d createUnmarkedCustomer(customerToUnmark);","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"JavonTeo"},"content":"        model.setCustomer(customerToUnmark, unmarkedCustomer);","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"JavonTeo"},"content":"        model.updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"JavonTeo"},"content":"        return new CommandResult(String.format(MESSAGE_UNMARK_CUSTOMER_SUCCESS, unmarkedCustomer));","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"JavonTeo"},"content":"     * Creates and returns a {@code Customer} with the same details as {@code customerToMark}","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"JavonTeo"},"content":"     * but with the boolean {@code marked} set to false.","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"JavonTeo"},"content":"    private static Customer createUnmarkedCustomer(Customer customerToUnmark) {","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"JavonTeo"},"content":"        assert customerToUnmark !\u003d null;","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"JavonTeo"},"content":"        CustomerType customerType \u003d customerToUnmark.getCustomerType();","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"JavonTeo"},"content":"        Name name \u003d customerToUnmark.getName();","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"JavonTeo"},"content":"        Phone phone \u003d customerToUnmark.getPhone();","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"JavonTeo"},"content":"        Email email \u003d customerToUnmark.getEmail();","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"JavonTeo"},"content":"        Address address \u003d customerToUnmark.getAddress();","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"JavonTeo"},"content":"        Set\u003cTag\u003e tags \u003d customerToUnmark.getTags();","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"JavonTeo"},"content":"        Points points \u003d customerToUnmark.getPoints();","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"CloudHill"},"content":"        Note note \u003d customerToUnmark.getNote();","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"JavonTeo"},"content":"        Marked marked \u003d new Marked(false);","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"CloudHill"},"content":"        return new Customer(customerType, name, phone, email, address, tags, points, marked, note);","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"JavonTeo"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"JavonTeo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"JavonTeo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"JavonTeo"},"content":"                || (other instanceof UnmarkCustomerCommand // instanceof handles nulls","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"JavonTeo"},"content":"                \u0026\u0026 index.equals(((UnmarkCustomerCommand) other).index)); // state check","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"JavonTeo":85,"CloudHill":3}},{"path":"src/main/java/seedu/loyaltylift/logic/commands/ViewCustomerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.Messages;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":" * View a customer identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"public class ViewCustomerCommand extends Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"    public static final String COMMAND_WORD \u003d \"viewc\";","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": View a customer\u0027s information. \\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"    public static final String MESSAGE_VIEW_CUSTOMER_SUCCESS \u003d \"Viewing Customer:\\n %1$s\";","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"    public ViewCustomerCommand(Index targetIndex) {","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"        List\u003cCustomer\u003e lastShownList \u003d model.getFilteredCustomerList();","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"        Customer customerToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"                String.format(MESSAGE_VIEW_CUSTOMER_SUCCESS, customerToDelete),","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"                false,","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"                false,","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"                targetIndex.getZeroBased(),","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"                null);","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"                || (other instanceof ViewCustomerCommand // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"                \u0026\u0026 targetIndex.equals(((ViewCustomerCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Junyi00":56}},{"path":"src/main/java/seedu/loyaltylift/logic/commands/ViewOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.Messages;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":" * View a order identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"public class ViewOrderCommand extends Command {","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"    public static final String COMMAND_WORD \u003d \"viewo\";","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": View an order\u0027s information. \\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"    public static final String MESSAGE_VIEW_ORDER_SUCCESS \u003d \"Viewing Order:\\n %1$s\";","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"    public ViewOrderCommand(Index targetIndex) {","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"        List\u003cOrder\u003e lastShownList \u003d model.getFilteredOrderList();","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"        Order orderToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"                String.format(MESSAGE_VIEW_ORDER_SUCCESS, orderToDelete),","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"                false,","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"                false,","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"                null,","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"                targetIndex.getZeroBased());","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"                || (other instanceof ViewOrderCommand // instanceof handles nulls","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"                \u0026\u0026 targetIndex.equals(((ViewOrderCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Junyi00":56}},{"path":"src/main/java/seedu/loyaltylift/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.commands.exceptions;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Junyi00":1,"-":16}},{"path":"src/main/java/seedu/loyaltylift/logic/parser/AddCustomerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_CUSTOMER_TYPE;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.AddCustomerCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.attribute.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.attribute.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.CustomerType;","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Email;","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Phone;","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.tag.Tag;","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":" * Parses input arguments and creates a new AddCustomerCommand object","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"public class AddCustomerCommandParser implements Parser\u003cAddCustomerCommand\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCustomerCommand","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"     * and returns an AddCustomerCommand object for execution.","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"    public AddCustomerCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"                PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG, PREFIX_CUSTOMER_TYPE);","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCustomerCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"        CustomerType customerType \u003d ParserUtil.parseCustomerType(","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"                argMultimap.getValue(PREFIX_CUSTOMER_TYPE).or(() -\u003e java.util.Optional.of(\"INDIVIDUAL\")).get());","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"        Customer customer \u003d new Customer(customerType, name, phone, email, address, tagList);","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"        return new AddCustomerCommand(customer);","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Junyi00":21,"jednghk":8,"-":34}},{"path":"src/main/java/seedu/loyaltylift/logic/parser/AddOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jednghk"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"jednghk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.logic.commands.AddOrderCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"jednghk"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.logic.commands.AddOrderCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.logic.commands.AddOrderCommand.AddOrderDescriptor;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.attribute.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"jednghk"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"jednghk"},"content":" * Parses input arguments and creates a new AddOrderCommand object","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"jednghk"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"jednghk"},"content":"public class AddOrderCommandParser implements Parser\u003cAddOrderCommand\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"jednghk"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"jednghk"},"content":"     * Parses the given {@code String} of arguments in the context of the AddOrderCommand","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"jednghk"},"content":"     * and returns an AddOrderCommand object for execution.","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"jednghk"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"jednghk"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"jednghk"},"content":"    public AddOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"jednghk"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"jednghk"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME,","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"jednghk"},"content":"                PREFIX_QUANTITY, PREFIX_ADDRESS);","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"jednghk"},"content":"        Index customerIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"jednghk"},"content":"        Name orderName;","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"jednghk"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"jednghk"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"jednghk"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"jednghk"},"content":"        customerIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"jednghk"},"content":"        orderName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"jednghk"},"content":"        AddOrderDescriptor addOrderDescriptor \u003d new AddOrderDescriptor();","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"jednghk"},"content":"        addOrderDescriptor.setName(orderName);","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"jednghk"},"content":"        if (argMultimap.getValue(PREFIX_QUANTITY).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"jednghk"},"content":"            addOrderDescriptor.setQuantity(ParserUtil.parseQuantity(argMultimap.getValue(PREFIX_QUANTITY).get()));","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"jednghk"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"jednghk"},"content":"            addOrderDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"jednghk"},"content":"        return new AddOrderCommand(customerIndex, addOrderDescriptor);","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"jednghk"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"jednghk"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"jednghk"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"jednghk"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"jednghk"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"jednghk"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"jednghk"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"jednghk"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"jednghk"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"jednghk":62}},{"path":"src/main/java/seedu/loyaltylift/logic/parser/AddPointsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.logic.commands.AddPointsCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":" * Parses input arguments and creates a new AddPointsCommand object","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"public class AddPointsCommandParser implements Parser\u003cAddPointsCommand\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPointsCommand","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"     * and returns an AddPointsCommand object for execution.","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"    public AddPointsCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_POINTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_POINTS)","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"                    AddPointsCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"        Integer addPoints \u003d ParserUtil.parseAddPoints((argMultimap.getValue(PREFIX_POINTS).get()));","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"        return new AddPointsCommand(index, addPoints);","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"Infrix":45}},{"path":"src/main/java/seedu/loyaltylift/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.AddCustomerCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.logic.commands.AddOrderCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.logic.commands.AddPointsCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.AppendCustomerNoteCommand;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.AppendOrderNoteCommand;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.ClearCommand;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.Command;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.DeleteCustomerCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.logic.commands.DeleteOrderCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.EditCustomerCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.logic.commands.EditOrderCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.ExitCommand;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.FindCustomerCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.FindOrderCommand;","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.HelpCommand;","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.ListCustomerCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.ListOrderCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.logic.commands.MarkCustomerCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.SetCustomerNoteCommand;","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.SetOrderNoteCommand;","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.logic.commands.SetPointsCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.logic.commands.UnmarkCustomerCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.ViewCustomerCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.ViewOrderCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"        case AddCustomerCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Junyi00"},"content":"            return new AddCustomerCommandParser().parse(arguments);","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":"        case EditCustomerCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Junyi00"},"content":"            return new EditCustomerCommandParser().parse(arguments);","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"Junyi00"},"content":"        case DeleteCustomerCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Junyi00"},"content":"            return new DeleteCustomerCommandParser().parse(arguments);","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"Junyi00"},"content":"        case FindCustomerCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Junyi00"},"content":"            return new FindCustomerCommandParser().parse(arguments);","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"Junyi00"},"content":"        case ListCustomerCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"CloudHill"},"content":"            return new ListCustomerCommandParser().parse(arguments);","lastModifiedDate":"2023-03-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"JavonTeo"},"content":"        case MarkCustomerCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"JavonTeo"},"content":"            return new MarkCustomerCommandParser().parse(arguments);","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"JavonTeo"},"content":"        case UnmarkCustomerCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"JavonTeo"},"content":"            return new UnmarkCustomerCommandParser().parse(arguments);","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"Junyi00"},"content":"        case ViewCustomerCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"Junyi00"},"content":"            return new ViewCustomerCommandParser().parse(arguments);","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"jednghk"},"content":"        case AddOrderCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"jednghk"},"content":"            return new AddOrderCommandParser().parse(arguments);","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"jednghk"},"content":"        case DeleteOrderCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"jednghk"},"content":"            return new DeleteOrderCommandParser().parse(arguments);","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"jednghk"},"content":"        case EditOrderCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"jednghk"},"content":"            return new EditOrderCommandParser().parse(arguments);","lastModifiedDate":"2023-03-17"},{"lineNumber":96,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":103,"author":{"gitId":"Infrix"},"content":"        case SetPointsCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"Infrix"},"content":"            return new SetPointsCommandParser().parse(arguments);","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"Infrix"},"content":"        case AddPointsCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"Infrix"},"content":"            return new AddPointsCommandParser().parse(arguments);","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"CloudHill"},"content":"        case SetCustomerNoteCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"CloudHill"},"content":"            return new SetCustomerNoteCommandParser().parse(arguments);","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"CloudHill"},"content":"        case AppendCustomerNoteCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"CloudHill"},"content":"            return new AppendCustomerNoteCommandParser().parse(arguments);","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"CloudHill"},"content":"        case SetOrderNoteCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"CloudHill"},"content":"            return new SetOrderNoteCommandParser().parse(arguments);","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"CloudHill"},"content":"        case AppendOrderNoteCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"CloudHill"},"content":"            return new AppendOrderNoteCommandParser().parse(arguments);","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"CloudHill"},"content":"        case FindOrderCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-25"},{"lineNumber":122,"author":{"gitId":"CloudHill"},"content":"            return new FindOrderCommandParser().parse(arguments);","lastModifiedDate":"2023-03-25"},{"lineNumber":123,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":124,"author":{"gitId":"CloudHill"},"content":"        case ListOrderCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"CloudHill"},"content":"            return new ListOrderCommandParser().parse(arguments);","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"Junyi00"},"content":"        case ViewOrderCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"Junyi00"},"content":"            return new ViewOrderCommandParser().parse(arguments);","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Junyi00":30,"CloudHill":25,"JavonTeo":8,"jednghk":12,"Infrix":8,"-":52}},{"path":"src/main/java/seedu/loyaltylift/logic/parser/AppendCustomerNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.AppendCustomerNoteCommand;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":" * Parses input arguments and creates a new AppendCustomerNoteCommand object","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"public class AppendCustomerNoteCommandParser implements Parser\u003cAppendCustomerNoteCommand\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"     * Parses the given {@code String} of arguments in the context of the AppendCustomerNoteCommand","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"     * and returns a AppendCustomerNoteCommand object for execution.","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"    public AppendCustomerNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NOTE);","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NOTE)","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"                    AppendCustomerNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"        String noteToAppend \u003d argMultimap.getValue(PREFIX_NOTE).get();","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"        return new AppendCustomerNoteCommand(index, noteToAppend);","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"CloudHill":44}},{"path":"src/main/java/seedu/loyaltylift/logic/parser/AppendOrderNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.AppendOrderNoteCommand;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":" * Parses input arguments and creates a new AppendOrderNoteCommand object","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"public class AppendOrderNoteCommandParser implements Parser\u003cAppendOrderNoteCommand\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"     * Parses the given {@code String} of arguments in the context of the AppendOrderNoteCommand","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"     * and returns a AppendOrderNoteCommand object for execution.","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"    public AppendOrderNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NOTE);","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NOTE)","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"                    AppendOrderNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"        String noteToAppend \u003d argMultimap.getValue(PREFIX_NOTE).get();","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"        return new AppendOrderNoteCommand(index, noteToAppend);","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"CloudHill":44}},{"path":"src/main/java/seedu/loyaltylift/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"Junyi00":1,"-":59}},{"path":"src/main/java/seedu/loyaltylift/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"Junyi00":1,"-":147}},{"path":"src/main/java/seedu/loyaltylift/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"    public static final Prefix PREFIX_CUSTOMER_TYPE \u003d new Prefix(\"ct/\");","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"jednghk"},"content":"    public static final Prefix PREFIX_QUANTITY \u003d new Prefix(\"q/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"    public static final Prefix PREFIX_POINTS \u003d new Prefix(\"pt/\");","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"    public static final Prefix PREFIX_NOTE \u003d new Prefix(\"nt/\");","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"    public static final Prefix PREFIX_SORT \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"    public static final Prefix PREFIX_FILTER \u003d new Prefix(\"f/\");","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Junyi00":2,"CloudHill":3,"jednghk":1,"Infrix":1,"-":14}},{"path":"src/main/java/seedu/loyaltylift/logic/parser/DeleteCustomerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.DeleteCustomerCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":" * Parses input arguments and creates a new DeleteCustomerCommand object","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"public class DeleteCustomerCommandParser implements Parser\u003cDeleteCustomerCommand\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCustomerCommand","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"     * and returns a DeleteCustomerCommand object for execution.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"    public DeleteCustomerCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"            return new DeleteCustomerCommand(index);","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCustomerCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Junyi00":12,"-":17}},{"path":"src/main/java/seedu/loyaltylift/logic/parser/DeleteOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jednghk"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.logic.commands.DeleteOrderCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"jednghk"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"jednghk"},"content":" * Parses input arguments and creates a new DeleteCustomerCommand object","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"jednghk"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"jednghk"},"content":"public class DeleteOrderCommandParser implements Parser\u003cDeleteOrderCommand\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"jednghk"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"jednghk"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCustomerCommand","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"jednghk"},"content":"     * and returns a DeleteCustomerCommand object for execution.","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"jednghk"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"jednghk"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"jednghk"},"content":"    public DeleteOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"jednghk"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"jednghk"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"jednghk"},"content":"            return new DeleteOrderCommand(index);","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"jednghk"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"jednghk"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"jednghk"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteOrderCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"jednghk"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"jednghk"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"jednghk":29}},{"path":"src/main/java/seedu/loyaltylift/logic/parser/EditCustomerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_CUSTOMER_TYPE;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.EditCustomerCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.EditCustomerCommand.EditCustomerDescriptor;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.tag.Tag;","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":" * Parses input arguments and creates a new EditCustomerCommand object","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"public class EditCustomerCommandParser implements Parser\u003cEditCustomerCommand\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCustomerCommand","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"     * and returns an EditCustomerCommand object for execution.","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"    public EditCustomerCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME,","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"                PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG, PREFIX_CUSTOMER_TYPE);","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCustomerCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"        EditCustomerDescriptor editCustomerDescriptor \u003d new EditCustomerDescriptor();","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"            editCustomerDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"            editCustomerDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"            editCustomerDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"            editCustomerDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"Junyi00"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editCustomerDescriptor::setTags);","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"        if (argMultimap.getValue(PREFIX_CUSTOMER_TYPE).isPresent()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"Junyi00"},"content":"            editCustomerDescriptor.setCustomerType(","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"Junyi00"},"content":"                    ParserUtil.parseCustomerType(argMultimap.getValue(PREFIX_CUSTOMER_TYPE).get()));","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"Junyi00"},"content":"        if (!editCustomerDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"Junyi00"},"content":"            throw new ParseException(EditCustomerCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"Junyi00"},"content":"        return new EditCustomerCommand(index, editCustomerDescriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Junyi00":35,"-":53}},{"path":"src/main/java/seedu/loyaltylift/logic/parser/EditOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jednghk"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"jednghk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"jednghk"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.logic.commands.EditOrderCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.logic.commands.EditOrderCommand.EditOrderDescriptor;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"jednghk"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"jednghk"},"content":" * Parses input arguments and creates a new EditOrderCommand object","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"jednghk"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"jednghk"},"content":"public class EditOrderCommandParser implements Parser\u003cEditOrderCommand\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"jednghk"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"jednghk"},"content":"     * Parses the given {@code String} of arguments in the context of the EditOrderCommand","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"jednghk"},"content":"     * and returns an EditOrderCommand object for execution.","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"jednghk"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"jednghk"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"jednghk"},"content":"    public EditOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"jednghk"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"jednghk"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME,","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"jednghk"},"content":"                PREFIX_QUANTITY, PREFIX_ADDRESS);","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"jednghk"},"content":"        Index index;","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"jednghk"},"content":"        try {","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"jednghk"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"jednghk"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"jednghk"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"jednghk"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditOrderCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"jednghk"},"content":"        EditOrderDescriptor editOrderDescriptor \u003d new EditOrderDescriptor();","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"jednghk"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"jednghk"},"content":"            editOrderDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"jednghk"},"content":"        if (argMultimap.getValue(PREFIX_QUANTITY).isPresent()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"jednghk"},"content":"            editOrderDescriptor.setQuantity(ParserUtil.parseQuantity(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"jednghk"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"jednghk"},"content":"            editOrderDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"jednghk"},"content":"        if (!editOrderDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"jednghk"},"content":"            throw new ParseException(EditOrderCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"jednghk"},"content":"        return new EditOrderCommand(index, editOrderDescriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"jednghk"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"jednghk"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"jednghk":56}},{"path":"src/main/java/seedu/loyaltylift/logic/parser/FindCustomerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.FindCustomerCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.CustomerNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":" * Parses input arguments and creates a new FindCustomerCommand object","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"public class FindCustomerCommandParser implements Parser\u003cFindCustomerCommand\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCustomerCommand","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"     * and returns a FindCustomerCommand object for execution.","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"    public FindCustomerCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCustomerCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"        return new FindCustomerCommand(new CustomerNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Junyi00":10,"CloudHill":2,"-":21}},{"path":"src/main/java/seedu/loyaltylift/logic/parser/FindOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.FindOrderCommand;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.OrderNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":" * Parses input arguments and creates a new FindOrderCommand object","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"public class FindOrderCommandParser implements Parser\u003cFindOrderCommand\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"     * Parses the given {@code String} of arguments in the context of the FindOrderCommand","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"     * and returns a FindOrderCommand object for execution.","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"    public FindOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"        return new FindOrderCommand(new OrderNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"CloudHill":33}},{"path":"src/main/java/seedu/loyaltylift/logic/parser/ListCustomerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_FILTER;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_SORT;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"import static seedu.loyaltylift.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.ListCustomerCommand;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":" * Parses input arguments and creates a new ListCustomerCommand object","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"public class ListCustomerCommandParser implements Parser\u003cListCustomerCommand\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"     * Parses the given {@code String} of arguments in the context of the ListCustomerCommand","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"     * and returns a ListCustomerCommand object for execution.","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"    public ListCustomerCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_SORT, PREFIX_FILTER);","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"        Comparator\u003cCustomer\u003e comparator \u003d Customer.SORT_NAME;","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_SORT)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"            comparator \u003d ParserUtil.parseCustomerSortOption(argMultimap.getValue(PREFIX_SORT).orElse(\"\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":"        Predicate\u003cCustomer\u003e predicate \u003d PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"JavonTeo"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_FILTER)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"JavonTeo"},"content":"            predicate \u003d ParserUtil.parseCustomerFilterOption(argMultimap.getValue(PREFIX_FILTER).orElse(\"\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"JavonTeo"},"content":"        return new ListCustomerCommand(comparator, predicate);","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"CloudHill":39,"JavonTeo":10}},{"path":"src/main/java/seedu/loyaltylift/logic/parser/ListOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_FILTER;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_SORT;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.ListOrderCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.OrderStatusPredicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.StatusValue;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":" * Parses input arguments and creates a new ListOrderCommand object","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"public class ListOrderCommandParser implements Parser\u003cListOrderCommand\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"     * Parses the given {@code String} of arguments in the context of the ListOrderCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"     * and returns a ListOrderCommand object for execution.","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"    public ListOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_SORT, PREFIX_FILTER);","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"        Comparator\u003cOrder\u003e comparator \u003d Order.SORT_CREATED_DATE;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_SORT)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"            comparator \u003d ParserUtil.parseOrderSortOption(argMultimap.getValue(PREFIX_SORT).orElse(\"\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"        Predicate\u003cOrder\u003e predicate \u003d PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_FILTER)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"            StatusValue status \u003d ParserUtil.parseStatusValue(argMultimap.getValue(PREFIX_FILTER).orElse(\"\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"            predicate \u003d new OrderStatusPredicate(status);","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"        return new ListOrderCommand(comparator, predicate);","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"CloudHill":52}},{"path":"src/main/java/seedu/loyaltylift/logic/parser/MarkCustomerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.logic.commands.MarkCustomerCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":" * Parses input arguments and creates a new MarkCustomerCommand object","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"public class MarkCustomerCommandParser implements Parser\u003cMarkCustomerCommand\u003e {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkCustomerCommand","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"     * and returns a MarkCustomerCommand object for execution.","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"    public MarkCustomerCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"        try {","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"            return new MarkCustomerCommand(index);","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCustomerCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"JavonTeo":28}},{"path":"src/main/java/seedu/loyaltylift/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.Command;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"Junyi00":3,"-":13}},{"path":"src/main/java/seedu/loyaltylift/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.util.StringUtil;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.ListCustomerCommand;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.ListOrderCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.attribute.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.attribute.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Note;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.CustomerType;","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Email;","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Phone;","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.customer.Points;","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.order.Quantity;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.StatusValue;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.tag.Tag;","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"jednghk"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"jednghk"},"content":"     * Parses {@code String quantity} into an {@code Quantity} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"jednghk"},"content":"     * trimmed.","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"jednghk"},"content":"     * @throws ParseException if the specified quantity is invalid (not positive integer).","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"jednghk"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"jednghk"},"content":"    public static Quantity parseQuantity(String quantity) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"jednghk"},"content":"        String trimmedQuantity \u003d quantity.trim();","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"jednghk"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedQuantity)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"jednghk"},"content":"            throw new ParseException(Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"jednghk"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"jednghk"},"content":"        return new Quantity(Integer.parseInt(trimmedQuantity));","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"jednghk"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":148,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":149,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":150,"author":{"gitId":"Junyi00"},"content":"     * Parses {@code String customerType} into a {@code CustomerType}.","lastModifiedDate":"2023-03-07"},{"lineNumber":151,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":152,"author":{"gitId":"Junyi00"},"content":"    public static CustomerType parseCustomerType(String customerType) throws ParseException {","lastModifiedDate":"2023-03-07"},{"lineNumber":153,"author":{"gitId":"Junyi00"},"content":"        requireNonNull(customerType);","lastModifiedDate":"2023-03-07"},{"lineNumber":154,"author":{"gitId":"Junyi00"},"content":"        CustomerType type;","lastModifiedDate":"2023-03-07"},{"lineNumber":155,"author":{"gitId":"Junyi00"},"content":"        try {","lastModifiedDate":"2023-03-07"},{"lineNumber":156,"author":{"gitId":"Junyi00"},"content":"            type \u003d CustomerType.fromUserFriendlyString(customerType);","lastModifiedDate":"2023-03-07"},{"lineNumber":157,"author":{"gitId":"Junyi00"},"content":"        } catch (IllegalArgumentException | NullPointerException e) {","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"Junyi00"},"content":"            throw new ParseException(CustomerType.MESSAGE_FAIL_CONVERSION);","lastModifiedDate":"2023-03-07"},{"lineNumber":159,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":160,"author":{"gitId":"Junyi00"},"content":"        return type;","lastModifiedDate":"2023-03-07"},{"lineNumber":161,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":162,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":163,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":164,"author":{"gitId":"Infrix"},"content":"     * Parses a {@code String points} into a {@code Points}.","lastModifiedDate":"2023-03-17"},{"lineNumber":165,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":166,"author":{"gitId":"Infrix"},"content":"     * @throws ParseException if the given {@code points} is invalid.","lastModifiedDate":"2023-03-17"},{"lineNumber":167,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":168,"author":{"gitId":"Infrix"},"content":"    public static Points parsePoints(String points) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":169,"author":{"gitId":"Infrix"},"content":"        requireNonNull(points);","lastModifiedDate":"2023-03-15"},{"lineNumber":170,"author":{"gitId":"Infrix"},"content":"        String trimmedPoints \u003d points.trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":171,"author":{"gitId":"Infrix"},"content":"        Integer integerTrimmedPoints;","lastModifiedDate":"2023-03-15"},{"lineNumber":172,"author":{"gitId":"Infrix"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":173,"author":{"gitId":"Infrix"},"content":"            integerTrimmedPoints \u003d Integer.valueOf(trimmedPoints);","lastModifiedDate":"2023-03-15"},{"lineNumber":174,"author":{"gitId":"Infrix"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-15"},{"lineNumber":175,"author":{"gitId":"Infrix"},"content":"            // integerTrimmedPoints is a string that cannot be parsed","lastModifiedDate":"2023-03-15"},{"lineNumber":176,"author":{"gitId":"Infrix"},"content":"            throw new ParseException(Points.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":177,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":178,"author":{"gitId":"Infrix"},"content":"        if (!Points.isValidPoints(integerTrimmedPoints) || trimmedPoints.compareTo(\"-0\") \u003d\u003d 0) {","lastModifiedDate":"2023-03-15"},{"lineNumber":179,"author":{"gitId":"Infrix"},"content":"            // integerTrimmedPoints is an integer that is not within the range of 0 to 999999","lastModifiedDate":"2023-03-15"},{"lineNumber":180,"author":{"gitId":"Infrix"},"content":"            throw new ParseException(Points.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":181,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":182,"author":{"gitId":"Infrix"},"content":"        return new Points(integerTrimmedPoints, integerTrimmedPoints);","lastModifiedDate":"2023-03-17"},{"lineNumber":183,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":184,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":185,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":186,"author":{"gitId":"Infrix"},"content":"     * Parses a {@code String points} into a {@code Integer}.","lastModifiedDate":"2023-03-19"},{"lineNumber":187,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":188,"author":{"gitId":"Infrix"},"content":"     * @throws ParseException if the given {@code points} is invalid.","lastModifiedDate":"2023-03-17"},{"lineNumber":189,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":190,"author":{"gitId":"Infrix"},"content":"    public static Integer parseAddPoints(String points) throws ParseException {","lastModifiedDate":"2023-03-19"},{"lineNumber":191,"author":{"gitId":"Infrix"},"content":"        requireNonNull(points);","lastModifiedDate":"2023-03-17"},{"lineNumber":192,"author":{"gitId":"Infrix"},"content":"        String trimmedPoints \u003d points.trim();","lastModifiedDate":"2023-03-17"},{"lineNumber":193,"author":{"gitId":"Infrix"},"content":"        Integer integerTrimmedPoints;","lastModifiedDate":"2023-03-17"},{"lineNumber":194,"author":{"gitId":"Infrix"},"content":"        try {","lastModifiedDate":"2023-03-17"},{"lineNumber":195,"author":{"gitId":"Infrix"},"content":"            integerTrimmedPoints \u003d Integer.valueOf(trimmedPoints);","lastModifiedDate":"2023-03-17"},{"lineNumber":196,"author":{"gitId":"Infrix"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-17"},{"lineNumber":197,"author":{"gitId":"Infrix"},"content":"            // integerTrimmedPoints is a string that cannot be parsed","lastModifiedDate":"2023-03-17"},{"lineNumber":198,"author":{"gitId":"Infrix"},"content":"            throw new ParseException(Points.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-19"},{"lineNumber":199,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":200,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":201,"author":{"gitId":"Infrix"},"content":"        if (!Points.isValidAddition(integerTrimmedPoints)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":202,"author":{"gitId":"Infrix"},"content":"            // integerTrimmedPoints is an integer that is not within the range of 0 to 999999","lastModifiedDate":"2023-03-17"},{"lineNumber":203,"author":{"gitId":"Infrix"},"content":"            throw new ParseException(Points.MESSAGE_CONSTRAINTS_ADDITION);","lastModifiedDate":"2023-03-19"},{"lineNumber":204,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":205,"author":{"gitId":"Infrix"},"content":"        return integerTrimmedPoints;","lastModifiedDate":"2023-03-19"},{"lineNumber":206,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":207,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":208,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":209,"author":{"gitId":"CloudHill"},"content":"     * Parses a {@code String note} into an {@code Note}.","lastModifiedDate":"2023-03-18"},{"lineNumber":210,"author":{"gitId":"CloudHill"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-18"},{"lineNumber":211,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":212,"author":{"gitId":"CloudHill"},"content":"    public static Note parseNote(String note) {","lastModifiedDate":"2023-03-18"},{"lineNumber":213,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(note);","lastModifiedDate":"2023-03-18"},{"lineNumber":214,"author":{"gitId":"CloudHill"},"content":"        String trimmedNote \u003d note.trim();","lastModifiedDate":"2023-03-18"},{"lineNumber":215,"author":{"gitId":"CloudHill"},"content":"        return new Note(trimmedNote);","lastModifiedDate":"2023-03-18"},{"lineNumber":216,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":217,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":218,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":219,"author":{"gitId":"CloudHill"},"content":"     * Parses a {@code String sortOption} into a {@code Comparator\u003cCustomer\u003e}.","lastModifiedDate":"2023-03-27"},{"lineNumber":220,"author":{"gitId":"CloudHill"},"content":"     * @throws ParseException if the given {@code attribute} is invalid.","lastModifiedDate":"2023-03-25"},{"lineNumber":221,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":222,"author":{"gitId":"CloudHill"},"content":"    public static Comparator\u003cCustomer\u003e parseCustomerSortOption(String sortOption) throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":223,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(sortOption);","lastModifiedDate":"2023-03-25"},{"lineNumber":224,"author":{"gitId":"CloudHill"},"content":"        String trimmedAttribute \u003d sortOption.trim();","lastModifiedDate":"2023-03-25"},{"lineNumber":225,"author":{"gitId":"CloudHill"},"content":"        switch (trimmedAttribute) {","lastModifiedDate":"2023-03-25"},{"lineNumber":226,"author":{"gitId":"CloudHill"},"content":"        case \"name\":","lastModifiedDate":"2023-03-25"},{"lineNumber":227,"author":{"gitId":"CloudHill"},"content":"            return Customer.SORT_NAME;","lastModifiedDate":"2023-03-25"},{"lineNumber":228,"author":{"gitId":"CloudHill"},"content":"        case \"points\":","lastModifiedDate":"2023-03-25"},{"lineNumber":229,"author":{"gitId":"CloudHill"},"content":"            return Customer.SORT_POINTS;","lastModifiedDate":"2023-03-25"},{"lineNumber":230,"author":{"gitId":"CloudHill"},"content":"        default:","lastModifiedDate":"2023-03-25"},{"lineNumber":231,"author":{"gitId":"CloudHill"},"content":"            throw new ParseException(ListCustomerCommand.MESSAGE_INVALID_SORT);","lastModifiedDate":"2023-03-25"},{"lineNumber":232,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":233,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":234,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":235,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":236,"author":{"gitId":"JavonTeo"},"content":"     * Parses a {@code String filterOption} into a {@code Predicate\u003cCustomer\u003e}.","lastModifiedDate":"2023-03-28"},{"lineNumber":237,"author":{"gitId":"JavonTeo"},"content":"     * @throws ParseException if the given {@code attribute} is invalid.","lastModifiedDate":"2023-03-28"},{"lineNumber":238,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":239,"author":{"gitId":"JavonTeo"},"content":"    public static Predicate\u003cCustomer\u003e parseCustomerFilterOption(String filterOption) throws ParseException {","lastModifiedDate":"2023-03-28"},{"lineNumber":240,"author":{"gitId":"JavonTeo"},"content":"        requireNonNull(filterOption);","lastModifiedDate":"2023-03-28"},{"lineNumber":241,"author":{"gitId":"JavonTeo"},"content":"        String trimmedAttribute \u003d filterOption.trim();","lastModifiedDate":"2023-03-28"},{"lineNumber":242,"author":{"gitId":"JavonTeo"},"content":"        switch (trimmedAttribute) {","lastModifiedDate":"2023-03-28"},{"lineNumber":243,"author":{"gitId":"JavonTeo"},"content":"        case \"marked\":","lastModifiedDate":"2023-03-28"},{"lineNumber":244,"author":{"gitId":"JavonTeo"},"content":"            return Customer.FILTER_SHOW_MARKED;","lastModifiedDate":"2023-03-28"},{"lineNumber":245,"author":{"gitId":"JavonTeo"},"content":"        default:","lastModifiedDate":"2023-03-28"},{"lineNumber":246,"author":{"gitId":"JavonTeo"},"content":"            throw new ParseException(ListCustomerCommand.MESSAGE_INVALID_FILTER);","lastModifiedDate":"2023-03-28"},{"lineNumber":247,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":248,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":249,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":250,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":251,"author":{"gitId":"CloudHill"},"content":"     * Parses a {@code String sortOption} into a {@code Comparator\u003cOrder\u003e}.","lastModifiedDate":"2023-03-27"},{"lineNumber":252,"author":{"gitId":"CloudHill"},"content":"     * @throws ParseException if the given {@code attribute} is invalid.","lastModifiedDate":"2023-03-27"},{"lineNumber":253,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":254,"author":{"gitId":"CloudHill"},"content":"    public static Comparator\u003cOrder\u003e parseOrderSortOption(String sortOption) throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":255,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(sortOption);","lastModifiedDate":"2023-03-27"},{"lineNumber":256,"author":{"gitId":"CloudHill"},"content":"        String trimmedAttribute \u003d sortOption.trim();","lastModifiedDate":"2023-03-27"},{"lineNumber":257,"author":{"gitId":"CloudHill"},"content":"        switch (trimmedAttribute) {","lastModifiedDate":"2023-03-27"},{"lineNumber":258,"author":{"gitId":"CloudHill"},"content":"        case \"created\":","lastModifiedDate":"2023-03-27"},{"lineNumber":259,"author":{"gitId":"CloudHill"},"content":"            return Order.SORT_CREATED_DATE;","lastModifiedDate":"2023-03-27"},{"lineNumber":260,"author":{"gitId":"CloudHill"},"content":"        case \"name\":","lastModifiedDate":"2023-03-27"},{"lineNumber":261,"author":{"gitId":"CloudHill"},"content":"            return Order.SORT_NAME;","lastModifiedDate":"2023-03-27"},{"lineNumber":262,"author":{"gitId":"CloudHill"},"content":"        case \"status\":","lastModifiedDate":"2023-03-27"},{"lineNumber":263,"author":{"gitId":"CloudHill"},"content":"            return Order.SORT_STATUS;","lastModifiedDate":"2023-03-27"},{"lineNumber":264,"author":{"gitId":"CloudHill"},"content":"        default:","lastModifiedDate":"2023-03-27"},{"lineNumber":265,"author":{"gitId":"CloudHill"},"content":"            throw new ParseException(ListOrderCommand.MESSAGE_INVALID_SORT);","lastModifiedDate":"2023-03-27"},{"lineNumber":266,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":267,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":268,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":269,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":270,"author":{"gitId":"CloudHill"},"content":"     * Parses a {@code String statusValue} into a {@code StatusValue}.","lastModifiedDate":"2023-03-28"},{"lineNumber":271,"author":{"gitId":"CloudHill"},"content":"     * @throws ParseException if the given {@code attribute} is invalid.","lastModifiedDate":"2023-03-28"},{"lineNumber":272,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":273,"author":{"gitId":"CloudHill"},"content":"    public static StatusValue parseStatusValue(String statusValue) throws ParseException {","lastModifiedDate":"2023-03-28"},{"lineNumber":274,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(statusValue);","lastModifiedDate":"2023-03-28"},{"lineNumber":275,"author":{"gitId":"CloudHill"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":276,"author":{"gitId":"CloudHill"},"content":"            return StatusValue.fromString(statusValue.trim());","lastModifiedDate":"2023-03-28"},{"lineNumber":277,"author":{"gitId":"CloudHill"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":278,"author":{"gitId":"CloudHill"},"content":"            throw new ParseException(ListOrderCommand.MESSAGE_INVALID_FILTER);","lastModifiedDate":"2023-03-28"},{"lineNumber":279,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":280,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Junyi00":22,"CloudHill":66,"JavonTeo":16,"jednghk":17,"Infrix":45,"-":115}},{"path":"src/main/java/seedu/loyaltylift/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"Junyi00":1,"-":38}},{"path":"src/main/java/seedu/loyaltylift/logic/parser/SetCustomerNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.SetCustomerNoteCommand;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Note;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":" * Parses input arguments and creates a new SetCustomerNoteCommand object","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"public class SetCustomerNoteCommandParser implements Parser\u003cSetCustomerNoteCommand\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"     * Parses the given {@code String} of arguments in the context of the SetCustomerNoteCommand","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"     * and returns a SetCustomerNoteCommand object for execution.","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"    public SetCustomerNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NOTE);","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NOTE)","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"                    SetCustomerNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"        Note note \u003d ParserUtil.parseNote((argMultimap.getValue(PREFIX_NOTE).get()));","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"        return new SetCustomerNoteCommand(index, note);","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"CloudHill":45}},{"path":"src/main/java/seedu/loyaltylift/logic/parser/SetOrderNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.SetOrderNoteCommand;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Note;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":" * Parses input arguments and creates a new SetOrderNoteCommand object","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"public class SetOrderNoteCommandParser implements Parser\u003cSetOrderNoteCommand\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"     * Parses the given {@code String} of arguments in the context of the SetOrderNoteCommand","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"     * and returns a SetOrderNoteCommand object for execution.","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"    public SetOrderNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NOTE);","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NOTE)","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"                    SetOrderNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"        Note note \u003d ParserUtil.parseNote((argMultimap.getValue(PREFIX_NOTE).get()));","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"        return new SetOrderNoteCommand(index, note);","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"CloudHill":45}},{"path":"src/main/java/seedu/loyaltylift/logic/parser/SetPointsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.logic.commands.SetPointsCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.model.customer.Points;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":" * Parses input arguments and creates a new SetPointsCommand object","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"public class SetPointsCommandParser implements Parser\u003cSetPointsCommand\u003e {","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"     * Parses the given {@code String} of arguments in the context of the SetPointsCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"     * and returns a SetPointsCommand object for execution.","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"    public SetPointsCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_POINTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_POINTS)","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"                    SetPointsCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"        Points points \u003d ParserUtil.parsePoints((argMultimap.getValue(PREFIX_POINTS).get()));","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"        return new SetPointsCommand(index, points);","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"Infrix":45}},{"path":"src/main/java/seedu/loyaltylift/logic/parser/UnmarkCustomerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.logic.commands.UnmarkCustomerCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":" * Parses input arguments and creates a new UnmarkCustomerCommand object","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"public class UnmarkCustomerCommandParser implements Parser\u003cUnmarkCustomerCommand\u003e {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"     * Parses the given {@code String} of arguments in the context of the UnmarkCustomerCommand","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"     * and returns a UnmarkCustomerCommand object for execution.","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"    public UnmarkCustomerCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"        try {","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"            return new UnmarkCustomerCommand(index);","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkCustomerCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"JavonTeo":28}},{"path":"src/main/java/seedu/loyaltylift/logic/parser/ViewCustomerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.ViewCustomerCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":" * Parses input arguments and creates a new ViewCustomerCommand object","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"public class ViewCustomerCommandParser implements Parser\u003cViewCustomerCommand\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCustomerCommand","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"     * and returns a ViewCustomerCommand object for execution.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"    public ViewCustomerCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"        try {","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"            return new ViewCustomerCommand(index);","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCustomerCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Junyi00":28}},{"path":"src/main/java/seedu/loyaltylift/logic/parser/ViewOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.ViewOrderCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":" * Parses input arguments and creates a new ViewOrderCommand object","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"public class ViewOrderCommandParser implements Parser\u003cViewOrderCommand\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewOrderCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"     * and returns a ViewOrderCommand object for execution.","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"    public ViewOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"            return new ViewOrderCommand(index);","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewOrderCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Junyi00":28}},{"path":"src/main/java/seedu/loyaltylift/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.parser.exceptions;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"Junyi00":2,"-":15}},{"path":"src/main/java/seedu/loyaltylift/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.model;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.UniqueCustomerList;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.UniqueOrderList;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":" * Duplicates are not allowed (by .isSameCustomer comparison)","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"    private final UniqueCustomerList customers;","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"    private final UniqueOrderList orders;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"        customers \u003d new UniqueCustomerList();","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"        orders \u003d new UniqueOrderList();","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"     * Creates an AddressBook using the Customers in the {@code toBeCopied}","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"     * Replaces the contents of the customer list with {@code customers}.","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"     * {@code customers} must not contain duplicate customers.","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"    public void setCustomers(List\u003cCustomer\u003e customers) {","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"        this.customers.setCustomers(customers);","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"CloudHill"},"content":"     * Replaces the contents of the order list with {@code orders}.","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"CloudHill"},"content":"     * {@code orders} must not contain duplicate orders.","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"CloudHill"},"content":"    public void setOrders(List\u003cOrder\u003e orders) {","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"CloudHill"},"content":"        this.orders.setOrders(orders);","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"Junyi00"},"content":"        setCustomers(newData.getCustomerList());","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"CloudHill"},"content":"        setOrders(newData.getOrderList());","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"Junyi00"},"content":"    //// customer-level operations","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"Junyi00"},"content":"     * Returns {@code customer} if a customer exists in the address book with its uid.","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"Junyi00"},"content":"    public Customer getCustomer(String customerUid) {","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"Junyi00"},"content":"        requireNonNull(customerUid);","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"Junyi00"},"content":"        return customers.getCustomer(customerUid);","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"Junyi00"},"content":"     * Returns true if a customer with the same identity as {@code customer} exists in the address book.","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"Junyi00"},"content":"    public boolean hasCustomer(Customer customer) {","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"Junyi00"},"content":"        requireNonNull(customer);","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"Junyi00"},"content":"        return customers.contains(customer);","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"Junyi00"},"content":"     * Adds a customer to the address book.","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"Junyi00"},"content":"     * The customer must not already exist in the address book.","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"Junyi00"},"content":"    public void addCustomer(Customer p) {","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"Junyi00"},"content":"        customers.add(p);","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":101,"author":{"gitId":"Junyi00"},"content":"     * Replaces the given customer {@code target} in the list with {@code editedCustomer}.","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"Junyi00"},"content":"     * The customer identity of {@code editedCustomer} must not be the same as","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"Junyi00"},"content":"     * another existing customer in the address book.","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":106,"author":{"gitId":"Junyi00"},"content":"    public void setCustomer(Customer target, Customer editedCustomer) {","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"Junyi00"},"content":"        requireNonNull(editedCustomer);","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"Junyi00"},"content":"        customers.setCustomer(target, editedCustomer);","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"Junyi00"},"content":"        // update orders associated to the customer","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"Junyi00"},"content":"        ArrayList\u003cOrder\u003e ordersToUpdate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"Junyi00"},"content":"        orders.forEach(o -\u003e {","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"Junyi00"},"content":"            if (o.getCustomer().equals(target)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"Junyi00"},"content":"                ordersToUpdate.add(o);","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"Junyi00"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"Junyi00"},"content":"        });","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"Junyi00"},"content":"        ordersToUpdate.forEach(o -\u003e orders.setOrder(o, o.newOrderWithCustomer(editedCustomer)));","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"Junyi00"},"content":"    public void removeCustomer(Customer key) {","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"Junyi00"},"content":"        customers.remove(key);","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":128,"author":{"gitId":"Junyi00"},"content":"        // remove orders associated to the customer","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"Junyi00"},"content":"        ArrayList\u003cOrder\u003e ordersToRemove \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":130,"author":{"gitId":"Junyi00"},"content":"        orders.forEach(o -\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"Junyi00"},"content":"            if (o.getCustomer().equals(key)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"Junyi00"},"content":"                ordersToRemove.add(o);","lastModifiedDate":"2023-03-18"},{"lineNumber":133,"author":{"gitId":"Junyi00"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":134,"author":{"gitId":"Junyi00"},"content":"        });","lastModifiedDate":"2023-03-18"},{"lineNumber":135,"author":{"gitId":"Junyi00"},"content":"        ordersToRemove.forEach(orders::remove);","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"CloudHill"},"content":"    //// order-level operations","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"CloudHill"},"content":"     * Returns true if a order with the same identity as {@code order} exists in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"CloudHill"},"content":"    public boolean hasOrder(Order order) {","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(order);","lastModifiedDate":"2023-03-06"},{"lineNumber":145,"author":{"gitId":"CloudHill"},"content":"        return orders.contains(order);","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"CloudHill"},"content":"     * Adds a order to the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"CloudHill"},"content":"     * The order must not already exist in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"CloudHill"},"content":"    public void addOrder(Order p) {","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"CloudHill"},"content":"        orders.add(p);","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":156,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":157,"author":{"gitId":"CloudHill"},"content":"     * Replaces the given order {@code target} in the list with {@code editedOrder}.","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"CloudHill"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":159,"author":{"gitId":"CloudHill"},"content":"     * The order identity of {@code editedOrder} must not be the same as another existing order in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":160,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"CloudHill"},"content":"    public void setOrder(Order target, Order editedOrder) {","lastModifiedDate":"2023-03-06"},{"lineNumber":162,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(editedOrder);","lastModifiedDate":"2023-03-06"},{"lineNumber":163,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":164,"author":{"gitId":"CloudHill"},"content":"        orders.setOrder(target, editedOrder);","lastModifiedDate":"2023-03-06"},{"lineNumber":165,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":167,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":168,"author":{"gitId":"CloudHill"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-03-06"},{"lineNumber":169,"author":{"gitId":"CloudHill"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":170,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":171,"author":{"gitId":"CloudHill"},"content":"    public void removeOrder(Order key) {","lastModifiedDate":"2023-03-06"},{"lineNumber":172,"author":{"gitId":"CloudHill"},"content":"        orders.remove(key);","lastModifiedDate":"2023-03-06"},{"lineNumber":173,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":174,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"CloudHill"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-06"},{"lineNumber":180,"author":{"gitId":"CloudHill"},"content":"        builder.append(customers.asUnmodifiableObservableList().size() + \" customers\\n\")","lastModifiedDate":"2023-03-06"},{"lineNumber":181,"author":{"gitId":"CloudHill"},"content":"                .append(orders.asUnmodifiableObservableList().size() + \" orders\");","lastModifiedDate":"2023-03-06"},{"lineNumber":182,"author":{"gitId":"CloudHill"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"Junyi00"},"content":"    public ObservableList\u003cCustomer\u003e getCustomerList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":188,"author":{"gitId":"Junyi00"},"content":"        return customers.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":191,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":192,"author":{"gitId":"CloudHill"},"content":"    public ObservableList\u003cOrder\u003e getOrderList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":193,"author":{"gitId":"CloudHill"},"content":"        return orders.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-06"},{"lineNumber":194,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":195,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":200,"author":{"gitId":"CloudHill"},"content":"                \u0026\u0026 customers.equals(((AddressBook) other).customers)","lastModifiedDate":"2023-03-06"},{"lineNumber":201,"author":{"gitId":"CloudHill"},"content":"                \u0026\u0026 orders.equals(((AddressBook) other).orders));","lastModifiedDate":"2023-03-06"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":206,"author":{"gitId":"CloudHill"},"content":"        return Objects.hash(customers, orders);","lastModifiedDate":"2023-03-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Junyi00":58,"CloudHill":63,"-":87}},{"path":"src/main/java/seedu/loyaltylift/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.model;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.GuiSettings;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"    Predicate\u003cCustomer\u003e PREDICATE_SHOW_ALL_CUSTOMERS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"    Predicate\u003cOrder\u003e PREDICATE_SHOW_ALL_ORDERS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"     * Returns true if a customer with the same identity as {@code customer} exists in the address book.","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"    boolean hasCustomer(Customer customer);","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":"     * Deletes the given customer.","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"Junyi00"},"content":"     * The customer must exist in the address book.","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"Junyi00"},"content":"    void deleteCustomer(Customer target);","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"Junyi00"},"content":"     * Adds the given customer.","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"Junyi00"},"content":"     * {@code customer} must not already exist in the address book.","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"Junyi00"},"content":"    void addCustomer(Customer customer);","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"Junyi00"},"content":"     * Replaces the given customer {@code target} with {@code editedCustomer}.","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"Junyi00"},"content":"     * The customer identity of {@code editedCustomer} must not be the same as","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"Junyi00"},"content":"     * another existing customer in the address book.","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"Junyi00"},"content":"    void setCustomer(Customer target, Customer editedCustomer);","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"Junyi00"},"content":"    /** Returns an unmodifiable view of the filtered customer list */","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"Junyi00"},"content":"    ObservableList\u003cCustomer\u003e getFilteredCustomerList();","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"Junyi00"},"content":"     * Updates the filter of the filtered customer list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"Junyi00"},"content":"    void updateFilteredCustomerList(Predicate\u003cCustomer\u003e predicate);","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":93,"author":{"gitId":"CloudHill"},"content":"     * Sorts the filtered customer list using the given {@code comparator}.","lastModifiedDate":"2023-03-25"},{"lineNumber":94,"author":{"gitId":"CloudHill"},"content":"     * @throws NullPointerException if {@code comparator} is null.","lastModifiedDate":"2023-03-25"},{"lineNumber":95,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":96,"author":{"gitId":"CloudHill"},"content":"    void sortFilteredCustomerList(Comparator\u003cCustomer\u003e comparator);","lastModifiedDate":"2023-03-25"},{"lineNumber":97,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":98,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"CloudHill"},"content":"     * Returns true if a order with the same identity as {@code order} exists in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"CloudHill"},"content":"    boolean hasOrder(Order order);","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"CloudHill"},"content":"     * Deletes the given order.","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"CloudHill"},"content":"     * The order must exist in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"CloudHill"},"content":"    void deleteOrder(Order target);","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"CloudHill"},"content":"     * Adds the given order.","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"CloudHill"},"content":"     * {@code order} must not already exist in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"CloudHill"},"content":"    void addOrder(Order order);","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"CloudHill"},"content":"     * Replaces the given order {@code target} with {@code editedOrder}.","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"CloudHill"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"CloudHill"},"content":"     * The order identity of {@code editedOrder} must not be the same as another existing order in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"CloudHill"},"content":"    void setOrder(Order target, Order editedOrder);","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"CloudHill"},"content":"    /** Returns an unmodifiable view of the filtered order list */","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"CloudHill"},"content":"    ObservableList\u003cOrder\u003e getFilteredOrderList();","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"CloudHill"},"content":"     * Updates the filter of the filtered order list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"CloudHill"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"CloudHill"},"content":"    void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":132,"author":{"gitId":"CloudHill"},"content":"     * Sorts the filtered order list using the given {@code comparator}.","lastModifiedDate":"2023-03-27"},{"lineNumber":133,"author":{"gitId":"CloudHill"},"content":"     * @throws NullPointerException if {@code comparator} is null.","lastModifiedDate":"2023-03-27"},{"lineNumber":134,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":135,"author":{"gitId":"CloudHill"},"content":"    void sortFilteredOrderList(Comparator\u003cOrder\u003e comparator);","lastModifiedDate":"2023-03-27"},{"lineNumber":136,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":137,"author":{"gitId":"Junyi00"},"content":"    /** Returns an unmodifiable view of the filtered customer\u0027s order list */","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"Junyi00"},"content":"    ObservableList\u003cOrder\u003e getFilteredCustomerOrderList();","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"Junyi00"},"content":"     * Updates the filter of the filtered customer\u0027s order list to filter by the given {@code customer}.","lastModifiedDate":"2023-03-11"},{"lineNumber":142,"author":{"gitId":"Junyi00"},"content":"     * @throws NullPointerException if {@code customer} is null.","lastModifiedDate":"2023-03-11"},{"lineNumber":143,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":144,"author":{"gitId":"Junyi00"},"content":"    void updateFilteredCustomerOrderList(Customer customer);","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Junyi00":29,"CloudHill":48,"-":68}},{"path":"src/main/java/seedu/loyaltylift/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.model;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.GuiSettings;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.LogsCenter;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"    // filtered lists","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"    private final FilteredList\u003cCustomer\u003e filteredCustomers;","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"    private final FilteredList\u003cOrder\u003e filteredOrders;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"    private final FilteredList\u003cOrder\u003e filteredCustomerOrders;","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"    // sorted lists","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"    private final SortedList\u003cCustomer\u003e sortedCustomers;","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"    private final SortedList\u003cOrder\u003e sortedOrders;","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"        filteredCustomers \u003d new FilteredList\u003c\u003e(this.addressBook.getCustomerList());","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"        filteredOrders \u003d new FilteredList\u003c\u003e(this.addressBook.getOrderList());","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"        filteredCustomerOrders \u003d new FilteredList\u003c\u003e(this.addressBook.getOrderList());","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"CloudHill"},"content":"        sortedCustomers \u003d new SortedList\u003c\u003e(filteredCustomers, Customer.SORT_NAME);","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"        sortedOrders \u003d new SortedList\u003c\u003e(filteredOrders, Order.SORT_CREATED_DATE);","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"CloudHill"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Person List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"Junyi00"},"content":"    public boolean hasCustomer(Customer customer) {","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"Junyi00"},"content":"        requireNonNull(customer);","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"Junyi00"},"content":"        return addressBook.hasCustomer(customer);","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":114,"author":{"gitId":"Junyi00"},"content":"    public void deleteCustomer(Customer target) {","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"Junyi00"},"content":"        addressBook.removeCustomer(target);","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":119,"author":{"gitId":"Junyi00"},"content":"    public void addCustomer(Customer customer) {","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"Junyi00"},"content":"        addressBook.addCustomer(customer);","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"Junyi00"},"content":"        updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"Junyi00"},"content":"    public void setCustomer(Customer target, Customer editedCustomer) {","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"Junyi00"},"content":"        requireAllNonNull(target, editedCustomer);","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"Junyi00"},"content":"        addressBook.setCustomer(target, editedCustomer);","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":131,"author":{"gitId":"CloudHill"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Order List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"CloudHill"},"content":"    public boolean hasOrder(Order order) {","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(order);","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"CloudHill"},"content":"        return addressBook.hasOrder(order);","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"CloudHill"},"content":"    public void deleteOrder(Order target) {","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"CloudHill"},"content":"        addressBook.removeOrder(target);","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":145,"author":{"gitId":"CloudHill"},"content":"    public void addOrder(Order order) {","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"CloudHill"},"content":"        addressBook.addOrder(order);","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"CloudHill"},"content":"        updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"CloudHill"},"content":"    public void setOrder(Order target, Order editedOrder) {","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"CloudHill"},"content":"        requireAllNonNull(target, editedOrder);","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"CloudHill"},"content":"        addressBook.setOrder(target, editedOrder);","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":156,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":157,"author":{"gitId":"Junyi00"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Customer List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":160,"author":{"gitId":"Junyi00"},"content":"     * Returns an unmodifiable view of the list of {@code Customer} backed by the internal list of","lastModifiedDate":"2023-03-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"Junyi00"},"content":"    public ObservableList\u003cCustomer\u003e getFilteredCustomerList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":165,"author":{"gitId":"CloudHill"},"content":"        return sortedCustomers;","lastModifiedDate":"2023-03-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":169,"author":{"gitId":"Junyi00"},"content":"    public void updateFilteredCustomerList(Predicate\u003cCustomer\u003e predicate) {","lastModifiedDate":"2023-03-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":171,"author":{"gitId":"Junyi00"},"content":"        filteredCustomers.setPredicate(predicate);","lastModifiedDate":"2023-03-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":174,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":175,"author":{"gitId":"CloudHill"},"content":"    public void sortFilteredCustomerList(Comparator\u003cCustomer\u003e comparator) {","lastModifiedDate":"2023-03-25"},{"lineNumber":176,"author":{"gitId":"CloudHill"},"content":"        sortedCustomers.setComparator(comparator);","lastModifiedDate":"2023-03-25"},{"lineNumber":177,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":178,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":179,"author":{"gitId":"CloudHill"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Order List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":180,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":181,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":182,"author":{"gitId":"CloudHill"},"content":"     * Returns an unmodifiable view of the list of {@code Order} backed by the internal list of","lastModifiedDate":"2023-03-06"},{"lineNumber":183,"author":{"gitId":"CloudHill"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-03-06"},{"lineNumber":184,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":185,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":186,"author":{"gitId":"CloudHill"},"content":"    public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":187,"author":{"gitId":"CloudHill"},"content":"        return sortedOrders;","lastModifiedDate":"2023-03-27"},{"lineNumber":188,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":189,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":190,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":191,"author":{"gitId":"CloudHill"},"content":"    public void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2023-03-06"},{"lineNumber":192,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":193,"author":{"gitId":"CloudHill"},"content":"        filteredOrders.setPredicate(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":194,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":195,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":196,"author":{"gitId":"Junyi00"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":197,"author":{"gitId":"Junyi00"},"content":"    public ObservableList\u003cOrder\u003e getFilteredCustomerOrderList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":198,"author":{"gitId":"Junyi00"},"content":"        return filteredCustomerOrders;","lastModifiedDate":"2023-03-11"},{"lineNumber":199,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":200,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":201,"author":{"gitId":"Junyi00"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":202,"author":{"gitId":"Junyi00"},"content":"    public void updateFilteredCustomerOrderList(Customer customer) {","lastModifiedDate":"2023-03-11"},{"lineNumber":203,"author":{"gitId":"Junyi00"},"content":"        requireNonNull(customer);","lastModifiedDate":"2023-03-11"},{"lineNumber":204,"author":{"gitId":"Junyi00"},"content":"        filteredCustomerOrders.setPredicate((order) -\u003e order.getCustomer().equals(customer));","lastModifiedDate":"2023-03-11"},{"lineNumber":205,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":206,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":207,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":208,"author":{"gitId":"CloudHill"},"content":"    public void sortFilteredOrderList(Comparator\u003cOrder\u003e comparator) {","lastModifiedDate":"2023-03-27"},{"lineNumber":209,"author":{"gitId":"CloudHill"},"content":"        sortedOrders.setComparator(comparator);","lastModifiedDate":"2023-03-27"},{"lineNumber":210,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":211,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":228,"author":{"gitId":"CloudHill"},"content":"                \u0026\u0026 filteredCustomers.equals(other.filteredCustomers)","lastModifiedDate":"2023-03-06"},{"lineNumber":229,"author":{"gitId":"CloudHill"},"content":"                \u0026\u0026 filteredOrders.equals(other.filteredOrders);","lastModifiedDate":"2023-03-06"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Junyi00":36,"CloudHill":71,"-":125}},{"path":"src/main/java/seedu/loyaltylift/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.model;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"     * Returns an unmodifiable view of the customers list.","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"     * This list will not contain any duplicate customers.","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"    ObservableList\u003cCustomer\u003e getCustomerList();","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"     * Returns an unmodifiable view of the orders list.","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"     * This list will not contain any duplicate orders.","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"    ObservableList\u003cOrder\u003e getOrderList();","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Junyi00":5,"CloudHill":7,"-":12}},{"path":"src/main/java/seedu/loyaltylift/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.model;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.GuiSettings;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"Junyi00":2,"-":14}},{"path":"src/main/java/seedu/loyaltylift/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.model;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.GuiSettings;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Junyi00":2,"-":85}},{"path":"src/main/java/seedu/loyaltylift/model/attribute/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jednghk"},"content":"package seedu.loyaltylift.model.attribute;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":" * Represents a Customer\u0027s address in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"     * Returns true if a given string is a valid address.","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Junyi00":2,"CloudHill":1,"jednghk":1,"-":53}},{"path":"src/main/java/seedu/loyaltylift/model/attribute/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jednghk"},"content":"package seedu.loyaltylift.model.attribute;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":" * Represents a Customer\u0027s name in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"public class Name implements Comparable\u003cName\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"CloudHill"},"content":"    public int compareTo(Name o) {","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"CloudHill"},"content":"        return fullName.compareTo(o.fullName);","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Junyi00":2,"CloudHill":6,"jednghk":1,"-":55}},{"path":"src/main/java/seedu/loyaltylift/model/attribute/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.model.attribute;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":" * Represents a Customers or Order\u0027s note in the address book.","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":" * Guarantees: immutable.","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"public class Note {","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"    public final String value;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"     * Constructs a {@code Note}.","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"     * @param note A valid note.","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"    public Note(String note) {","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(note);","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"        value \u003d note;","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"    public String toString() {","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"        return value;","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"                || (other instanceof Note // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"                \u0026\u0026 value.equals(((Note) other).value)); // state check","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"CloudHill":40}},{"path":"src/main/java/seedu/loyaltylift/model/customer/Customer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.model.customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.attribute.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.attribute.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Note;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.tag.Tag;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":" * Represents a Customer in the address book.","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"public class Customer {","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"    // Comparators","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"    public static final Comparator\u003cCustomer\u003e SORT_NAME \u003d Comparator.comparing(Customer::getName);","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"    public static final Comparator\u003cCustomer\u003e SORT_POINTS \u003d Comparator.comparing(Customer::getPoints)","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"            .reversed().thenComparing(SORT_NAME);","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"    // Predicates","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"    public static final Predicate\u003cCustomer\u003e FILTER_SHOW_MARKED \u003d customer -\u003e customer.getMarked().value;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"    private final CustomerType customerType;","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"    // Optional fields","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"    private final Points points;","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"    private final Marked marked;","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"    private final Note note;","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"     * Every field except note must be present and not null.","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"    public Customer(CustomerType customerType, Name name, Phone phone, Email email,","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"CloudHill"},"content":"            Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"        this(customerType, name, phone, email, address, tags,","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"                new Points(0, 0),","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"CloudHill"},"content":"                new Marked(false),","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"CloudHill"},"content":"                new Note(\"\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"Infrix"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"CloudHill"},"content":"    public Customer(CustomerType customerType, Name name, Phone phone, Email email,","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"CloudHill"},"content":"            Address address, Set\u003cTag\u003e tags, Points points, Marked marked, Note note) {","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"Infrix"},"content":"        requireAllNonNull(name, phone, email, address, tags, points);","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"Infrix"},"content":"        this.customerType \u003d customerType;","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"Infrix"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"Infrix"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"Infrix"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"Infrix"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"Infrix"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"Infrix"},"content":"        this.points \u003d points;","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"JavonTeo"},"content":"        this.marked \u003d marked;","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"CloudHill"},"content":"        this.note \u003d note;","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"Junyi00"},"content":"    public CustomerType getCustomerType() {","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"Junyi00"},"content":"        return customerType;","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":94,"author":{"gitId":"JavonTeo"},"content":"    public Marked getMarked() {","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"JavonTeo"},"content":"        return marked;","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"Infrix"},"content":"    public Points getPoints() {","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"Infrix"},"content":"        return points;","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"CloudHill"},"content":"    public Note getNote() {","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"CloudHill"},"content":"        return note;","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"Junyi00"},"content":"     * Returns a unique ID for the {@code Customer}.","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"Junyi00"},"content":"     * No 2 customer should exist with the same unique ID.","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"Junyi00"},"content":"     * @return A string representation of the unique identification of the customer.","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"Junyi00"},"content":"    public final String getUid() {","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"Junyi00"},"content":"        return getName().fullName;","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":122,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"Junyi00"},"content":"     * Returns true if both customers have the same name.","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"Junyi00"},"content":"     * This defines a weaker notion of equality between two customers.","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"Junyi00"},"content":"    public boolean isSameCustomer(Customer otherCustomer) {","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"Junyi00"},"content":"        if (otherCustomer \u003d\u003d this) {","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"Junyi00"},"content":"        return otherCustomer !\u003d null","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"Junyi00"},"content":"                \u0026\u0026 otherCustomer.getUid().equals(getUid());","lastModifiedDate":"2023-03-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"Junyi00"},"content":"     * Returns true if both customers have the same identity and data fields.","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"Junyi00"},"content":"     * This defines a stronger notion of equality between two customers.","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"Junyi00"},"content":"        if (!(other instanceof Customer)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"Junyi00"},"content":"        Customer otherCustomer \u003d (Customer) other;","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"Junyi00"},"content":"        return otherCustomer.getName().equals(getName())","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"Junyi00"},"content":"                \u0026\u0026 otherCustomer.getPhone().equals(getPhone())","lastModifiedDate":"2023-03-05"},{"lineNumber":153,"author":{"gitId":"Junyi00"},"content":"                \u0026\u0026 otherCustomer.getEmail().equals(getEmail())","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"Junyi00"},"content":"                \u0026\u0026 otherCustomer.getAddress().equals(getAddress())","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"Junyi00"},"content":"                \u0026\u0026 otherCustomer.getTags().equals(getTags())","lastModifiedDate":"2023-03-07"},{"lineNumber":156,"author":{"gitId":"Infrix"},"content":"                \u0026\u0026 otherCustomer.getCustomerType().equals(getCustomerType())","lastModifiedDate":"2023-03-17"},{"lineNumber":157,"author":{"gitId":"CloudHill"},"content":"                \u0026\u0026 otherCustomer.getPoints().equals(getPoints())","lastModifiedDate":"2023-03-18"},{"lineNumber":158,"author":{"gitId":"CloudHill"},"content":"                \u0026\u0026 otherCustomer.getMarked().equals(getMarked())","lastModifiedDate":"2023-03-18"},{"lineNumber":159,"author":{"gitId":"CloudHill"},"content":"                \u0026\u0026 otherCustomer.getNote().equals(getNote());","lastModifiedDate":"2023-03-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":165,"author":{"gitId":"Junyi00"},"content":"        return Objects.hash(customerType, name, phone, email, address, tags);","lastModifiedDate":"2023-03-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"Junyi00"},"content":"        builder.append(getCustomerType())","lastModifiedDate":"2023-03-07"},{"lineNumber":172,"author":{"gitId":"Junyi00"},"content":"                .append(\": \")","lastModifiedDate":"2023-03-07"},{"lineNumber":173,"author":{"gitId":"Junyi00"},"content":"                .append(getName())","lastModifiedDate":"2023-03-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":179,"author":{"gitId":"Infrix"},"content":"                .append(getAddress())","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"Infrix"},"content":"                .append(\"; Points: \")","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"JavonTeo"},"content":"                .append(getPoints())","lastModifiedDate":"2023-03-20"},{"lineNumber":182,"author":{"gitId":"JavonTeo"},"content":"                .append(\"; Bookmarked: \")","lastModifiedDate":"2023-03-11"},{"lineNumber":183,"author":{"gitId":"JavonTeo"},"content":"                .append(getMarked());","lastModifiedDate":"2023-03-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Junyi00":38,"CloudHill":28,"JavonTeo":12,"jednghk":2,"Infrix":21,"-":92}},{"path":"src/main/java/seedu/loyaltylift/model/customer/CustomerNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.model.customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.util.StringUtil;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":" * Tests that a {@code Customer}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"public class CustomerNameContainsKeywordsPredicate implements Predicate\u003cCustomer\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"    public CustomerNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"    public boolean test(Customer customer) {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(customer.getName().fullName, keyword));","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"                || (other instanceof CustomerNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"                \u0026\u0026 keywords.equals(((CustomerNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Junyi00":5,"CloudHill":4,"-":22}},{"path":"src/main/java/seedu/loyaltylift/model/customer/CustomerType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.model.customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":" * Represents a Customer\u0027s type in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":" * Currently, it is either an individual or an enterprise.","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"public enum CustomerType {","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"    INDIVIDUAL,","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"    ENTERPRISE;","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"    public static final String MESSAGE_FAIL_CONVERSION \u003d \"Unrecognised customer type\";","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"     * Returns CustomerType based on the given {@code customerType}.","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"     * This is to allow users to type short forms of the enum instead of the full string.","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"     * Both upper and lower cases are accepted.","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"     * @param customerType The short form or full string of a CustomerType.","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"     * @return A CustomerType representing the string given.","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"     * @throws IllegalArgumentException Thrown when the string given is unrecognised.","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"    public static CustomerType fromUserFriendlyString(String customerType) {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"        requireNonNull(customerType);","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"        String uCustomerType \u003d customerType.toUpperCase();","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"        switch (uCustomerType) {","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"        case \"IND\":","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"            return CustomerType.INDIVIDUAL;","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"        case \"ENT\":","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"            return CustomerType.ENTERPRISE;","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"        default:","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"            return valueOf(uCustomerType);","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Junyi00":36}},{"path":"src/main/java/seedu/loyaltylift/model/customer/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.model.customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":" * Represents a Customer\u0027s email in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Junyi00":3,"-":68}},{"path":"src/main/java/seedu/loyaltylift/model/customer/Marked.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package seedu.loyaltylift.model.customer;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":" * Represents a Customer\u0027s bookmarked status in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"public class Marked {","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"    public final boolean value;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"     * Constructs a {@code Marked}.","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"     * @param marked A boolean indicating whether the customer is bookmarked or not.","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"    public Marked(boolean marked) {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"        this.value \u003d marked;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"    public String toString() {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"        return value ? \"Yes\" : \"No\";","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"                || (other instanceof Marked // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"                \u0026\u0026 value \u003d\u003d ((Marked) other).value); // state check","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"JavonTeo":29}},{"path":"src/main/java/seedu/loyaltylift/model/customer/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.model.customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":" * Represents a Customer\u0027s phone number in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Junyi00":3,"-":50}},{"path":"src/main/java/seedu/loyaltylift/model/customer/Points.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package seedu.loyaltylift.model.customer;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":" * Represents a Customer\u0027s points in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":" * The minimum points a customer can have is 0.","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"public class Points implements Comparable\u003cPoints\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"    public static final Integer MAXIMUM_POINTS \u003d 999999;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"    public static final Integer MINIMUM_POINTS \u003d 0;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"    public static final Integer MAXIMUM_POINTS_ADD \u003d 999999;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"    public static final Integer MAXIMUM_POINTS_SUBTRACT \u003d -999999;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Points must be a positive integer \"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"            + \"and can only range from \"","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"            + MINIMUM_POINTS","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"            + \" to \"","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"            + MAXIMUM_POINTS;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"    public static final String MESSAGE_CONSTRAINTS_ADDITION \u003d \"Points added must be an integer \"","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"            + \"and can only range from \"","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"            + MAXIMUM_POINTS_SUBTRACT","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"            + \" to \"","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"            + MAXIMUM_POINTS_ADD;","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"    public final Integer value;","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"    public final Integer cumulative;","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"     * Constructs an {@code Points}.","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"     * @param points A valid amount of points.","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"    public Points(Integer points, Integer maxPoints) {","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"        requireNonNull(points);","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"        value \u003d points;","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"        cumulative \u003d maxPoints;","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"     * For adding or subtracting points.","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"Infrix"},"content":"     * @param p Integer points","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"Infrix"},"content":"     * @return a new Points object, value and cumulative depends on whether it is an addition or subtraction.","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"Infrix"},"content":"     * @throws IllegalValueException when points are not valid","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"Infrix"},"content":"    public Points editPoints(Integer p) throws IllegalValueException {","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"Infrix"},"content":"        Points newPoints \u003d p \u003e 0","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"Infrix"},"content":"                ? addPoints(p)","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"Infrix"},"content":"                : subtractPoints(p);","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"Infrix"},"content":"        return newPoints;","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"Infrix"},"content":"    private Points addPoints(Integer p) throws IllegalValueException {","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"Infrix"},"content":"        Integer newPoints \u003d this.value + p;","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"Infrix"},"content":"        Integer newCumulativePoints \u003d this.cumulative + p;","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"Infrix"},"content":"        if (isValidPoints(newPoints) \u0026\u0026 isValidPoints(newCumulativePoints)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"Infrix"},"content":"            return new Points(newPoints, newCumulativePoints);","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"Infrix"},"content":"        } else {","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"Infrix"},"content":"            throw new IllegalValueException(Points.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"Infrix"},"content":"    private Points subtractPoints(Integer p) throws IllegalValueException {","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"Infrix"},"content":"        Integer newPoints \u003d this.value + p;","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"Infrix"},"content":"        if (isValidPoints(newPoints)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"Infrix"},"content":"            return new Points(newPoints, this.cumulative);","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"Infrix"},"content":"        } else {","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"Infrix"},"content":"            throw new IllegalValueException(Points.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"Infrix"},"content":"     * Returns true if a given point is valid.","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"Infrix"},"content":"    public static boolean isValidPoints(Integer test) {","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"Infrix"},"content":"        return (test \u003e\u003d MINIMUM_POINTS \u0026\u0026 test \u003c\u003d MAXIMUM_POINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"Infrix"},"content":"     * Returns true if points to be added or subtracted is within a valid range.","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"Infrix"},"content":"    public static boolean isValidAddition(Integer test) {","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"Infrix"},"content":"        return (test \u003e\u003d MAXIMUM_POINTS_SUBTRACT \u0026\u0026 test \u003c\u003d MAXIMUM_POINTS_ADD);","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"Infrix"},"content":"    public String toString() {","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"Infrix"},"content":"        return value.toString()","lastModifiedDate":"2023-03-17"},{"lineNumber":94,"author":{"gitId":"Infrix"},"content":"                + \" (Cumulative: \"","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"Infrix"},"content":"                + cumulative.toString()","lastModifiedDate":"2023-03-17"},{"lineNumber":96,"author":{"gitId":"Infrix"},"content":"                + \")\";","lastModifiedDate":"2023-03-17"},{"lineNumber":97,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"Infrix"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"Infrix"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"Infrix"},"content":"                || (other instanceof Points // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"Infrix"},"content":"                \u0026\u0026 value.equals(((Points) other).value)) // state check","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"Infrix"},"content":"                \u0026\u0026 cumulative.equals(((Points) other).cumulative);","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"Infrix"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"Infrix"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":112,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":113,"author":{"gitId":"CloudHill"},"content":"    public int compareTo(Points o) {","lastModifiedDate":"2023-03-26"},{"lineNumber":114,"author":{"gitId":"CloudHill"},"content":"        int i \u003d value.compareTo(o.value);","lastModifiedDate":"2023-03-26"},{"lineNumber":115,"author":{"gitId":"CloudHill"},"content":"        return (i !\u003d 0) ? i : cumulative.compareTo(o.cumulative);","lastModifiedDate":"2023-03-26"},{"lineNumber":116,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":117,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"CloudHill":7,"Infrix":110}},{"path":"src/main/java/seedu/loyaltylift/model/customer/UniqueCustomerList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.model.customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.exceptions.CustomerNotFoundException;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.exceptions.DuplicateCustomerException;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":" * A list of customers that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":" * A customer is considered unique by comparing using {@code Customer#isSameCustomer(Customer)}.","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":" * As such, adding and updating of customers uses Customer#isSameCustomer(Customer)","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":" * for equality so as to ensure that the customer being added or updated is unique in terms of identity in the","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":" * UniqueCustomerList. However, the removal of a customer uses Customer#equals(Object) so as to ensure","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":" * that the customer with exactly the same fields will be removed.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":" * @see Customer#isSameCustomer(Customer)","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"public class UniqueCustomerList implements Iterable\u003cCustomer\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"    private final ObservableList\u003cCustomer\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"    private final ObservableList\u003cCustomer\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"     * Returns true if the list contains an equivalent customer as the given argument.","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"    public boolean contains(Customer toCheck) {","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"        return internalList.stream().anyMatch(toCheck::isSameCustomer);","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"     * Adds a customer to the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"     * The customer must not already exist in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"    public void add(Customer toAdd) {","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"            throw new DuplicateCustomerException();","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"     * Replaces the customer {@code target} in the list with {@code editedCustomer}.","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"Junyi00"},"content":"     * The customer identity of {@code editedCustomer} must not be the same as another existing customer in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"    public void setCustomer(Customer target, Customer editedCustomer) {","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"        requireAllNonNull(target, editedCustomer);","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"Junyi00"},"content":"            throw new CustomerNotFoundException();","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":66,"author":{"gitId":"Junyi00"},"content":"        if (!target.isSameCustomer(editedCustomer) \u0026\u0026 contains(editedCustomer)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Junyi00"},"content":"            throw new DuplicateCustomerException();","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"Junyi00"},"content":"        internalList.set(index, editedCustomer);","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"Junyi00"},"content":"     * Removes the equivalent customer from the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Junyi00"},"content":"     * The customer must exist in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"Junyi00"},"content":"    public void remove(Customer toRemove) {","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":80,"author":{"gitId":"Junyi00"},"content":"            throw new CustomerNotFoundException();","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"Junyi00"},"content":"    public Customer getCustomer(String customerUid) {","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"Junyi00"},"content":"        requireNonNull(customerUid);","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"Junyi00"},"content":"        List\u003cCustomer\u003e customers \u003d internalList.stream()","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"Junyi00"},"content":"                .filter(c -\u003e c.getUid().equals(customerUid))","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"Junyi00"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"Junyi00"},"content":"        if (customers.size() \u003e 1) {","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"Junyi00"},"content":"            throw new DuplicateCustomerException();","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"Junyi00"},"content":"        } else if (customers.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"Junyi00"},"content":"            throw new CustomerNotFoundException();","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"Junyi00"},"content":"        return customers.get(0);","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"Junyi00"},"content":"    public void setCustomers(UniqueCustomerList replacement) {","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"Junyi00"},"content":"     * Replaces the contents of this list with {@code customers}.","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"Junyi00"},"content":"     * {@code customers} must not contain duplicate customers.","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"Junyi00"},"content":"    public void setCustomers(List\u003cCustomer\u003e customers) {","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"Junyi00"},"content":"        requireAllNonNull(customers);","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"Junyi00"},"content":"        if (!customersAreUnique(customers)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"Junyi00"},"content":"            throw new DuplicateCustomerException();","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":113,"author":{"gitId":"Junyi00"},"content":"        internalList.setAll(customers);","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":119,"author":{"gitId":"Junyi00"},"content":"    public ObservableList\u003cCustomer\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"Junyi00"},"content":"    public Iterator\u003cCustomer\u003e iterator() {","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"Junyi00"},"content":"                || (other instanceof UniqueCustomerList // instanceof handles nulls","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"Junyi00"},"content":"                        \u0026\u0026 internalList.equals(((UniqueCustomerList) other).internalList));","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"Junyi00"},"content":"     * Returns true if {@code customers} contains only unique customers.","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"Junyi00"},"content":"    private boolean customersAreUnique(List\u003cCustomer\u003e customers) {","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"Junyi00"},"content":"        for (int i \u003d 0; i \u003c customers.size() - 1; i++) {","lastModifiedDate":"2023-03-06"},{"lineNumber":145,"author":{"gitId":"Junyi00"},"content":"            for (int j \u003d i + 1; j \u003c customers.size(); j++) {","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"Junyi00"},"content":"                if (customers.get(i).isSameCustomer(customers.get(j))) {","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Junyi00":65,"-":88}},{"path":"src/main/java/seedu/loyaltylift/model/customer/exceptions/CustomerNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.model.customer.exceptions;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":" * Signals that the operation is unable to find the specified customer.","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"public class CustomerNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Junyi00":6}},{"path":"src/main/java/seedu/loyaltylift/model/customer/exceptions/DuplicateCustomerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.model.customer.exceptions;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":" * Signals that the operation will result in duplicate Customers","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":" * (Customers are considered duplicates if they have the same identity).","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"public class DuplicateCustomerException extends RuntimeException {","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"    public DuplicateCustomerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"        super(\"Operation would result in duplicate customers\");","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Junyi00":11}},{"path":"src/main/java/seedu/loyaltylift/model/order/CreatedDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.model.order;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":" * Represents an Order\u0027s created date in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCreatedDate(String)}","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"public class CreatedDate implements Comparable\u003cCreatedDate\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"CreatedDate can be any date not in the future\";","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"    public static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"    public final LocalDate value;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"     * Constructs a {@code CreatedDate}.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"jednghk"},"content":"     * @param date A valid date.","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"    public CreatedDate(LocalDate date) {","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"        checkArgument(isValidCreatedDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"        value \u003d date;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"     * Returns true if a given string is a valid created date.","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"    public static boolean isValidCreatedDate(LocalDate test) {","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"        LocalDate now \u003d LocalDate.now();","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"        return test.isEqual(now) || test.isBefore(now);","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"        return value.format(DATE_FORMATTER);","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"                || (other instanceof CreatedDate // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"                \u0026\u0026 value.equals(((CreatedDate) other).value)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"CloudHill"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"CloudHill"},"content":"    public int compareTo(CreatedDate o) {","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"CloudHill"},"content":"        return value.compareTo(o.value);","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"CloudHill":60,"jednghk":1}},{"path":"src/main/java/seedu/loyaltylift/model/order/Order.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.model.order;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.attribute.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.attribute.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Note;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":" * Represents an Order in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"public class Order {","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"    // Comparators","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"    public static final Comparator\u003cOrder\u003e SORT_CREATED_DATE \u003d Comparator.comparing(Order::getCreatedDate);","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"    public static final Comparator\u003cOrder\u003e SORT_NAME \u003d Comparator.comparing(Order::getName)","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"            .thenComparing(SORT_CREATED_DATE);","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"    public static final Comparator\u003cOrder\u003e SORT_STATUS \u003d Comparator.comparing(Order::getStatus)","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"            .thenComparing(SORT_CREATED_DATE);","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"    private final Customer customer;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"    private final Name name;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"    private final Quantity quantity;","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"    private final Address address;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"    // Optional fields","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"    private final Status status;","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"    private final CreatedDate createdDate;","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"    private final Note note;","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"     * Order constructor with default values.","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"    public Order(Customer customer, Name name, Quantity quantity, Address address) {","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"        this(customer, name, quantity, address, new Status(), new CreatedDate(LocalDate.now()), new Note(\"\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"     * Order constructor with optional fields.","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"    public Order(Customer customer, Name name, Quantity quantity, Address address,","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"            Status status, CreatedDate createdDate, Note note) {","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"        requireAllNonNull(customer, name, quantity, status, address, createdDate);","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"        this.customer \u003d customer;","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"CloudHill"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"CloudHill"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"CloudHill"},"content":"        this.createdDate \u003d createdDate;","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"CloudHill"},"content":"        this.note \u003d note;","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"    public Customer getCustomer() {","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Junyi00"},"content":"        return customer;","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"CloudHill"},"content":"    public Name getName() {","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"CloudHill"},"content":"        return name;","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"CloudHill"},"content":"    public Quantity getQuantity() {","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"CloudHill"},"content":"        return quantity;","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"CloudHill"},"content":"    public Address getAddress() {","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"CloudHill"},"content":"        return address;","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"CloudHill"},"content":"    public Status getStatus() {","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"CloudHill"},"content":"        return status;","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"CloudHill"},"content":"    public CreatedDate getCreatedDate() {","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"CloudHill"},"content":"        return createdDate;","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"CloudHill"},"content":"    public Note getNote() {","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"CloudHill"},"content":"        return note;","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"Junyi00"},"content":"     * Returns a new {@code Order} with its customer association to the specified customer.","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"Junyi00"},"content":"     * @param customer The new customer associated to.","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"Junyi00"},"content":"     * @return A new Order instance.","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"Junyi00"},"content":"    public Order newOrderWithCustomer(Customer customer) {","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"CloudHill"},"content":"        return new Order(customer, getName(), getQuantity(), getAddress(), getStatus(), getCreatedDate(), getNote());","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"CloudHill"},"content":"     * Returns true if both orders have the same name.","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"CloudHill"},"content":"     * This defines a weaker notion of equality between two orders.","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"CloudHill"},"content":"    public boolean isSameOrder(Order otherOrder) {","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"CloudHill"},"content":"        return equals(otherOrder);","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"CloudHill"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"CloudHill"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"CloudHill"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"CloudHill"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"CloudHill"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"CloudHill"},"content":"        if (!(other instanceof Order)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"CloudHill"},"content":"            return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"Junyi00"},"content":"        Order otherOrder \u003d (Order) other;","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"Junyi00"},"content":"        return otherOrder.getCustomer().equals(getCustomer())","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"Junyi00"},"content":"                \u0026\u0026 otherOrder.getName().equals(getName())","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"Junyi00"},"content":"                \u0026\u0026 otherOrder.getQuantity().equals(getQuantity())","lastModifiedDate":"2023-03-18"},{"lineNumber":122,"author":{"gitId":"Junyi00"},"content":"                \u0026\u0026 otherOrder.getAddress().equals(getAddress())","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"CloudHill"},"content":"                \u0026\u0026 otherOrder.getStatus().equals(getStatus())","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"Junyi00"},"content":"                \u0026\u0026 otherOrder.getCreatedDate().equals(getCreatedDate())","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"CloudHill"},"content":"                \u0026\u0026 otherOrder.getNote().equals(getNote());","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"CloudHill"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"CloudHill"},"content":"        return Objects.hash(customer, name, quantity, address, status, createdDate, note);","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"CloudHill"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"CloudHill"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"Junyi00"},"content":"        builder.append(String.format(\"[%s]\", customer.getName()))","lastModifiedDate":"2023-03-18"},{"lineNumber":137,"author":{"gitId":"Junyi00"},"content":"                .append(getName())","lastModifiedDate":"2023-03-18"},{"lineNumber":138,"author":{"gitId":"CloudHill"},"content":"                .append(\"; Quantity: \")","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"CloudHill"},"content":"                .append(getQuantity())","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"CloudHill"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"CloudHill"},"content":"                .append(getAddress())","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"CloudHill"},"content":"                .append(\"; Status: \")","lastModifiedDate":"2023-03-23"},{"lineNumber":143,"author":{"gitId":"CloudHill"},"content":"                .append(getStatus())","lastModifiedDate":"2023-03-23"},{"lineNumber":144,"author":{"gitId":"CloudHill"},"content":"                .append(\"; CreatedDate: \")","lastModifiedDate":"2023-03-06"},{"lineNumber":145,"author":{"gitId":"CloudHill"},"content":"                .append(getCreatedDate());","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"CloudHill"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Junyi00":25,"CloudHill":121,"jednghk":3}},{"path":"src/main/java/seedu/loyaltylift/model/order/OrderNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.model.order;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import java.util.List;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.commons.util.StringUtil;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":" * Tests that an {@code Order}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"public class OrderNameContainsKeywordsPredicate implements Predicate\u003cOrder\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"    public OrderNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"    public boolean test(Order customer) {","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(customer.getName().fullName, keyword));","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"                || (other instanceof OrderNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"                \u0026\u0026 keywords.equals(((OrderNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"CloudHill":31}},{"path":"src/main/java/seedu/loyaltylift/model/order/OrderStatusPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.model.order;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":" * Tests that an {@code Order}\u0027s latest {@code Status} matches the given status.","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"public class OrderStatusPredicate implements Predicate\u003cOrder\u003e {","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"    private final StatusValue status;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"    public OrderStatusPredicate(StatusValue status) {","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"    public boolean test(Order order) {","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"        return order.getStatus().getLatestStatus().getStatusValue().equals(status);","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"                || (other instanceof OrderStatusPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"                \u0026\u0026 status.equals(((OrderStatusPredicate) other).status)); // state check","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"CloudHill":27}},{"path":"src/main/java/seedu/loyaltylift/model/order/Quantity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.model.order;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":" * Represents an Order\u0027s quantity in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidQuantity(Integer)}","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"public class Quantity {","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"            \"Quantity should be a positive integer\";","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"    public final Integer value;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"     * Constructs a {@code Quantity}.","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"     * @param quantity A valid quantity.","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"    public Quantity(Integer quantity) {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(quantity);","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"        checkArgument(isValidQuantity(quantity), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"        value \u003d quantity;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"     * Returns true if a given string is a valid quantity.","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"    public static boolean isValidQuantity(Integer test) {","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"        return test \u003e 0;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"        return Integer.toString(value);","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"                || (other instanceof Quantity // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"                \u0026\u0026 value \u003d\u003d (((Quantity) other).value)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"CloudHill":52}},{"path":"src/main/java/seedu/loyaltylift/model/order/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.model.order;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import java.util.List;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":" * Represents the collection of {@code StatusUpdate} of an Order.","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"public class Status implements Comparable\u003cStatus\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Status updates should not be empty\";","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"    private final List\u003cStatusUpdate\u003e statusUpdates;","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"jednghk"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"     * Constructs a {@code Status} from a list of {@code StatusUpdate}.","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"     * An unmodifiable copy of the status updates is created prevent accidental modification.","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"     * @param statusUpdates A list of status updates.","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"    public Status(List\u003cStatusUpdate\u003e statusUpdates) {","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"        requireNonNull(statusUpdates);","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"        checkArgument(isValidStatus(statusUpdates), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"        this.statusUpdates \u003d List.copyOf(statusUpdates.stream().sorted().collect(Collectors.toList()));","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"     * Constructs a {@code Status}.","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"     * Creates a single status update with its date set to the current time.","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"    public Status() {","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"        this.statusUpdates \u003d List.of(","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"                new StatusUpdate(StatusValue.PENDING, LocalDate.now())","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"        );","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"     * Returns true if a given list is a valid Status.","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"    public static boolean isValidStatus(List\u003cStatusUpdate\u003e statusUpdates) {","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"        return statusUpdates.size() \u003e 0;","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"     * Returns a new {@code Status} with a copy of this StatusUpdates and","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"     * a new StatusUpdate that has the next logical StatusValue and given date.","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"     * Should not be called when Status is already at completed or cancelled stage.","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"     * @param date Date of the next StatusUpdate.","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"    public Status newStatusWithNewUpdate(LocalDate date) {","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"Junyi00"},"content":"        if (getLatestStatus().statusValue.equals(StatusValue.COMPLETED)","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"Junyi00"},"content":"                || getLatestStatus().statusValue.equals(StatusValue.CANCELLED)) {","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"            throw new IllegalStateException();","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"        StatusUpdate latestStatusUpdate \u003d getLatestStatus();","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"Junyi00"},"content":"        ArrayList\u003cStatusUpdate\u003e newStatusUpdates \u003d new ArrayList\u003c\u003e(this.statusUpdates);","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"Junyi00"},"content":"        newStatusUpdates.add(latestStatusUpdate.nextStatusUpdate(date));","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"Junyi00"},"content":"        return new Status(newStatusUpdates);","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"Junyi00"},"content":"     * Returns a new {@code Status} with a copy of this StatusUpdate with the","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"Junyi00"},"content":"     * last StatusUpdate removed.","lastModifiedDate":"2023-03-25"},{"lineNumber":71,"author":{"gitId":"Junyi00"},"content":"     * Should not be called when Status is at Pending stage.","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":73,"author":{"gitId":"Junyi00"},"content":"    public Status newStatusWithRemoveLatest() {","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"Junyi00"},"content":"        if (getLatestStatus().statusValue.equals(StatusValue.PENDING)) {","lastModifiedDate":"2023-03-25"},{"lineNumber":75,"author":{"gitId":"Junyi00"},"content":"            throw new IllegalStateException();","lastModifiedDate":"2023-03-25"},{"lineNumber":76,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":77,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":78,"author":{"gitId":"Junyi00"},"content":"        ArrayList\u003cStatusUpdate\u003e newStatusUpdates \u003d new ArrayList\u003c\u003e(this.statusUpdates);","lastModifiedDate":"2023-03-25"},{"lineNumber":79,"author":{"gitId":"Junyi00"},"content":"        newStatusUpdates.remove(newStatusUpdates.size() - 1);","lastModifiedDate":"2023-03-25"},{"lineNumber":80,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":81,"author":{"gitId":"Junyi00"},"content":"        return new Status(newStatusUpdates);","lastModifiedDate":"2023-03-25"},{"lineNumber":82,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":83,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":84,"author":{"gitId":"Junyi00"},"content":"    public List\u003cStatusUpdate\u003e getStatusUpdates() {","lastModifiedDate":"2023-03-25"},{"lineNumber":85,"author":{"gitId":"Junyi00"},"content":"        return List.copyOf(statusUpdates);","lastModifiedDate":"2023-03-25"},{"lineNumber":86,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Junyi00"},"content":"    public StatusUpdate getLatestStatus() {","lastModifiedDate":"2023-03-25"},{"lineNumber":89,"author":{"gitId":"Junyi00"},"content":"        return statusUpdates.get(statusUpdates.size() - 1);","lastModifiedDate":"2023-03-25"},{"lineNumber":90,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":92,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":93,"author":{"gitId":"Junyi00"},"content":"     * 2 {@code Status} are equal if all of its {@code StatusUpdate} are equal.","lastModifiedDate":"2023-03-25"},{"lineNumber":94,"author":{"gitId":"Junyi00"},"content":"     * @param other The object to compare to.","lastModifiedDate":"2023-03-25"},{"lineNumber":95,"author":{"gitId":"Junyi00"},"content":"     * @return True if the 2 Status are the same, False otherwise.","lastModifiedDate":"2023-03-25"},{"lineNumber":96,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":97,"author":{"gitId":"Junyi00"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-25"},{"lineNumber":98,"author":{"gitId":"Junyi00"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-25"},{"lineNumber":99,"author":{"gitId":"Junyi00"},"content":"                || (other instanceof Status // instanceof handles nulls","lastModifiedDate":"2023-03-25"},{"lineNumber":100,"author":{"gitId":"Junyi00"},"content":"                \u0026\u0026 statusUpdates.equals(((Status) other).statusUpdates)); // state check","lastModifiedDate":"2023-03-25"},{"lineNumber":101,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":102,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":103,"author":{"gitId":"Junyi00"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":104,"author":{"gitId":"Junyi00"},"content":"    public String toString() {","lastModifiedDate":"2023-03-25"},{"lineNumber":105,"author":{"gitId":"Junyi00"},"content":"        return statusUpdates.toString();","lastModifiedDate":"2023-03-25"},{"lineNumber":106,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":107,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"CloudHill"},"content":"    public int compareTo(Status o) {","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"CloudHill"},"content":"        return getLatestStatus().compareTo(o.getLatestStatus());","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Junyi00":96,"CloudHill":16,"jednghk":1}},{"path":"src/main/java/seedu/loyaltylift/model/order/StatusUpdate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.model.order;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":" * StatusUpdate that encapsulates a StatusValue and a date.","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":" * These updates form a Status of an Order.","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"public class StatusUpdate implements Comparable\u003cStatusUpdate\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"    public static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"    public final StatusValue statusValue;","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"    public final LocalDate date;","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"     * Constructs a {@code StatusUpdate}.","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"     * @param statusValue Status Value associated with this update.","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"     * @param date A valid date.","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"    public StatusUpdate(StatusValue statusValue, LocalDate date) {","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"        requireNonNull(statusValue);","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"        this.statusValue \u003d statusValue;","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"     * Returns a new {@code StatusUpdate} which StatusValue is the next logical stage","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"     * with the given date.","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"     * @param date A valid date.","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"     * @return A new StatusUpdate.","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"    public StatusUpdate nextStatusUpdate(LocalDate date) {","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"        // completed or cancelled should be the last stage","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"        if (this.statusValue.equals(StatusValue.COMPLETED)","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"                || this.statusValue.equals(StatusValue.CANCELLED)) {","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"            throw new IllegalStateException();","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"        return new StatusUpdate(this.statusValue.nextValue(), date);","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"     * Returns a new {@code StatusUpdate} which StatusValue is the next logical stage","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"     * with the current date.","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"     * @return A new StatusUpdate.","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"    public StatusUpdate nextStatusUpdate() {","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"        return nextStatusUpdate(LocalDate.now());","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"Junyi00"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"Junyi00"},"content":"        return this.date;","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"Junyi00"},"content":"    public StatusValue getStatusValue() {","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"        return this.statusValue;","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"Junyi00"},"content":"    public int compareTo(StatusUpdate o) {","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"Junyi00"},"content":"        return this.statusValue.compareTo(o.statusValue);","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"Junyi00"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"Junyi00"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-25"},{"lineNumber":71,"author":{"gitId":"Junyi00"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"Junyi00"},"content":"                || (other instanceof StatusUpdate // instanceof handles nulls","lastModifiedDate":"2023-03-25"},{"lineNumber":73,"author":{"gitId":"Junyi00"},"content":"                \u0026\u0026 statusValue.equals(((StatusUpdate) other).statusValue)","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"Junyi00"},"content":"                \u0026\u0026 date.equals(((StatusUpdate) other).date)); // state check","lastModifiedDate":"2023-03-25"},{"lineNumber":75,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":76,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":77,"author":{"gitId":"Junyi00"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":78,"author":{"gitId":"Junyi00"},"content":"    public String toString() {","lastModifiedDate":"2023-03-25"},{"lineNumber":79,"author":{"gitId":"Junyi00"},"content":"        return String.format(\"[%s] %s\", statusValue, date.format(DATE_FORMATTER));","lastModifiedDate":"2023-03-25"},{"lineNumber":80,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":81,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"Junyi00":81}},{"path":"src/main/java/seedu/loyaltylift/model/order/StatusValue.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.model.order;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":" * Enum that represents the stage of an Order.","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"public enum StatusValue {","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"    PENDING, PAID, SHIPPED, COMPLETED, CANCELLED;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"    public static final String MESSAGE_FAIL_CONVERSION \u003d \"Unrecognised order type\";","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"     * Returns a {@code StatusValue} based on the given string.","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"     * @param status The given string.","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"    public static StatusValue fromString(String status) {","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"        requireNonNull(status);","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"        return valueOf(status.toUpperCase());","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"     * Returns a {@code StatusValue} that is the next logical stage of an Order.","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"     * The logical order of these stages is defined as the order of the","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"     * enum values above.","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"     * Should not be called when StatusValue is Pending or Cancelled.","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"     * @return A {@code StatusValue}","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"    public StatusValue nextValue() {","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"        if (this.equals(COMPLETED) || this.equals(CANCELLED)) {","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"            throw new IllegalStateException();","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"        int pos \u003d this.ordinal();","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"        return StatusValue.values()[pos + 1];","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"    public String toString() {","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"        String str \u003d super.toString();","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"        return str.substring(0, 1).toUpperCase()","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"                + str.substring(1).toLowerCase();","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"Junyi00":44}},{"path":"src/main/java/seedu/loyaltylift/model/order/UniqueOrderList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.model.order;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.exceptions.DuplicateOrderException;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.exceptions.OrderNotFoundException;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":" * A list of orders that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":" * An order is considered unique by comparing using {@code Order#isSameOrder(Order)}. As such, adding and updating of","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":" * orders uses Order#isSameOrder(Order) for equality so as to ensure that the order being added or updated is","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":" * unique in terms of identity in the UniqueOrderList. However, the removal of an order uses Order#equals(Object) so","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":" * as to ensure that the order with exactly the same fields will be removed.","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":" *","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":" *","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":" * @see Order#isSameOrder(Order)","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"public class UniqueOrderList implements Iterable\u003cOrder\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"    private final ObservableList\u003cOrder\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"    private final ObservableList\u003cOrder\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"     * Returns true if the list contains an equivalent order as the given argument.","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"    public boolean contains(Order toCheck) {","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"        return internalList.stream().anyMatch(toCheck::isSameOrder);","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"     * Adds an order to the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"     * The order must not already exist in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"    public void add(Order toAdd) {","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"            throw new DuplicateOrderException();","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"     * Replaces the order {@code target} in the list with {@code editedOrder}.","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"CloudHill"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"CloudHill"},"content":"     * The order identity of {@code editedOrder} must not be the same as another existing order in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"CloudHill"},"content":"    public void setOrder(Order target, Order editedOrder) {","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"CloudHill"},"content":"        requireAllNonNull(target, editedOrder);","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"CloudHill"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"CloudHill"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"CloudHill"},"content":"            throw new OrderNotFoundException();","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"CloudHill"},"content":"        if (!target.isSameOrder(editedOrder) \u0026\u0026 contains(editedOrder)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"CloudHill"},"content":"            throw new DuplicateOrderException();","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"CloudHill"},"content":"        internalList.set(index, editedOrder);","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"CloudHill"},"content":"     * Removes the equivalent order from the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"CloudHill"},"content":"     * The order must exist in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"CloudHill"},"content":"    public void remove(Order toRemove) {","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"CloudHill"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"CloudHill"},"content":"            throw new OrderNotFoundException();","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"CloudHill"},"content":"    public void setOrders(UniqueOrderList replacement) {","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"CloudHill"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"CloudHill"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"CloudHill"},"content":"     * Replaces the contents of this list with {@code orders}.","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"CloudHill"},"content":"     * {@code orders} must not contain duplicate orders.","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"CloudHill"},"content":"    public void setOrders(List\u003cOrder\u003e orders) {","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"CloudHill"},"content":"        requireAllNonNull(orders);","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"CloudHill"},"content":"        if (!ordersAreUnique(orders)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"CloudHill"},"content":"            throw new DuplicateOrderException();","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"CloudHill"},"content":"        internalList.setAll(orders);","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"CloudHill"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"CloudHill"},"content":"    public ObservableList\u003cOrder\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"CloudHill"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"CloudHill"},"content":"    public Iterator\u003cOrder\u003e iterator() {","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"CloudHill"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"CloudHill"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"CloudHill"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"CloudHill"},"content":"                || (other instanceof UniqueOrderList // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"CloudHill"},"content":"                        \u0026\u0026 internalList.equals(((UniqueOrderList) other).internalList));","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"CloudHill"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"CloudHill"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"CloudHill"},"content":"     * Returns true if {@code orders} contains only unique orders.","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"CloudHill"},"content":"    private boolean ordersAreUnique(List\u003cOrder\u003e orders) {","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"CloudHill"},"content":"        for (int i \u003d 0; i \u003c orders.size() - 1; i++) {","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"CloudHill"},"content":"            for (int j \u003d i + 1; j \u003c orders.size(); j++) {","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"CloudHill"},"content":"                if (orders.get(i).isSameOrder(orders.get(j))) {","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"CloudHill"},"content":"                    return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"CloudHill"},"content":"                }","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"CloudHill"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"CloudHill"},"content":"        return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"CloudHill":137}},{"path":"src/main/java/seedu/loyaltylift/model/order/exceptions/DuplicateOrderException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.model.order.exceptions;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":" * Signals that the operation will result in duplicate Orders (Orders are considered duplicates if they have the same","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":" * identity).","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"public class DuplicateOrderException extends RuntimeException {","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"    public DuplicateOrderException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"        super(\"Operation would result in duplicate orders\");","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"CloudHill":11}},{"path":"src/main/java/seedu/loyaltylift/model/order/exceptions/OrderNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.model.order.exceptions;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":" * Signals that the operation is unable to find the specified order.","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"public class OrderNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"CloudHill":6}},{"path":"src/main/java/seedu/loyaltylift/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.model.tag;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Junyi00":2,"-":52}},{"path":"src/main/java/seedu/loyaltylift/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.model.util;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import java.util.List;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.AddressBook;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.attribute.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.attribute.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.CustomerType;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Email;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Phone;","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.CreatedDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Quantity;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Status;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.order.StatusUpdate;","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.order.StatusValue;","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.tag.Tag;","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"    public static Customer[] getSampleCustomers() {","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"        return new Customer[] {","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"            new Customer(CustomerType.INDIVIDUAL, new Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"                    new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"            new Customer(CustomerType.INDIVIDUAL, new Name(\"Bernice Yu\"), new Phone(\"99272758\"),","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"                    new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"            new Customer(CustomerType.INDIVIDUAL, new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"                    new Email(\"charlotte@example.com\"),","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                    getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"            new Customer(CustomerType.INDIVIDUAL, new Name(\"David Li\"), new Phone(\"91031282\"),","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"                    new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                    getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"            new Customer(CustomerType.INDIVIDUAL, new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"),","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"                    new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                    getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"            new Customer(CustomerType.INDIVIDUAL, new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"),","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"                    new Email(\"royb@example.com\"),","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                    getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"        for (Customer sampleCustomer : getSampleCustomers()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"Junyi00"},"content":"            sampleAb.addCustomer(sampleCustomer);","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"CloudHill"},"content":"     * Returns a Quantity from a given string.","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"CloudHill"},"content":"    public static Quantity getQuantity(String quantity) {","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"CloudHill"},"content":"        return new Quantity(Integer.parseInt(quantity));","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"Junyi00"},"content":"     * Returns a new Status which StatusValue is Pending.","lastModifiedDate":"2023-03-25"},{"lineNumber":83,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"Junyi00"},"content":"    public static Status getInitialStatus(String date) {","lastModifiedDate":"2023-03-25"},{"lineNumber":85,"author":{"gitId":"Junyi00"},"content":"        LocalDate statusDate \u003d LocalDate.parse(date, StatusUpdate.DATE_FORMATTER);","lastModifiedDate":"2023-03-25"},{"lineNumber":86,"author":{"gitId":"Junyi00"},"content":"        return new Status(List.of(","lastModifiedDate":"2023-03-25"},{"lineNumber":87,"author":{"gitId":"Junyi00"},"content":"                new StatusUpdate(StatusValue.PENDING, statusDate)","lastModifiedDate":"2023-03-25"},{"lineNumber":88,"author":{"gitId":"Junyi00"},"content":"        ));","lastModifiedDate":"2023-03-25"},{"lineNumber":89,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":92,"author":{"gitId":"Junyi00"},"content":"     * Returns a new Status with StatueValue one ahead of the given Status.","lastModifiedDate":"2023-03-25"},{"lineNumber":93,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":94,"author":{"gitId":"Junyi00"},"content":"    public static Status getNextStatus(Status status, String date) {","lastModifiedDate":"2023-03-25"},{"lineNumber":95,"author":{"gitId":"Junyi00"},"content":"        LocalDate statusDate \u003d LocalDate.parse(date, StatusUpdate.DATE_FORMATTER);","lastModifiedDate":"2023-03-25"},{"lineNumber":96,"author":{"gitId":"Junyi00"},"content":"        return status.newStatusWithNewUpdate(statusDate);","lastModifiedDate":"2023-03-25"},{"lineNumber":97,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":98,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":99,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"CloudHill"},"content":"     * Returns a CreatedDate from a given string.","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"CloudHill"},"content":"    public static CreatedDate getCreatedDate(String createdDate) {","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"CloudHill"},"content":"        return new CreatedDate(LocalDate.parse(createdDate, CreatedDate.DATE_FORMATTER));","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Junyi00":41,"CloudHill":22,"jednghk":2,"-":41}},{"path":"src/main/java/seedu/loyaltylift/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":" * Represents a storage for {@link seedu.loyaltylift.model.AddressBook}.","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Junyi00":4,"-":41}},{"path":"src/main/java/seedu/loyaltylift/storage/JsonAdaptedCustomer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.attribute.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.attribute.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Note;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.CustomerType;","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Email;","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.customer.Marked;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Phone;","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.model.customer.Points;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.tag.Tag;","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":" * Jackson-friendly version of {@link Customer}.","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"class JsonAdaptedCustomer {","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Customer\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"    private final String customerType;","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"    private final Integer points;","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"    private final Integer cumulativePoints;","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"    private final Boolean marked;","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"    private final String note;","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"     * Constructs a {@code JsonAdaptedCustomer} with the given customer details.","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"    public JsonAdaptedCustomer(@JsonProperty(\"customerType\") String customerType, @JsonProperty(\"name\") String name,","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"                               @JsonProperty(\"phone\") String phone, @JsonProperty(\"email\") String email,","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"                               @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"Infrix"},"content":"                               @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Infrix"},"content":"                               @JsonProperty(\"points\") Integer points,","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"JavonTeo"},"content":"                               @JsonProperty(\"cumulativePoints\") Integer cumulativePoints,","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"CloudHill"},"content":"                               @JsonProperty(\"marked\") Boolean marked,","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"CloudHill"},"content":"                               @JsonProperty(\"note\") String note) {","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"        this.customerType \u003d customerType;","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"Infrix"},"content":"        this.points \u003d points;","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"Infrix"},"content":"        this.cumulativePoints \u003d cumulativePoints;","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"JavonTeo"},"content":"        this.marked \u003d marked;","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"CloudHill"},"content":"        this.note \u003d note;","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"Junyi00"},"content":"     * Converts a given {@code Customer} into this class for Jackson use.","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"Junyi00"},"content":"    public JsonAdaptedCustomer(Customer source) {","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Junyi00"},"content":"        customerType \u003d source.getCustomerType().toString();","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"Infrix"},"content":"        points \u003d source.getPoints().value;","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"Infrix"},"content":"        cumulativePoints \u003d source.getPoints().cumulative;","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"JavonTeo"},"content":"        marked \u003d source.getMarked().value;","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"CloudHill"},"content":"        note \u003d source.getNote().value;","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"Junyi00"},"content":"     * Converts this Jackson-friendly adapted customer object into the model\u0027s {@code Customer} object.","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"Junyi00"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted customer.","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"Junyi00"},"content":"    public Customer toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"Junyi00"},"content":"        if (customerType \u003d\u003d null) {","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"Junyi00"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-03-07"},{"lineNumber":95,"author":{"gitId":"Junyi00"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, CustomerType.class.getSimpleName()));","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"Junyi00"},"content":"        final CustomerType modelCustomerType;","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"Junyi00"},"content":"        try {","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"Junyi00"},"content":"            modelCustomerType \u003d CustomerType.valueOf(customerType); // should not be stored as friendly user string","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"Junyi00"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"Junyi00"},"content":"            throw new IllegalValueException(CustomerType.MESSAGE_FAIL_CONVERSION);","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"Junyi00"},"content":"        final List\u003cTag\u003e customerTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"Junyi00"},"content":"            customerTags.add(tag.toModelType());","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"Junyi00"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(customerTags);","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"Infrix"},"content":"        if (points \u003d\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"Infrix"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Points.class.getSimpleName()));","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"Infrix"},"content":"        if (!Points.isValidPoints(points)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":147,"author":{"gitId":"Infrix"},"content":"            throw new IllegalValueException(Points.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":148,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"Infrix"},"content":"        if (cumulativePoints \u003d\u003d null) {","lastModifiedDate":"2023-03-17"},{"lineNumber":150,"author":{"gitId":"Infrix"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Points.class.getSimpleName()));","lastModifiedDate":"2023-03-17"},{"lineNumber":151,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":152,"author":{"gitId":"Infrix"},"content":"        if (!Points.isValidPoints(cumulativePoints)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":153,"author":{"gitId":"Infrix"},"content":"            throw new IllegalValueException(Points.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":154,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":155,"author":{"gitId":"Infrix"},"content":"        final Points modelPoints \u003d new Points(points, cumulativePoints);","lastModifiedDate":"2023-03-17"},{"lineNumber":156,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"JavonTeo"},"content":"        if (marked \u003d\u003d null) {","lastModifiedDate":"2023-03-20"},{"lineNumber":158,"author":{"gitId":"JavonTeo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Marked.class.getSimpleName()));","lastModifiedDate":"2023-03-20"},{"lineNumber":159,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":160,"author":{"gitId":"JavonTeo"},"content":"        final Marked modelMarked \u003d new Marked(marked);","lastModifiedDate":"2023-03-20"},{"lineNumber":161,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":162,"author":{"gitId":"CloudHill"},"content":"        if (note \u003d\u003d null) {","lastModifiedDate":"2023-03-18"},{"lineNumber":163,"author":{"gitId":"CloudHill"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Note.class.getSimpleName()));","lastModifiedDate":"2023-03-18"},{"lineNumber":164,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":165,"author":{"gitId":"CloudHill"},"content":"        final Note modelNote \u003d new Note(note);","lastModifiedDate":"2023-03-18"},{"lineNumber":166,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":167,"author":{"gitId":"CloudHill"},"content":"        return new Customer(modelCustomerType, modelName, modelPhone, modelEmail, modelAddress, modelTags,","lastModifiedDate":"2023-03-18"},{"lineNumber":168,"author":{"gitId":"CloudHill"},"content":"                modelPoints, modelMarked, modelNote);","lastModifiedDate":"2023-03-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Junyi00":36,"CloudHill":14,"JavonTeo":9,"jednghk":2,"Infrix":24,"-":86}},{"path":"src/main/java/seedu/loyaltylift/storage/JsonAdaptedOrder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.storage;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import java.util.List;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.AddressBook;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.attribute.Address;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.attribute.Name;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Note;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.order.CreatedDate;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.order.Quantity;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.order.Status;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.order.StatusUpdate;","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":" * Jackson-friendly version of {@link Order}.","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"public class JsonAdaptedOrder {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"    public static final String CUSTOMER_ID_MESSAGE_FIELD \u003d \"Customer ID\";","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Order\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"    private final String customerId;","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"    private final String name;","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"    private final Integer quantity;","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"    private final List\u003cJsonAdaptedStatusUpdate\u003e statusUpdates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"    private final String address;","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"    private final String createdDate;","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"    private final String note;","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"     * Constructs a {@code JsonAdaptedOrder} with the given order details.","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"    public JsonAdaptedOrder(@JsonProperty(\"customerId\") String customerId,","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"                            @JsonProperty(\"name\") String name,","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"                            @JsonProperty(\"phone\") Integer quantity,","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"                            @JsonProperty(\"statusUpdates\") List\u003cJsonAdaptedStatusUpdate\u003e statusUpdates,","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"                            @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"                            @JsonProperty(\"createdDate\") String createdDate,","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"CloudHill"},"content":"                            @JsonProperty(\"note\") String note) {","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"        this.customerId \u003d customerId;","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"        this.createdDate \u003d createdDate;","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"CloudHill"},"content":"        this.note \u003d note;","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"Junyi00"},"content":"        if (statusUpdates !\u003d null) {","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"            this.statusUpdates.addAll(statusUpdates);","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"Junyi00"},"content":"     * Converts a given {@code Order} into this class for Jackson use.","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"Junyi00"},"content":"    public JsonAdaptedOrder(Order source) {","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"Junyi00"},"content":"        customerId \u003d source.getCustomer().getUid();","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"Junyi00"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"Junyi00"},"content":"        quantity \u003d source.getQuantity().value;","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"Junyi00"},"content":"        statusUpdates.addAll(source.getStatus().getStatusUpdates().stream()","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"Junyi00"},"content":"                .map(JsonAdaptedStatusUpdate::new)","lastModifiedDate":"2023-03-25"},{"lineNumber":71,"author":{"gitId":"Junyi00"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"Junyi00"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"Junyi00"},"content":"        createdDate \u003d source.getCreatedDate().toString();","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"CloudHill"},"content":"        note \u003d source.getNote().value;","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"Junyi00"},"content":"     * Converts this Jackson-friendly adapted customer object into the model\u0027s {@code Order} object.","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"Junyi00"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"Junyi00"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted order.","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"Junyi00"},"content":"    public Order toModelType(AddressBook addressBook) throws IllegalValueException {","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"Junyi00"},"content":"        if (customerId \u003d\u003d null) {","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"Junyi00"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, CUSTOMER_ID_MESSAGE_FIELD));","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"Junyi00"},"content":"        Customer customer \u003d addressBook.getCustomer(customerId);","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"Junyi00"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"Junyi00"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"Junyi00"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"Junyi00"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"Junyi00"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"Junyi00"},"content":"        if (quantity \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"Junyi00"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"Junyi00"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Quantity.class.getSimpleName()));","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"Junyi00"},"content":"        if (!Quantity.isValidQuantity(quantity)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"Junyi00"},"content":"            throw new IllegalValueException(Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"Junyi00"},"content":"        final Quantity modelQuantity \u003d new Quantity(quantity);","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"Junyi00"},"content":"        final List\u003cStatusUpdate\u003e modelStatusUpdates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":106,"author":{"gitId":"Junyi00"},"content":"        for (JsonAdaptedStatusUpdate statusUpdate : statusUpdates) {","lastModifiedDate":"2023-03-25"},{"lineNumber":107,"author":{"gitId":"Junyi00"},"content":"            modelStatusUpdates.add(statusUpdate.toModelType());","lastModifiedDate":"2023-03-25"},{"lineNumber":108,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":109,"author":{"gitId":"Junyi00"},"content":"        if (!Status.isValidStatus(modelStatusUpdates)) {","lastModifiedDate":"2023-03-25"},{"lineNumber":110,"author":{"gitId":"Junyi00"},"content":"            throw new IllegalValueException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-25"},{"lineNumber":111,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":112,"author":{"gitId":"Junyi00"},"content":"        final Status modelStatus \u003d new Status(modelStatusUpdates);","lastModifiedDate":"2023-03-25"},{"lineNumber":113,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":114,"author":{"gitId":"Junyi00"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"Junyi00"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"Junyi00"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"Junyi00"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"Junyi00"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"Junyi00"},"content":"        if (createdDate \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"Junyi00"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"Junyi00"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, CreatedDate.class.getSimpleName()));","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"Junyi00"},"content":"        LocalDate dateObject;","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"Junyi00"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"Junyi00"},"content":"            dateObject \u003d LocalDate.parse(createdDate, CreatedDate.DATE_FORMATTER);","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"Junyi00"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"Junyi00"},"content":"            throw new IllegalValueException(CreatedDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":134,"author":{"gitId":"Junyi00"},"content":"        if (!CreatedDate.isValidCreatedDate(dateObject)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"Junyi00"},"content":"            throw new IllegalValueException(CreatedDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"Junyi00"},"content":"        final CreatedDate modelCreatedDate \u003d new CreatedDate(dateObject);","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"CloudHill"},"content":"        if (note \u003d\u003d null) {","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"CloudHill"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Note.class.getSimpleName()));","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"CloudHill"},"content":"        final Note modelNote \u003d new Note(note);","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"CloudHill"},"content":"        return new Order(customer, modelName, modelQuantity, modelAddress, modelStatus, modelCreatedDate, modelNote);","lastModifiedDate":"2023-03-23"},{"lineNumber":145,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Junyi00":132,"CloudHill":14}},{"path":"src/main/java/seedu/loyaltylift/storage/JsonAdaptedStatusUpdate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.storage;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.order.StatusUpdate;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.order.StatusValue;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":" * Jackson-friendly version of {@link StatusUpdate}.","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"public class JsonAdaptedStatusUpdate {","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"    private final String statusValue;","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"    private final String date;","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"     * Constructs a {@code JsonAdaptedStatusUpdate} with the given {@code statusValue} and","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"     * {@code date}.","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"    public JsonAdaptedStatusUpdate(@JsonProperty(\"statusValue\") String statusValue,","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"                                   @JsonProperty(\"date\") String date) {","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"        this.statusValue \u003d statusValue;","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"     * Converts a given {@code StatusUpdate} into this class for Jackson use.","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"    public JsonAdaptedStatusUpdate(StatusUpdate source) {","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"        statusValue \u003d source.getStatusValue().toString();","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"        date \u003d source.getDate().format(StatusUpdate.DATE_FORMATTER);","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"     * Converts this Jackson-friendly adapted status update object into the model\u0027s {@code StatusUpdate} object.","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"    public StatusUpdate toModelType() {","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"        StatusValue modelStatusValue \u003d StatusValue.fromString(statusValue);","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"        LocalDate modelDate \u003d LocalDate.parse(date, StatusUpdate.DATE_FORMATTER);","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"        return new StatusUpdate(modelStatusValue, modelDate);","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"Junyi00":47}},{"path":"src/main/java/seedu/loyaltylift/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.tag.Tag;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Junyi00":3,"-":45}},{"path":"src/main/java/seedu/loyaltylift/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.LogsCenter;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.util.FileUtil;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.util.JsonUtil;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Junyi00":7,"-":73}},{"path":"src/main/java/seedu/loyaltylift/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.AddressBook;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"    public static final String MESSAGE_DUPLICATE_CUSTOMER \u003d \"Customers list contains duplicate customer(s).\";","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"    public static final String MESSAGE_DUPLICATE_ORDER \u003d \"Orders list contains duplicate orders(s).\";","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"    private final List\u003cJsonAdaptedCustomer\u003e customers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"    private final List\u003cJsonAdaptedOrder\u003e orders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given customers.","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"customers\") List\u003cJsonAdaptedCustomer\u003e customers,","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"                                       @JsonProperty(\"orders\") List\u003cJsonAdaptedOrder\u003e orders) {","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"        this.customers.addAll(customers);","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"        this.orders.addAll(orders);","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"        customers.addAll(source.getCustomerList().stream().map(JsonAdaptedCustomer::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"        orders.addAll(source.getOrderList().stream().map(JsonAdaptedOrder::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"Junyi00"},"content":"        for (JsonAdaptedCustomer jsonAdaptedCustomer : customers) {","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Junyi00"},"content":"            Customer customer \u003d jsonAdaptedCustomer.toModelType();","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"            if (addressBook.hasCustomer(customer)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"            addressBook.addCustomer(customer);","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"Junyi00"},"content":"        for (JsonAdaptedOrder jsonAdaptedOrder : orders) {","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":"            Order order \u003d jsonAdaptedOrder.toModelType(addressBook);","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"Junyi00"},"content":"            if (addressBook.hasOrder(order)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"Junyi00"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_ORDER);","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"Junyi00"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"Junyi00"},"content":"            addressBook.addOrder(order);","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Junyi00":29,"-":44}},{"path":"src/main/java/seedu/loyaltylift/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.util.JsonUtil;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.UserPrefs;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Junyi00":5,"-":42}},{"path":"src/main/java/seedu/loyaltylift/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.UserPrefs;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Junyi00":5,"-":27}},{"path":"src/main/java/seedu/loyaltylift/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.LogsCenter;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.UserPrefs;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Junyi00":6,"-":72}},{"path":"src/main/java/seedu/loyaltylift/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.UserPrefs;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":" * Represents a storage for {@link seedu.loyaltylift.model.UserPrefs}.","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"     * Saves the given {@link seedu.loyaltylift.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Junyi00":6,"-":30}},{"path":"src/main/java/seedu/loyaltylift/ui/Badge.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.ui;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.CustomerType;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.model.customer.Points;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.order.Status;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":" * A small label that displays a text with a rounded background box.","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"public class Badge extends UiPart\u003cStackPane\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"    private static final String FXML \u003d \"Badge.fxml\";","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"    @FXML","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"    private Label tag;","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"     * Creates a {@code Badge} with the given colors and text to be displayed.","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"     * @param backgroundColor Color of the background.","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"     * @param textColor Color of the text to be displayed.","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"     * @param text The text to be displayed.","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"    private Badge(Color backgroundColor, Color textColor, String text) {","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"        super(FXML);","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"        this.getRoot().setStyle(\"-fx-background-color: \" + colorToHex(backgroundColor));","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"        tag.setStyle(\"-fx-text-fill: \" + colorToHex(textColor));","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"        tag.setText(text);","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"     * Returns a string representing the hex colour code of the given {@code Color}.","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"     * @param color The Color to be converted.","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"     * @return A string of hex colour code.","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"    public static String colorToHex(Color color) {","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"        return \"#\" + color.toString().substring(2, 8);","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"     * Constructs a {@code Badge} based on the {@code CustomerType}.","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"     * @param customerType The CustomerType of the customer.","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"     * @return An instance of the Badge.","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"    public static Badge createCustomerTypeBadge(CustomerType customerType) {","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"        switch (customerType) {","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"        case INDIVIDUAL:","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"            return new Badge(Color.valueOf(\"#2F8F95\"), Color.WHITE, \"Individual\");","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"        case ENTERPRISE:","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"            return new Badge(Color.valueOf(\"#95352F\"), Color.WHITE, \"Enterprise\");","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"        default:","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Junyi00"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"Infrix"},"content":"     * Constructs a {@code Badge} based on the {@code Points}.","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"Infrix"},"content":"     * @param points The points of the customer.","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"Infrix"},"content":"     * @return An instance of the Badge.","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"Infrix"},"content":"    public static Badge createPointsBadge(Points points) {","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"Infrix"},"content":"        return new Badge(Color.valueOf(\"#f09030\"), Color.WHITE, points.value.toString() + \" pts\");","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"Junyi00"},"content":"     * Constructs a {@code Badge} based on the {@code Status} of an {@code Order}.","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"Junyi00"},"content":"     * @param status The status of the Order.","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"Junyi00"},"content":"     * @return An instance of the Badge.","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"Junyi00"},"content":"    public static Badge createOrderStatusBadge(Status status) {","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"Junyi00"},"content":"        switch (status.getLatestStatus().statusValue) {","lastModifiedDate":"2023-03-25"},{"lineNumber":76,"author":{"gitId":"Junyi00"},"content":"        case PENDING:","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"Junyi00"},"content":"            return new Badge(Color.valueOf(\"#E4544B\"), Color.WHITE, \"Pending\");","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"Junyi00"},"content":"        case PAID:","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"Junyi00"},"content":"            return new Badge(Color.valueOf(\"#26A92B\"), Color.WHITE, \"Paid\");","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"Junyi00"},"content":"        case SHIPPED:","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"Junyi00"},"content":"            return new Badge(Color.valueOf(\"#4F46E5\"), Color.WHITE, \"Shipped\");","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"Junyi00"},"content":"        case COMPLETED:","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"Junyi00"},"content":"            return new Badge(Color.valueOf(\"#4F46E5\"), Color.WHITE, \"Completed\");","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"Junyi00"},"content":"        case CANCELLED:","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"Junyi00"},"content":"            return new Badge(Color.valueOf(\"#95352F\"), Color.WHITE, \"Cancelled\");","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"Junyi00"},"content":"        default:","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"Junyi00"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Junyi00":80,"Infrix":10}},{"path":"src/main/java/seedu/loyaltylift/ui/Bookmark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package seedu.loyaltylift.ui;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.customer.Marked;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":" * A small icon that indicates whether the customer is bookmarked.","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"public class Bookmark extends UiPart\u003cStackPane\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"    private static final String FXML \u003d \"Bookmark.fxml\";","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"    private ImageView markedIcon;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"     * Creates a {@code Bookmark} based on the marked status of the customer.","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"     * @param marked The marked status of the customer.","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"    private Bookmark(Marked marked) {","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"        super(FXML);","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"        markedIcon.setVisible(marked.value);","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"     * Constructs a {@code Bookmark} based on the marked status of the customer.","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"     * @param marked The marked status of the customer.","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"     * @return An instance of the Bookmark.","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":"    public static Bookmark createBookmarkIcon(Marked marked) {","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"JavonTeo"},"content":"        if (marked instanceof Marked) {","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"JavonTeo"},"content":"            return new Bookmark(marked);","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"        } else {","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"            throw new NullPointerException();","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"JavonTeo":40}},{"path":"src/main/java/seedu/loyaltylift/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.CommandResult;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"Junyi00"},"content":"         * @see seedu.loyaltylift.logic.Logic#execute(String)","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"Junyi00":5,"-":80}},{"path":"src/main/java/seedu/loyaltylift/ui/CustomerCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":" * An UI component that displays information of a {@code Customer}.","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"public class CustomerCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"    private static final String FXML \u003d \"CustomerListCard.fxml\";","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"    public final Customer customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"    //@FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"    //placeholder for bookmark","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"    private HBox accessoryPlaceholder;","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"    private boolean isSelected;","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"     * Creates a {@code CustomerCard} with the given {@code Customer} and index to display.","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"    public CustomerCard(Customer customer, int displayedIndex) {","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"        this.customer \u003d customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"        name.setText(customer.getName().fullName);","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"        phone.setText(customer.getPhone().value);","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"        address.setText(customer.getAddress().value);","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"JavonTeo"},"content":"        Bookmark bookmark \u003d Bookmark.createBookmarkIcon(customer.getMarked());","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"        accessoryPlaceholder.getChildren().add(bookmark.getRoot());","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"Junyi00"},"content":"        Badge pointsTag \u003d Badge.createPointsBadge(customer.getPoints());","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"        accessoryPlaceholder.getChildren().add(pointsTag.getRoot());","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"Junyi00"},"content":"        Badge customerTypeTag \u003d Badge.createCustomerTypeBadge(customer.getCustomerType());","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"        accessoryPlaceholder.getChildren().add(customerTypeTag.getRoot());","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"Junyi00"},"content":"        this.isSelected \u003d false;","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"Junyi00"},"content":"        if (!(other instanceof CustomerCard)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"Junyi00"},"content":"        CustomerCard card \u003d (CustomerCard) other;","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"Junyi00"},"content":"                \u0026\u0026 customer.equals(card.customer);","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Junyi00":27,"JavonTeo":4,"-":52}},{"path":"src/main/java/seedu/loyaltylift/ui/CustomerListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import javafx.scene.control.MultipleSelectionModel;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.LogsCenter;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":" * Panel containing the list of customers.","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"public class CustomerListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"    private static final String FXML \u003d \"CustomerListPanel.fxml\";","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(CustomerListPanel.class);","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"    private final CustomerInfoOnClickHandler handler;","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"    private ListView\u003cCustomer\u003e customerListView;","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"     * Creates a {@code CustomerListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"    public CustomerListPanel(ObservableList\u003cCustomer\u003e customerList, CustomerInfoOnClickHandler handler) {","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"        this.handler \u003d handler;","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"        customerListView.setItems(customerList);","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"        customerListView.setCellFactory(listView -\u003e new CustomerListViewCell());","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"        customerListView.getSelectionModel().selectedItemProperty().addListener(e -\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"            Customer customer \u003d customerListView.getSelectionModel().getSelectedItem();","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"            if (customer \u003d\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"                return;","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"            handler.customerInfoOnClick(customer);","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"        });","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Customer} using a {@code CustomerCard}.","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"    class CustomerListViewCell extends ListCell\u003cCustomer\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"        protected void updateItem(Customer customer, boolean empty) {","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"            super.updateItem(customer, empty);","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"            if (empty || customer \u003d\u003d null) {","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"                setGraphic(new CustomerCard(customer, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"Junyi00"},"content":"    public MultipleSelectionModel\u003cCustomer\u003e getSelectionModel() {","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":"        return customerListView.getSelectionModel();","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"Junyi00"},"content":"     * Represents a function that handles the event of when a customer card is clicked in this list.","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"Junyi00"},"content":"    @FunctionalInterface","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"Junyi00"},"content":"    public interface CustomerInfoOnClickHandler {","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"Junyi00"},"content":"        /**","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"Junyi00"},"content":"         * Handles the displaying of customer information on main window.","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"Junyi00"},"content":"         */","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"Junyi00"},"content":"        void customerInfoOnClick(Customer customer);","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Junyi00":46,"-":31}},{"path":"src/main/java/seedu/loyaltylift/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.LogsCenter;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103t-t09-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Junyi00":3,"-":99}},{"path":"src/main/java/seedu/loyaltylift/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import javafx.beans.InvalidationListener;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import javafx.scene.control.Tab;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"import javafx.scene.control.TabPane;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.GuiSettings;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.LogsCenter;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.Logic;","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.CommandResult;","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.ui.customer.CustomerInfo;","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.ui.order.OrderInfo;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"    private CustomerListPanel customerListPanel;","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"    private OrderListPanel orderListPanel;","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"Junyi00"},"content":"    private TabPane tableTabPane;","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"    private Tab customerTab;","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"Junyi00"},"content":"    private Tab orderTab;","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"Junyi00"},"content":"    private StackPane customerListPanelPlaceholder;","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"CloudHill"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"CloudHill"},"content":"    private StackPane orderListPanelPlaceholder;","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"Junyi00"},"content":"    @FXML","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"Junyi00"},"content":"    private VBox userCommandBox;","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"Junyi00"},"content":"    @FXML","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"Junyi00"},"content":"    private StackPane infoPane;","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"Junyi00"},"content":"    @FXML","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"Junyi00"},"content":"    private Label hintLabel;","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":101,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"Junyi00"},"content":"        /* A bugfix to resolve blurry contents in a ScrollPane */","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"Junyi00"},"content":"        infoPane.getChildren().addListener((InvalidationListener) e -\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"Junyi00"},"content":"                resetScrollPaneCacheProperty()","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"Junyi00"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"Junyi00"},"content":"        customerListPanel \u003d new CustomerListPanel(logic.getFilteredCustomerList(), this::showCustomerInfo);","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"Junyi00"},"content":"        customerListPanelPlaceholder.getChildren().add(customerListPanel.getRoot());","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":153,"author":{"gitId":"CloudHill"},"content":"        orderListPanel \u003d new OrderListPanel(logic.getFilteredOrderList(), this::showOrderInfo);","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"CloudHill"},"content":"        orderListPanelPlaceholder.getChildren().add(orderListPanel.getRoot());","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":156,"author":{"gitId":"Junyi00"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2023-02-17"},{"lineNumber":157,"author":{"gitId":"Junyi00"},"content":"        userCommandBox.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2023-02-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"Junyi00"},"content":"        userCommandBox.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2023-02-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2023-02-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2023-02-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2023-02-17"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2023-02-17"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2023-02-17"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2023-02-17"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":206,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":207,"author":{"gitId":"Junyi00"},"content":"     * This recursive method aims to resolve the blurry contents in a ScrollPane. `ScrollPaneSkin` sets","lastModifiedDate":"2023-03-05"},{"lineNumber":208,"author":{"gitId":"Junyi00"},"content":"     * cache to true manually, ignoring the property set in the FXML file.","lastModifiedDate":"2023-03-05"},{"lineNumber":209,"author":{"gitId":"Junyi00"},"content":"     * Hence, this method aggressively attempts to reset the property.","lastModifiedDate":"2023-03-05"},{"lineNumber":210,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":211,"author":{"gitId":"Junyi00"},"content":"    private void resetScrollPaneCacheProperty() {","lastModifiedDate":"2023-03-05"},{"lineNumber":212,"author":{"gitId":"Junyi00"},"content":"        Platform.runLater(() -\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":213,"author":{"gitId":"Junyi00"},"content":"            StackPane stackPane \u003d (StackPane) infoPane.lookup(\"ScrollPane .viewport\");","lastModifiedDate":"2023-03-05"},{"lineNumber":214,"author":{"gitId":"Junyi00"},"content":"            if (stackPane \u003d\u003d null) {","lastModifiedDate":"2023-03-05"},{"lineNumber":215,"author":{"gitId":"Junyi00"},"content":"                resetScrollPaneCacheProperty();","lastModifiedDate":"2023-03-05"},{"lineNumber":216,"author":{"gitId":"Junyi00"},"content":"                return;","lastModifiedDate":"2023-03-05"},{"lineNumber":217,"author":{"gitId":"Junyi00"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":218,"author":{"gitId":"Junyi00"},"content":"            stackPane.setCache(false);","lastModifiedDate":"2023-03-05"},{"lineNumber":219,"author":{"gitId":"Junyi00"},"content":"        });","lastModifiedDate":"2023-03-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"Junyi00"},"content":"     * @see seedu.loyaltylift.logic.Logic#execute(String)","lastModifiedDate":"2023-02-17"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"Junyi00"},"content":"            if (commandResult.isShowCustomerSelection() \u0026\u0026 commandResult.isShowOrderSelection()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":242,"author":{"gitId":"Junyi00"},"content":"                throw new CommandException(\"Cannot display both customer and order at once!\");","lastModifiedDate":"2023-03-29"},{"lineNumber":243,"author":{"gitId":"Junyi00"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":244,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":245,"author":{"gitId":"Junyi00"},"content":"            if (commandResult.isShowCustomerSelection()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":246,"author":{"gitId":"Junyi00"},"content":"                tableTabPane.getSelectionModel().select(customerTab);","lastModifiedDate":"2023-03-29"},{"lineNumber":247,"author":{"gitId":"Junyi00"},"content":"                customerListPanel.getSelectionModel().select(commandResult.getCustomerIndex());","lastModifiedDate":"2023-03-06"},{"lineNumber":248,"author":{"gitId":"Junyi00"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":249,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":250,"author":{"gitId":"Junyi00"},"content":"            if (commandResult.isShowOrderSelection()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":251,"author":{"gitId":"Junyi00"},"content":"                tableTabPane.getSelectionModel().select(orderTab);","lastModifiedDate":"2023-03-29"},{"lineNumber":252,"author":{"gitId":"Junyi00"},"content":"                orderListPanel.getSelectionModel().select(commandResult.getOrderIndex());","lastModifiedDate":"2023-03-29"},{"lineNumber":253,"author":{"gitId":"Junyi00"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":254,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":262,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":263,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":264,"author":{"gitId":"Junyi00"},"content":"     * Handles the event where a CustomerCard is clicked and the customer info needs to be shown.","lastModifiedDate":"2023-03-05"},{"lineNumber":265,"author":{"gitId":"Junyi00"},"content":"     * @param customer The customer to be displayed on the information pane.","lastModifiedDate":"2023-03-05"},{"lineNumber":266,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":267,"author":{"gitId":"Junyi00"},"content":"    private void showCustomerInfo(Customer customer) {","lastModifiedDate":"2023-03-05"},{"lineNumber":268,"author":{"gitId":"Junyi00"},"content":"        // ensure order table cell is selectable again","lastModifiedDate":"2023-03-29"},{"lineNumber":269,"author":{"gitId":"Junyi00"},"content":"        orderListPanel.getSelectionModel().clearSelection();","lastModifiedDate":"2023-03-29"},{"lineNumber":270,"author":{"gitId":"Junyi00"},"content":"        infoPane.getChildren().clear();","lastModifiedDate":"2023-03-05"},{"lineNumber":271,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":272,"author":{"gitId":"Junyi00"},"content":"        logic.updateFilteredCustomerOrderList(customer);","lastModifiedDate":"2023-03-11"},{"lineNumber":273,"author":{"gitId":"Junyi00"},"content":"        CustomerInfo customerInfo \u003d new CustomerInfo(customer, logic.getFilteredCustomerOrderList());","lastModifiedDate":"2023-03-11"},{"lineNumber":274,"author":{"gitId":"Junyi00"},"content":"        infoPane.getChildren().add(customerInfo.getRoot());","lastModifiedDate":"2023-03-05"},{"lineNumber":275,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":276,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":277,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":278,"author":{"gitId":"Junyi00"},"content":"     * Handles the event where a OrderCard is clicked and the order info needs to be shown.","lastModifiedDate":"2023-03-29"},{"lineNumber":279,"author":{"gitId":"CloudHill"},"content":"     * @param order The order to be displayed on the information pane.","lastModifiedDate":"2023-03-06"},{"lineNumber":280,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":281,"author":{"gitId":"CloudHill"},"content":"    private void showOrderInfo(Order order) {","lastModifiedDate":"2023-03-06"},{"lineNumber":282,"author":{"gitId":"Junyi00"},"content":"        // ensure customer table cell is selectable again","lastModifiedDate":"2023-03-29"},{"lineNumber":283,"author":{"gitId":"Junyi00"},"content":"        customerListPanel.getSelectionModel().clearSelection();","lastModifiedDate":"2023-03-29"},{"lineNumber":284,"author":{"gitId":"CloudHill"},"content":"        infoPane.getChildren().clear();","lastModifiedDate":"2023-03-06"},{"lineNumber":285,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":286,"author":{"gitId":"CloudHill"},"content":"        OrderInfo orderInfo \u003d new OrderInfo(order);","lastModifiedDate":"2023-03-06"},{"lineNumber":287,"author":{"gitId":"CloudHill"},"content":"        infoPane.getChildren().add(orderInfo.getRoot());","lastModifiedDate":"2023-03-06"},{"lineNumber":288,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Junyi00":90,"CloudHill":18,"-":181}},{"path":"src/main/java/seedu/loyaltylift/ui/NotePanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.ui;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Note;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":" * A panel that displays a Customer\u0027s or Order\u0027s note.","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"public class NotePanel extends UiPart\u003cVBox\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"    private static final String FXML \u003d \"NotePanel.fxml\";","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"    @FXML","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"    private Text note;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"     * Creates a {@code NotePanel} with the given {@code Note}.","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"     * @param note The note to be displayed.","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"    public NotePanel(Note note) {","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"        super(FXML);","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"        this.note.setText(note.value);","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"CloudHill":27}},{"path":"src/main/java/seedu/loyaltylift/ui/OrderCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.ui;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":" * An UI component that displays information of a {@code Order}.","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"public class OrderCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"    private static final String FXML \u003d \"OrderListCard.fxml\";","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"    public final Order order;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"    private Label name;","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"    private Label id;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"    private Label quantity;","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"    private Label address;","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"    private HBox orderStatusPlaceholder;","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"    private Label createdDate;","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"    private boolean isSelected;","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"     * Creates a {@code OrderCode} with the given {@code Order} and index to display.","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"    public OrderCard(Order order, int displayedIndex) {","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"        super(FXML);","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"        this.order \u003d order;","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"jednghk"},"content":"        name.setText(order.getName().fullName);","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"        quantity.setText(order.getQuantity().toString());","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"        address.setText(order.getAddress().toString());","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"        Badge orderStatusBadge \u003d Badge.createOrderStatusBadge(order.getStatus());","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"CloudHill"},"content":"        orderStatusPlaceholder.getChildren().add(orderStatusBadge.getRoot());","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"CloudHill"},"content":"        createdDate.setText(order.getCreatedDate().toString());","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"CloudHill"},"content":"        this.isSelected \u003d false;","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"CloudHill"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"CloudHill"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"CloudHill"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"CloudHill"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"CloudHill"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"CloudHill"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"CloudHill"},"content":"        if (!(other instanceof OrderCard)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"CloudHill"},"content":"            return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"CloudHill"},"content":"        // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"CloudHill"},"content":"        OrderCard card \u003d (OrderCard) other;","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"CloudHill"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"CloudHill"},"content":"                \u0026\u0026 order.equals(card.order);","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Junyi00":1,"CloudHill":77,"jednghk":1}},{"path":"src/main/java/seedu/loyaltylift/ui/OrderListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.ui;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import javafx.scene.control.MultipleSelectionModel;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.commons.core.LogsCenter;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":" * Panel containing the list of orders.","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"public class OrderListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"    private static final String FXML \u003d \"OrderListPanel.fxml\";","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(OrderListPanel.class);","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"    private final OrderInfoOnClickHandler handler;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"    private ListView\u003cOrder\u003e orderListView;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"     * Creates a {@code OrderListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"    public OrderListPanel(ObservableList\u003cOrder\u003e orderList, OrderInfoOnClickHandler handler) {","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"        super(FXML);","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"        this.handler \u003d handler;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"        orderListView.setItems(orderList);","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"        orderListView.setCellFactory(listView -\u003e new OrderListViewCell());","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"        orderListView.getSelectionModel().selectedItemProperty().addListener(e -\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"            Order order \u003d orderListView.getSelectionModel().getSelectedItem();","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"            if (order \u003d\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"                return;","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"            handler.orderInfoOnClick(order);","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"        });","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Order} using a {@code OrderCard}.","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"    class OrderListViewCell extends ListCell\u003cOrder\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"CloudHill"},"content":"        @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"        protected void updateItem(Order order, boolean empty) {","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"            super.updateItem(order, empty);","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"CloudHill"},"content":"            if (empty || order \u003d\u003d null) {","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"CloudHill"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"CloudHill"},"content":"                setText(null);","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"CloudHill"},"content":"            } else {","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"CloudHill"},"content":"                setGraphic(new OrderCard(order, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"CloudHill"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Junyi00"},"content":"    public MultipleSelectionModel\u003cOrder\u003e getSelectionModel() {","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":"        return orderListView.getSelectionModel();","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"CloudHill"},"content":"     * Represents a function that handles the event of when an order card is clicked in this list.","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"CloudHill"},"content":"    @FunctionalInterface","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"CloudHill"},"content":"    public interface OrderInfoOnClickHandler {","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"CloudHill"},"content":"        /**","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"CloudHill"},"content":"         * Handles the displaying of order information on main window.","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"CloudHill"},"content":"         */","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"CloudHill"},"content":"        void orderInfoOnClick(Order order);","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Junyi00":9,"CloudHill":68}},{"path":"src/main/java/seedu/loyaltylift/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"     * Creates a {@code ResultDisplay}.","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"     * This component displays the response from the user command. x","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"        // Resolves blurriness of content displayed in text area","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"        Platform.runLater(() -\u003e {","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"            resultDisplay.setCache(false);","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"            ScrollPane sp \u003d (ScrollPane) resultDisplay.getChildrenUnmodifiable().get(0);","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"            sp.setCache(false);","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"            for (Node n : sp.getChildrenUnmodifiable()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"                n.setCache(false);","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"        });","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Junyi00":18,"-":27}},{"path":"src/main/java/seedu/loyaltylift/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Junyi00":1,"-":27}},{"path":"src/main/java/seedu/loyaltylift/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Junyi00":1,"-":12}},{"path":"src/main/java/seedu/loyaltylift/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.MainApp;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.LogsCenter;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.util.StringUtil;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.Logic;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"Junyi00"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/TailwindTheme.css\");","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Junyi00":6,"-":82}},{"path":"src/main/java/seedu/loyaltylift/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.MainApp;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Junyi00":2,"-":86}},{"path":"src/main/java/seedu/loyaltylift/ui/customer/CustomerGeneralInfo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.ui.customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.ui.UiPart;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":" * A panel that displays the general information of a Customer.","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"public class CustomerGeneralInfo extends UiPart\u003cVBox\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"    private static final String FXML \u003d \"Customer/CustomerGeneralInfo.fxml\";","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"    @FXML","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"    private Label phone;","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"    @FXML","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"    private Label address;","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"    @FXML","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"    private Label email;","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"    private Label points;","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"     * Creates a {@code CustomerGeneralInfo} with the given {@code Customer}.","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"     * @param customer The customer whose general information is to be displayed.","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"    public CustomerGeneralInfo(Customer customer) {","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"        super(FXML);","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"        phone.setText(customer.getPhone().value);","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"        address.setText(customer.getAddress().value);","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"        email.setText(customer.getEmail().value);","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"        String pointsString \u003d customer.getPoints().value.toString()","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"                + \" points, \"","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"                + customer.getPoints().cumulative.toString()","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"                + \" cumulative points\";","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"        points.setText(pointsString);","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Junyi00":34,"Infrix":8}},{"path":"src/main/java/seedu/loyaltylift/ui/customer/CustomerInfo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.ui.customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Note;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.ui.Badge;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.ui.NotePanel;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.ui.UiPart;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":" * ScrollPane that displays information of a customer.","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"public class CustomerInfo extends UiPart\u003cScrollPane\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"    private static final String FXML \u003d \"Customer/CustomerInfo.fxml\";","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"    @FXML","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"    private VBox verticalContainer;","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"    @FXML","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"    private Label customerName;","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"    @FXML","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"    private AnchorPane customerTypePlaceholder;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"     * Creates a {@code CustomerInfo} with the given {@code Customer}.","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"     * @param customer The customer whose information is to be displayed.","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"    public CustomerInfo(Customer customer, ObservableList\u003cOrder\u003e customerOrderList) {","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"        super(FXML);","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"        customerName.setText(customer.getName().fullName.toUpperCase());","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"        Badge customerTypeBadge \u003d Badge.createCustomerTypeBadge(customer.getCustomerType());","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"        customerTypePlaceholder.getChildren().add(customerTypeBadge.getRoot());","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"        // General Info","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"        CustomerGeneralInfo customerGeneralInfo \u003d new CustomerGeneralInfo(customer);","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"        insertSection(\"General\", customerGeneralInfo.getRoot());","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"        // Note","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"CloudHill"},"content":"        Note note \u003d customer.getNote();","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"        if (!note.value.trim().isBlank()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"            NotePanel customerNote \u003d new NotePanel(note);","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"CloudHill"},"content":"            insertSection(\"Note\", customerNote.getRoot());","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"Junyi00"},"content":"        // Orders","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Junyi00"},"content":"        CustomerOrderListPanel customerOrderListPanel \u003d new CustomerOrderListPanel(customerOrderList);","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"        insertSection(\"Orders\", customerOrderListPanel.getRoot());","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"    private void insertSection(String sectionTitle, Node node) {","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"Junyi00"},"content":"        VBox vbox \u003d new VBox();","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":"        Label label \u003d new Label(sectionTitle);","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"Junyi00"},"content":"        label.setStyle(\"-fx-font-size: 25; -fx-font-weight: bold; -fx-background-insets: 0 0 5 0px\");","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"Junyi00"},"content":"        vbox.getChildren().addAll(label, node);","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"Junyi00"},"content":"        verticalContainer.getChildren().add(vbox);","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Junyi00":61,"CloudHill":9}},{"path":"src/main/java/seedu/loyaltylift/ui/customer/CustomerOrderCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.ui.customer;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.ui.Badge;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.ui.UiPart;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":" * A UI component that displays information of a {@code Order} that belongs to a {@code Customer}.","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"public class CustomerOrderCard extends UiPart\u003cHBox\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"    private static final String FXML \u003d \"Customer/CustomerOrderCard.fxml\";","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"    private Label id;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"    private Label name;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"    private Label date;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"    private Label address;","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"    private HBox statusPlaceholder;","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"    private final Order order;","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"    private final Integer index;","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"     * Creates a {@code CustomerOrderCard} with the given {@code Order} and index to display.","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"    public CustomerOrderCard(Order order, Integer index) {","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"        super(FXML);","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"        this.order \u003d order;","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"        id.setText(index.toString());","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"        name.setText(order.getName().fullName);","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"        date.setText(DATE_FORMATTER.format(order.getCreatedDate().value));","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"        address.setText(order.getAddress().value);","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"        Badge statusBadge \u003d Badge.createOrderStatusBadge(order.getStatus());","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"        statusPlaceholder.getChildren().add(statusBadge.getRoot());","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Junyi00":52}},{"path":"src/main/java/seedu/loyaltylift/ui/customer/CustomerOrderListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.ui.customer;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.ui.UiPart;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":" * Panel containing the list of orders that belong to a customer.","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"public class CustomerOrderListPanel extends UiPart\u003cVBox\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"    private static final String FXML \u003d \"Customer/CustomerOrderListPanel.fxml\";","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"    private ListView\u003cOrder\u003e orderListView;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"     * Creates a {@code CustomerOrderListPanel} with the given {@code orders} that belong to a {@code Customer}.","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"     * @param orders The list of Orders that belong to the Customer.","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"    public CustomerOrderListPanel(ObservableList\u003cOrder\u003e orders) {","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"        super(FXML);","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"        orderListView.setItems(orders);","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"        orderListView.setCellFactory(order -\u003e new CustomerOrderListViewCell());","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"    class CustomerOrderListViewCell extends ListCell\u003cOrder\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"        protected void updateItem(Order order, boolean empty) {","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"            super.updateItem(order, empty);","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"            if (empty || order \u003d\u003d null) {","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"                setText(null);","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"            } else {","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"                setGraphic(new CustomerOrderCard(order, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Junyi00":45}},{"path":"src/main/java/seedu/loyaltylift/ui/order/OrderGeneralInfo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.ui.order;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.ui.UiPart;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":" * A panel that displays the general information of a Customer.","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"public class OrderGeneralInfo extends UiPart\u003cVBox\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"    private static final String FXML \u003d \"Order/OrderGeneralInfo.fxml\";","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"    private Label customer;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"    private Label quantity;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"    private Label address;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"    private Label createdDate;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"     * Creates a {@code CustomerGeneralInfo} with the given {@code Order}.","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"     * @param order The order whose general information is to be displayed.","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"    public OrderGeneralInfo(Order order) {","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"        super(FXML);","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"        customer.setText(order.getCustomer().getName().fullName);","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"        quantity.setText(order.getQuantity().toString());","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"        address.setText(order.getAddress().toString());","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"        createdDate.setText(order.getCreatedDate().toString());","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Junyi00":4,"CloudHill":34}},{"path":"src/main/java/seedu/loyaltylift/ui/order/OrderHistoryCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.ui.order;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.order.StatusUpdate;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.ui.UiPart;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":" * A UI component that displays status history of an {@code Order} that belongs to a {@code Customer}.","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"public class OrderHistoryCard extends UiPart\u003cHBox\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"    private static final String FXML \u003d \"Order/OrderHistoryCard.fxml\";","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"    private Label id;","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"    @FXML","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"    private Label name;","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"    @FXML","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"    private Label date;","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"    private final StatusUpdate statusUpdate;","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"    private final Integer index;","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"     * Creates a {@code CustomerOrderCard} with the given {@code Order} and index to display.","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"    public OrderHistoryCard(StatusUpdate statusUpdate, Integer index) {","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"        super(FXML);","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"        this.statusUpdate \u003d statusUpdate;","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"        id.setText(index.toString());","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"        name.setText(statusUpdate.getStatusValue().toString());","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"        date.setText(DATE_FORMATTER.format(statusUpdate.getDate()));","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"Junyi00":42}},{"path":"src/main/java/seedu/loyaltylift/ui/order/OrderHistoryPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.ui.order;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.order.Status;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.order.StatusUpdate;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.ui.UiPart;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":" * Panel containing the list of status history that belong to an order.","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"public class OrderHistoryPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"    private static final String FXML \u003d \"Order/OrderHistoryPanel.fxml\";","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"    private ListView\u003cStatusUpdate\u003e orderHistoryListView;","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"     * Creates a {@code OrderHistoryPanel} with the given {@code Status} that belong to an {@code Order}.","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"     * @param status The status of the Order.","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"    public OrderHistoryPanel(Status status) {","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"        super(FXML);","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"        // Inverse the order of status","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"        ArrayList\u003cStatusUpdate\u003e statusUpdateList \u003d new ArrayList\u003c\u003e(status.getStatusUpdates());","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"        statusUpdateList.sort(Collections.reverseOrder());","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"        orderHistoryListView.setItems(FXCollections.observableArrayList(statusUpdateList));","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"        orderHistoryListView.setCellFactory(orderHistory -\u003e new OrderHistoryListViewCell());","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"    class OrderHistoryListViewCell extends ListCell\u003cStatusUpdate\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"        @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"        protected void updateItem(StatusUpdate statusUpdate, boolean empty) {","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"            super.updateItem(statusUpdate, empty);","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"            if (empty || statusUpdate \u003d\u003d null) {","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"                setText(null);","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"            } else {","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"                setGraphic(new OrderHistoryCard(statusUpdate, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"Junyi00":51}},{"path":"src/main/java/seedu/loyaltylift/ui/order/OrderInfo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.ui.order;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Note;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.ui.Badge;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.ui.NotePanel;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.ui.UiPart;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":" * ScrollPane that displays information of a order.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"public class OrderInfo extends UiPart\u003cScrollPane\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"    private static final String FXML \u003d \"Order/OrderInfo.fxml\";","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"    private VBox verticalContainer;","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"    private Label orderName;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"    private AnchorPane orderStatusPlaceholder;","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"     * Creates a {@code OrderInfo} with the given {@code Order}.","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"     * @param order The order whose information is to be displayed.","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"    public OrderInfo(Order order) {","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"        super(FXML);","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"jednghk"},"content":"        orderName.setText(order.getName().fullName.toUpperCase());","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"        Badge orderStatusBadge \u003d Badge.createOrderStatusBadge(order.getStatus());","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"        orderStatusPlaceholder.getChildren().add(orderStatusBadge.getRoot());","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"        // General Info","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"        OrderGeneralInfo orderGeneralInfo \u003d new OrderGeneralInfo(order);","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"        insertSection(\"General\", orderGeneralInfo.getRoot());","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"        // Note","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"        Note note \u003d order.getNote();","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"        if (!note.value.trim().isBlank()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"CloudHill"},"content":"            NotePanel orderNote \u003d new NotePanel(note);","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"            insertSection(\"Note\", orderNote.getRoot());","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"        // Order History","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"        OrderHistoryPanel orderHistoryPanel \u003d new OrderHistoryPanel(order.getStatus());","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"Junyi00"},"content":"        insertSection(\"History\", orderHistoryPanel.getRoot());","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"CloudHill"},"content":"    private void insertSection(String sectionTitle, Node node) {","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"CloudHill"},"content":"        VBox vbox \u003d new VBox();","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"CloudHill"},"content":"        Label label \u003d new Label(sectionTitle);","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"CloudHill"},"content":"        label.setStyle(\"-fx-font-size: 25; -fx-font-weight: bold; -fx-background-insets: 0 0 5 0px\");","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"CloudHill"},"content":"        vbox.getChildren().addAll(label, node);","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"CloudHill"},"content":"        verticalContainer.getChildren().add(vbox);","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Junyi00":5,"CloudHill":62,"jednghk":1}},{"path":"src/main/resources/view/Badge.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":".badge {","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"    -fx-border-radius: 15px;","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"    -fx-background-radius: 15px;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"    /* -fx-font-weight: bold; */","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Junyi00":5}},{"path":"src/main/resources/view/Badge.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"\u003cStackPane fx:id\u003d\"base\" styleClass\u003d\"badge\" stylesheets\u003d\"@Badge.css\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"      \u003cLabel fx:id\u003d\"tag\" text\u003d\"\\$tag\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"      \u003cInsets bottom\u003d\"3.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"3.0\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Junyi00":14}},{"path":"src/main/resources/view/Bookmark.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"\u003cStackPane fx:id\u003d\"base\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"23.0\" prefWidth\u003d\"21.0\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"      \u003cImageView fx:id\u003d\"unmarkedIcon\" fitHeight\u003d\"20.0\" fitWidth\u003d\"25.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"         \u003cimage\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"            \u003cImage url\u003d\"@../images/unmarked-icon.png\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"         \u003c/image\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"      \u003c/ImageView\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"      \u003cImageView fx:id\u003d\"markedIcon\" fitHeight\u003d\"20.0\" fitWidth\u003d\"25.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" visible\u003d\"false\"\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"         \u003cimage\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"            \u003cImage url\u003d\"@../images/marked-icon.png\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"         \u003c/image\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"         \u003cStackPane.margin\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"         \u003c/StackPane.margin\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"      \u003c/ImageView\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"JavonTeo":23}},{"path":"src/main/resources/view/CommandBox.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"#commandTextField {","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: #ffffff;","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"    -fx-font-family: \"Inter Light\";","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"    -fx-effect: dropshadow(gaussian, rgba(0, 0, 0, 0.2), 4, 0, 0.0, 4);","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Junyi00":13}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"\u003cStackPane stylesheets\u003d\"@CommandBox.css\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"  \u003cTextField id\u003d\"commandTextField\" fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" prefHeight\u003d\"50.0\" promptText\u003d\"Enter command here...\" stylesheets\u003d\"@CommandBox.css\" /\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"Junyi00":2,"-":6}},{"path":"src/main/resources/view/CommandBoxContainer.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"#commandBoxContainer {","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: #D9D9D9;","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Junyi00":5}},{"path":"src/main/resources/view/Customer/CustomerGeneralInfo.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"\u003cVBox spacing\u003d\"5.0\" styleClass\u003d\"base\" stylesheets\u003d\"@CustomerSection.css\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"4.0\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"            \u003cImageView fitHeight\u003d\"20.0\" fitWidth\u003d\"20.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"               \u003cimage\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"                  \u003cImage url\u003d\"@../../images/phone.png\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"               \u003c/image\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"            \u003cLabel fx:id\u003d\"phone\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"4.0\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"            \u003cImageView fitHeight\u003d\"20.0\" fitWidth\u003d\"20.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"               \u003cimage\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"                  \u003cImage url\u003d\"@../../images/address.png\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"               \u003c/image\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"            \u003cLabel fx:id\u003d\"address\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"4.0\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"            \u003cImageView fitHeight\u003d\"20.0\" fitWidth\u003d\"20.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"               \u003cimage\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"                  \u003cImage url\u003d\"@../../images/email.png\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"               \u003c/image\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"            \u003cLabel fx:id\u003d\"email\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"4.0\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"            \u003cImageView fitHeight\u003d\"20.0\" fitWidth\u003d\"20.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"               \u003cimage\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"Infrix"},"content":"                  \u003cImage url\u003d\"@../../images/points.png\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"Infrix"},"content":"               \u003c/image\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"Infrix"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"Infrix"},"content":"            \u003cLabel fx:id\u003d\"points\" text\u003d\"\\$points\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"Infrix"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"Infrix"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Junyi00":43,"Infrix":10}},{"path":"src/main/resources/view/Customer/CustomerInfo.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":".scroll-pane {","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":".nameHeader {","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"    -fx-font-size: 35px;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"    -fx-text-fill: #4F46E5;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Junyi00":9}},{"path":"src/main/resources/view/Customer/CustomerInfo.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.control.Separator?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"\u003cScrollPane cacheShape\u003d\"false\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" minHeight\u003d\"100.0\" minWidth\u003d\"300.0\" stylesheets\u003d\"@CustomerInfo.css\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"   \u003ccontent\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"      \u003cVBox fx:id\u003d\"verticalContainer\" spacing\u003d\"10.0\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" fillHeight\u003d\"false\" nodeOrientation\u003d\"LEFT_TO_RIGHT\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"                  \u003cLabel fx:id\u003d\"customerName\" styleClass\u003d\"nameHeader\" text\u003d\"\\\\$customerName\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"                  \u003cSeparator minWidth\u003d\"100.0\" visible\u003d\"false\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"                  \u003cStackPane alignment\u003d\"TOP_LEFT\" nodeOrientation\u003d\"LEFT_TO_RIGHT\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"                        \u003cAnchorPane fx:id\u003d\"customerTypePlaceholder\" StackPane.alignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"                     \u003c/children\u003e\u003c/StackPane\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"   \u003c/content\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"\u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Junyi00":28}},{"path":"src/main/resources/view/Customer/CustomerOrderCard.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":".order-name {","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":".header-label {","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Junyi00":7}},{"path":"src/main/resources/view/Customer/CustomerOrderCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"\u003c?import java.lang.String?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.Cursor?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.control.Separator?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" stylesheets\u003d\"@CustomerOrderCard.css\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"   \u003ccursor\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"      \u003cCursor fx:constant\u003d\"DEFAULT\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"   \u003c/cursor\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"      \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"         \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"            \u003cColumnConstraints hgrow\u003d\"ALWAYS\" maxWidth\u003d\"1.7976931348623157E308\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"150.0\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"         \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"         \u003crowConstraints\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"            \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"         \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"            \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"75.0\" spacing\u003d\"4.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"                  \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"2.0\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"                     \u003copaqueInsets\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"                        \u003cInsets /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"                     \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"                        \u003cLabel styleClass\u003d\"header-label\" text\u003d\"Order\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"                        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"header-label\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"                           \u003cminWidth\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"                              \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"                           \u003c/minWidth\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"                        \u003cLabel styleClass\u003d\"header-label\" text\u003d\":\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"                        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$name\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"                           \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"                              \u003cInsets bottom\u003d\"-3.0\" top\u003d\"-3.0\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"                           \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"                           \u003cstyleClass\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"                              \u003cString fx:value\u003d\"order-name\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"                              \u003cString fx:value\u003d\"header-label\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"                           \u003c/styleClass\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"Junyi00"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"Junyi00"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"                  \u003c/HBox\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"                  \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"4.0\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"Junyi00"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"                        \u003cImageView fitHeight\u003d\"15.0\" fitWidth\u003d\"15.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"Junyi00"},"content":"                           \u003cimage\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"Junyi00"},"content":"                              \u003cImage url\u003d\"@../../images/clock_icon.png\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":"                           \u003c/image\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"Junyi00"},"content":"                        \u003c/ImageView\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"Junyi00"},"content":"                        \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"Junyi00"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"Junyi00"},"content":"                  \u003c/HBox\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"Junyi00"},"content":"                  \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"4.0\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"Junyi00"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"Junyi00"},"content":"                        \u003cImageView fitHeight\u003d\"15.0\" fitWidth\u003d\"15.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"Junyi00"},"content":"                           \u003cimage\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"Junyi00"},"content":"                              \u003cImage url\u003d\"@../../images/address.png\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"Junyi00"},"content":"                           \u003c/image\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"Junyi00"},"content":"                        \u003c/ImageView\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"Junyi00"},"content":"                        \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"Junyi00"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"Junyi00"},"content":"                  \u003c/HBox\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"Junyi00"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"Junyi00"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"Junyi00"},"content":"            \u003cVBox alignment\u003d\"TOP_RIGHT\" GridPane.columnIndex\u003d\"1\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"Junyi00"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"Junyi00"},"content":"                  \u003cHBox fx:id\u003d\"statusPlaceholder\" alignment\u003d\"TOP_RIGHT\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"Junyi00"},"content":"                  \u003cSeparator orientation\u003d\"VERTICAL\" visible\u003d\"false\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"Junyi00"},"content":"                  \u003cLabel text\u003d\"Last Updated: \" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":86,"author":{"gitId":"Junyi00"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"Junyi00"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"Junyi00"},"content":"                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"Junyi00"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"Junyi00"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"Junyi00"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"Junyi00"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"Junyi00"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"Junyi00"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"Junyi00"},"content":"      \u003c/GridPane\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"Junyi00"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"Junyi00"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"Junyi00":97}},{"path":"src/main/resources/view/Customer/CustomerOrderListPanel.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":".base {","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"    -fx-padding: 0;","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"#orderListView {","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"    -fx-control-inner-background-alt: -fx-control-inner-background;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"    -fx-control-inner-background: transparent;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":".list-cell {","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"    -fx-graphic-text-gap: 0;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"    -fx-border-color: #D9D9D9;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":".list-cell:filled:selected {","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":".list-cell .label {","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":".list-cell:hover .header-label {","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"    -fx-text-fill: #4F46E5;","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":".list-cell:empty {","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Junyi00":35}},{"path":"src/main/resources/view/Customer/CustomerOrderListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"\u003cVBox styleClass\u003d\"base\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"      \u003cListView fx:id\u003d\"orderListView\" styleClass\u003d\"orderListView\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"   \u003cstylesheets\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"      \u003cURL value\u003d\"@CustomerSection.css\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"      \u003cURL value\u003d\"@CustomerOrderListPanel.css\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"   \u003c/stylesheets\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"Junyi00":15}},{"path":"src/main/resources/view/Customer/CustomerSection.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":".base {","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"    -fx-padding: 15px;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"    -fx-effect: dropshadow(gaussian, rgba(0, 0, 0, 0.2), 4, 0, 0.0, 3);","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":".label {","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Junyi00":12}},{"path":"src/main/resources/view/CustomerListCard.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":".cell_big_label {","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"    -fx-font-size: 20;","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":".cell_big_id_label {","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"    -fx-font-size: 15;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Junyi00":7}},{"path":"src/main/resources/view/CustomerListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" stylesheets\u003d\"@CustomerListCard.css\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"150.0\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"75.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"2.0\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_id_label\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" stylesheets\u003d\"@CustomerListCard.css\" text\u003d\"\\$first\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"               \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"                  \u003cInsets bottom\u003d\"-3.0\" top\u003d\"-3.0\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"               \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"            \u003copaqueInsets\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"               \u003cInsets /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"            \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"         \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"4.0\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"               \u003cImageView fitHeight\u003d\"15.0\" fitWidth\u003d\"15.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"                  \u003cimage\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"                     \u003cImage url\u003d\"@../images/phone.png\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"                  \u003c/image\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"               \u003c/ImageView\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"         \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"4.0\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"               \u003cImageView fitHeight\u003d\"15.0\" fitWidth\u003d\"15.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"                  \u003cimage\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"                     \u003cImage url\u003d\"@../images/address.png\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"                  \u003c/image\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"               \u003c/ImageView\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"      \u003cVBox alignment\u003d\"TOP_RIGHT\" GridPane.columnIndex\u003d\"1\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"Junyi00"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Junyi00"},"content":"            \u003cHBox fx:id\u003d\"accessoryPlaceholder\" alignment\u003d\"TOP_RIGHT\" spacing\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"            \u003cSeparator orientation\u003d\"VERTICAL\" visible\u003d\"false\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"            \u003cLabel text\u003d\"Last Ordered: \" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"Junyi00"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"Junyi00"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"Junyi00"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"Junyi00"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"Junyi00"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"Junyi00"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"Junyi00"},"content":"   \u003ccursor\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"Junyi00"},"content":"      \u003cCursor fx:constant\u003d\"HAND\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"Junyi00"},"content":"   \u003c/cursor\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Junyi00":52,"-":20}},{"path":"src/main/resources/view/CustomerListPanel.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"#customerListView {","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"    -fx-control-inner-background-alt: -fx-control-inner-background;","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"    -fx-control-inner-background: transparent;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":".list-cell {","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"    -fx-border-color: #D9D9D9;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"    -fx-border-width: 1 0 0 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":".list-cell:filled:selected {","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":".list-cell .label {","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":".list-cell:filled:selected:focused .cell_big_label, .list-cell:filled:selected:focused .cell_big_id_label {","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"    -fx-text-fill: #4F46E5;","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":".list-cell:hover .cell_big_label, .list-cell:hover .cell_big_id_label {","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"    -fx-text-fill: #4F46E5;","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":".list-cell:empty {","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Junyi00":40}},{"path":"src/main/resources/view/CustomerListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"  \u003cListView id\u003d\"customerListView\" fx:id\u003d\"customerListView\" style\u003d\"-fx-padding: 0; -fx-background-insets: 0;\" stylesheets\u003d\"@CustomerListPanel.css\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Junyi00":2,"-":6}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"#helpMessage {","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"#copyButton {","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: #F3F4F6;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Junyi00":6,"-":17}},{"path":"src/main/resources/view/MainWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":".root {","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: #F3F4F6;","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"    -fx-font-family: \"Inter\";","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"/* MENU BAR */","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":".menu-bar {","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: #F3F4F6;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"    -fx-selection-bar: transparent;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":".menu-bar .label {","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"    -fx-font-family: \"Inter Light\";","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":".menu .left-container {","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: #F3F4F6;","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":".menu:hover \u003e .label {","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"    -fx-text-fill: #4F46E5;","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":".menu-item .label {","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"    -fx-font-family: \"Inter Light\";","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":".menu-item:focused .label, .menu-item:hover .label {","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"    -fx-text-fill: #4F46E5;","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":".menu-item:focused, menu-item:hover  {","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":".context-menu {","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"    -fx-border-color: #F3F4F6;","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: #F3F4F6;","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"    -fx-effect: dropshadow(gaussian, rgba(0, 0, 0, 0.2), 1, 0.8, 0.0, 2);","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"/* SCROLL BAR */","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":".scroll-bar {","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":".scroll-bar .thumb {","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: black;","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"    -fx-opacity: 20%;","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"Junyi00"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"Junyi00"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"Junyi00"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"Junyi00"},"content":"    -fx-padding: 1 5 1 5;","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"Junyi00"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"Junyi00"},"content":"    -fx-padding: 5 1 5 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"Junyi00"},"content":"/* Removing split pane border */","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"Junyi00"},"content":".split-pane:horizontal \u003e .split-pane-divider {","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"Junyi00"},"content":"   -fx-background-color: transparent;","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"Junyi00"},"content":".split-pane:vertical \u003e .split-pane-divider {","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"Junyi00"},"content":"   -fx-background-color: transparent;","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"Junyi00"},"content":"/* Tab Pane */","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"Junyi00"},"content":".tab-pane .tab-header-area .tab-header-background {","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"Junyi00"},"content":"    -fx-opacity: 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"Junyi00"},"content":".tab {","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"Junyi00"},"content":"    -fx-background-insets: 0 1 0 1,0,0;","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"Junyi00"},"content":".tab-header-area {","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"Junyi00"},"content":"    -fx-padding: 15 0 15 0px;","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"Junyi00"},"content":".tab-pane .tab {","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"Junyi00"},"content":"    -fx-focus-color: transparent;","lastModifiedDate":"2023-02-17"},{"lineNumber":102,"author":{"gitId":"Junyi00"},"content":"    -fx-faint-focus-color: transparent;","lastModifiedDate":"2023-02-17"},{"lineNumber":103,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":104,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"Junyi00"},"content":".tab-pane .tab:selected {","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-02-17"},{"lineNumber":107,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":108,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":109,"author":{"gitId":"Junyi00"},"content":".tab:hover .tab-label {","lastModifiedDate":"2023-02-17"},{"lineNumber":110,"author":{"gitId":"Junyi00"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-02-17"},{"lineNumber":111,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":112,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":113,"author":{"gitId":"Junyi00"},"content":".tab .tab-label {","lastModifiedDate":"2023-02-17"},{"lineNumber":114,"author":{"gitId":"Junyi00"},"content":"    -fx-alignment: CENTER;","lastModifiedDate":"2023-02-17"},{"lineNumber":115,"author":{"gitId":"Junyi00"},"content":"    -fx-text-fill: #9A988A;","lastModifiedDate":"2023-02-17"},{"lineNumber":116,"author":{"gitId":"Junyi00"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-02-17"},{"lineNumber":117,"author":{"gitId":"Junyi00"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-02-17"},{"lineNumber":118,"author":{"gitId":"Junyi00"},"content":"    -fx-background-insets: 5;","lastModifiedDate":"2023-02-17"},{"lineNumber":119,"author":{"gitId":"Junyi00"},"content":"    -fx-cursor: hand;","lastModifiedDate":"2023-02-17"},{"lineNumber":120,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":122,"author":{"gitId":"Junyi00"},"content":".tab:selected .tab-label {","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"Junyi00"},"content":"    -fx-alignment: CENTER;","lastModifiedDate":"2023-02-17"},{"lineNumber":124,"author":{"gitId":"Junyi00"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-02-17"},{"lineNumber":125,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Junyi00":125}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"\u003c?import java.net.*?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.text.*?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.stage.*?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"\u003cfx:root minHeight\u003d\"350.0\" minWidth\u003d\"1000.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"LoyaltyLift\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"    \u003cScene fill\u003d\"#f3f4f6\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"            \u003cSplitPane dividerPositions\u003d\"0.29797979797979796\" prefHeight\u003d\"500.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"              \u003citems\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"                \u003cAnchorPane maxWidth\u003d\"500.0\" minWidth\u003d\"400.0\" prefWidth\u003d\"400.0\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"                        \u003cVBox prefHeight\u003d\"73.0\" prefWidth\u003d\"52.0\" spacing\u003d\"5.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"                           \u003cchildren\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"                              \u003cVBox id\u003d\"commandBoxContainer\" fx:id\u003d\"userCommandBox\" stylesheets\u003d\"@CommandBoxContainer.css\" /\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"                              \u003cTabPane fx:id\u003d\"tableTabPane\" prefHeight\u003d\"200.0\" prefWidth\u003d\"150.0\" tabClosingPolicy\u003d\"UNAVAILABLE\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"                                \u003ctabs\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"                                  \u003cTab fx:id\u003d\"customerTab\" text\u003d\"Customer\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"                                    \u003ccontent\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"                                      \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"180.0\" prefWidth\u003d\"150.0\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"                                             \u003cchildren\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"                                                \u003cVBox fx:id\u003d\"customerList\" minWidth\u003d\"52.0\" prefWidth\u003d\"52.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"                                                  \u003cStackPane fx:id\u003d\"customerListPanelPlaceholder\" style\u003d\"-fx-border-width: 0;\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"                                                \u003c/VBox\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"                                             \u003c/children\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"                                          \u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"                                    \u003c/content\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"                                  \u003c/Tab\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"                                  \u003cTab fx:id\u003d\"orderTab\" text\u003d\"Orders\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"                                    \u003ccontent\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"                                      \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"180.0\" prefWidth\u003d\"150.0\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"CloudHill"},"content":"                                             \u003cchildren\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"                                                \u003cVBox fx:id\u003d\"orderList\" minWidth\u003d\"52.0\" prefWidth\u003d\"52.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"                                                  \u003cStackPane fx:id\u003d\"orderListPanelPlaceholder\" style\u003d\"-fx-border-width: 0;\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"CloudHill"},"content":"                                                \u003c/VBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"CloudHill"},"content":"                                             \u003c/children\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"CloudHill"},"content":"                                          \u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Junyi00"},"content":"                                    \u003c/content\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"Junyi00"},"content":"                                  \u003c/Tab\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"                                \u003c/tabs\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"                              \u003c/TabPane\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"Junyi00"},"content":"                           \u003c/children\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                           \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":62,"author":{"gitId":"Junyi00"},"content":"                              \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                           \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":65,"author":{"gitId":"Junyi00"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"Junyi00"},"content":"                  \u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"Junyi00"},"content":"                \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"160.0\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"Junyi00"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"Junyi00"},"content":"                        \u003cStackPane fx:id\u003d\"infoPane\" prefHeight\u003d\"180.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"Junyi00"},"content":"                           \u003cchildren\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"Junyi00"},"content":"                              \u003cLabel fx:id\u003d\"hintLabel\" alignment\u003d\"CENTER\" text\u003d\"Make a selection on the left!\" textFill\u003d\"#9a988a\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"Junyi00"},"content":"                                 \u003cfont\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"Junyi00"},"content":"                                    \u003cFont name\u003d\"System Italic\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"Junyi00"},"content":"                                 \u003c/font\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"Junyi00"},"content":"                              \u003c/Label\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"Junyi00"},"content":"                           \u003c/children\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"Junyi00"},"content":"                           \u003cpadding\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"Junyi00"},"content":"                              \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"Junyi00"},"content":"                           \u003c/padding\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"Junyi00"},"content":"                        \u003c/StackPane\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"Junyi00"},"content":"                     \u003c/children\u003e\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"Junyi00"},"content":"              \u003c/items\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"Junyi00"},"content":"            \u003c/SplitPane\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"Junyi00"},"content":"         \u003cstylesheets\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"Junyi00"},"content":"            \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"Junyi00"},"content":"            \u003cURL value\u003d\"@MainWindow.css\" /\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"Junyi00"},"content":"         \u003c/stylesheets\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Junyi00":61,"CloudHill":7,"-":24}},{"path":"src/main/resources/view/NotePanel.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":".base {","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"  -fx-border-radius: 10px;","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"  -fx-background-radius: 10px;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"  -fx-padding: 15px;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"  -fx-background-color: white;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"  -fx-effect: dropshadow(gaussian, rgba(0, 0, 0, 0.2), 4, 0, 0.0, 3);","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":".label {","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"  -fx-font-size: 12px;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"CloudHill":12}},{"path":"src/main/resources/view/NotePanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"\u003cVBox spacing\u003d\"5.0\" styleClass\u003d\"base\" stylesheets\u003d\"@NotePanel.css\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"   \u003cText fx:id\u003d\"note\" text\u003d\"\\$note\" /\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"CloudHill":8}},{"path":"src/main/resources/view/Order/OrderGeneralInfo.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":".base {","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"    -fx-padding: 15px;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"    -fx-effect: dropshadow(gaussian, rgba(0, 0, 0, 0.2), 4, 0, 0.0, 3);","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":".label {","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"CloudHill":12}},{"path":"src/main/resources/view/Order/OrderGeneralInfo.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"\u003cVBox spacing\u003d\"5.0\" styleClass\u003d\"base\" stylesheets\u003d\"@OrderGeneralInfo.css\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"4.0\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"            \u003cImageView fitHeight\u003d\"20.0\" fitWidth\u003d\"20.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"               \u003cimage\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"                  \u003cImage url\u003d\"@../../images/person_icon.png\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"               \u003c/image\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"            \u003cLabel fx:id\u003d\"customer\" text\u003d\"\\$customer\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"4.0\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"            \u003cImageView fitHeight\u003d\"20.0\" fitWidth\u003d\"20.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"               \u003cimage\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"                  \u003cImage url\u003d\"@../../images/quantity.png\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"               \u003c/image\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"            \u003cLabel fx:id\u003d\"quantity\" text\u003d\"\\$quantity\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"4.0\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"            \u003cImageView fitHeight\u003d\"20.0\" fitWidth\u003d\"20.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"               \u003cimage\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"                  \u003cImage url\u003d\"@../../images/address.png\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"               \u003c/image\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"            \u003cLabel fx:id\u003d\"address\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"4.0\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"            \u003cImageView fitHeight\u003d\"20.0\" fitWidth\u003d\"20.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"               \u003cimage\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"                  \u003cImage url\u003d\"@../../images/calendar.png\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"               \u003c/image\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"            \u003cLabel fx:id\u003d\"createdDate\" text\u003d\"\\$createdDate\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"CloudHill"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Junyi00":10,"CloudHill":42}},{"path":"src/main/resources/view/Order/OrderHistoryCard.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":".cell_top_label {","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"    -fx-font-size: 15;","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":".cell_top_header_label {","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":".cell_bottom_label {","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"    -fx-font-size: 12;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"Junyi00":11}},{"path":"src/main/resources/view/Order/OrderHistoryCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" stylesheets\u003d\"@OrderHistoryCard.css\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"50.0\" spacing\u003d\"4.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"2.0\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"            \u003cLabel styleClass\u003d\"cell_top_label\" text\u003d\"Update\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_top_label\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"            \u003cLabel styleClass\u003d\"cell_top_label\" text\u003d\":\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"               \u003cminWidth\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"                  \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"               \u003c/minWidth\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"               \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"                  \u003cInsets bottom\u003d\"-3.0\" top\u003d\"-3.0\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"               \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"               \u003cstyleClass\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"                  \u003cString fx:value\u003d\"cell_top_label\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"                  \u003cString fx:value\u003d\"cell_top_header_label\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"               \u003c/styleClass\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"            \u003copaqueInsets\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"               \u003cInsets /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"            \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"         \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"4.0\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"               \u003cImageView fitHeight\u003d\"15.0\" fitWidth\u003d\"15.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"                  \u003cimage\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"                     \u003cImage url\u003d\"@../../images/clock_icon.png\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"                  \u003c/image\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"               \u003c/ImageView\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"            \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_bottom_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"Junyi00"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"Junyi00"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"      \u003copaqueInsets\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"         \u003cInsets /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"Junyi00"},"content":"      \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"Junyi00"},"content":"         \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"Junyi00"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"Junyi00"},"content":"   \u003ccursor\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"Junyi00"},"content":"      \u003cCursor fx:constant\u003d\"DEFAULT\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"Junyi00"},"content":"   \u003c/cursor\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"Junyi00"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"Junyi00":68}},{"path":"src/main/resources/view/Order/OrderHistoryPanel.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":".base {","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"    -fx-padding: 0;","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"#orderHistoryListView {","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"    -fx-control-inner-background-alt: -fx-control-inner-background;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"    -fx-control-inner-background: transparent;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":".list-cell {","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"    -fx-border-color: #D9D9D9;","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":".list-cell:filled:selected {","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":".list-cell .label {","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":".list-cell:hover .cell_top_label {","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"    -fx-text-fill: #4F46E5;","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":".list-cell:empty {","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"Junyi00":35}},{"path":"src/main/resources/view/Order/OrderHistoryPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"\u003cVBox styleClass\u003d\"base\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"      \u003cListView fx:id\u003d\"orderHistoryListView\" styleClass\u003d\"orderHistoryListView\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"   \u003cstylesheets\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"      \u003cURL value\u003d\"@OrderSection.css\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"      \u003cURL value\u003d\"@OrderHistoryPanel.css\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"   \u003c/stylesheets\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"Junyi00":15}},{"path":"src/main/resources/view/Order/OrderInfo.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":".scroll-pane {","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":".nameHeader {","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"    -fx-font-size: 35px;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"    -fx-text-fill: #4F46E5;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"CloudHill":9}},{"path":"src/main/resources/view/Order/OrderInfo.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"\u003c?import javafx.scene.control.Separator?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"\u003cScrollPane cacheShape\u003d\"false\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" minHeight\u003d\"100.0\" minWidth\u003d\"300.0\" stylesheets\u003d\"@OrderInfo.css\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"   \u003ccontent\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"      \u003cVBox fx:id\u003d\"verticalContainer\" spacing\u003d\"10.0\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" fillHeight\u003d\"false\" nodeOrientation\u003d\"LEFT_TO_RIGHT\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"                  \u003cLabel fx:id\u003d\"orderName\" styleClass\u003d\"nameHeader\" text\u003d\"\\\\$orderName\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"                  \u003cSeparator minWidth\u003d\"100.0\" visible\u003d\"false\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"                  \u003cStackPane alignment\u003d\"TOP_LEFT\" nodeOrientation\u003d\"LEFT_TO_RIGHT\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"                        \u003cAnchorPane fx:id\u003d\"orderStatusPlaceholder\" StackPane.alignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"                  \u003c/StackPane\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"   \u003c/content\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"\u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"CloudHill":29}},{"path":"src/main/resources/view/Order/OrderSection.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":".base {","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"    -fx-padding: 15px;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"    -fx-effect: dropshadow(gaussian, rgba(0, 0, 0, 0.2), 4, 0, 0.0, 3);","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":".label {","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"Junyi00":12}},{"path":"src/main/resources/view/OrderListCard.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":".cell_big_label {","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"    -fx-font-size: 20;","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":".cell_big_id_label {","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"    -fx-font-size: 15;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"CloudHill":7}},{"path":"src/main/resources/view/OrderListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.Cursor?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.control.Separator?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" stylesheets\u003d\"@OrderListCard.css\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"150.0\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"75.0\" spacing\u003d\"5.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"2.0\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_id_label\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" stylesheets\u003d\"@OrderListCard.css\" text\u003d\"\\$name\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"               \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"                  \u003cInsets bottom\u003d\"-3.0\" top\u003d\"-3.0\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"               \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"            \u003copaqueInsets\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"               \u003cInsets /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"            \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"4.0\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"            \u003cImageView fitHeight\u003d\"15.0\" fitWidth\u003d\"15.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"              \u003cimage\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"                  \u003cImage url\u003d\"@../images/address.png\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"              \u003c/image\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"        \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"CloudHill"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"      \u003cVBox alignment\u003d\"TOP_RIGHT\" GridPane.columnIndex\u003d\"1\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"CloudHill"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"CloudHill"},"content":"            \u003cHBox alignment\u003d\"CENTER_RIGHT\" spacing\u003d\"4.0\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"CloudHill"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"CloudHill"},"content":"                \u003cImageView fitHeight\u003d\"15.0\" fitWidth\u003d\"15.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"CloudHill"},"content":"                  \u003cimage\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"CloudHill"},"content":"                      \u003cImage url\u003d\"@../images/quantity.png\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"CloudHill"},"content":"                  \u003c/image\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"CloudHill"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"CloudHill"},"content":"                \u003cLabel fx:id\u003d\"quantity\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$quantity\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"CloudHill"},"content":"                \u003cHBox fx:id\u003d\"orderStatusPlaceholder\" alignment\u003d\"TOP_RIGHT\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"CloudHill"},"content":"              \u003c/children\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"CloudHill"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"CloudHill"},"content":"            \u003cSeparator orientation\u003d\"VERTICAL\" visible\u003d\"false\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"CloudHill"},"content":"            \u003cHBox alignment\u003d\"CENTER_RIGHT\" spacing\u003d\"4.0\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"CloudHill"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"CloudHill"},"content":"                \u003cImageView fitHeight\u003d\"15.0\" fitWidth\u003d\"15.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"CloudHill"},"content":"                  \u003cimage\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"CloudHill"},"content":"                      \u003cImage url\u003d\"@../images/calendar.png\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"CloudHill"},"content":"                  \u003c/image\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"CloudHill"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"CloudHill"},"content":"                \u003cLabel fx:id\u003d\"createdDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$createdDate\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"CloudHill"},"content":"              \u003c/children\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"CloudHill"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"CloudHill"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"CloudHill"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Junyi00"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"CloudHill"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"CloudHill"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"CloudHill"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"CloudHill"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"CloudHill"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"CloudHill"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"CloudHill"},"content":"   \u003ccursor\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"CloudHill"},"content":"      \u003cCursor fx:constant\u003d\"HAND\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"CloudHill"},"content":"   \u003c/cursor\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"CloudHill"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Junyi00":15,"CloudHill":73}},{"path":"src/main/resources/view/OrderListPanel.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"#orderListView {","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"    -fx-control-inner-background-alt: -fx-control-inner-background;","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"    -fx-control-inner-background: transparent;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":".list-cell {","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"    -fx-border-color: #D9D9D9;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"    -fx-border-width: 1 0 0 0;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":".list-cell:filled:selected {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":".list-cell .label {","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":".list-cell:filled:selected:focused .cell_big_label, .list-cell:filled:selected:focused .cell_big_id_label {","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"    -fx-text-fill: #4F46E5;","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":".list-cell:hover .cell_big_label, .list-cell:hover .cell_big_id_label {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"    -fx-text-fill: #4F46E5;","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":".list-cell:empty {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"CloudHill":40}},{"path":"src/main/resources/view/OrderListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"  \u003cListView id\u003d\"orderListView\" fx:id\u003d\"orderListView\" style\u003d\"-fx-padding: 0; -fx-background-insets: 0;\" stylesheets\u003d\"@OrderListPanel.css\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"CloudHill":8}},{"path":"src/main/resources/view/ResultDisplay.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"#resultDisplay .content {","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"    -fx-cursor: none;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"#resultDisplay {","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"    -fx-text-fill: #4F46E5;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"    -fx-font-family: \"Inter Light\";","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"#resultDisplay .scroll-pane {","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"#resultDisplay .scroll-pane .viewport{","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"#resultDisplay .scroll-pane .content{","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":".pane {","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Junyi00":28}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane\" stylesheets\u003d\"@ResultDisplay.css\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"  \u003cTextArea id\u003d\"resultDisplay\" fx:id\u003d\"resultDisplay\" editable\u003d\"false\" prefHeight\u003d\"100.0\" styleClass\u003d\"result-display\" stylesheets\u003d\"@ResultDisplay.css\" /\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"Junyi00":2,"-":6}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"Infrix":1,"-":11}},{"path":"src/test/java/seedu/loyaltylift/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"Junyi00":1,"-":57}},{"path":"src/test/java/seedu/loyaltylift/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.commons.core;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"Junyi00":1,"-":26}},{"path":"src/test/java/seedu/loyaltylift/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.commons.core;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Junyi00":2,"-":133}},{"path":"src/test/java/seedu/loyaltylift/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.commons.core.index;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"        final Index fifthCustomerIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"        assertTrue(fifthCustomerIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"        assertTrue(fifthCustomerIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"        assertTrue(fifthCustomerIndex.equals(fifthCustomerIndex));","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"        assertFalse(fifthCustomerIndex.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"        assertFalse(fifthCustomerIndex.equals(5.0f));","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"        assertFalse(fifthCustomerIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Junyi00":9,"-":51}},{"path":"src/test/java/seedu/loyaltylift/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.commons.util;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"Junyi00":2,"-":34}},{"path":"src/test/java/seedu/loyaltylift/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.commons.util;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"Junyi00":3,"-":105}},{"path":"src/test/java/seedu/loyaltylift/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.commons.util;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.Config;","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Junyi00":4,"-":112}},{"path":"src/test/java/seedu/loyaltylift/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.commons.util;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Junyi00":2,"-":21}},{"path":"src/test/java/seedu/loyaltylift/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.commons.util;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.testutil.SerializableTestClass;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.testutil.TestUtil;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Junyi00":3,"-":42}},{"path":"src/test/java/seedu/loyaltylift/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.commons.util;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Junyi00":2,"-":141}},{"path":"src/test/java/seedu/loyaltylift/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalCustomers.AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.AddCustomerCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.CommandResult;","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.ListCustomerCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ModelManager;","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.UserPrefs;","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.storage.JsonAddressBookStorage;","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.storage.StorageManager;","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.testutil.CustomerBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"        String deleteCommand \u003d \"deletec 9\";","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Junyi00"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"Junyi00"},"content":"        String listCommand \u003d ListCustomerCommand.COMMAND_WORD;","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Junyi00"},"content":"        assertCommandSuccess(listCommand, ListCustomerCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"Junyi00"},"content":"        String addCommand \u003d AddCustomerCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"Junyi00"},"content":"        Customer expectedCustomer \u003d new CustomerBuilder(AMY).withTags().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"Junyi00"},"content":"        expectedModel.addCustomer(expectedCustomer);","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"Junyi00"},"content":"    public void getFilteredCustomerList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"Junyi00"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredCustomerList().remove(0));","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"Junyi00"},"content":"    public void getFilteredOrderList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"Junyi00"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredOrderList().remove(0));","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"Junyi00"},"content":"    public void getFilteredCustomerOrderList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"Junyi00"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredCustomerOrderList().remove(0));","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Junyi00":42,"-":130}},{"path":"src/test/java/seedu/loyaltylift/logic/commands/AddCustomerCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ModelManager;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.UserPrefs;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.testutil.CustomerBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCustomerCommand}.","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"public class AddCustomerCommandIntegrationTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"    public void execute_newCustomer_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"        Customer validCustomer \u003d new CustomerBuilder().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"        expectedModel.addCustomer(validCustomer);","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"        assertCommandSuccess(new AddCustomerCommand(validCustomer), model,","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"                String.format(AddCustomerCommand.MESSAGE_SUCCESS, validCustomer), expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"    public void execute_duplicateCustomer_throwsCommandException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"        Customer customerInList \u003d model.getAddressBook().getCustomerList().get(0);","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"        assertCommandFailure(","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"                new AddCustomerCommand(customerInList), model, AddCustomerCommand.MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Junyi00":20,"-":26}},{"path":"src/test/java/seedu/loyaltylift/logic/commands/AddCustomerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.GuiSettings;","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.AddressBook;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.testutil.CustomerBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"public class AddCustomerCommandTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"    public void constructor_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCustomerCommand(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"    public void execute_customerAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"        ModelStubAcceptingCustomerAdded modelStub \u003d new ModelStubAcceptingCustomerAdded();","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"        Customer validCustomer \u003d new CustomerBuilder().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"        CommandResult commandResult \u003d new AddCustomerCommand(validCustomer).execute(modelStub);","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"        assertEquals(","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"                String.format(AddCustomerCommand.MESSAGE_SUCCESS, validCustomer), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"        assertEquals(Arrays.asList(validCustomer), modelStub.customersAdded);","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"    public void execute_duplicateCustomer_throwsCommandException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"        Customer validCustomer \u003d new CustomerBuilder().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"        AddCustomerCommand addCustomerCommand \u003d new AddCustomerCommand(validCustomer);","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"        ModelStub modelStub \u003d new ModelStubWithCustomer(validCustomer);","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"                AddCustomerCommand.MESSAGE_DUPLICATE_CUSTOMER, () -\u003e addCustomerCommand.execute(modelStub));","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"        Customer alice \u003d new CustomerBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Junyi00"},"content":"        Customer bob \u003d new CustomerBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"        AddCustomerCommand addAliceCommand \u003d new AddCustomerCommand(alice);","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Junyi00"},"content":"        AddCustomerCommand addBobCommand \u003d new AddCustomerCommand(bob);","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"Junyi00"},"content":"        AddCustomerCommand addAliceCommandCopy \u003d new AddCustomerCommand(alice);","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"Junyi00"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"Junyi00"},"content":"        public void addCustomer(Customer customer) {","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"CloudHill"},"content":"        @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"CloudHill"},"content":"        public void addOrder(Order order) {","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"CloudHill"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"Junyi00"},"content":"        public boolean hasCustomer(Customer customer) {","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"Junyi00"},"content":"        public void deleteCustomer(Customer target) {","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"Junyi00"},"content":"        public void setCustomer(Customer target, Customer editedCustomer) {","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"Junyi00"},"content":"        public ObservableList\u003cCustomer\u003e getFilteredCustomerList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"Junyi00"},"content":"        public void updateFilteredCustomerList(Predicate\u003cCustomer\u003e predicate) {","lastModifiedDate":"2023-03-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":160,"author":{"gitId":"CloudHill"},"content":"        @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":161,"author":{"gitId":"CloudHill"},"content":"        public void sortFilteredCustomerList(Comparator\u003cCustomer\u003e comparator) {","lastModifiedDate":"2023-03-25"},{"lineNumber":162,"author":{"gitId":"CloudHill"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-25"},{"lineNumber":163,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":164,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":165,"author":{"gitId":"CloudHill"},"content":"        @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"CloudHill"},"content":"        public boolean hasOrder(Order order) {","lastModifiedDate":"2023-03-06"},{"lineNumber":167,"author":{"gitId":"CloudHill"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-06"},{"lineNumber":168,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":169,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":170,"author":{"gitId":"CloudHill"},"content":"        @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":171,"author":{"gitId":"CloudHill"},"content":"        public void deleteOrder(Order target) {","lastModifiedDate":"2023-03-06"},{"lineNumber":172,"author":{"gitId":"CloudHill"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-06"},{"lineNumber":173,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":174,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":175,"author":{"gitId":"CloudHill"},"content":"        @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":176,"author":{"gitId":"CloudHill"},"content":"        public void setOrder(Order target, Order editedOrder) {","lastModifiedDate":"2023-03-06"},{"lineNumber":177,"author":{"gitId":"CloudHill"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-06"},{"lineNumber":178,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":179,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":180,"author":{"gitId":"CloudHill"},"content":"        @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":181,"author":{"gitId":"CloudHill"},"content":"        public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":182,"author":{"gitId":"CloudHill"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-06"},{"lineNumber":183,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":184,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":185,"author":{"gitId":"CloudHill"},"content":"        @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":186,"author":{"gitId":"CloudHill"},"content":"        public void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2023-03-06"},{"lineNumber":187,"author":{"gitId":"CloudHill"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-06"},{"lineNumber":188,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":189,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":190,"author":{"gitId":"CloudHill"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":191,"author":{"gitId":"CloudHill"},"content":"        public void sortFilteredOrderList(Comparator\u003cOrder\u003e comparator) {","lastModifiedDate":"2023-03-27"},{"lineNumber":192,"author":{"gitId":"CloudHill"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":193,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":194,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":195,"author":{"gitId":"Junyi00"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":196,"author":{"gitId":"Junyi00"},"content":"        public ObservableList\u003cOrder\u003e getFilteredCustomerOrderList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":197,"author":{"gitId":"Junyi00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":198,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":199,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":200,"author":{"gitId":"Junyi00"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":201,"author":{"gitId":"Junyi00"},"content":"        public void updateFilteredCustomerOrderList(Customer customer) {","lastModifiedDate":"2023-03-11"},{"lineNumber":202,"author":{"gitId":"Junyi00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":203,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"Junyi00"},"content":"     * A Model stub that contains a single customer.","lastModifiedDate":"2023-03-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"Junyi00"},"content":"    private class ModelStubWithCustomer extends ModelStub {","lastModifiedDate":"2023-03-06"},{"lineNumber":210,"author":{"gitId":"Junyi00"},"content":"        private final Customer customer;","lastModifiedDate":"2023-03-06"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"Junyi00"},"content":"        ModelStubWithCustomer(Customer customer) {","lastModifiedDate":"2023-03-06"},{"lineNumber":213,"author":{"gitId":"Junyi00"},"content":"            requireNonNull(customer);","lastModifiedDate":"2023-03-06"},{"lineNumber":214,"author":{"gitId":"Junyi00"},"content":"            this.customer \u003d customer;","lastModifiedDate":"2023-03-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"Junyi00"},"content":"        public boolean hasCustomer(Customer customer) {","lastModifiedDate":"2023-03-06"},{"lineNumber":219,"author":{"gitId":"Junyi00"},"content":"            requireNonNull(customer);","lastModifiedDate":"2023-03-06"},{"lineNumber":220,"author":{"gitId":"Junyi00"},"content":"            return this.customer.isSameCustomer(customer);","lastModifiedDate":"2023-03-06"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"Junyi00"},"content":"     * A Model stub that always accept the customer being added.","lastModifiedDate":"2023-03-06"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"Junyi00"},"content":"    private class ModelStubAcceptingCustomerAdded extends ModelStub {","lastModifiedDate":"2023-03-06"},{"lineNumber":228,"author":{"gitId":"Junyi00"},"content":"        final ArrayList\u003cCustomer\u003e customersAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"Junyi00"},"content":"        public boolean hasCustomer(Customer customer) {","lastModifiedDate":"2023-03-06"},{"lineNumber":232,"author":{"gitId":"Junyi00"},"content":"            requireNonNull(customer);","lastModifiedDate":"2023-03-06"},{"lineNumber":233,"author":{"gitId":"Junyi00"},"content":"            return customersAdded.stream().anyMatch(customer::isSameCustomer);","lastModifiedDate":"2023-03-06"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"Junyi00"},"content":"        public void addCustomer(Customer customer) {","lastModifiedDate":"2023-03-06"},{"lineNumber":238,"author":{"gitId":"Junyi00"},"content":"            requireNonNull(customer);","lastModifiedDate":"2023-03-06"},{"lineNumber":239,"author":{"gitId":"Junyi00"},"content":"            customersAdded.add(customer);","lastModifiedDate":"2023-03-06"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Junyi00":66,"CloudHill":42,"-":140}},{"path":"src/test/java/seedu/loyaltylift/logic/commands/AddPointsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_POINTS_ADD;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_POINTS_SUBTRACT;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"import static seedu.loyaltylift.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.model.ModelManager;","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.model.UserPrefs;","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"public class AddPointsCommandTest {","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPointsCommand(null, VALID_POINTS_ADD));","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"    public void constructor_nullAddPoints_throwsNullPointerException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPointsCommand(Index.fromOneBased(1),","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"                null));","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"    public void equals() {","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"        final AddPointsCommand standardCommand \u003d new AddPointsCommand(INDEX_FIRST, VALID_POINTS_ADD);","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"        AddPointsCommand commandWithSameValues \u003d new AddPointsCommand(INDEX_FIRST, VALID_POINTS_ADD);","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"Infrix"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"Infrix"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"Infrix"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"Infrix"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"        assertFalse(standardCommand.equals(new AddPointsCommand(INDEX_SECOND, VALID_POINTS_ADD)));","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"Infrix"},"content":"        // different AddPoints -\u003e returns false","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"CloudHill"},"content":"        assertFalse(standardCommand.equals(new AddPointsCommand(INDEX_FIRST, VALID_POINTS_SUBTRACT)));","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"CloudHill":6,"Infrix":51}},{"path":"src/test/java/seedu/loyaltylift/logic/commands/AppendCustomerNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.showCustomerAtIndex;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.commons.core.Messages;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.AddressBook;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.ModelManager;","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.UserPrefs;","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.testutil.CustomerBuilder;","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"public class AppendCustomerNoteCommandTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"    private final String nonEmptyString \u003d \"Test Note\";","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AppendCustomerNoteCommand(null, \"\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"    public void constructor_nullString_throwsNullPointerException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AppendCustomerNoteCommand(Index.fromOneBased(1), null));","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"    public void execute_unfilteredList_success() {","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"        Index indexLastCustomer \u003d Index.fromOneBased(model.getFilteredCustomerList().size());","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"        Customer lastCustomer \u003d model.getFilteredCustomerList().get(indexLastCustomer.getZeroBased());","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"        String newNote \u003d lastCustomer.getNote().value + nonEmptyString;","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"        Customer editedCustomer \u003d new CustomerBuilder(lastCustomer).withNote(newNote).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"        AppendCustomerNoteCommand appendCustomerNoteCommand \u003d new AppendCustomerNoteCommand(","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"                indexLastCustomer, nonEmptyString);","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"CloudHill"},"content":"                AppendCustomerNoteCommand.MESSAGE_APPEND_NOTE_SUCCESS, editedCustomer);","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"CloudHill"},"content":"        expectedModel.setCustomer(lastCustomer, editedCustomer);","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"CloudHill"},"content":"        assertCommandSuccess(appendCustomerNoteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"CloudHill"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"CloudHill"},"content":"        showCustomerAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"CloudHill"},"content":"        Customer customerInFilteredList \u003d model.getFilteredCustomerList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"CloudHill"},"content":"        String newNote \u003d customerInFilteredList.getNote().value + nonEmptyString;","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"CloudHill"},"content":"        Customer editedCustomer \u003d new CustomerBuilder(customerInFilteredList).withNote(newNote).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"CloudHill"},"content":"        AppendCustomerNoteCommand appendCustomerNoteCommand \u003d new AppendCustomerNoteCommand(","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"CloudHill"},"content":"                INDEX_FIRST, nonEmptyString);","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"CloudHill"},"content":"        String expectedMessage \u003d String.format(AppendCustomerNoteCommand.MESSAGE_APPEND_NOTE_SUCCESS, editedCustomer);","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"CloudHill"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"CloudHill"},"content":"        expectedModel.setCustomer(model.getFilteredCustomerList().get(0), editedCustomer);","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"CloudHill"},"content":"        assertCommandSuccess(appendCustomerNoteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"CloudHill"},"content":"    public void execute_invalidCustomerIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"CloudHill"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredCustomerList().size() + 1);","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"CloudHill"},"content":"        AppendCustomerNoteCommand appendCustomerNoteCommand \u003d new AppendCustomerNoteCommand(","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"CloudHill"},"content":"                outOfBoundIndex, nonEmptyString);","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"CloudHill"},"content":"        assertCommandFailure(appendCustomerNoteCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"CloudHill"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"CloudHill"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"CloudHill"},"content":"    public void execute_invalidCustomerIndexFilteredList_failure() {","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"CloudHill"},"content":"        showCustomerAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"CloudHill"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"CloudHill"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"CloudHill"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getCustomerList().size());","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"CloudHill"},"content":"        AppendCustomerNoteCommand appendCustomerNoteCommand \u003d new AppendCustomerNoteCommand(","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"CloudHill"},"content":"                outOfBoundIndex, nonEmptyString);","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"CloudHill"},"content":"        assertCommandFailure(appendCustomerNoteCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"CloudHill"},"content":"    public void equals() {","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"CloudHill"},"content":"        final AppendCustomerNoteCommand standardCommand \u003d new AppendCustomerNoteCommand(","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"CloudHill"},"content":"                INDEX_FIRST, nonEmptyString);","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"CloudHill"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"CloudHill"},"content":"        AppendCustomerNoteCommand commandWithSameValues \u003d new AppendCustomerNoteCommand(","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"CloudHill"},"content":"                INDEX_FIRST, nonEmptyString);","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"CloudHill"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"CloudHill"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"CloudHill"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"CloudHill"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"CloudHill"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"CloudHill"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"CloudHill"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"CloudHill"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":122,"author":{"gitId":"CloudHill"},"content":"        assertFalse(standardCommand.equals(new AppendCustomerNoteCommand(","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"CloudHill"},"content":"                INDEX_SECOND, nonEmptyString)));","lastModifiedDate":"2023-03-18"},{"lineNumber":124,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"CloudHill"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"CloudHill"},"content":"        assertFalse(standardCommand.equals(new AppendCustomerNoteCommand(","lastModifiedDate":"2023-03-18"},{"lineNumber":127,"author":{"gitId":"CloudHill"},"content":"                INDEX_FIRST, nonEmptyString + \" EXTRA\")));","lastModifiedDate":"2023-03-18"},{"lineNumber":128,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"CloudHill":129}},{"path":"src/test/java/seedu/loyaltylift/logic/commands/AppendOrderNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.commons.core.Messages;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.AddressBook;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.ModelManager;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.UserPrefs;","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.testutil.OrderBuilder;","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"public class AppendOrderNoteCommandTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"    private final String nonEmptyString \u003d \"Test Note\";","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AppendOrderNoteCommand(null, \"\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"    public void constructor_nullString_throwsNullPointerException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AppendOrderNoteCommand(Index.fromOneBased(1), null));","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"    public void execute_unfilteredList_success() {","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"        Index indexLastOrder \u003d Index.fromOneBased(model.getFilteredOrderList().size());","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"        Order lastOrder \u003d model.getFilteredOrderList().get(indexLastOrder.getZeroBased());","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"        String newNote \u003d lastOrder.getNote().value + nonEmptyString;","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"        Order editedOrder \u003d new OrderBuilder(lastOrder).withNote(newNote).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"        AppendOrderNoteCommand appendOrderNoteCommand \u003d new AppendOrderNoteCommand(","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"                indexLastOrder, nonEmptyString);","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"                AppendOrderNoteCommand.MESSAGE_APPEND_NOTE_SUCCESS, editedOrder);","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"        expectedModel.setOrder(lastOrder, editedOrder);","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"CloudHill"},"content":"        assertCommandSuccess(appendOrderNoteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"CloudHill"},"content":"    public void execute_invalidOrderIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"CloudHill"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredOrderList().size() + 1);","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"CloudHill"},"content":"        AppendOrderNoteCommand appendOrderNoteCommand \u003d new AppendOrderNoteCommand(","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"CloudHill"},"content":"                outOfBoundIndex, nonEmptyString);","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"CloudHill"},"content":"        assertCommandFailure(appendOrderNoteCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"CloudHill"},"content":"    public void equals() {","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"CloudHill"},"content":"        final AppendOrderNoteCommand standardCommand \u003d new AppendOrderNoteCommand(","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"CloudHill"},"content":"                INDEX_FIRST, nonEmptyString);","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"CloudHill"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"CloudHill"},"content":"        AppendOrderNoteCommand commandWithSameValues \u003d new AppendOrderNoteCommand(","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"CloudHill"},"content":"                INDEX_FIRST, nonEmptyString);","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"CloudHill"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"CloudHill"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"CloudHill"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"CloudHill"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"CloudHill"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"CloudHill"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"CloudHill"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"CloudHill"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"CloudHill"},"content":"        assertFalse(standardCommand.equals(new AppendOrderNoteCommand(","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"CloudHill"},"content":"                INDEX_SECOND, nonEmptyString)));","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"CloudHill"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"CloudHill"},"content":"        assertFalse(standardCommand.equals(new AppendOrderNoteCommand(","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"CloudHill"},"content":"                INDEX_FIRST, nonEmptyString + \" EXTRA\")));","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"CloudHill":93}},{"path":"src/test/java/seedu/loyaltylift/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.AddressBook;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ModelManager;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.UserPrefs;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Junyi00":7,"-":25}},{"path":"src/test/java/seedu/loyaltylift/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, null, null)));","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, null, null)));","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, null, null)));","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"    public void getCustomerIndex() {","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"        Integer index \u003d 1;","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", false, false, index, null);","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"        assertEquals(commandResult.getCustomerIndex(), index);","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"        CommandResult nullCommandResult \u003d new CommandResult(\"feedback\", false, false, null, null);","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"        assertNull(nullCommandResult.getCustomerIndex());","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"        CommandResult alsoNullCommandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"        assertNull(alsoNullCommandResult.getCustomerIndex());","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"    public void getOrderIndex() {","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"        Integer index \u003d 1;","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", false, false, null, index);","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"Junyi00"},"content":"        assertEquals(commandResult.getOrderIndex(), index);","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"        CommandResult nullCommandResult \u003d new CommandResult(\"feedback\", false, false, null, null);","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"        assertNull(nullCommandResult.getOrderIndex());","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"        CommandResult alsoNullCommandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"Junyi00"},"content":"        assertNull(alsoNullCommandResult.getOrderIndex());","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"Junyi00"},"content":"    public void isShowCustomerSelection() {","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"Junyi00"},"content":"        CommandResult falseCommandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"Junyi00"},"content":"        assertFalse(falseCommandResult.isShowCustomerSelection());","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"Junyi00"},"content":"        CommandResult secondFalseCommandResult \u003d new CommandResult(\"feedback\", true, true, null, null);","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"Junyi00"},"content":"        assertFalse(secondFalseCommandResult.isShowCustomerSelection());","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"Junyi00"},"content":"        CommandResult trueCommandResult \u003d new CommandResult(\"feedback\", true, true, 0, null);","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"Junyi00"},"content":"        assertTrue(trueCommandResult.isShowCustomerSelection());","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"Junyi00"},"content":"    public void isShowOrderSelection() {","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"Junyi00"},"content":"        CommandResult falseCommandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"Junyi00"},"content":"        assertFalse(falseCommandResult.isShowOrderSelection());","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"Junyi00"},"content":"        CommandResult secondFalseCommandResult \u003d new CommandResult(\"feedback\", true, true, null, null);","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"Junyi00"},"content":"        assertFalse(secondFalseCommandResult.isShowOrderSelection());","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"Junyi00"},"content":"        CommandResult trueCommandResult \u003d new CommandResult(\"feedback\", true, true, null, 0);","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"Junyi00"},"content":"        assertTrue(trueCommandResult.isShowOrderSelection());","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":90,"author":{"gitId":"Junyi00"},"content":"    public void showHelp() {","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"Junyi00"},"content":"        CommandResult trueCommandResult \u003d new CommandResult(\"feedback\", true, false, null, null);","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"Junyi00"},"content":"        assertTrue(trueCommandResult.isShowHelp());","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"Junyi00"},"content":"        CommandResult falseCommandResult \u003d new CommandResult(\"feedback\", false, false, null, null);","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"Junyi00"},"content":"        assertFalse(falseCommandResult.isShowHelp());","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"Junyi00"},"content":"    public void exit() {","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"Junyi00"},"content":"        CommandResult trueCommandResult \u003d new CommandResult(\"feedback\", false, true, null, null);","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"Junyi00"},"content":"        assertTrue(trueCommandResult.isExit());","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"Junyi00"},"content":"        CommandResult falseCommandResult \u003d new CommandResult(\"feedback\", false, false, null, null);","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"Junyi00"},"content":"        assertFalse(falseCommandResult.isExit());","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"Junyi00"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, null, null).hashCode());","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"Junyi00"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true, null, null).hashCode());","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"Junyi00":75,"-":48}},{"path":"src/test/java/seedu/loyaltylift/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_CUSTOMER_TYPE;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.AddressBook;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.CustomerNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"    // customer","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"    public static final String VALID_CUSTOMER_TYPE_ENTERPRISE \u003d \"ent\";","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"    public static final String VALID_CUSTOMER_TYPE_INDIVIDUAL \u003d \"ind\";","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"    public static final Integer VALID_POINTS_AMY \u003d 100;","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"Infrix"},"content":"    public static final Integer VALID_POINTS_BOB \u003d 200;","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"Infrix"},"content":"    public static final Integer VALID_POINTS_ADD \u003d 1;","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"Infrix"},"content":"    public static final Integer VALID_POINTS_SUBTRACT \u003d -1;","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"Infrix"},"content":"    public static final Integer VALID_CUMULATIVE_POINTS_AMY \u003d 100;","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"Infrix"},"content":"    public static final Integer VALID_CUMULATIVE_POINTS_BOB \u003d 200;","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"    public static final String VALID_NOTE_AMY \u003d \"Amy\u0027s Note\";","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"    public static final String VALID_NOTE_BOB \u003d \"Bob\u0027s Note\";","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":"    public static final String CUSTOMER_TYPE_DESC_ENTERPRISE \u003d \" \" + PREFIX_CUSTOMER_TYPE","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"Junyi00"},"content":"            + VALID_CUSTOMER_TYPE_ENTERPRISE;","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"Junyi00"},"content":"    public static final String CUSTOMER_TYPE_DESC_INDIVIDUAL \u003d \" \" + PREFIX_CUSTOMER_TYPE","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"Junyi00"},"content":"            + VALID_CUSTOMER_TYPE_INDIVIDUAL;","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"Junyi00"},"content":"    public static final String INVALID_CUSTOMER_TYPE \u003d \" \" + PREFIX_CUSTOMER_TYPE + \"person\"; // not a customer type","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"Junyi00"},"content":"    public static final EditCustomerCommand.EditCustomerDescriptor DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"Junyi00"},"content":"    public static final EditCustomerCommand.EditCustomerDescriptor DESC_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"CloudHill"},"content":"    // order","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"CloudHill"},"content":"    public static final String VALID_NAME_A \u003d \"Strawberry Shortcake\";","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"CloudHill"},"content":"    public static final String VALID_NAME_B \u003d \"Banana Split\";","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"CloudHill"},"content":"    public static final String VALID_QUANTITY_A \u003d \"5\";","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"CloudHill"},"content":"    public static final String VALID_QUANTITY_B \u003d \"2\";","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"Junyi00"},"content":"    public static final String VALID_STATUS_A_PENDING_DATE \u003d \"2022/01/09\";","lastModifiedDate":"2023-03-25"},{"lineNumber":89,"author":{"gitId":"Junyi00"},"content":"    public static final String VALID_STATUS_A_PAID_DATE \u003d \"2022/03/26\";","lastModifiedDate":"2023-03-25"},{"lineNumber":90,"author":{"gitId":"Junyi00"},"content":"    public static final String VALID_STATUS_B_PENDING_DATE \u003d \"2023/02/09\";","lastModifiedDate":"2023-03-25"},{"lineNumber":91,"author":{"gitId":"CloudHill"},"content":"    public static final String VALID_ADDRESS_A \u003d \"10 Summer Drive, Singapore 3098812\";","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"CloudHill"},"content":"    public static final String VALID_ADDRESS_B \u003d \"11 Fabordrive, Singapore 3001298\";","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"CloudHill"},"content":"    public static final String VALID_CREATED_DATE_A \u003d \"2023/01/09\";","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"CloudHill"},"content":"    public static final String VALID_CREATED_DATE_B \u003d \"2022/12/20\";","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"CloudHill"},"content":"    public static final String VALID_NOTE_A \u003d \"Note A\";","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"CloudHill"},"content":"    public static final String VALID_NOTE_B \u003d \"Note B\";","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"Junyi00"},"content":"        DESC_AMY \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"Junyi00"},"content":"        DESC_BOB \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"Junyi00"},"content":"     * - the address book, filtered customer list and selected customer in {@code actualModel} remain unchanged","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"Junyi00"},"content":"        List\u003cCustomer\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredCustomerList());","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"Junyi00"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredCustomerList());","lastModifiedDate":"2023-03-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":151,"author":{"gitId":"Junyi00"},"content":"     * Updates {@code model}\u0027s filtered list to show only the customer at the given {@code targetIndex} in the","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":154,"author":{"gitId":"Junyi00"},"content":"    public static void showCustomerAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"Junyi00"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredCustomerList().size());","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":157,"author":{"gitId":"Junyi00"},"content":"        Customer customer \u003d model.getFilteredCustomerList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"Junyi00"},"content":"        final String[] splitName \u003d customer.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-03-06"},{"lineNumber":159,"author":{"gitId":"CloudHill"},"content":"        model.updateFilteredCustomerList(new CustomerNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-03-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":161,"author":{"gitId":"Junyi00"},"content":"        assertEquals(1, model.getFilteredCustomerList().size());","lastModifiedDate":"2023-03-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":165,"author":{"gitId":"CloudHill"},"content":"     * Updates {@code model}\u0027s filtered list to show only the order at the given {@code targetIndex} in the","lastModifiedDate":"2023-03-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-03-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":168,"author":{"gitId":"CloudHill"},"content":"    public static void showOrderAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-03-27"},{"lineNumber":169,"author":{"gitId":"CloudHill"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredOrderList().size());","lastModifiedDate":"2023-03-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":171,"author":{"gitId":"CloudHill"},"content":"        Order order \u003d model.getFilteredOrderList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-27"},{"lineNumber":172,"author":{"gitId":"CloudHill"},"content":"        model.updateFilteredOrderList(a -\u003e a \u003d\u003d order);","lastModifiedDate":"2023-03-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":174,"author":{"gitId":"CloudHill"},"content":"        assertEquals(1, model.getFilteredOrderList().size());","lastModifiedDate":"2023-03-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Junyi00":35,"CloudHill":28,"Infrix":6,"-":108}},{"path":"src/test/java/seedu/loyaltylift/logic/commands/DeleteCustomerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.showCustomerAtIndex;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.Messages;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ModelManager;","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.UserPrefs;","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":" * {@code DeleteCustomerCommand}.","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"public class DeleteCustomerCommandTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"        Customer customerToDelete \u003d model.getFilteredCustomerList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"        DeleteCustomerCommand deleteCustomerCommand \u003d new DeleteCustomerCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"        String expectedMessage \u003d String.format(DeleteCustomerCommand.MESSAGE_DELETE_CUSTOMER_SUCCESS, customerToDelete);","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"        expectedModel.deleteCustomer(customerToDelete);","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"        assertCommandSuccess(deleteCustomerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredCustomerList().size() + 1);","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"        DeleteCustomerCommand deleteCustomerCommand \u003d new DeleteCustomerCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"        assertCommandFailure(deleteCustomerCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"        showCustomerAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"CloudHill"},"content":"        Customer customerToDelete \u003d model.getFilteredCustomerList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"CloudHill"},"content":"        DeleteCustomerCommand deleteCustomerCommand \u003d new DeleteCustomerCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"Junyi00"},"content":"        String expectedMessage \u003d String.format(DeleteCustomerCommand.MESSAGE_DELETE_CUSTOMER_SUCCESS, customerToDelete);","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"Junyi00"},"content":"        expectedModel.deleteCustomer(customerToDelete);","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"        showNoCustomer(expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"Junyi00"},"content":"        assertCommandSuccess(deleteCustomerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"CloudHill"},"content":"        showCustomerAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"CloudHill"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"Junyi00"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getCustomerList().size());","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"Junyi00"},"content":"        DeleteCustomerCommand deleteCustomerCommand \u003d new DeleteCustomerCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"Junyi00"},"content":"        assertCommandFailure(deleteCustomerCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"CloudHill"},"content":"        DeleteCustomerCommand deleteFirstCommand \u003d new DeleteCustomerCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"CloudHill"},"content":"        DeleteCustomerCommand deleteSecondCommand \u003d new DeleteCustomerCommand(INDEX_SECOND);","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"CloudHill"},"content":"        DeleteCustomerCommand deleteFirstCommandCopy \u003d new DeleteCustomerCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"Junyi00"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"Junyi00"},"content":"    private void showNoCustomer(Model model) {","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"Junyi00"},"content":"        model.updateFilteredCustomerList(p -\u003e false);","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"Junyi00"},"content":"        assertTrue(model.getFilteredCustomerList().isEmpty());","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Junyi00":30,"CloudHill":12,"-":67}},{"path":"src/test/java/seedu/loyaltylift/logic/commands/EditCustomerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.showCustomerAtIndex;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.Messages;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.EditCustomerCommand.EditCustomerDescriptor;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.AddressBook;","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ModelManager;","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.UserPrefs;","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.testutil.CustomerBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCustomerCommand.","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"public class EditCustomerCommandTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"        Customer editedCustomer \u003d new CustomerBuilder().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"        EditCustomerCommand.EditCustomerDescriptor descriptor \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"                new EditCustomerDescriptorBuilder(editedCustomer).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"        EditCustomerCommand editCustomerCommand \u003d new EditCustomerCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"        String expectedMessage \u003d String.format(EditCustomerCommand.MESSAGE_EDIT_CUSTOMER_SUCCESS, editedCustomer);","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"        expectedModel.setCustomer(model.getFilteredCustomerList().get(0), editedCustomer);","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"        assertCommandSuccess(editCustomerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"        Index indexLastCustomer \u003d Index.fromOneBased(model.getFilteredCustomerList().size());","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"        Customer lastCustomer \u003d model.getFilteredCustomerList().get(indexLastCustomer.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"Junyi00"},"content":"        CustomerBuilder customerInList \u003d new CustomerBuilder(lastCustomer);","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"        Customer editedCustomer \u003d customerInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"Junyi00"},"content":"        EditCustomerCommand editCustomerCommand \u003d new EditCustomerCommand(indexLastCustomer, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"Junyi00"},"content":"        String expectedMessage \u003d String.format(EditCustomerCommand.MESSAGE_EDIT_CUSTOMER_SUCCESS, editedCustomer);","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"Junyi00"},"content":"        expectedModel.setCustomer(lastCustomer, editedCustomer);","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"Junyi00"},"content":"        assertCommandSuccess(editCustomerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"Junyi00"},"content":"        EditCustomerCommand editCustomerCommand \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"CloudHill"},"content":"                new EditCustomerCommand(INDEX_FIRST, new EditCustomerCommand.EditCustomerDescriptor());","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"CloudHill"},"content":"        Customer editedCustomer \u003d model.getFilteredCustomerList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"Junyi00"},"content":"        String expectedMessage \u003d String.format(EditCustomerCommand.MESSAGE_EDIT_CUSTOMER_SUCCESS, editedCustomer);","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"Junyi00"},"content":"        assertCommandSuccess(editCustomerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"CloudHill"},"content":"        showCustomerAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"CloudHill"},"content":"        Customer customerInFilteredList \u003d model.getFilteredCustomerList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"Junyi00"},"content":"        Customer editedCustomer \u003d new CustomerBuilder(customerInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"CloudHill"},"content":"        EditCustomerCommand editCustomerCommand \u003d new EditCustomerCommand(INDEX_FIRST,","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"Junyi00"},"content":"                new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"Junyi00"},"content":"        String expectedMessage \u003d String.format(EditCustomerCommand.MESSAGE_EDIT_CUSTOMER_SUCCESS, editedCustomer);","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"Junyi00"},"content":"        expectedModel.setCustomer(model.getFilteredCustomerList().get(0), editedCustomer);","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"Junyi00"},"content":"        assertCommandSuccess(editCustomerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"Junyi00"},"content":"    public void execute_duplicateCustomerUnfilteredList_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"CloudHill"},"content":"        Customer firstCustomer \u003d model.getFilteredCustomerList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"Junyi00"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder(firstCustomer).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"CloudHill"},"content":"        EditCustomerCommand editCustomerCommand \u003d new EditCustomerCommand(INDEX_SECOND, descriptor);","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"Junyi00"},"content":"        assertCommandFailure(editCustomerCommand, model, EditCustomerCommand.MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"Junyi00"},"content":"    public void execute_duplicateCustomerFilteredList_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"CloudHill"},"content":"        showCustomerAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"Junyi00"},"content":"        // edit customer in filtered list into a duplicate in address book","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"CloudHill"},"content":"        Customer customerInList \u003d model.getAddressBook().getCustomerList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"CloudHill"},"content":"        EditCustomerCommand editCustomerCommand \u003d new EditCustomerCommand(INDEX_FIRST,","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"Junyi00"},"content":"                new EditCustomerDescriptorBuilder(customerInList).build());","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"Junyi00"},"content":"        assertCommandFailure(editCustomerCommand, model, EditCustomerCommand.MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"Junyi00"},"content":"    public void execute_invalidCustomerIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"Junyi00"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredCustomerList().size() + 1);","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"Junyi00"},"content":"        EditCustomerCommand.EditCustomerDescriptor descriptor \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"Junyi00"},"content":"                new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"Junyi00"},"content":"        EditCustomerCommand editCustomerCommand \u003d new EditCustomerCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"Junyi00"},"content":"        assertCommandFailure(editCustomerCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"Junyi00"},"content":"    public void execute_invalidCustomerIndexFilteredList_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"CloudHill"},"content":"        showCustomerAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"CloudHill"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"Junyi00"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getCustomerList().size());","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"Junyi00"},"content":"        EditCustomerCommand editCustomerCommand \u003d new EditCustomerCommand(outOfBoundIndex,","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"Junyi00"},"content":"                new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"Junyi00"},"content":"        assertCommandFailure(editCustomerCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"CloudHill"},"content":"        final EditCustomerCommand standardCommand \u003d new EditCustomerCommand(INDEX_FIRST, DESC_AMY);","lastModifiedDate":"2023-03-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"Junyi00"},"content":"        EditCustomerCommand.EditCustomerDescriptor copyDescriptor \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":157,"author":{"gitId":"Junyi00"},"content":"                new EditCustomerCommand.EditCustomerDescriptor(DESC_AMY);","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"CloudHill"},"content":"        EditCustomerCommand commandWithSameValues \u003d new EditCustomerCommand(INDEX_FIRST, copyDescriptor);","lastModifiedDate":"2023-03-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"CloudHill"},"content":"        assertFalse(standardCommand.equals(new EditCustomerCommand(INDEX_SECOND, DESC_AMY)));","lastModifiedDate":"2023-03-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"CloudHill"},"content":"        assertFalse(standardCommand.equals(new EditCustomerCommand(INDEX_FIRST, DESC_BOB)));","lastModifiedDate":"2023-03-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Junyi00":65,"CloudHill":19,"-":93}},{"path":"src/test/java/seedu/loyaltylift/logic/commands/EditCustomerDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.EditCustomerCommand.EditCustomerDescriptor;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"public class EditCustomerDescriptorTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"        EditCustomerDescriptor descriptorWithSameValues \u003d new EditCustomerDescriptor(DESC_AMY);","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"        EditCustomerDescriptor editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"        editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"        editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"        editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"        editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Junyi00":17,"-":41}},{"path":"src/test/java/seedu/loyaltylift/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ModelManager;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, null, null);","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Junyi00":6,"-":14}},{"path":"src/test/java/seedu/loyaltylift/logic/commands/FindCustomerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_CUSTOMERS_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalCustomers.CARL;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalCustomers.ELLE;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalCustomers.FIONA;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ModelManager;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.UserPrefs;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.CustomerNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCustomerCommand}.","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"public class FindCustomerCommandTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"        CustomerNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"                new CustomerNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"        CustomerNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"                new CustomerNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"        FindCustomerCommand findFirstCommand \u003d new FindCustomerCommand(firstPredicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"        FindCustomerCommand findSecondCommand \u003d new FindCustomerCommand(secondPredicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"        FindCustomerCommand findFirstCommandCopy \u003d new FindCustomerCommand(firstPredicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"    public void execute_zeroKeywords_noCustomerFound() {","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CUSTOMERS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"CloudHill"},"content":"        CustomerNameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"        FindCustomerCommand command \u003d new FindCustomerCommand(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Junyi00"},"content":"        expectedModel.updateFilteredCustomerList(predicate);","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredCustomerList());","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"Junyi00"},"content":"    public void execute_multipleKeywords_multipleCustomersFound() {","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Junyi00"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CUSTOMERS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"CloudHill"},"content":"        CustomerNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2023-03-25"},{"lineNumber":71,"author":{"gitId":"Junyi00"},"content":"        FindCustomerCommand command \u003d new FindCustomerCommand(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Junyi00"},"content":"        expectedModel.updateFilteredCustomerList(predicate);","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"Junyi00"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredCustomerList());","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"CloudHill"},"content":"    private CustomerNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-03-25"},{"lineNumber":81,"author":{"gitId":"CloudHill"},"content":"        return new CustomerNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-03-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Junyi00":26,"CloudHill":9,"-":48}},{"path":"src/test/java/seedu/loyaltylift/logic/commands/FindOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_ORDERS_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalOrders.ORDER_A;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalOrders.ORDER_C;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalOrders.ORDER_D;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"import java.util.List;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.ModelManager;","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.UserPrefs;","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.OrderNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":" * Contains integration tests (interaction with the Model) for {@code FindOrderCommand}.","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"public class FindOrderCommandTest {","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"    public void equals() {","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"        OrderNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"                new OrderNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"        OrderNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"                new OrderNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"        FindOrderCommand findFirstCommand \u003d new FindOrderCommand(firstPredicate);","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"        FindOrderCommand findSecondCommand \u003d new FindOrderCommand(secondPredicate);","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"        FindOrderCommand findFirstCommandCopy \u003d new FindOrderCommand(firstPredicate);","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"CloudHill"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"CloudHill"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"CloudHill"},"content":"        // different order -\u003e returns false","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"CloudHill"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"CloudHill"},"content":"    public void execute_zeroKeywords_noOrderFound() {","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"CloudHill"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ORDERS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"CloudHill"},"content":"        OrderNameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"CloudHill"},"content":"        FindOrderCommand command \u003d new FindOrderCommand(predicate);","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"CloudHill"},"content":"        expectedModel.updateFilteredOrderList(predicate);","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"CloudHill"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"CloudHill"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredOrderList());","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"CloudHill"},"content":"    public void execute_multipleKeywords_multipleOrdersFound() {","lastModifiedDate":"2023-03-25"},{"lineNumber":71,"author":{"gitId":"CloudHill"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ORDERS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"CloudHill"},"content":"        OrderNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Strawberry Melon\");","lastModifiedDate":"2023-03-25"},{"lineNumber":73,"author":{"gitId":"CloudHill"},"content":"        FindOrderCommand command \u003d new FindOrderCommand(predicate);","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"CloudHill"},"content":"        expectedModel.updateFilteredOrderList(predicate);","lastModifiedDate":"2023-03-25"},{"lineNumber":75,"author":{"gitId":"CloudHill"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-25"},{"lineNumber":76,"author":{"gitId":"CloudHill"},"content":"        List\u003cOrder\u003e expectedList \u003d Arrays.asList(ORDER_A, ORDER_C, ORDER_D);","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"CloudHill"},"content":"        expectedList.sort(Order.SORT_NAME);","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"CloudHill"},"content":"        assertEquals(expectedList, model.getFilteredOrderList());","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":80,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":81,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":82,"author":{"gitId":"CloudHill"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2023-03-25"},{"lineNumber":83,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":84,"author":{"gitId":"CloudHill"},"content":"    private OrderNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-03-25"},{"lineNumber":85,"author":{"gitId":"CloudHill"},"content":"        return new OrderNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-03-25"},{"lineNumber":86,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":87,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"CloudHill":87}},{"path":"src/test/java/seedu/loyaltylift/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ModelManager;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, null, null);","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Junyi00":6,"-":14}},{"path":"src/test/java/seedu/loyaltylift/logic/commands/ListCustomerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.showCustomerAtIndex;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"import static seedu.loyaltylift.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ModelManager;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.UserPrefs;","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCustomerCommand.","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"public class ListCustomerCommandTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"    public void equals() {","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"        ListCustomerCommand listCommand \u003d new ListCustomerCommand();","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"        ListCustomerCommand listSortOrderCommand \u003d new ListCustomerCommand(","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"                Customer.SORT_POINTS, PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"JavonTeo"},"content":"        ListCustomerCommand listFilterMarkedCommand \u003d new ListCustomerCommand(","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"JavonTeo"},"content":"                Customer.SORT_NAME, Customer.FILTER_SHOW_MARKED);","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"        assertTrue(listCommand.equals(listCommand));","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"        // same comparator -\u003e returns true","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"        ListCustomerCommand listCommandCopy \u003d new ListCustomerCommand();","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"        assertTrue(listCommand.equals(listCommandCopy));","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"        assertFalse(listCommand.equals(1));","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"        assertFalse(listCommand.equals(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"CloudHill"},"content":"        // different comparator -\u003e returns false","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"CloudHill"},"content":"        assertFalse(listCommand.equals(listSortOrderCommand));","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"JavonTeo"},"content":"        // different predicate -\u003e returns false","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"JavonTeo"},"content":"        assertFalse(listCommand.equals(listFilterMarkedCommand));","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"JavonTeo"},"content":"        assertCommandSuccess(new ListCustomerCommand(), model, ListCustomerCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"CloudHill"},"content":"        showCustomerAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"JavonTeo"},"content":"        assertCommandSuccess(new ListCustomerCommand(), model, ListCustomerCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Junyi00":9,"CloudHill":26,"JavonTeo":10,"-":26}},{"path":"src/test/java/seedu/loyaltylift/logic/commands/ListOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.showOrderAtIndex;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.ModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.UserPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.OrderStatusPredicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.StatusValue;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListOrderCommand.","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"public class ListOrderCommandTest {","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"    private Model model;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"    public void equals() {","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"        ListOrderCommand listCommand \u003d new ListOrderCommand();","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"        ListOrderCommand listSortStatusCommand \u003d new ListOrderCommand(","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"                Order.SORT_STATUS, PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"        ListOrderCommand listSortCreatedDatePendingCommand \u003d new ListOrderCommand(","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"                Order.SORT_CREATED_DATE, new OrderStatusPredicate(StatusValue.PENDING));","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"        assertTrue(listCommand.equals(listCommand));","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"        // same comparator and predicate -\u003e returns true","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"        ListOrderCommand listCommandCopy \u003d new ListOrderCommand();","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"        assertTrue(listCommand.equals(listCommandCopy));","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"CloudHill"},"content":"        ListOrderCommand listSortCreatedDatePendingCommandCopy \u003d new ListOrderCommand(","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"                Order.SORT_CREATED_DATE, new OrderStatusPredicate(StatusValue.PENDING));","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"        assertTrue(listSortCreatedDatePendingCommand.equals(listSortCreatedDatePendingCommandCopy));","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"CloudHill"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"CloudHill"},"content":"        assertFalse(listCommand.equals(1));","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"CloudHill"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"CloudHill"},"content":"        assertFalse(listCommand.equals(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"CloudHill"},"content":"        // different comparator -\u003e returns false","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"CloudHill"},"content":"        assertFalse(listCommand.equals(listSortStatusCommand));","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"CloudHill"},"content":"        // different predicate -\u003e returns false","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"CloudHill"},"content":"        assertFalse(listCommand.equals(listSortCreatedDatePendingCommand));","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"CloudHill"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"CloudHill"},"content":"        assertCommandSuccess(new ListOrderCommand(), model, ListOrderCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"CloudHill"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"CloudHill"},"content":"        showOrderAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"CloudHill"},"content":"        assertCommandSuccess(new ListOrderCommand(), model, ListOrderCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"CloudHill":77}},{"path":"src/test/java/seedu/loyaltylift/logic/commands/MarkCustomerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.showCustomerAtIndex;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"import static seedu.loyaltylift.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.ModelManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.UserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.attribute.Address;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.attribute.Name;","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Note;","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.customer.CustomerType;","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.customer.Email;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.customer.Marked;","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.customer.Phone;","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.customer.Points;","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.tag.Tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"JavonTeo"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"JavonTeo"},"content":" * {@code MarkCustomerCommand}.","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"JavonTeo"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"public class MarkCustomerCommandTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"JavonTeo"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"JavonTeo"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"        Customer customerToMark \u003d model.getFilteredCustomerList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"JavonTeo"},"content":"        CustomerType customerType \u003d customerToMark.getCustomerType();","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"JavonTeo"},"content":"        Name name \u003d customerToMark.getName();","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"JavonTeo"},"content":"        Phone phone \u003d customerToMark.getPhone();","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"JavonTeo"},"content":"        Email email \u003d customerToMark.getEmail();","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"JavonTeo"},"content":"        Address address \u003d customerToMark.getAddress();","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"JavonTeo"},"content":"        Set\u003cTag\u003e tags \u003d customerToMark.getTags();","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"JavonTeo"},"content":"        Points points \u003d customerToMark.getPoints();","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"        Note note \u003d customerToMark.getNote();","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"JavonTeo"},"content":"        Customer markedCustomer \u003d new Customer(customerType, name, phone, email, address, tags, points,","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"                new Marked(true), note);","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"        MarkCustomerCommand markCustomerCommand \u003d new MarkCustomerCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"JavonTeo"},"content":"        String expectedMessage \u003d String.format(MarkCustomerCommand.MESSAGE_MARK_CUSTOMER_SUCCESS, markedCustomer);","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"JavonTeo"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"JavonTeo"},"content":"        expectedModel.setCustomer(model.getFilteredCustomerList().get(0), markedCustomer);","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"JavonTeo"},"content":"        assertCommandSuccess(markCustomerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"JavonTeo"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"JavonTeo"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"JavonTeo"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredCustomerList().size() + 1);","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"JavonTeo"},"content":"        MarkCustomerCommand markCustomerCommand \u003d new MarkCustomerCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"JavonTeo"},"content":"        assertCommandFailure(markCustomerCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"JavonTeo"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"JavonTeo"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"CloudHill"},"content":"        showCustomerAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"CloudHill"},"content":"        Customer customerToMark \u003d model.getFilteredCustomerList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"JavonTeo"},"content":"        CustomerType customerType \u003d customerToMark.getCustomerType();","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"JavonTeo"},"content":"        Name name \u003d customerToMark.getName();","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"JavonTeo"},"content":"        Phone phone \u003d customerToMark.getPhone();","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"JavonTeo"},"content":"        Email email \u003d customerToMark.getEmail();","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"JavonTeo"},"content":"        Address address \u003d customerToMark.getAddress();","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"JavonTeo"},"content":"        Set\u003cTag\u003e tags \u003d customerToMark.getTags();","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"JavonTeo"},"content":"        Points points \u003d customerToMark.getPoints();","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"CloudHill"},"content":"        Note note \u003d customerToMark.getNote();","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"JavonTeo"},"content":"        Customer markedCustomer \u003d new Customer(customerType, name, phone, email, address, tags, points,","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"CloudHill"},"content":"                new Marked(true), note);","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"CloudHill"},"content":"        MarkCustomerCommand markCustomerCommand \u003d new MarkCustomerCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"JavonTeo"},"content":"        String expectedMessage \u003d String.format(MarkCustomerCommand.MESSAGE_MARK_CUSTOMER_SUCCESS, markedCustomer);","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"JavonTeo"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"JavonTeo"},"content":"        expectedModel.setCustomer(model.getFilteredCustomerList().get(0), markedCustomer);","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"JavonTeo"},"content":"        assertCommandSuccess(markCustomerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"JavonTeo"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"JavonTeo"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"CloudHill"},"content":"        showCustomerAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"CloudHill"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"JavonTeo"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"JavonTeo"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getCustomerList().size());","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"JavonTeo"},"content":"        MarkCustomerCommand markCustomerCommand \u003d new MarkCustomerCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"JavonTeo"},"content":"        assertCommandFailure(markCustomerCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"JavonTeo"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"JavonTeo"},"content":"    public void equals() {","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"CloudHill"},"content":"        MarkCustomerCommand markFirstCommand \u003d new MarkCustomerCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"CloudHill"},"content":"        MarkCustomerCommand markSecondCommand \u003d new MarkCustomerCommand(INDEX_SECOND);","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"JavonTeo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"JavonTeo"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommand));","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"JavonTeo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"CloudHill"},"content":"        MarkCustomerCommand markFirstCommandCopy \u003d new MarkCustomerCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"JavonTeo"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommandCopy));","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"JavonTeo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"JavonTeo"},"content":"        assertFalse(markFirstCommand.equals(1));","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"JavonTeo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"JavonTeo"},"content":"        assertFalse(markFirstCommand.equals(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"JavonTeo"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"JavonTeo"},"content":"        assertFalse(markFirstCommand.equals(markSecondCommand));","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"JavonTeo":112,"CloudHill":17}},{"path":"src/test/java/seedu/loyaltylift/logic/commands/SetCustomerNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_NOTE_AMY;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_NOTE_BOB;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.showCustomerAtIndex;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.commons.core.Messages;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.AddressBook;","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.ModelManager;","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.UserPrefs;","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Note;","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.testutil.CustomerBuilder;","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"public class SetCustomerNoteCommandTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"        assertThrows(NullPointerException.class, () -\u003e new SetCustomerNoteCommand(null, new Note(\"\")));","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"    public void constructor_nullNote_throwsNullPointerException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"        assertThrows(NullPointerException.class, () -\u003e new SetCustomerNoteCommand(Index.fromOneBased(1), null));","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"    public void execute_unfilteredList_success() {","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"        Index indexLastCustomer \u003d Index.fromOneBased(model.getFilteredCustomerList().size());","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"        Customer lastCustomer \u003d model.getFilteredCustomerList().get(indexLastCustomer.getZeroBased());","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"        Customer editedCustomer \u003d new CustomerBuilder(lastCustomer).withNote(VALID_NOTE_BOB).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"        SetCustomerNoteCommand setCustomerNoteCommand \u003d new SetCustomerNoteCommand(indexLastCustomer,","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"                new Note(VALID_NOTE_BOB));","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"CloudHill"},"content":"        String expectedMessage \u003d String.format(SetCustomerNoteCommand.MESSAGE_SET_NOTE_SUCCESS, editedCustomer);","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"CloudHill"},"content":"        expectedModel.setCustomer(lastCustomer, editedCustomer);","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"CloudHill"},"content":"        assertCommandSuccess(setCustomerNoteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"CloudHill"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"CloudHill"},"content":"        showCustomerAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"CloudHill"},"content":"        Customer customerInFilteredList \u003d model.getFilteredCustomerList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"CloudHill"},"content":"        Customer editedCustomer \u003d new CustomerBuilder(customerInFilteredList).withNote(VALID_NOTE_BOB).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"CloudHill"},"content":"        SetCustomerNoteCommand setCustomerNoteCommand \u003d new SetCustomerNoteCommand(INDEX_FIRST,","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"CloudHill"},"content":"                new Note(VALID_NOTE_BOB));","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"CloudHill"},"content":"        String expectedMessage \u003d String.format(SetCustomerNoteCommand.MESSAGE_SET_NOTE_SUCCESS, editedCustomer);","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"CloudHill"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"CloudHill"},"content":"        expectedModel.setCustomer(model.getFilteredCustomerList().get(0), editedCustomer);","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"CloudHill"},"content":"        assertCommandSuccess(setCustomerNoteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"CloudHill"},"content":"    public void execute_invalidCustomerIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"CloudHill"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredCustomerList().size() + 1);","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"CloudHill"},"content":"        SetCustomerNoteCommand setCustomerNoteCommand \u003d new SetCustomerNoteCommand(","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"CloudHill"},"content":"                outOfBoundIndex, new Note(VALID_NOTE_BOB));","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"CloudHill"},"content":"        assertCommandFailure(setCustomerNoteCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"CloudHill"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"CloudHill"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"CloudHill"},"content":"    public void execute_invalidCustomerIndexFilteredList_failure() {","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"CloudHill"},"content":"        showCustomerAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"CloudHill"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"CloudHill"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"CloudHill"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getCustomerList().size());","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"CloudHill"},"content":"        SetCustomerNoteCommand setCustomerNoteCommand \u003d new SetCustomerNoteCommand(","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"CloudHill"},"content":"                outOfBoundIndex, new Note(VALID_NOTE_BOB));","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"CloudHill"},"content":"        assertCommandFailure(setCustomerNoteCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"CloudHill"},"content":"    public void equals() {","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"CloudHill"},"content":"        final SetCustomerNoteCommand standardCommand \u003d new SetCustomerNoteCommand(INDEX_FIRST,","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"CloudHill"},"content":"                new Note(VALID_NOTE_AMY));","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"CloudHill"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"CloudHill"},"content":"        SetCustomerNoteCommand commandWithSameValues \u003d new SetCustomerNoteCommand(INDEX_FIRST,","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"CloudHill"},"content":"                new Note(VALID_NOTE_AMY));","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"CloudHill"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"CloudHill"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"CloudHill"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"CloudHill"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"CloudHill"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"CloudHill"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"CloudHill"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"CloudHill"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"CloudHill"},"content":"        assertFalse(standardCommand.equals(new SetCustomerNoteCommand(INDEX_SECOND,","lastModifiedDate":"2023-03-18"},{"lineNumber":122,"author":{"gitId":"CloudHill"},"content":"                new Note(VALID_NOTE_AMY))));","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":124,"author":{"gitId":"CloudHill"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"CloudHill"},"content":"        assertFalse(standardCommand.equals(new SetCustomerNoteCommand(INDEX_FIRST,","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"CloudHill"},"content":"                new Note(VALID_NOTE_BOB))));","lastModifiedDate":"2023-03-18"},{"lineNumber":127,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":128,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"CloudHill":128}},{"path":"src/test/java/seedu/loyaltylift/logic/commands/SetOrderNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_NOTE_A;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_NOTE_B;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.commons.core.Messages;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.AddressBook;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.ModelManager;","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.UserPrefs;","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Note;","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.testutil.OrderBuilder;","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"public class SetOrderNoteCommandTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"        assertThrows(NullPointerException.class, () -\u003e new SetOrderNoteCommand(null, new Note(\"\")));","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"    public void constructor_nullNote_throwsNullPointerException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"        assertThrows(NullPointerException.class, () -\u003e new SetOrderNoteCommand(Index.fromOneBased(1), null));","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"    public void execute_unfilteredList_success() {","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"        Index indexLastOrder \u003d Index.fromOneBased(model.getFilteredOrderList().size());","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"        Order lastOrder \u003d model.getFilteredOrderList().get(indexLastOrder.getZeroBased());","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"        Order editedOrder \u003d new OrderBuilder(lastOrder).withNote(VALID_NOTE_B).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"        SetOrderNoteCommand setOrderNoteCommand \u003d new SetOrderNoteCommand(indexLastOrder,","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"                new Note(VALID_NOTE_B));","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"        String expectedMessage \u003d String.format(SetOrderNoteCommand.MESSAGE_SET_NOTE_SUCCESS, editedOrder);","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"        expectedModel.setOrder(lastOrder, editedOrder);","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"CloudHill"},"content":"        assertCommandSuccess(setOrderNoteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"CloudHill"},"content":"    public void execute_invalidOrderIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"CloudHill"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredOrderList().size() + 1);","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"CloudHill"},"content":"        SetOrderNoteCommand setOrderNoteCommand \u003d new SetOrderNoteCommand(","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"CloudHill"},"content":"                outOfBoundIndex, new Note(VALID_NOTE_B));","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"CloudHill"},"content":"        assertCommandFailure(setOrderNoteCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"CloudHill"},"content":"    public void equals() {","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"CloudHill"},"content":"        final SetOrderNoteCommand standardCommand \u003d new SetOrderNoteCommand(INDEX_FIRST,","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"CloudHill"},"content":"                new Note(VALID_NOTE_A));","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"CloudHill"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"CloudHill"},"content":"        SetOrderNoteCommand commandWithSameValues \u003d new SetOrderNoteCommand(INDEX_FIRST,","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"CloudHill"},"content":"                new Note(VALID_NOTE_A));","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"CloudHill"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"CloudHill"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"CloudHill"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"CloudHill"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"CloudHill"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"CloudHill"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"CloudHill"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"CloudHill"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"CloudHill"},"content":"        assertFalse(standardCommand.equals(new SetOrderNoteCommand(INDEX_SECOND,","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"CloudHill"},"content":"                new Note(VALID_NOTE_A))));","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"CloudHill"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"CloudHill"},"content":"        assertFalse(standardCommand.equals(new SetOrderNoteCommand(INDEX_FIRST,","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"CloudHill"},"content":"                new Note(VALID_NOTE_B))));","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"CloudHill":93}},{"path":"src/test/java/seedu/loyaltylift/logic/commands/SetPointsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_CUMULATIVE_POINTS_AMY;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_CUMULATIVE_POINTS_BOB;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_POINTS_AMY;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_POINTS_BOB;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.model.ModelManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.model.UserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.model.customer.Points;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"public class SetPointsCommandTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"        assertThrows(NullPointerException.class, () -\u003e new SetPointsCommand(null,","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"                new Points(0, 0)));","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"    public void constructor_nullPoints_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"        assertThrows(NullPointerException.class, () -\u003e new SetPointsCommand(Index.fromOneBased(1),","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"                null));","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"    public void equals() {","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"        final SetPointsCommand standardCommand \u003d new SetPointsCommand(INDEX_FIRST,","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"                new Points(VALID_POINTS_AMY, VALID_CUMULATIVE_POINTS_AMY));","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"        SetPointsCommand commandWithSameValues \u003d new SetPointsCommand(INDEX_FIRST,","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"                new Points(VALID_POINTS_AMY, VALID_CUMULATIVE_POINTS_AMY));","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"Infrix"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"Infrix"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"Infrix"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"Infrix"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"Infrix"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"Infrix"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"Infrix"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"Infrix"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"CloudHill"},"content":"        assertFalse(standardCommand.equals(new SetPointsCommand(INDEX_SECOND,","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"Infrix"},"content":"                new Points(VALID_POINTS_AMY, VALID_CUMULATIVE_POINTS_AMY))));","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"Infrix"},"content":"        // different Points -\u003e returns false","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"CloudHill"},"content":"        assertFalse(standardCommand.equals(new SetPointsCommand(INDEX_FIRST,","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"Infrix"},"content":"                new Points(VALID_POINTS_BOB, VALID_CUMULATIVE_POINTS_BOB))));","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"Junyi00":1,"CloudHill":6,"Infrix":58}},{"path":"src/test/java/seedu/loyaltylift/logic/commands/UnmarkCustomerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.showCustomerAtIndex;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"import static seedu.loyaltylift.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.ModelManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.UserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.attribute.Address;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.attribute.Name;","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Note;","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.customer.CustomerType;","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.customer.Email;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.customer.Marked;","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.customer.Phone;","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.customer.Points;","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.tag.Tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"JavonTeo"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"JavonTeo"},"content":" * {@code MarkCustomerCommand}.","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"JavonTeo"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"public class UnmarkCustomerCommandTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"JavonTeo"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"JavonTeo"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"        Customer customerToUnmark \u003d model.getFilteredCustomerList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"JavonTeo"},"content":"        CustomerType customerType \u003d customerToUnmark.getCustomerType();","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"JavonTeo"},"content":"        Name name \u003d customerToUnmark.getName();","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"JavonTeo"},"content":"        Phone phone \u003d customerToUnmark.getPhone();","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"JavonTeo"},"content":"        Email email \u003d customerToUnmark.getEmail();","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"JavonTeo"},"content":"        Address address \u003d customerToUnmark.getAddress();","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"JavonTeo"},"content":"        Set\u003cTag\u003e tags \u003d customerToUnmark.getTags();","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"JavonTeo"},"content":"        Points points \u003d customerToUnmark.getPoints();","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"        Note note \u003d customerToUnmark.getNote();","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"JavonTeo"},"content":"        Customer unmarkedCustomer \u003d new Customer(customerType, name, phone, email, address, tags, points,","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"                new Marked(false), note);","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"        UnmarkCustomerCommand unmarkCustomerCommand \u003d new UnmarkCustomerCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"JavonTeo"},"content":"        String expectedMessage \u003d String.format(UnmarkCustomerCommand.MESSAGE_UNMARK_CUSTOMER_SUCCESS, unmarkedCustomer);","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"JavonTeo"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"JavonTeo"},"content":"        expectedModel.setCustomer(model.getFilteredCustomerList().get(0), unmarkedCustomer);","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"JavonTeo"},"content":"        assertCommandSuccess(unmarkCustomerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"JavonTeo"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"JavonTeo"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"JavonTeo"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredCustomerList().size() + 1);","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"JavonTeo"},"content":"        UnmarkCustomerCommand unmarkCustomerCommand \u003d new UnmarkCustomerCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"JavonTeo"},"content":"        assertCommandFailure(unmarkCustomerCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"JavonTeo"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"JavonTeo"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"CloudHill"},"content":"        showCustomerAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"CloudHill"},"content":"        Customer customerToUnmark \u003d model.getFilteredCustomerList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"JavonTeo"},"content":"        CustomerType customerType \u003d customerToUnmark.getCustomerType();","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"JavonTeo"},"content":"        Name name \u003d customerToUnmark.getName();","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"JavonTeo"},"content":"        Phone phone \u003d customerToUnmark.getPhone();","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"JavonTeo"},"content":"        Email email \u003d customerToUnmark.getEmail();","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"JavonTeo"},"content":"        Address address \u003d customerToUnmark.getAddress();","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"JavonTeo"},"content":"        Set\u003cTag\u003e tags \u003d customerToUnmark.getTags();","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"JavonTeo"},"content":"        Points points \u003d customerToUnmark.getPoints();","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"CloudHill"},"content":"        Note note \u003d customerToUnmark.getNote();","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"JavonTeo"},"content":"        Customer unmarkedCustomer \u003d new Customer(customerType, name, phone, email, address, tags, points,","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"CloudHill"},"content":"                new Marked(false), note);","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"CloudHill"},"content":"        UnmarkCustomerCommand unmarkCustomerCommand \u003d new UnmarkCustomerCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"JavonTeo"},"content":"        String expectedMessage \u003d String.format(UnmarkCustomerCommand.MESSAGE_UNMARK_CUSTOMER_SUCCESS, unmarkedCustomer);","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"JavonTeo"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"JavonTeo"},"content":"        expectedModel.setCustomer(model.getFilteredCustomerList().get(0), unmarkedCustomer);","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"JavonTeo"},"content":"        assertCommandSuccess(unmarkCustomerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"JavonTeo"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"JavonTeo"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"CloudHill"},"content":"        showCustomerAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"CloudHill"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"JavonTeo"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"JavonTeo"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getCustomerList().size());","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"JavonTeo"},"content":"        UnmarkCustomerCommand unmarkCustomerCommand \u003d new UnmarkCustomerCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"JavonTeo"},"content":"        assertCommandFailure(unmarkCustomerCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"JavonTeo"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"JavonTeo"},"content":"    public void equals() {","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"CloudHill"},"content":"        UnmarkCustomerCommand unmarkFirstCommand \u003d new UnmarkCustomerCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"CloudHill"},"content":"        UnmarkCustomerCommand unmarkSecondCommand \u003d new UnmarkCustomerCommand(INDEX_SECOND);","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"JavonTeo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"JavonTeo"},"content":"        assertTrue(unmarkFirstCommand.equals(unmarkFirstCommand));","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"JavonTeo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"CloudHill"},"content":"        UnmarkCustomerCommand unmarkFirstCommandCopy \u003d new UnmarkCustomerCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"JavonTeo"},"content":"        assertTrue(unmarkFirstCommand.equals(unmarkFirstCommandCopy));","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"JavonTeo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"JavonTeo"},"content":"        assertFalse(unmarkFirstCommand.equals(1));","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"JavonTeo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"JavonTeo"},"content":"        assertFalse(unmarkFirstCommand.equals(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"JavonTeo"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"JavonTeo"},"content":"        assertFalse(unmarkFirstCommand.equals(unmarkSecondCommand));","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"JavonTeo":112,"CloudHill":17}},{"path":"src/test/java/seedu/loyaltylift/logic/commands/ViewCustomerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.showCustomerAtIndex;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.Messages;","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ModelManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.UserPrefs;","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":" * {@code ViewCustomerCommand}.","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"public class ViewCustomerCommandTest {","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"        Customer customerToView \u003d model.getFilteredCustomerList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"        ViewCustomerCommand viewCustomerCommand \u003d new ViewCustomerCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"        String expectedMessage \u003d String.format(ViewCustomerCommand.MESSAGE_VIEW_CUSTOMER_SUCCESS, customerToView);","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, false, false, 0, null);","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"        assertCommandSuccess(viewCustomerCommand, model, expectedCommandResult, model);","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredCustomerList().size() + 1);","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"        ViewCustomerCommand viewCustomerCommand \u003d new ViewCustomerCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"        assertCommandFailure(viewCustomerCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"CloudHill"},"content":"        showCustomerAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getCustomerList().size());","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"Junyi00"},"content":"        ViewCustomerCommand viewCustomerCommand \u003d new ViewCustomerCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"        assertCommandFailure(viewCustomerCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"Junyi00"},"content":"    public void equals() {","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"CloudHill"},"content":"        ViewCustomerCommand viewFirstCommand \u003d new ViewCustomerCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"CloudHill"},"content":"        ViewCustomerCommand viewSecondCommand \u003d new ViewCustomerCommand(INDEX_SECOND);","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"Junyi00"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"Junyi00"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommand));","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"Junyi00"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"CloudHill"},"content":"        ViewCustomerCommand viewFirstCommandCopy \u003d new ViewCustomerCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"Junyi00"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommandCopy));","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"Junyi00"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"Junyi00"},"content":"        assertFalse(viewFirstCommand.equals(1));","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"Junyi00"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"Junyi00"},"content":"        assertFalse(viewFirstCommand.equals(null));","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"Junyi00"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"Junyi00"},"content":"        assertFalse(viewFirstCommand.equals(viewSecondCommand));","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":82,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"Junyi00":73,"CloudHill":9}},{"path":"src/test/java/seedu/loyaltylift/logic/commands/ViewOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.commands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.showOrderAtIndex;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.Messages;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ModelManager;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.UserPrefs;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":" * {@code ViewOrderCommand}.","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"public class ViewOrderCommandTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"        Order orderToView \u003d model.getFilteredOrderList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"        ViewOrderCommand viewOrderCommand \u003d new ViewOrderCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"        String expectedMessage \u003d String.format(viewOrderCommand.MESSAGE_VIEW_ORDER_SUCCESS, orderToView);","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, false, false, null, 0);","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"        assertCommandSuccess(viewOrderCommand, model, expectedCommandResult, model);","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredOrderList().size() + 1);","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"        ViewOrderCommand viewOrderCommand \u003d new ViewOrderCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"        assertCommandFailure(viewOrderCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"        showOrderAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getOrderList().size());","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"Junyi00"},"content":"        ViewOrderCommand viewOrderCommand \u003d new ViewOrderCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"        assertCommandFailure(viewOrderCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"Junyi00"},"content":"    public void equals() {","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":"        ViewOrderCommand viewFirstCommand \u003d new ViewOrderCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"Junyi00"},"content":"        ViewOrderCommand viewSecondCommand \u003d new ViewOrderCommand(INDEX_SECOND);","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"Junyi00"},"content":"        // same object","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"Junyi00"},"content":"        assertEquals(viewFirstCommand, viewFirstCommand);","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"Junyi00"},"content":"        // same values","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"Junyi00"},"content":"        ViewOrderCommand viewFirstCommandCopy \u003d new ViewOrderCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"Junyi00"},"content":"        assertEquals(viewFirstCommand, viewFirstCommandCopy);","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"Junyi00"},"content":"        // different types -\u003e not equals","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"Junyi00"},"content":"        assertNotEquals(1, viewFirstCommand);","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"Junyi00"},"content":"        // null -\u003e not equals","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"Junyi00"},"content":"        assertNotEquals(null, viewFirstCommand);","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"Junyi00"},"content":"        // different customer -\u003e not equals","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"Junyi00"},"content":"        assertNotEquals(viewFirstCommand, viewSecondCommand);","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Junyi00":83}},{"path":"src/test/java/seedu/loyaltylift/logic/parser/AddCustomerCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.CUSTOMER_TYPE_DESC_INDIVIDUAL;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.INVALID_CUSTOMER_TYPE;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalCustomers.AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalCustomers.BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.AddCustomerCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.attribute.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.attribute.Name;","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.CustomerType;","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Email;","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Phone;","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.tag.Tag;","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.testutil.CustomerBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"public class AddCustomerCommandParserTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"    private AddCustomerCommandParser parser \u003d new AddCustomerCommandParser();","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"        Customer expectedCustomer \u003d new CustomerBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCustomerCommand(expectedCustomer));","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCustomerCommand(expectedCustomer));","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"Junyi00"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCustomerCommand(expectedCustomer));","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"Junyi00"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCustomerCommand(expectedCustomer));","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"Junyi00"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCustomerCommand(expectedCustomer));","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"Junyi00"},"content":"        Customer expectedCustomerMultipleTags \u003d new CustomerBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"Junyi00"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCustomerCommand(expectedCustomerMultipleTags));","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"Junyi00"},"content":"        Customer expectedCustomer \u003d new CustomerBuilder(AMY).withTags().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"Junyi00"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-03-07"},{"lineNumber":85,"author":{"gitId":"Junyi00"},"content":"                NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + CUSTOMER_TYPE_DESC_INDIVIDUAL,","lastModifiedDate":"2023-03-07"},{"lineNumber":86,"author":{"gitId":"Junyi00"},"content":"                new AddCustomerCommand(expectedCustomer));","lastModifiedDate":"2023-03-07"},{"lineNumber":87,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":88,"author":{"gitId":"Junyi00"},"content":"        // no customer type, defaults to individual","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"Junyi00"},"content":"        expectedCustomer \u003d new CustomerBuilder(AMY).build();","lastModifiedDate":"2023-03-07"},{"lineNumber":90,"author":{"gitId":"Junyi00"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"Junyi00"},"content":"                NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-07"},{"lineNumber":92,"author":{"gitId":"Junyi00"},"content":"                new AddCustomerCommand(expectedCustomer));","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"Junyi00"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCustomerCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":149,"author":{"gitId":"Junyi00"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCustomerCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":151,"author":{"gitId":"Junyi00"},"content":"        // invalid customer type","lastModifiedDate":"2023-03-07"},{"lineNumber":152,"author":{"gitId":"Junyi00"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-03-07"},{"lineNumber":153,"author":{"gitId":"Junyi00"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + INVALID_CUSTOMER_TYPE,","lastModifiedDate":"2023-03-07"},{"lineNumber":154,"author":{"gitId":"Junyi00"},"content":"                CustomerType.MESSAGE_FAIL_CONVERSION);","lastModifiedDate":"2023-03-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Junyi00":66,"jednghk":2,"-":88}},{"path":"src/test/java/seedu/loyaltylift/logic/parser/AddPointsCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import static seedu.loyaltylift.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"import static seedu.loyaltylift.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.commons.core.Messages;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.logic.commands.AddPointsCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"public class AddPointsCommandParserTest {","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"    private AddPointsCommandParser parser \u003d new AddPointsCommandParser();","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"    private final Integer nonEmptyPoints \u003d -100;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"        // must have points, /pt with no integer afterwards will not be parsed successfully","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_POINTS + nonEmptyPoints;","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"        AddPointsCommand expectedCommand \u003d new AddPointsCommand(INDEX_FIRST, nonEmptyPoints);","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPointsCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"        String expectedMissingIndex \u003d Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX;","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"        // no parameters","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"        assertParseFailure(parser, AddPointsCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"        // weird test failure, not sure what is going on, will fix in future","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"        // no index","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"        //assertParseFailure(parser, AddPointsCommand.COMMAND_WORD + \" \" + PREFIX_POINTS","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"        //        + modifier + nonEmptyPoints, expectedMessage);","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"        // no points","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"        assertParseFailure(parser, AddPointsCommand.COMMAND_WORD + \" 1\", expectedMessage);","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"CloudHill":3,"Infrix":42}},{"path":"src/test/java/seedu/loyaltylift/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_FILTER;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_SORT;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"import static seedu.loyaltylift.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.logic.commands.AddCustomerCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.logic.commands.AddPointsCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.AppendCustomerNoteCommand;","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.AppendOrderNoteCommand;","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.logic.commands.DeleteCustomerCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.logic.commands.EditCustomerCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.EditCustomerCommand.EditCustomerDescriptor;","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.logic.commands.FindCustomerCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.FindOrderCommand;","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.logic.commands.ListCustomerCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.ListOrderCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.SetCustomerNoteCommand;","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.SetOrderNoteCommand;","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.logic.commands.SetPointsCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.logic.commands.ViewCustomerCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Note;","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.CustomerNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.model.customer.Points;","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.OrderNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.OrderStatusPredicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.StatusValue;","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.testutil.CustomerBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.testutil.CustomerUtil;","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"    public void parseCommand_addc() throws Exception {","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"        Customer customer \u003d new CustomerBuilder().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Junyi00"},"content":"        AddCustomerCommand command \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"                (AddCustomerCommand) parser.parseCommand(CustomerUtil.getAddCustomerCommand(customer));","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"Junyi00"},"content":"        assertEquals(new AddCustomerCommand(customer), command);","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"Junyi00"},"content":"    public void parseCommand_deletec() throws Exception {","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"Junyi00"},"content":"        DeleteCustomerCommand command \u003d (DeleteCustomerCommand) parser.parseCommand(","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"CloudHill"},"content":"                DeleteCustomerCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"CloudHill"},"content":"        assertEquals(new DeleteCustomerCommand(INDEX_FIRST), command);","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"Junyi00"},"content":"    public void parseCommand_editc() throws Exception {","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"Junyi00"},"content":"        Customer customer \u003d new CustomerBuilder().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Junyi00"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder(customer).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"Junyi00"},"content":"        EditCustomerCommand command \u003d (EditCustomerCommand) parser.parseCommand(EditCustomerCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"CloudHill"},"content":"                + INDEX_FIRST.getOneBased() + \" \" + CustomerUtil.getEditCustomerDescriptorDetails(descriptor));","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"CloudHill"},"content":"        assertEquals(new EditCustomerCommand(INDEX_FIRST, descriptor), command);","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"Junyi00"},"content":"    public void parseCommand_findc() throws Exception {","lastModifiedDate":"2023-03-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":96,"author":{"gitId":"Junyi00"},"content":"        FindCustomerCommand command \u003d (FindCustomerCommand) parser.parseCommand(","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Junyi00"},"content":"                FindCustomerCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"CloudHill"},"content":"        assertEquals(new FindCustomerCommand(new CustomerNameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2023-03-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"Junyi00"},"content":"    public void parseCommand_listc() throws Exception {","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"CloudHill"},"content":"        ListCustomerCommand parsedCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"CloudHill"},"content":"        parsedCommand \u003d (ListCustomerCommand) parser.parseCommand(ListCustomerCommand.COMMAND_WORD);","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"JavonTeo"},"content":"        assertEquals(new ListCustomerCommand(Customer.SORT_NAME, PREDICATE_SHOW_ALL_CUSTOMERS), parsedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"CloudHill"},"content":"        parsedCommand \u003d (ListCustomerCommand) parser.parseCommand(","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"CloudHill"},"content":"                ListCustomerCommand.COMMAND_WORD + \" \" + PREFIX_SORT + \"points\");","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"JavonTeo"},"content":"        assertEquals(new ListCustomerCommand(Customer.SORT_POINTS, PREDICATE_SHOW_ALL_CUSTOMERS), parsedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"JavonTeo"},"content":"        parsedCommand \u003d (ListCustomerCommand) parser.parseCommand(","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"JavonTeo"},"content":"                ListCustomerCommand.COMMAND_WORD + \" \" + PREFIX_FILTER + \"marked\");","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"JavonTeo"},"content":"        assertEquals(new ListCustomerCommand(Customer.SORT_NAME, Customer.FILTER_SHOW_MARKED), parsedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"JavonTeo"},"content":"        parsedCommand \u003d (ListCustomerCommand) parser.parseCommand(ListCustomerCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"JavonTeo"},"content":"                + PREFIX_SORT + \"points\" + \" \" + PREFIX_FILTER + \"marked\");","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"JavonTeo"},"content":"        assertEquals(new ListCustomerCommand(Customer.SORT_POINTS, Customer.FILTER_SHOW_MARKED), parsedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":128,"author":{"gitId":"Junyi00"},"content":"    public void parseCommand_viewc() throws Exception {","lastModifiedDate":"2023-03-07"},{"lineNumber":129,"author":{"gitId":"Junyi00"},"content":"        ViewCustomerCommand command \u003d (ViewCustomerCommand) parser.parseCommand(","lastModifiedDate":"2023-03-07"},{"lineNumber":130,"author":{"gitId":"CloudHill"},"content":"                ViewCustomerCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"CloudHill"},"content":"        assertEquals(new ViewCustomerCommand(INDEX_FIRST), command);","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":133,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":134,"author":{"gitId":"Infrix"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"Infrix"},"content":"    public void parseCommand_setpoints() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"Infrix"},"content":"        final Points points \u003d new Points(100, 100);","lastModifiedDate":"2023-03-17"},{"lineNumber":137,"author":{"gitId":"Infrix"},"content":"        SetPointsCommand command \u003d (SetPointsCommand) parser.parseCommand(SetPointsCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"CloudHill"},"content":"                + INDEX_FIRST.getOneBased() + \" \" + PREFIX_POINTS + points.value);","lastModifiedDate":"2023-03-18"},{"lineNumber":139,"author":{"gitId":"CloudHill"},"content":"        assertEquals(new SetPointsCommand(INDEX_FIRST, points), command);","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":142,"author":{"gitId":"Infrix"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":143,"author":{"gitId":"Infrix"},"content":"    public void parseCommand_addpoints() throws Exception {","lastModifiedDate":"2023-03-17"},{"lineNumber":144,"author":{"gitId":"Infrix"},"content":"        final Integer addPoints \u003d 100;","lastModifiedDate":"2023-03-19"},{"lineNumber":145,"author":{"gitId":"Infrix"},"content":"        AddPointsCommand command \u003d (AddPointsCommand) parser.parseCommand(AddPointsCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-17"},{"lineNumber":146,"author":{"gitId":"CloudHill"},"content":"                + INDEX_FIRST.getOneBased() + \" \" + PREFIX_POINTS + addPoints);","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"CloudHill"},"content":"        assertEquals(new AddPointsCommand(INDEX_FIRST, addPoints), command);","lastModifiedDate":"2023-03-18"},{"lineNumber":148,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":149,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":150,"author":{"gitId":"CloudHill"},"content":"    public void parseCommand_setnotec() throws Exception {","lastModifiedDate":"2023-03-18"},{"lineNumber":151,"author":{"gitId":"CloudHill"},"content":"        final Note note \u003d new Note(\"Test Note\");","lastModifiedDate":"2023-03-18"},{"lineNumber":152,"author":{"gitId":"CloudHill"},"content":"        SetCustomerNoteCommand command \u003d (SetCustomerNoteCommand) parser.parseCommand(","lastModifiedDate":"2023-03-18"},{"lineNumber":153,"author":{"gitId":"CloudHill"},"content":"                SetCustomerNoteCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-18"},{"lineNumber":154,"author":{"gitId":"CloudHill"},"content":"                + INDEX_FIRST.getOneBased() + \" \"","lastModifiedDate":"2023-03-18"},{"lineNumber":155,"author":{"gitId":"CloudHill"},"content":"                + PREFIX_NOTE + note.value);","lastModifiedDate":"2023-03-18"},{"lineNumber":156,"author":{"gitId":"CloudHill"},"content":"        assertEquals(new SetCustomerNoteCommand(INDEX_FIRST, note), command);","lastModifiedDate":"2023-03-18"},{"lineNumber":157,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":158,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":159,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":160,"author":{"gitId":"CloudHill"},"content":"    public void parseCommand_appendnotec() throws Exception {","lastModifiedDate":"2023-03-18"},{"lineNumber":161,"author":{"gitId":"CloudHill"},"content":"        final String noteToAppend \u003d \"Extra note\";","lastModifiedDate":"2023-03-18"},{"lineNumber":162,"author":{"gitId":"CloudHill"},"content":"        AppendCustomerNoteCommand command \u003d (AppendCustomerNoteCommand) parser.parseCommand(","lastModifiedDate":"2023-03-18"},{"lineNumber":163,"author":{"gitId":"CloudHill"},"content":"                AppendCustomerNoteCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-18"},{"lineNumber":164,"author":{"gitId":"CloudHill"},"content":"                + INDEX_FIRST.getOneBased() + \" \"","lastModifiedDate":"2023-03-18"},{"lineNumber":165,"author":{"gitId":"CloudHill"},"content":"                + PREFIX_NOTE + noteToAppend);","lastModifiedDate":"2023-03-18"},{"lineNumber":166,"author":{"gitId":"CloudHill"},"content":"        assertEquals(new AppendCustomerNoteCommand(INDEX_FIRST, noteToAppend), command);","lastModifiedDate":"2023-03-18"},{"lineNumber":167,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":168,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":169,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":170,"author":{"gitId":"CloudHill"},"content":"    public void parseCommand_setnoteo() throws Exception {","lastModifiedDate":"2023-03-18"},{"lineNumber":171,"author":{"gitId":"CloudHill"},"content":"        final Note note \u003d new Note(\"Test Note\");","lastModifiedDate":"2023-03-18"},{"lineNumber":172,"author":{"gitId":"CloudHill"},"content":"        SetOrderNoteCommand command \u003d (SetOrderNoteCommand) parser.parseCommand(","lastModifiedDate":"2023-03-18"},{"lineNumber":173,"author":{"gitId":"CloudHill"},"content":"                SetOrderNoteCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-18"},{"lineNumber":174,"author":{"gitId":"CloudHill"},"content":"                + INDEX_FIRST.getOneBased() + \" \"","lastModifiedDate":"2023-03-18"},{"lineNumber":175,"author":{"gitId":"CloudHill"},"content":"                + PREFIX_NOTE + note.value);","lastModifiedDate":"2023-03-18"},{"lineNumber":176,"author":{"gitId":"CloudHill"},"content":"        assertEquals(new SetOrderNoteCommand(INDEX_FIRST, note), command);","lastModifiedDate":"2023-03-18"},{"lineNumber":177,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":178,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":179,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":180,"author":{"gitId":"CloudHill"},"content":"    public void parseCommand_appendnoteo() throws Exception {","lastModifiedDate":"2023-03-18"},{"lineNumber":181,"author":{"gitId":"CloudHill"},"content":"        final String noteToAppend \u003d \"Extra note\";","lastModifiedDate":"2023-03-18"},{"lineNumber":182,"author":{"gitId":"CloudHill"},"content":"        AppendOrderNoteCommand command \u003d (AppendOrderNoteCommand) parser.parseCommand(","lastModifiedDate":"2023-03-18"},{"lineNumber":183,"author":{"gitId":"CloudHill"},"content":"                AppendOrderNoteCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-18"},{"lineNumber":184,"author":{"gitId":"CloudHill"},"content":"                + INDEX_FIRST.getOneBased() + \" \"","lastModifiedDate":"2023-03-18"},{"lineNumber":185,"author":{"gitId":"CloudHill"},"content":"                + PREFIX_NOTE + noteToAppend);","lastModifiedDate":"2023-03-18"},{"lineNumber":186,"author":{"gitId":"CloudHill"},"content":"        assertEquals(new AppendOrderNoteCommand(INDEX_FIRST, noteToAppend), command);","lastModifiedDate":"2023-03-18"},{"lineNumber":187,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":188,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":189,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":190,"author":{"gitId":"CloudHill"},"content":"    public void parseCommand_findo() throws Exception {","lastModifiedDate":"2023-03-25"},{"lineNumber":191,"author":{"gitId":"CloudHill"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-03-25"},{"lineNumber":192,"author":{"gitId":"CloudHill"},"content":"        FindOrderCommand command \u003d (FindOrderCommand) parser.parseCommand(","lastModifiedDate":"2023-03-25"},{"lineNumber":193,"author":{"gitId":"CloudHill"},"content":"                FindOrderCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-03-25"},{"lineNumber":194,"author":{"gitId":"CloudHill"},"content":"        assertEquals(new FindOrderCommand(new OrderNameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2023-03-25"},{"lineNumber":195,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":196,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":197,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":198,"author":{"gitId":"CloudHill"},"content":"    public void parseCommand_listo() throws Exception {","lastModifiedDate":"2023-03-27"},{"lineNumber":199,"author":{"gitId":"CloudHill"},"content":"        ListOrderCommand parsedCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":200,"author":{"gitId":"CloudHill"},"content":"        OrderStatusPredicate pendingPredicate \u003d new OrderStatusPredicate(StatusValue.PENDING);","lastModifiedDate":"2023-03-28"},{"lineNumber":201,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":202,"author":{"gitId":"CloudHill"},"content":"        // no args","lastModifiedDate":"2023-03-28"},{"lineNumber":203,"author":{"gitId":"CloudHill"},"content":"        parsedCommand \u003d (ListOrderCommand) parser.parseCommand(ListOrderCommand.COMMAND_WORD);","lastModifiedDate":"2023-03-27"},{"lineNumber":204,"author":{"gitId":"CloudHill"},"content":"        assertEquals(new ListOrderCommand(), parsedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":205,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":206,"author":{"gitId":"CloudHill"},"content":"        // sort status","lastModifiedDate":"2023-03-28"},{"lineNumber":207,"author":{"gitId":"CloudHill"},"content":"        parsedCommand \u003d (ListOrderCommand) parser.parseCommand(","lastModifiedDate":"2023-03-27"},{"lineNumber":208,"author":{"gitId":"CloudHill"},"content":"                ListOrderCommand.COMMAND_WORD + \" \" + PREFIX_SORT + \"status\");","lastModifiedDate":"2023-03-27"},{"lineNumber":209,"author":{"gitId":"CloudHill"},"content":"        assertEquals(new ListOrderCommand(Order.SORT_STATUS, PREDICATE_SHOW_ALL_ORDERS), parsedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":210,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":211,"author":{"gitId":"CloudHill"},"content":"        // filter pending","lastModifiedDate":"2023-03-28"},{"lineNumber":212,"author":{"gitId":"CloudHill"},"content":"        parsedCommand \u003d (ListOrderCommand) parser.parseCommand(","lastModifiedDate":"2023-03-28"},{"lineNumber":213,"author":{"gitId":"CloudHill"},"content":"                ListOrderCommand.COMMAND_WORD + \" \" + PREFIX_FILTER + \"pending\");","lastModifiedDate":"2023-03-28"},{"lineNumber":214,"author":{"gitId":"CloudHill"},"content":"        assertEquals(new ListOrderCommand(Order.SORT_CREATED_DATE, pendingPredicate), parsedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":215,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":216,"author":{"gitId":"CloudHill"},"content":"        // sort name and filter pending","lastModifiedDate":"2023-03-28"},{"lineNumber":217,"author":{"gitId":"CloudHill"},"content":"        parsedCommand \u003d (ListOrderCommand) parser.parseCommand(","lastModifiedDate":"2023-03-28"},{"lineNumber":218,"author":{"gitId":"CloudHill"},"content":"                ListOrderCommand.COMMAND_WORD + \" \" + PREFIX_SORT + \"name \" + PREFIX_FILTER + \"pending\");","lastModifiedDate":"2023-03-28"},{"lineNumber":219,"author":{"gitId":"CloudHill"},"content":"        assertEquals(new ListOrderCommand(Order.SORT_NAME, pendingPredicate), parsedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":220,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":221,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Junyi00":30,"CloudHill":106,"JavonTeo":11,"Infrix":25,"-":60}},{"path":"src/test/java/seedu/loyaltylift/logic/parser/AppendCustomerNoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.AppendCustomerNoteCommand;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"public class AppendCustomerNoteCommandParserTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"    private AppendCustomerNoteCommandParser parser \u003d new AppendCustomerNoteCommandParser();","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"    private final String nonEmptyString \u003d \"Test Note\";","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"    public void parse_emptyString_success() {","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_NOTE;","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"        AppendCustomerNoteCommand expectedCommand \u003d new AppendCustomerNoteCommand(INDEX_FIRST, \"\");","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"    public void parse_nonEmptyString_success() {","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_NOTE + nonEmptyString;","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"        AppendCustomerNoteCommand expectedCommand \u003d new AppendCustomerNoteCommand(INDEX_FIRST, nonEmptyString);","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AppendCustomerNoteCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"        // no parameters","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"        assertParseFailure(parser, AppendCustomerNoteCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"        // no index","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"        assertParseFailure(parser, AppendCustomerNoteCommand.COMMAND_WORD + \" \" + nonEmptyString, expectedMessage);","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"CloudHill":44}},{"path":"src/test/java/seedu/loyaltylift/logic/parser/AppendOrderNoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.AppendOrderNoteCommand;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"public class AppendOrderNoteCommandParserTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"    private AppendOrderNoteCommandParser parser \u003d new AppendOrderNoteCommandParser();","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"    private final String nonEmptyString \u003d \"Test Note\";","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"    public void parse_emptyString_success() {","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_NOTE;","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"        AppendOrderNoteCommand expectedCommand \u003d new AppendOrderNoteCommand(INDEX_FIRST, \"\");","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"    public void parse_nonEmptyString_success() {","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_NOTE + nonEmptyString;","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"        AppendOrderNoteCommand expectedCommand \u003d new AppendOrderNoteCommand(INDEX_FIRST, nonEmptyString);","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AppendOrderNoteCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"        // no parameters","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"        assertParseFailure(parser, AppendOrderNoteCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"        // no index","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"        assertParseFailure(parser, AppendOrderNoteCommand.COMMAND_WORD + \" \" + nonEmptyString, expectedMessage);","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"CloudHill":44}},{"path":"src/test/java/seedu/loyaltylift/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"Junyi00":1,"-":149}},{"path":"src/test/java/seedu/loyaltylift/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.Command;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"Junyi00":3,"-":36}},{"path":"src/test/java/seedu/loyaltylift/logic/parser/DeleteCustomerCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.DeleteCustomerCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":" * outside of the DeleteCustomerCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":" * same path through the DeleteCustomerCommand, and therefore we test only one of them.","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"public class DeleteCustomerCommandParserTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"    private DeleteCustomerCommandParser parser \u003d new DeleteCustomerCommandParser();","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCustomerCommand(INDEX_FIRST));","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"        assertParseFailure(","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"                parser,","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"                \"a\",","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCustomerCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Junyi00":13,"CloudHill":2,"-":20}},{"path":"src/test/java/seedu/loyaltylift/logic/parser/EditCustomerCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.CUSTOMER_TYPE_DESC_ENTERPRISE;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.CUSTOMER_TYPE_DESC_INDIVIDUAL;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.EditCustomerCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.EditCustomerCommand.EditCustomerDescriptor;","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.attribute.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.attribute.Name;","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.CustomerType;","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Email;","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Phone;","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.tag.Tag;","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"public class EditCustomerCommandParserTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCustomerCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"Junyi00"},"content":"    private EditCustomerCommandParser parser \u003d new EditCustomerCommandParser();","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":"        assertParseFailure(parser, \"1\", EditCustomerCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"Junyi00"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Customer} being edited,","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"CloudHill"},"content":"        Index targetIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":115,"author":{"gitId":"Junyi00"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND + CUSTOMER_TYPE_DESC_ENTERPRISE;","lastModifiedDate":"2023-03-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"Junyi00"},"content":"        EditCustomerCommand.EditCustomerDescriptor descriptor \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"Junyi00"},"content":"                new EditCustomerDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"Junyi00"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-07"},{"lineNumber":121,"author":{"gitId":"Junyi00"},"content":"                .withCustomerType(CustomerType.ENTERPRISE).build();","lastModifiedDate":"2023-03-07"},{"lineNumber":122,"author":{"gitId":"Junyi00"},"content":"        EditCustomerCommand expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"CloudHill"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"Junyi00"},"content":"        EditCustomerCommand.EditCustomerDescriptor descriptor \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"Junyi00"},"content":"                new EditCustomerDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"Junyi00"},"content":"        EditCustomerCommand expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"CloudHill"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"Junyi00"},"content":"        EditCustomerCommand.EditCustomerDescriptor descriptor \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"Junyi00"},"content":"                new EditCustomerDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"Junyi00"},"content":"        EditCustomerCommand expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":152,"author":{"gitId":"Junyi00"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"Junyi00"},"content":"        expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":158,"author":{"gitId":"Junyi00"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":159,"author":{"gitId":"Junyi00"},"content":"        expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":164,"author":{"gitId":"Junyi00"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":165,"author":{"gitId":"Junyi00"},"content":"        expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":170,"author":{"gitId":"Junyi00"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":171,"author":{"gitId":"Junyi00"},"content":"        expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":173,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":174,"author":{"gitId":"Junyi00"},"content":"        // customer type","lastModifiedDate":"2023-03-07"},{"lineNumber":175,"author":{"gitId":"Junyi00"},"content":"        userInput \u003d targetIndex.getOneBased() + CUSTOMER_TYPE_DESC_ENTERPRISE;","lastModifiedDate":"2023-03-07"},{"lineNumber":176,"author":{"gitId":"Junyi00"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withCustomerType(CustomerType.ENTERPRISE).build();","lastModifiedDate":"2023-03-07"},{"lineNumber":177,"author":{"gitId":"Junyi00"},"content":"        expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-07"},{"lineNumber":178,"author":{"gitId":"Junyi00"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":183,"author":{"gitId":"CloudHill"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":186,"author":{"gitId":"Junyi00"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND + CUSTOMER_TYPE_DESC_INDIVIDUAL","lastModifiedDate":"2023-03-07"},{"lineNumber":187,"author":{"gitId":"Junyi00"},"content":"                + CUSTOMER_TYPE_DESC_ENTERPRISE;","lastModifiedDate":"2023-03-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"Junyi00"},"content":"        EditCustomerCommand.EditCustomerDescriptor descriptor \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":190,"author":{"gitId":"Junyi00"},"content":"                new EditCustomerDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"Junyi00"},"content":"                .withCustomerType(CustomerType.ENTERPRISE).build();","lastModifiedDate":"2023-03-07"},{"lineNumber":193,"author":{"gitId":"Junyi00"},"content":"        EditCustomerCommand expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"CloudHill"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":203,"author":{"gitId":"Junyi00"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":204,"author":{"gitId":"Junyi00"},"content":"        EditCustomerCommand expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":209,"author":{"gitId":"Junyi00"},"content":"                + PHONE_DESC_BOB + CUSTOMER_TYPE_DESC_ENTERPRISE;","lastModifiedDate":"2023-03-07"},{"lineNumber":210,"author":{"gitId":"Junyi00"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":211,"author":{"gitId":"Junyi00"},"content":"                .withAddress(VALID_ADDRESS_BOB).withCustomerType(CustomerType.ENTERPRISE).build();","lastModifiedDate":"2023-03-07"},{"lineNumber":212,"author":{"gitId":"Junyi00"},"content":"        expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":218,"author":{"gitId":"CloudHill"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2023-03-18"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"Junyi00"},"content":"        EditCustomerCommand.EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":222,"author":{"gitId":"Junyi00"},"content":"        EditCustomerCommand expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Junyi00":83,"CloudHill":9,"jednghk":2,"-":132}},{"path":"src/test/java/seedu/loyaltylift/logic/parser/FindCustomerCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.FindCustomerCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.CustomerNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"public class FindCustomerCommandParserTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"    private FindCustomerCommandParser parser \u003d new FindCustomerCommandParser();","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"        assertParseFailure(","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"                parser,","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"                \"     \",","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCustomerCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"        FindCustomerCommand expectedFindCustomerCommand \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"                new FindCustomerCommand(new CustomerNameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCustomerCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCustomerCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"Junyi00":14,"CloudHill":2,"-":21}},{"path":"src/test/java/seedu/loyaltylift/logic/parser/FindOrderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.FindOrderCommand;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.OrderNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"public class FindOrderCommandParserTest {","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"    private FindOrderCommandParser parser \u003d new FindOrderCommandParser();","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"        assertParseFailure(","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"                parser,","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"                \"     \",","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"        FindOrderCommand expectedFindOrderCommand \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"                new FindOrderCommand(new OrderNameContainsKeywordsPredicate(Arrays.asList(\"Strawberry\", \"Shortcake\")));","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"        assertParseSuccess(parser, \"Strawberry Shortcake\", expectedFindOrderCommand);","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"        assertParseSuccess(parser, \" \\n Strawberry \\n \\t Shortcake  \\t\", expectedFindOrderCommand);","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"CloudHill":37}},{"path":"src/test/java/seedu/loyaltylift/logic/parser/ListCustomerCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_FILTER;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_SORT;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"import static seedu.loyaltylift.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.ListCustomerCommand;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"public class ListCustomerCommandParserTest {","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"    private ListCustomerCommandParser parser \u003d new ListCustomerCommandParser();","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"    public void parse_emptyArgs_success() {","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"        // sort by name","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"        ListCustomerCommand expectedListCustomerCommand \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"                new ListCustomerCommand(Customer.SORT_NAME, PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"        assertParseSuccess(parser, \"    \", expectedListCustomerCommand);","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"    public void parse_validSortOption_success() {","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"        ListCustomerCommand expectedListSortNameCustomerCommand \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"                new ListCustomerCommand(Customer.SORT_POINTS, PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_SORT + \"points\", expectedListSortNameCustomerCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"JavonTeo"},"content":"    public void parser_validFilterOption_success() {","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"JavonTeo"},"content":"        ListCustomerCommand expectedListFilterMarkedCustomerCommand \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"                new ListCustomerCommand(Customer.SORT_NAME, Customer.FILTER_SHOW_MARKED);","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_FILTER + \"marked\", expectedListFilterMarkedCustomerCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"    public void parse_invalidSortOption_failure() {","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"        assertParseFailure(parser, \" \" + PREFIX_SORT + \"invalid\", ListCustomerCommand.MESSAGE_INVALID_SORT);","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"CloudHill":34,"JavonTeo":11}},{"path":"src/test/java/seedu/loyaltylift/logic/parser/ListOrderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_FILTER;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_SORT;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.ListOrderCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.OrderStatusPredicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.StatusValue;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"public class ListOrderCommandParserTest {","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"    private ListOrderCommandParser parser \u003d new ListOrderCommandParser();","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"    public void parse_emptyArgs_success() {","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"        ListOrderCommand expectedListOrderCommand \u003d new ListOrderCommand();","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"        assertParseSuccess(parser, \"    \", expectedListOrderCommand);","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"    public void parse_validArgs_success() {","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"        ListOrderCommand expectedCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"        OrderStatusPredicate pendingPredicate \u003d new OrderStatusPredicate(StatusValue.PENDING);","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"        // sort status","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"        expectedCommand \u003d new ListOrderCommand(Order.SORT_STATUS, PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_SORT + \"status\", expectedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"        // filter pending","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"        expectedCommand \u003d new ListOrderCommand(Order.SORT_CREATED_DATE, pendingPredicate);","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_FILTER + \"pending\", expectedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"        // sort status and filter pending","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"        expectedCommand \u003d new ListOrderCommand(Order.SORT_STATUS, pendingPredicate);","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_SORT + \"status \" + PREFIX_FILTER + \"pending\", expectedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"    public void parse_invalidArgs_failure() {","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"        // invalid sort","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"        assertParseFailure(parser, \" \" + PREFIX_SORT + \"invalid\", ListOrderCommand.MESSAGE_INVALID_SORT);","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"        // invalid filter","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"CloudHill"},"content":"        assertParseFailure(parser, \" \" + PREFIX_FILTER + \"invalid\", ListOrderCommand.MESSAGE_INVALID_FILTER);","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"CloudHill":53}},{"path":"src/test/java/seedu/loyaltylift/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.attribute.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.attribute.Name;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.CustomerType;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Email;","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Phone;","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.tag.Tag;","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"    private static final String INVALID_CUSTOMER_TYPE \u003d \"person\";","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"    private static final String INVALID_SORT_OPTION \u003d \"invalid\";","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"    private static final String VALID_CUSTOMER_TYPE_IND \u003d \"ind\";","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"    private static final String VALID_CUSTOMER_TYPE_ENT \u003d \"ent\";","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"    private static final String VALID_SORT_OPTION_NAME \u003d \"name\";","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"    private static final String VALID_SORT_OPTION_POINTS \u003d \"points\";","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"    private static final String VALID_SORT_OPTION_CREATED_DATE \u003d \"created\";","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"    private static final String VALID_SORT_OPTION_STATUS \u003d \"status\";","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"CloudHill"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"CloudHill"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":208,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":209,"author":{"gitId":"Junyi00"},"content":"    public void parseCustomerType_validCustomerType() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":210,"author":{"gitId":"Junyi00"},"content":"        assertEquals(ParserUtil.parseCustomerType(VALID_CUSTOMER_TYPE_IND), CustomerType.INDIVIDUAL);","lastModifiedDate":"2023-03-09"},{"lineNumber":211,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":212,"author":{"gitId":"Junyi00"},"content":"        assertEquals(ParserUtil.parseCustomerType(VALID_CUSTOMER_TYPE_ENT), CustomerType.ENTERPRISE);","lastModifiedDate":"2023-03-09"},{"lineNumber":213,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":214,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":215,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":216,"author":{"gitId":"Junyi00"},"content":"    public void parseCustomerType_null_throwsNullPointerException() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":217,"author":{"gitId":"Junyi00"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseCustomerType(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":218,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":219,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":220,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":221,"author":{"gitId":"Junyi00"},"content":"    public void parseCustomerType_invalidCustomerType_throwsParseException() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":222,"author":{"gitId":"Junyi00"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseCustomerType(INVALID_CUSTOMER_TYPE));","lastModifiedDate":"2023-03-09"},{"lineNumber":223,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":224,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":225,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":226,"author":{"gitId":"CloudHill"},"content":"    public void parseCustomerSortOption_validSortOption() throws Exception {","lastModifiedDate":"2023-03-27"},{"lineNumber":227,"author":{"gitId":"CloudHill"},"content":"        assertEquals(ParserUtil.parseCustomerSortOption(VALID_SORT_OPTION_NAME), Customer.SORT_NAME);","lastModifiedDate":"2023-03-27"},{"lineNumber":228,"author":{"gitId":"CloudHill"},"content":"        assertEquals(ParserUtil.parseCustomerSortOption(VALID_SORT_OPTION_POINTS), Customer.SORT_POINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":229,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":230,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":231,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":232,"author":{"gitId":"CloudHill"},"content":"    public void parseCustomerSortOption_null_throwsNullPointerException() throws Exception {","lastModifiedDate":"2023-03-27"},{"lineNumber":233,"author":{"gitId":"CloudHill"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseCustomerSortOption(null));","lastModifiedDate":"2023-03-27"},{"lineNumber":234,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":235,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":236,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":237,"author":{"gitId":"CloudHill"},"content":"    public void parseCustomerSortOption_invalidSortOption_throwsParseException() throws Exception {","lastModifiedDate":"2023-03-27"},{"lineNumber":238,"author":{"gitId":"CloudHill"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseCustomerSortOption(INVALID_SORT_OPTION));","lastModifiedDate":"2023-03-27"},{"lineNumber":239,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":240,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":241,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":242,"author":{"gitId":"CloudHill"},"content":"    public void parseOrderSortOption_validSortOption() throws Exception {","lastModifiedDate":"2023-03-27"},{"lineNumber":243,"author":{"gitId":"CloudHill"},"content":"        assertEquals(ParserUtil.parseOrderSortOption(VALID_SORT_OPTION_CREATED_DATE), Order.SORT_CREATED_DATE);","lastModifiedDate":"2023-03-27"},{"lineNumber":244,"author":{"gitId":"CloudHill"},"content":"        assertEquals(ParserUtil.parseOrderSortOption(VALID_SORT_OPTION_NAME), Order.SORT_NAME);","lastModifiedDate":"2023-03-27"},{"lineNumber":245,"author":{"gitId":"CloudHill"},"content":"        assertEquals(ParserUtil.parseOrderSortOption(VALID_SORT_OPTION_STATUS), Order.SORT_STATUS);","lastModifiedDate":"2023-03-27"},{"lineNumber":246,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":247,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":248,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":249,"author":{"gitId":"CloudHill"},"content":"    public void parseOrderSortOption_null_throwsNullPointerException() throws Exception {","lastModifiedDate":"2023-03-27"},{"lineNumber":250,"author":{"gitId":"CloudHill"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseOrderSortOption(null));","lastModifiedDate":"2023-03-27"},{"lineNumber":251,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":252,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":253,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":254,"author":{"gitId":"CloudHill"},"content":"    public void parseOrderSortOption_invalidSortOption_throwsParseException() throws Exception {","lastModifiedDate":"2023-03-27"},{"lineNumber":255,"author":{"gitId":"CloudHill"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseOrderSortOption(INVALID_SORT_OPTION));","lastModifiedDate":"2023-03-27"},{"lineNumber":256,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Junyi00":28,"CloudHill":43,"jednghk":2,"-":184}},{"path":"src/test/java/seedu/loyaltylift/logic/parser/SetCustomerNoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.SetCustomerNoteCommand;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Note;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"public class SetCustomerNoteCommandParserTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"    private SetCustomerNoteCommandParser parser \u003d new SetCustomerNoteCommandParser();","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"    private final String nonEmptyNote \u003d \"Test Note\";","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"    public void parse_emptyNote_success() {","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_NOTE;","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"        SetCustomerNoteCommand expectedCommand \u003d new SetCustomerNoteCommand(","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"                INDEX_FIRST, new Note(\"\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"    public void parse_nonEmptyNote_success() {","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_NOTE + nonEmptyNote;","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"        SetCustomerNoteCommand expectedCommand \u003d new SetCustomerNoteCommand(","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"                INDEX_FIRST, new Note(nonEmptyNote));","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetCustomerNoteCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"        // no parameters","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"        assertParseFailure(parser, SetCustomerNoteCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"        // no index","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"        assertParseFailure(parser, SetCustomerNoteCommand.COMMAND_WORD + \" \" + nonEmptyNote, expectedMessage);","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"CloudHill":47}},{"path":"src/test/java/seedu/loyaltylift/logic/parser/SetOrderNoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.logic.commands.SetOrderNoteCommand;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Note;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"public class SetOrderNoteCommandParserTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"    private SetOrderNoteCommandParser parser \u003d new SetOrderNoteCommandParser();","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"    private final String nonEmptyNote \u003d \"Test Note\";","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"    public void parse_emptyNote_success() {","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_NOTE;","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"        SetOrderNoteCommand expectedCommand \u003d new SetOrderNoteCommand(","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"                INDEX_FIRST, new Note(\"\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"    public void parse_nonEmptyNote_success() {","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_NOTE + nonEmptyNote;","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"        SetOrderNoteCommand expectedCommand \u003d new SetOrderNoteCommand(","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"                INDEX_FIRST, new Note(nonEmptyNote));","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetOrderNoteCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"        // no parameters","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"        assertParseFailure(parser, SetOrderNoteCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"        // no index","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"        assertParseFailure(parser, SetOrderNoteCommand.COMMAND_WORD + \" \" + nonEmptyNote, expectedMessage);","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"CloudHill":47}},{"path":"src/test/java/seedu/loyaltylift/logic/parser/SetPointsCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import static seedu.loyaltylift.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"import static seedu.loyaltylift.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.commons.core.Messages;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.logic.commands.SetPointsCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.model.customer.Points;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"public class SetPointsCommandParserTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"    private SetPointsCommandParser parser \u003d new SetPointsCommandParser();","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"    private final Integer nonEmptyPoints \u003d 100;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"        // must have points, /pt with no integer afterwards will not be parsed successfully","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_POINTS + nonEmptyPoints;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"        SetPointsCommand expectedCommand \u003d new SetPointsCommand(INDEX_FIRST,","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"                new Points(nonEmptyPoints, nonEmptyPoints));","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetPointsCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"        String expectedMissingIndex \u003d Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX;","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"        String input \u003d \"setpoints pt/500\";","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"        // no parameters","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"        assertParseFailure(parser, SetPointsCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"        // weird test failure, not sure what is going on, will fix in future","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"        // no index","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"        //assertParseFailure(parser, SetPointsCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"        //        + PREFIX_POINTS + nonEmptyPoints, expectedMessage);","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"        // no points","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"        assertParseFailure(parser, SetPointsCommand.COMMAND_WORD + \" 1\", expectedMessage);","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"CloudHill":3,"Infrix":44}},{"path":"src/test/java/seedu/loyaltylift/logic/parser/ViewCustomerCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.ViewCustomerCommand;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"public class ViewCustomerCommandParserTest {","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"    private ViewCustomerCommandParser parser \u003d new ViewCustomerCommandParser();","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"        assertParseSuccess(parser, \"1\", new ViewCustomerCommand(INDEX_FIRST));","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"        assertParseFailure(","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"                parser,","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"                \"a\",","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCustomerCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"Junyi00":26,"CloudHill":2}},{"path":"src/test/java/seedu/loyaltylift/logic/parser/ViewOrderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.logic.parser;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.ViewOrderCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"public class ViewOrderCommandParserTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"    private ViewOrderCommandParser parser \u003d new ViewOrderCommandParser();","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"        assertParseSuccess(parser, \"1\", new ViewOrderCommand(INDEX_FIRST));","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"        assertParseFailure(","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"                parser,","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"                \"a\",","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Junyi00":28}},{"path":"src/test/java/seedu/loyaltylift/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.model;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalOrders.ORDER_A;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalOrders.ORDER_B;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.exceptions.DuplicateCustomerException;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.exceptions.DuplicateOrderException;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.testutil.CustomerBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"        assertEquals(Collections.emptyList(), addressBook.getCustomerList());","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"    public void resetData_withDuplicateCustomers_throwsDuplicateCustomerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"        // Two customers with the same identity fields","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"        List\u003cCustomer\u003e newCustomers \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"CloudHill"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newCustomers, Arrays.asList());","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"        assertThrows(DuplicateCustomerException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"CloudHill"},"content":"    public void resetData_withDuplicateOrders_throwsDuplicateOrderException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"CloudHill"},"content":"        List\u003cOrder\u003e newOrders \u003d Arrays.asList(ORDER_A, ORDER_A);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"CloudHill"},"content":"        AddressBookStub newData \u003d new AddressBookStub(Arrays.asList(), newOrders);","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"CloudHill"},"content":"        assertThrows(DuplicateOrderException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"Junyi00"},"content":"    public void hasCustomer_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Junyi00"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasCustomer(null));","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"Junyi00"},"content":"    public void hasCustomer_customerNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"Junyi00"},"content":"        assertFalse(addressBook.hasCustomer(ALICE));","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"Junyi00"},"content":"    public void hasCustomer_customerInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Junyi00"},"content":"        addressBook.addCustomer(ALICE);","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"Junyi00"},"content":"        assertTrue(addressBook.hasCustomer(ALICE));","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"Junyi00"},"content":"    public void hasCustomer_customerWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"Junyi00"},"content":"        addressBook.addCustomer(ALICE);","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"Junyi00"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"Junyi00"},"content":"        assertTrue(addressBook.hasCustomer(editedAlice));","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"Junyi00"},"content":"    public void getCustomerList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"Junyi00"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getCustomerList().remove(0));","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"Junyi00"},"content":"    public void setCustomer_ordersAssociationUpdated_success() {","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"Junyi00"},"content":"        addressBook.addCustomer(ALICE);","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"Junyi00"},"content":"        addressBook.addOrder(ORDER_A); // belongs to ALICE","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"Junyi00"},"content":"        addressBook.addOrder(ORDER_B); // belongs to ALICE","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"Junyi00"},"content":"        Customer newAlice \u003d new CustomerBuilder(ALICE).withEmail(\"anotheralice@gmail.com\").build();","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"Junyi00"},"content":"        addressBook.setCustomer(ALICE, newAlice);","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"Junyi00"},"content":"        assertTrue(addressBook.getOrderList().stream().allMatch(o -\u003e o.getCustomer().equals(newAlice)));","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"Junyi00"},"content":"    public void deleteCustomer_ordersRemoved_success() {","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"Junyi00"},"content":"        addressBook.addCustomer(ALICE);","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"Junyi00"},"content":"        addressBook.addOrder(ORDER_A); // belongs to ALICE","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"Junyi00"},"content":"        addressBook.addOrder(ORDER_B); // belongs to ALICE","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"Junyi00"},"content":"        addressBook.removeCustomer(ALICE);","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"Junyi00"},"content":"        assertEquals(0, addressBook.getOrderList().size());","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":120,"author":{"gitId":"Junyi00"},"content":"     * A stub ReadOnlyAddressBook whose customers list can violate interface constraints.","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":123,"author":{"gitId":"Junyi00"},"content":"        private final ObservableList\u003cCustomer\u003e customers \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"CloudHill"},"content":"        private final ObservableList\u003cOrder\u003e orders \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":126,"author":{"gitId":"CloudHill"},"content":"        AddressBookStub(Collection\u003cCustomer\u003e customers, Collection\u003cOrder\u003e orders) {","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"Junyi00"},"content":"            this.customers.setAll(customers);","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"CloudHill"},"content":"            this.orders.setAll(orders);","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":132,"author":{"gitId":"Junyi00"},"content":"        public ObservableList\u003cCustomer\u003e getCustomerList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"Junyi00"},"content":"            return customers;","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":135,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"CloudHill"},"content":"        @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"CloudHill"},"content":"        public ObservableList\u003cOrder\u003e getOrderList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"CloudHill"},"content":"            return orders;","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"CloudHill"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Junyi00":55,"CloudHill":20,"-":67}},{"path":"src/test/java/seedu/loyaltylift/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.model;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalCustomers.BENSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalOrders.ORDER_A;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.GuiSettings;","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.customer.CustomerNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.testutil.AddressBookBuilder;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"Junyi00"},"content":"    public void hasCustomer_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Junyi00"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasCustomer(null));","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"Junyi00"},"content":"    public void hasCustomer_customerNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"Junyi00"},"content":"        assertFalse(modelManager.hasCustomer(ALICE));","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"CloudHill"},"content":"    public void hasCustomer_customerInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"Junyi00"},"content":"        modelManager.addCustomer(ALICE);","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"Junyi00"},"content":"        assertTrue(modelManager.hasCustomer(ALICE));","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"Junyi00"},"content":"    public void getFilteredCustomerList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"Junyi00"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredCustomerList().remove(0));","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"CloudHill"},"content":"    public void hasOrder_nullOrder_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"CloudHill"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasOrder(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"CloudHill"},"content":"    public void hasOrder_orderNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"CloudHill"},"content":"        assertFalse(modelManager.hasOrder(ORDER_A));","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"CloudHill"},"content":"    public void hasOrder_orderInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"CloudHill"},"content":"        modelManager.addOrder(ORDER_A);","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"CloudHill"},"content":"        assertTrue(modelManager.hasOrder(ORDER_A));","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"CloudHill"},"content":"    public void getFilteredOrderList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"CloudHill"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredOrderList().remove(0));","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"Junyi00"},"content":"    public void getFilteredCustomerOrderList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"Junyi00"},"content":"        assertThrows(","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"Junyi00"},"content":"                UnsupportedOperationException.class, () -\u003e modelManager.getFilteredCustomerOrderList().remove(0));","lastModifiedDate":"2023-03-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"Junyi00"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withCustomer(ALICE).withCustomer(BENSON).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":149,"author":{"gitId":"CloudHill"},"content":"        modelManager.updateFilteredCustomerList(new CustomerNameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-03-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":153,"author":{"gitId":"Junyi00"},"content":"        modelManager.updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"Junyi00":21,"CloudHill":25,"-":114}},{"path":"src/test/java/seedu/loyaltylift/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.model;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"Junyi00":2,"-":19}},{"path":"src/test/java/seedu/loyaltylift/model/attribute/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jednghk"},"content":"package seedu.loyaltylift.model.attribute;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Junyi00":1,"jednghk":1,"-":34}},{"path":"src/test/java/seedu/loyaltylift/model/attribute/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jednghk"},"content":"package seedu.loyaltylift.model.attribute;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Junyi00":1,"jednghk":1,"-":38}},{"path":"src/test/java/seedu/loyaltylift/model/attribute/NoteTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.model.attribute;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"public class NoteTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Note(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"CloudHill":13}},{"path":"src/test/java/seedu/loyaltylift/model/customer/CustomerNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.model.customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.testutil.CustomerBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"public class CustomerNameContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"        CustomerNameContainsKeywordsPredicate firstPredicate \u003d new CustomerNameContainsKeywordsPredicate(","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"        CustomerNameContainsKeywordsPredicate secondPredicate \u003d new CustomerNameContainsKeywordsPredicate(","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"        CustomerNameContainsKeywordsPredicate firstPredicateCopy \u003d new CustomerNameContainsKeywordsPredicate(","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"        CustomerNameContainsKeywordsPredicate predicate \u003d new CustomerNameContainsKeywordsPredicate(","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"                Collections.singletonList(\"Alice\"));","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"        assertTrue(predicate.test(new CustomerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"        predicate \u003d new CustomerNameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"        assertTrue(predicate.test(new CustomerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"CloudHill"},"content":"        predicate \u003d new CustomerNameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"Junyi00"},"content":"        assertTrue(predicate.test(new CustomerBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"CloudHill"},"content":"        predicate \u003d new CustomerNameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"        assertTrue(predicate.test(new CustomerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"CloudHill"},"content":"        CustomerNameContainsKeywordsPredicate predicate \u003d new CustomerNameContainsKeywordsPredicate(","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"CloudHill"},"content":"                Collections.emptyList());","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"Junyi00"},"content":"        assertFalse(predicate.test(new CustomerBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"CloudHill"},"content":"        predicate \u003d new CustomerNameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-03-25"},{"lineNumber":73,"author":{"gitId":"Junyi00"},"content":"        assertFalse(predicate.test(new CustomerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"CloudHill"},"content":"        predicate \u003d new CustomerNameContainsKeywordsPredicate(","lastModifiedDate":"2023-03-25"},{"lineNumber":77,"author":{"gitId":"CloudHill"},"content":"                Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2023-03-25"},{"lineNumber":78,"author":{"gitId":"Junyi00"},"content":"        assertFalse(predicate.test(new CustomerBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Junyi00":10,"CloudHill":17,"-":54}},{"path":"src/test/java/seedu/loyaltylift/model/customer/CustomerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.model.customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_NOTE_BOB;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalCustomers.BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.testutil.CustomerBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"public class CustomerTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"        Customer customer \u003d new CustomerBuilder().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e customer.getTags().remove(0));","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"    public void isSameCustomer() {","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"        assertTrue(ALICE.isSameCustomer(ALICE));","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"        assertFalse(ALICE.isSameCustomer(null));","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"        assertTrue(ALICE.isSameCustomer(editedAlice));","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"        assertFalse(ALICE.isSameCustomer(editedAlice));","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"        Customer editedBob \u003d new CustomerBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"        assertFalse(BOB.isSameCustomer(editedBob));","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"        editedBob \u003d new CustomerBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"        assertFalse(BOB.isSameCustomer(editedBob));","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"        Customer aliceCopy \u003d new CustomerBuilder(ALICE).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"Junyi00"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"Junyi00"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"Junyi00"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"Junyi00"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"Junyi00"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"Junyi00"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":92,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"CloudHill"},"content":"        // different note -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"CloudHill"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withNote(VALID_NOTE_BOB).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"CloudHill"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"Junyi00"},"content":"        // different customer type -\u003e returns false","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"Junyi00"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withCustomerType(CustomerType.ENTERPRISE).build();","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"Junyi00"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Junyi00":36,"CloudHill":5,"-":60}},{"path":"src/test/java/seedu/loyaltylift/model/customer/CustomerTypeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.model.customer;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"public class CustomerTypeTest {","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"    public void fromUserFriendlyString() {","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"        assertEquals(CustomerType.fromUserFriendlyString(\"ind\"), CustomerType.INDIVIDUAL);","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"        assertEquals(CustomerType.fromUserFriendlyString(\"IND\"), CustomerType.INDIVIDUAL);","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"        assertEquals(CustomerType.fromUserFriendlyString(\"individual\"), CustomerType.INDIVIDUAL);","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"        assertEquals(CustomerType.fromUserFriendlyString(\"INDIVIDUAL\"), CustomerType.INDIVIDUAL);","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"        assertEquals(CustomerType.fromUserFriendlyString(\"ent\"), CustomerType.ENTERPRISE);","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"        assertEquals(CustomerType.fromUserFriendlyString(\"ENT\"), CustomerType.ENTERPRISE);","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"        assertEquals(CustomerType.fromUserFriendlyString(\"enterprise\"), CustomerType.ENTERPRISE);","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"        assertEquals(CustomerType.fromUserFriendlyString(\"ENTERPRISE\"), CustomerType.ENTERPRISE);","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e CustomerType.fromUserFriendlyString(\"\"));","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"        assertThrows(NullPointerException.class, () -\u003e CustomerType.fromUserFriendlyString(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"Junyi00":27}},{"path":"src/test/java/seedu/loyaltylift/model/customer/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.model.customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Junyi00":2,"-":66}},{"path":"src/test/java/seedu/loyaltylift/model/customer/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.model.customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Junyi00":2,"-":38}},{"path":"src/test/java/seedu/loyaltylift/model/customer/PointsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package seedu.loyaltylift.model.customer;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"public class PointsTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"    public void equals() {","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"        Points points \u003d new Points(100, 100);","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"        assertTrue(points.equals(points));","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"        Points pointsCopy \u003d new Points(points.value, points.cumulative);","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"        assertTrue(points.equals(pointsCopy));","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"        assertFalse(points.equals(1));","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"        assertFalse(points.equals(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"        // different points -\u003e returns false","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"        Points differentPoints \u003d new Points(200, 200);","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"        assertFalse(points.equals(differentPoints));","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"Infrix":29}},{"path":"src/test/java/seedu/loyaltylift/model/customer/UniqueCustomerListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.model.customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalCustomers.BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"import java.util.List;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.exceptions.CustomerNotFoundException;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.exceptions.DuplicateCustomerException;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.testutil.CustomerBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"public class UniqueCustomerListTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"    private final UniqueCustomerList uniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"    public void contains_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.contains(null));","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"    public void contains_customerNotInList_returnsFalse() {","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"        assertFalse(uniqueCustomerList.contains(ALICE));","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"    public void contains_customerInList_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"        assertTrue(uniqueCustomerList.contains(ALICE));","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"    public void contains_customerWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"                .build();","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"        assertTrue(uniqueCustomerList.contains(editedAlice));","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"    public void add_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.add(null));","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"Junyi00"},"content":"    public void add_duplicateCustomer_throwsDuplicateCustomerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Junyi00"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"        assertThrows(DuplicateCustomerException.class, () -\u003e uniqueCustomerList.add(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"Junyi00"},"content":"    public void setCustomer_nullTargetCustomer_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Junyi00"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.setCustomer(null, ALICE));","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"Junyi00"},"content":"    public void setCustomer_nullEditedCustomer_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Junyi00"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.setCustomer(ALICE, null));","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"Junyi00"},"content":"    public void setCustomer_targetCustomerNotInList_throwsCustomerNotFoundException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Junyi00"},"content":"        assertThrows(CustomerNotFoundException.class, () -\u003e uniqueCustomerList.setCustomer(ALICE, ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"Junyi00"},"content":"    public void setCustomer_editedCustomerIsSameCustomer_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Junyi00"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"Junyi00"},"content":"        uniqueCustomerList.setCustomer(ALICE, ALICE);","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"Junyi00"},"content":"        UniqueCustomerList expectedUniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"Junyi00"},"content":"        expectedUniqueCustomerList.add(ALICE);","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"Junyi00"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"Junyi00"},"content":"    public void setCustomer_editedCustomerHasSameIdentity_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"Junyi00"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"Junyi00"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"Junyi00"},"content":"                .build();","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"Junyi00"},"content":"        uniqueCustomerList.setCustomer(ALICE, editedAlice);","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"Junyi00"},"content":"        UniqueCustomerList expectedUniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"Junyi00"},"content":"        expectedUniqueCustomerList.add(editedAlice);","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"Junyi00"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"Junyi00"},"content":"    public void setCustomer_editedCustomerHasDifferentIdentity_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"Junyi00"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"Junyi00"},"content":"        uniqueCustomerList.setCustomer(ALICE, BOB);","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"Junyi00"},"content":"        UniqueCustomerList expectedUniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"Junyi00"},"content":"        expectedUniqueCustomerList.add(BOB);","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"Junyi00"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"Junyi00"},"content":"    public void setCustomer_editedCustomerHasNonUniqueIdentity_throwsDuplicateCustomerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"Junyi00"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"Junyi00"},"content":"        uniqueCustomerList.add(BOB);","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"Junyi00"},"content":"        assertThrows(DuplicateCustomerException.class, () -\u003e uniqueCustomerList.setCustomer(ALICE, BOB));","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"Junyi00"},"content":"    public void remove_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"Junyi00"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.remove(null));","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"Junyi00"},"content":"    public void remove_customerDoesNotExist_throwsCustomerNotFoundException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"Junyi00"},"content":"        assertThrows(CustomerNotFoundException.class, () -\u003e uniqueCustomerList.remove(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"Junyi00"},"content":"    public void remove_existingCustomer_removesCustomer() {","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"Junyi00"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"Junyi00"},"content":"        uniqueCustomerList.remove(ALICE);","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"Junyi00"},"content":"        UniqueCustomerList expectedUniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"Junyi00"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"Junyi00"},"content":"    public void setCustomers_nullUniqueCustomerList_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"Junyi00"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.setCustomers((UniqueCustomerList) null));","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"Junyi00"},"content":"    public void setCustomers_uniqueCustomerList_replacesOwnListWithProvidedUniqueCustomerList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"Junyi00"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"Junyi00"},"content":"        UniqueCustomerList expectedUniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"Junyi00"},"content":"        expectedUniqueCustomerList.add(BOB);","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"Junyi00"},"content":"        uniqueCustomerList.setCustomers(expectedUniqueCustomerList);","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"Junyi00"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":143,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"Junyi00"},"content":"    public void setCustomers_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"Junyi00"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.setCustomers((List\u003cCustomer\u003e) null));","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":148,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"Junyi00"},"content":"    public void setCustomers_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"Junyi00"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"Junyi00"},"content":"        List\u003cCustomer\u003e customerList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"Junyi00"},"content":"        uniqueCustomerList.setCustomers(customerList);","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"Junyi00"},"content":"        UniqueCustomerList expectedUniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"Junyi00"},"content":"        expectedUniqueCustomerList.add(BOB);","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"Junyi00"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2023-03-05"},{"lineNumber":157,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":158,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":159,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":160,"author":{"gitId":"Junyi00"},"content":"    public void setCustomers_listWithDuplicateCustomers_throwsDuplicateCustomerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"Junyi00"},"content":"        List\u003cCustomer\u003e listWithDuplicateCustomers \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":162,"author":{"gitId":"Junyi00"},"content":"        assertThrows(","lastModifiedDate":"2023-03-06"},{"lineNumber":163,"author":{"gitId":"Junyi00"},"content":"                DuplicateCustomerException.class, () -\u003e uniqueCustomerList.setCustomers(listWithDuplicateCustomers));","lastModifiedDate":"2023-03-06"},{"lineNumber":164,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":165,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":166,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":167,"author":{"gitId":"Junyi00"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":168,"author":{"gitId":"Junyi00"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-03-05"},{"lineNumber":169,"author":{"gitId":"Junyi00"},"content":"            -\u003e uniqueCustomerList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-05"},{"lineNumber":170,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":171,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Junyi00":171}},{"path":"src/test/java/seedu/loyaltylift/model/order/CreatedDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.model.order;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"public class CreatedDateTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CreatedDate(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"    public void constructor_invalidCreatedDate_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"        LocalDate invalidCreatedDate \u003d LocalDate.now().plusDays(1);","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new CreatedDate(invalidCreatedDate));","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"    public void isValidCreatedDate() {","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"        // null date","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"        assertThrows(NullPointerException.class, () -\u003e CreatedDate.isValidCreatedDate(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"        LocalDate now \u003d LocalDate.now();","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"        // invalid date","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"        assertFalse(CreatedDate.isValidCreatedDate(now.plusDays(1))); // tomorrow","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"        assertFalse(CreatedDate.isValidCreatedDate(now.plusYears(1))); // one year later","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"        // valid date","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"        assertTrue(CreatedDate.isValidCreatedDate(now)); // today","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"        assertTrue(CreatedDate.isValidCreatedDate(now.minusDays(1))); // one day ago","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"        assertTrue(CreatedDate.isValidCreatedDate(now.minusYears(1))); // one year ago","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"CloudHill":40}},{"path":"src/test/java/seedu/loyaltylift/model/order/OrderNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.model.order;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"import java.util.List;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.testutil.OrderBuilder;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"public class OrderNameContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"    public void equals() {","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"        OrderNameContainsKeywordsPredicate firstPredicate \u003d new OrderNameContainsKeywordsPredicate(","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"        OrderNameContainsKeywordsPredicate secondPredicate \u003d new OrderNameContainsKeywordsPredicate(","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"        OrderNameContainsKeywordsPredicate firstPredicateCopy \u003d new OrderNameContainsKeywordsPredicate(","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"        // different order -\u003e returns false","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"        // One keyword","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"        OrderNameContainsKeywordsPredicate predicate \u003d new OrderNameContainsKeywordsPredicate(","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"                Collections.singletonList(\"Strawberry\"));","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"        assertTrue(predicate.test(new OrderBuilder().withName(\"Strawberry Shortcake\").build()));","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"        // Multiple keywords","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"        predicate \u003d new OrderNameContainsKeywordsPredicate(Arrays.asList(\"Strawberry\", \"Shortcake\"));","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"CloudHill"},"content":"        assertTrue(predicate.test(new OrderBuilder().withName(\"Strawberry Shortcake\").build()));","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"CloudHill"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"CloudHill"},"content":"        predicate \u003d new OrderNameContainsKeywordsPredicate(Arrays.asList(\"Strawberry\", \"Melon\"));","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"CloudHill"},"content":"        assertTrue(predicate.test(new OrderBuilder().withName(\"Strawberry Shortcake\").build()));","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"CloudHill"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"CloudHill"},"content":"        predicate \u003d new OrderNameContainsKeywordsPredicate(Arrays.asList(\"stRAwBerRy\", \"ShOrTcakE\"));","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"CloudHill"},"content":"        assertTrue(predicate.test(new OrderBuilder().withName(\"Strawberry Shortcake\").build()));","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"CloudHill"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"CloudHill"},"content":"        // Zero keywords","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"CloudHill"},"content":"        OrderNameContainsKeywordsPredicate predicate \u003d new OrderNameContainsKeywordsPredicate(","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"CloudHill"},"content":"                Collections.emptyList());","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"CloudHill"},"content":"        assertFalse(predicate.test(new OrderBuilder().withName(\"Strawberry Shortcake\").build()));","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":71,"author":{"gitId":"CloudHill"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"CloudHill"},"content":"        predicate \u003d new OrderNameContainsKeywordsPredicate(Arrays.asList(\"Melon\"));","lastModifiedDate":"2023-03-25"},{"lineNumber":73,"author":{"gitId":"CloudHill"},"content":"        assertFalse(predicate.test(new OrderBuilder().withName(\"Strawberry Shortcake\").build()));","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":75,"author":{"gitId":"CloudHill"},"content":"        // Keywords match address, but does not match name","lastModifiedDate":"2023-03-25"},{"lineNumber":76,"author":{"gitId":"CloudHill"},"content":"        predicate \u003d new OrderNameContainsKeywordsPredicate(Arrays.asList(\"Main\", \"Street\"));","lastModifiedDate":"2023-03-25"},{"lineNumber":77,"author":{"gitId":"CloudHill"},"content":"        assertFalse(predicate.test(new OrderBuilder().withName(\"Strawberry Shortcake\")","lastModifiedDate":"2023-03-25"},{"lineNumber":78,"author":{"gitId":"CloudHill"},"content":"                .withAddress(\"Main Street\").build()));","lastModifiedDate":"2023-03-25"},{"lineNumber":79,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":80,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"CloudHill":80}},{"path":"src/test/java/seedu/loyaltylift/model/order/OrderStatusPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.model.order;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.testutil.OrderBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"public class OrderStatusPredicateTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"    public void equals() {","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"        OrderStatusPredicate pendingPredicate \u003d new OrderStatusPredicate(StatusValue.PENDING);","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"        OrderStatusPredicate completedPredicate \u003d new OrderStatusPredicate(StatusValue.COMPLETED);","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"        assertTrue(pendingPredicate.equals(pendingPredicate));","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"        // same predicate -\u003e returns true","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"        OrderStatusPredicate pendingPredicateCopy \u003d new OrderStatusPredicate(StatusValue.PENDING);","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"        assertTrue(pendingPredicate.equals(pendingPredicateCopy));","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"        assertFalse(pendingPredicate.equals(1));","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"        assertFalse(pendingPredicate.equals(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"        // different predicate -\u003e returns false","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"        assertFalse(pendingPredicate.equals(completedPredicate));","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"    public void test_matchingStatus_returnsTrue() {","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"        OrderStatusPredicate pendingPredicate \u003d new OrderStatusPredicate(StatusValue.PENDING);","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"        assertTrue(pendingPredicate.test(new OrderBuilder().build()));","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"        OrderStatusPredicate paidPredicate \u003d new OrderStatusPredicate(StatusValue.PAID);","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"        assertTrue(paidPredicate.test(new OrderBuilder().withNextStatus(\"2023/01/01\").build()));","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"    public void test_nonMatchingStatus_returnsFalse() {","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"        // earlier status","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"        OrderStatusPredicate paidPredicate \u003d new OrderStatusPredicate(StatusValue.PAID);","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"        assertFalse(paidPredicate.test(new OrderBuilder().build()));","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"CloudHill"},"content":"        // later status","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"        OrderStatusPredicate pendingPredicate \u003d new OrderStatusPredicate(StatusValue.PENDING);","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"        assertFalse(pendingPredicate.test(new OrderBuilder().withNextStatus(\"2023/01/01\").build()));","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"CloudHill":54}},{"path":"src/test/java/seedu/loyaltylift/model/order/OrderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.model.order;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_ADDRESS_B;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_CREATED_DATE_A;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_NAME_B;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_NOTE_A;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_QUANTITY_B;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_STATUS_B_PENDING_DATE;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalOrders.ORDER_B;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalOrders.ORDER_C;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.testutil.OrderBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"public class OrderTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"    public void isSameOrder() {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"        Order cCopy \u003d new OrderBuilder(ORDER_C).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"        assertTrue(ORDER_C.equals(cCopy));","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"        assertTrue(ORDER_C.isSameOrder(ORDER_C));","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"        assertFalse(ORDER_C.isSameOrder(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"        assertFalse(ORDER_C.equals(5));","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"        // different order -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"        assertFalse(ORDER_C.equals(ORDER_B));","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"        Order editedC \u003d new OrderBuilder(ORDER_C).withName(VALID_NAME_B).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"        assertFalse(ORDER_C.equals(editedC));","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"        // different quantity -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"        editedC \u003d new OrderBuilder(ORDER_C).withQuantity(VALID_QUANTITY_B).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"        assertFalse(ORDER_C.equals(editedC));","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"        // different status -\u003e returns false","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"        editedC \u003d new OrderBuilder(ORDER_C).withInitialStatus(VALID_STATUS_B_PENDING_DATE).build();","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"        assertFalse(ORDER_C.equals(editedC));","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"        editedC \u003d new OrderBuilder(ORDER_C).withAddress(VALID_ADDRESS_B).build();","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"        assertFalse(ORDER_C.equals(editedC));","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"CloudHill"},"content":"        // different created date -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"CloudHill"},"content":"        editedC \u003d new OrderBuilder(ORDER_C).withCreatedDate(VALID_CREATED_DATE_A).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"CloudHill"},"content":"        assertFalse(ORDER_C.equals(editedC));","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"CloudHill"},"content":"        // different note -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"CloudHill"},"content":"        editedC \u003d new OrderBuilder(ORDER_C).withNote(VALID_NOTE_A).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"CloudHill"},"content":"        assertFalse(ORDER_C.equals(editedC));","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"CloudHill"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"CloudHill"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"CloudHill"},"content":"        Order cCopy \u003d new OrderBuilder(ORDER_C).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"CloudHill"},"content":"        assertTrue(ORDER_C.equals(cCopy));","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"CloudHill"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"CloudHill"},"content":"        assertTrue(ORDER_C.equals(ORDER_C));","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"CloudHill"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"CloudHill"},"content":"        assertFalse(ORDER_C.equals(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"CloudHill"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"CloudHill"},"content":"        assertFalse(ORDER_C.equals(5));","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"CloudHill"},"content":"        // different order -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"CloudHill"},"content":"        assertFalse(ORDER_C.equals(ORDER_B));","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"CloudHill"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"CloudHill"},"content":"        Order editedC \u003d new OrderBuilder(ORDER_C).withName(VALID_NAME_B).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"CloudHill"},"content":"        assertFalse(ORDER_C.equals(editedC));","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"CloudHill"},"content":"        // different quantity -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"CloudHill"},"content":"        editedC \u003d new OrderBuilder(ORDER_C).withQuantity(VALID_QUANTITY_B).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"CloudHill"},"content":"        assertFalse(ORDER_C.equals(editedC));","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"CloudHill"},"content":"        // different status -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"Junyi00"},"content":"        editedC \u003d new OrderBuilder(ORDER_C).withInitialStatus(VALID_STATUS_B_PENDING_DATE).build();","lastModifiedDate":"2023-03-25"},{"lineNumber":91,"author":{"gitId":"CloudHill"},"content":"        assertFalse(ORDER_C.equals(editedC));","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"CloudHill"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"CloudHill"},"content":"        editedC \u003d new OrderBuilder(ORDER_C).withAddress(VALID_ADDRESS_B).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"CloudHill"},"content":"        assertFalse(ORDER_C.equals(editedC));","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"CloudHill"},"content":"        // different created date -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"CloudHill"},"content":"        editedC \u003d new OrderBuilder(ORDER_C).withCreatedDate(VALID_CREATED_DATE_A).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"CloudHill"},"content":"        assertFalse(ORDER_C.equals(editedC));","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"CloudHill"},"content":"        // different note -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"CloudHill"},"content":"        editedC \u003d new OrderBuilder(ORDER_C).withNote(VALID_NOTE_A).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"CloudHill"},"content":"        assertFalse(ORDER_C.equals(editedC));","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Junyi00":6,"CloudHill":99}},{"path":"src/test/java/seedu/loyaltylift/model/order/QuantityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.model.order;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"public class QuantityTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Quantity(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"    public void constructor_invalidQuantity_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"        int invalidQuantity \u003d 0;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Quantity(invalidQuantity));","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"    public void isValidQuantity() {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"        // null quantity","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"        assertThrows(NullPointerException.class, () -\u003e Quantity.isValidQuantity(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"        // invalid quantity","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"        assertFalse(Quantity.isValidQuantity(0)); // zero","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"        assertFalse(Quantity.isValidQuantity(-1)); // negative number","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"        // valid quantity","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"        assertTrue(Quantity.isValidQuantity(1)); // positive number","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"        assertTrue(Quantity.isValidQuantity(Integer.MAX_VALUE)); // max positive number","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"CloudHill":35}},{"path":"src/test/java/seedu/loyaltylift/model/order/StatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.model.order;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import java.util.List;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"public class StatusTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Status(null));","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"    public void constructor_emptyUpdates_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"        assertThrows(IllegalArgumentException.class, Status.MESSAGE_CONSTRAINTS, () -\u003e new Status(List.of()));","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"    public void constructor_badlySortedUpdates_updatesSorted() {","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"        Status status \u003d new Status(List.of(","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"                new StatusUpdate(StatusValue.PAID, LocalDate.of(2020, 1, 2)),","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"                new StatusUpdate(StatusValue.PENDING, LocalDate.of(2019, 3, 15))","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"        ));","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"        assertEquals(status.getLatestStatus().statusValue, StatusValue.PAID);","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Junyi00":16,"CloudHill":16}},{"path":"src/test/java/seedu/loyaltylift/model/order/StatusUpdateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.model.order;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"public class StatusUpdateTest {","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"        assertThrows(NullPointerException.class, () -\u003e new StatusUpdate(null, LocalDate.now()));","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"        assertThrows(NullPointerException.class, () -\u003e new StatusUpdate(StatusValue.PENDING, null));","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"    public void nextStatusUpdate_validArguments_success() {","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"        StatusUpdate firstStatusUpdate \u003d new StatusUpdate(StatusValue.PENDING, LocalDate.now());","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"        StatusUpdate paidStatusUpdate \u003d firstStatusUpdate.nextStatusUpdate();","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"        StatusUpdate shippedStatusUpdate \u003d paidStatusUpdate.nextStatusUpdate();","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"        StatusUpdate completedStatusUpdate \u003d shippedStatusUpdate.nextStatusUpdate();","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"        assertEquals(firstStatusUpdate.statusValue, StatusValue.PENDING);","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"        assertEquals(paidStatusUpdate.statusValue, StatusValue.PAID);","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"        assertEquals(shippedStatusUpdate.statusValue, StatusValue.SHIPPED);","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"        assertEquals(completedStatusUpdate.statusValue, StatusValue.COMPLETED);","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"    public void nextStatusUpdate_invalidCall_throwsIllegalStateException() {","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"        StatusUpdate completedStatusUpdate \u003d new StatusUpdate(StatusValue.COMPLETED, LocalDate.now());","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"        StatusUpdate cancelledStatusUpdate \u003d new StatusUpdate(StatusValue.CANCELLED, LocalDate.now());","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"        assertThrows(IllegalStateException.class, completedStatusUpdate::nextStatusUpdate);","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"        assertThrows(IllegalStateException.class, cancelledStatusUpdate::nextStatusUpdate);","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"    public void equals_sameAttributes_returnsTrue() {","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"        StatusUpdate statusUpdate1 \u003d new StatusUpdate(StatusValue.CANCELLED, LocalDate.of(2020, 1, 2));","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"        StatusUpdate statusUpdate2 \u003d new StatusUpdate(StatusValue.CANCELLED, LocalDate.of(2020, 1, 2));","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"        assertEquals(statusUpdate1, statusUpdate2);","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"    public void equals_differentAttributes_returnsFalse() {","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"        StatusUpdate cancelledStatusUpdate \u003d new StatusUpdate(StatusValue.CANCELLED, LocalDate.of(2020, 1, 2));","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"        StatusUpdate completedStatusUpdate \u003d new StatusUpdate(StatusValue.COMPLETED, LocalDate.of(2020, 1, 2));","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"        assertNotEquals(cancelledStatusUpdate, completedStatusUpdate);","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"        StatusUpdate statusUpdate2020 \u003d new StatusUpdate(StatusValue.PENDING, LocalDate.of(2020, 1, 2));","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"Junyi00"},"content":"        StatusUpdate statusUpdate2022 \u003d new StatusUpdate(StatusValue.PENDING, LocalDate.of(2022, 1, 2));","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"Junyi00"},"content":"        assertNotEquals(statusUpdate2020, statusUpdate2022);","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"Junyi00":59}},{"path":"src/test/java/seedu/loyaltylift/model/order/StatusValueTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.model.order;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"public class StatusValueTest {","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"    public void fromString_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"        assertThrows(NullPointerException.class, () -\u003e StatusValue.fromString(null));","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"    public void fromString_invalidString_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"        String invalidString \u003d \"\";","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e StatusValue.fromString(invalidString));","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"    public void fromString_validString() {","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"        assertEquals(StatusValue.fromString(\"PENDING\"), StatusValue.PENDING);","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"        assertEquals(StatusValue.fromString(\"Pending\"), StatusValue.PENDING);","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"        assertEquals(StatusValue.fromString(\"pending\"), StatusValue.PENDING);","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"        assertEquals(StatusValue.fromString(\"PAID\"), StatusValue.PAID);","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"        assertEquals(StatusValue.fromString(\"Paid\"), StatusValue.PAID);","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"        assertEquals(StatusValue.fromString(\"paid\"), StatusValue.PAID);","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"        assertEquals(StatusValue.fromString(\"SHIPPED\"), StatusValue.SHIPPED);","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"        assertEquals(StatusValue.fromString(\"Shipped\"), StatusValue.SHIPPED);","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"        assertEquals(StatusValue.fromString(\"shipped\"), StatusValue.SHIPPED);","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"        assertEquals(StatusValue.fromString(\"COMPLETED\"), StatusValue.COMPLETED);","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"        assertEquals(StatusValue.fromString(\"Completed\"), StatusValue.COMPLETED);","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"        assertEquals(StatusValue.fromString(\"completed\"), StatusValue.COMPLETED);","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"        assertEquals(StatusValue.fromString(\"CANCELLED\"), StatusValue.CANCELLED);","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"        assertEquals(StatusValue.fromString(\"Cancelled\"), StatusValue.CANCELLED);","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"        assertEquals(StatusValue.fromString(\"cancelled\"), StatusValue.CANCELLED);","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"Junyi00":43}},{"path":"src/test/java/seedu/loyaltylift/model/order/UniqueOrderListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.model.order;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalOrders.ORDER_B;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.testutil.TypicalOrders.ORDER_C;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.exceptions.DuplicateOrderException;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.exceptions.OrderNotFoundException;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.testutil.OrderBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"public class UniqueOrderListTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"    private final UniqueOrderList uniqueOrderList \u003d new UniqueOrderList();","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"    public void contains_nullOrder_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOrderList.contains(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"    public void contains_orderNotInList_returnsFalse() {","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"        assertFalse(uniqueOrderList.contains(ORDER_C));","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"    public void contains_orderInList_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"        uniqueOrderList.add(ORDER_C);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"        assertTrue(uniqueOrderList.contains(ORDER_C));","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"    public void contains_orderWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"        uniqueOrderList.add(ORDER_C);","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"        Order cCopy \u003d new OrderBuilder(ORDER_C).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"        assertTrue(uniqueOrderList.contains(cCopy));","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"    public void add_nullOrder_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOrderList.add(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"CloudHill"},"content":"    public void add_duplicateOrder_throwsDuplicateOrderException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"CloudHill"},"content":"        uniqueOrderList.add(ORDER_C);","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"CloudHill"},"content":"        assertThrows(DuplicateOrderException.class, () -\u003e uniqueOrderList.add(ORDER_C));","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"CloudHill"},"content":"    public void setOrder_nullTargetOrder_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"CloudHill"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOrderList.setOrder(null, ORDER_C));","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"CloudHill"},"content":"    public void setOrder_nullEditedOrder_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"CloudHill"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOrderList.setOrder(ORDER_C, null));","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"CloudHill"},"content":"    public void setOrder_targetOrderNotInList_throwsOrderNotFoundException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"CloudHill"},"content":"        assertThrows(OrderNotFoundException.class, () -\u003e uniqueOrderList.setOrder(ORDER_C, ORDER_C));","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"CloudHill"},"content":"    public void setOrder_editedOrderIsSameOrder_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"CloudHill"},"content":"        uniqueOrderList.add(ORDER_C);","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"CloudHill"},"content":"        uniqueOrderList.setOrder(ORDER_C, ORDER_C);","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"CloudHill"},"content":"        UniqueOrderList expectedUniqueOrderList \u003d new UniqueOrderList();","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"CloudHill"},"content":"        expectedUniqueOrderList.add(ORDER_C);","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"CloudHill"},"content":"        assertEquals(expectedUniqueOrderList, uniqueOrderList);","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"CloudHill"},"content":"    public void setCustomer_editedOrderHasSameIdentity_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"CloudHill"},"content":"        uniqueOrderList.add(ORDER_C);","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"CloudHill"},"content":"        Order cCopy \u003d new OrderBuilder(ORDER_C).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"CloudHill"},"content":"        uniqueOrderList.setOrder(ORDER_C, cCopy);","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"CloudHill"},"content":"        UniqueOrderList expectedUniqueOrderList \u003d new UniqueOrderList();","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"CloudHill"},"content":"        expectedUniqueOrderList.add(cCopy);","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"CloudHill"},"content":"        assertEquals(expectedUniqueOrderList, uniqueOrderList);","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"CloudHill"},"content":"    public void setOrder_editedOrderHasDifferentIdentity_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"CloudHill"},"content":"        uniqueOrderList.add(ORDER_C);","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"CloudHill"},"content":"        uniqueOrderList.setOrder(ORDER_C, ORDER_B);","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"CloudHill"},"content":"        UniqueOrderList expectedUniqueOrderList \u003d new UniqueOrderList();","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"CloudHill"},"content":"        expectedUniqueOrderList.add(ORDER_B);","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"CloudHill"},"content":"        assertEquals(expectedUniqueOrderList, uniqueOrderList);","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"CloudHill"},"content":"    public void setOrder_editedOrderHasNonUniqueIdentity_throwsDuplicateOrderException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"CloudHill"},"content":"        uniqueOrderList.add(ORDER_C);","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"CloudHill"},"content":"        uniqueOrderList.add(ORDER_B);","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"CloudHill"},"content":"        assertThrows(DuplicateOrderException.class, () -\u003e uniqueOrderList.setOrder(ORDER_C, ORDER_B));","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"CloudHill"},"content":"    public void remove_nullOrder_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"CloudHill"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOrderList.remove(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"CloudHill"},"content":"    public void remove_orderDoesNotExist_throwsOrderNotFoundException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"CloudHill"},"content":"        assertThrows(OrderNotFoundException.class, () -\u003e uniqueOrderList.remove(ORDER_C));","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"CloudHill"},"content":"    public void remove_existingOrder_removesOrder() {","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"CloudHill"},"content":"        uniqueOrderList.add(ORDER_C);","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"CloudHill"},"content":"        uniqueOrderList.remove(ORDER_C);","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"CloudHill"},"content":"        UniqueOrderList expectedUniqueOrderList \u003d new UniqueOrderList();","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"CloudHill"},"content":"        assertEquals(expectedUniqueOrderList, uniqueOrderList);","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"CloudHill"},"content":"    public void setOrders_nullUniqueOrderList_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"CloudHill"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOrderList.setOrders((UniqueOrderList) null));","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"CloudHill"},"content":"    public void setOrders_uniqueOrderList_replacesOwnListWithProvidedUniqueOrderList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"CloudHill"},"content":"        uniqueOrderList.add(ORDER_C);","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"CloudHill"},"content":"        UniqueOrderList expectedUniqueOrderList \u003d new UniqueOrderList();","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"CloudHill"},"content":"        expectedUniqueOrderList.add(ORDER_B);","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"CloudHill"},"content":"        uniqueOrderList.setOrders(expectedUniqueOrderList);","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"CloudHill"},"content":"        assertEquals(expectedUniqueOrderList, uniqueOrderList);","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"CloudHill"},"content":"    public void setOrders_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"CloudHill"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOrderList.setOrders((List\u003cOrder\u003e) null));","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"CloudHill"},"content":"    public void setOrders_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"CloudHill"},"content":"        uniqueOrderList.add(ORDER_C);","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"CloudHill"},"content":"        List\u003cOrder\u003e orderList \u003d Collections.singletonList(ORDER_B);","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"CloudHill"},"content":"        uniqueOrderList.setOrders(orderList);","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"CloudHill"},"content":"        UniqueOrderList expectedUniqueOrderList \u003d new UniqueOrderList();","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"CloudHill"},"content":"        expectedUniqueOrderList.add(ORDER_B);","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"CloudHill"},"content":"        assertEquals(expectedUniqueOrderList, uniqueOrderList);","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"CloudHill"},"content":"    public void setOrders_listWithDuplicateOrders_throwsDuplicateOrderException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"CloudHill"},"content":"        List\u003cOrder\u003e listWithDuplicateOrders \u003d Arrays.asList(ORDER_C, ORDER_C);","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"CloudHill"},"content":"        assertThrows(","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"CloudHill"},"content":"                DuplicateOrderException.class, () -\u003e uniqueOrderList.setOrders(listWithDuplicateOrders));","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"CloudHill"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"CloudHill"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"CloudHill"},"content":"            -\u003e uniqueOrderList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"CloudHill":167}},{"path":"src/test/java/seedu/loyaltylift/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.model.tag;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"Junyi00":2,"-":24}},{"path":"src/test/java/seedu/loyaltylift/storage/JsonAdaptedCustomerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.storage.JsonAdaptedCustomer.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalCustomers.BENSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.attribute.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.attribute.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Note;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Email;","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.customer.Marked;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Phone;","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.model.customer.Points;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"public class JsonAdaptedCustomerTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"    private static final String INVALID_CUSTOMER_TYPE \u003d \"ind\";","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"    private static final Integer INVALID_POINTS \u003d 1000000;","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"    private static final Integer INVALID_CUMULATIVE_POINTS \u003d 1000000;","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"    private static final String VALID_CUSTOMER_TYPE \u003d \"INDIVIDUAL\";","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"    private static final Integer VALID_POINTS \u003d BENSON.getPoints().value;","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"    private static final Integer VALID_CUMULATIVE_POINTS \u003d BENSON.getPoints().cumulative;","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"JavonTeo"},"content":"    private static final Boolean VALID_MARKED \u003d BENSON.getMarked().value;","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"    private static final String VALID_NOTE \u003d BENSON.getNote().value;","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"    public void toModelType_validCustomerDetails_returnsCustomer() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(BENSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"        assertEquals(BENSON, customer.toModelType());","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"JavonTeo"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(VALID_CUSTOMER_TYPE, INVALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"CloudHill"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_POINTS, VALID_CUMULATIVE_POINTS, VALID_MARKED,","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"CloudHill"},"content":"                VALID_NOTE);","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"JavonTeo"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(VALID_CUSTOMER_TYPE, null, VALID_PHONE,","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"CloudHill"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_POINTS, VALID_CUMULATIVE_POINTS, VALID_MARKED,","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"CloudHill"},"content":"                VALID_NOTE);","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"Junyi00"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"JavonTeo"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(VALID_CUSTOMER_TYPE, VALID_NAME, INVALID_PHONE,","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"CloudHill"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_POINTS, VALID_CUMULATIVE_POINTS, VALID_MARKED,","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"CloudHill"},"content":"                VALID_NOTE);","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"Junyi00"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"JavonTeo"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(VALID_CUSTOMER_TYPE, VALID_NAME, null,","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"CloudHill"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_POINTS, VALID_CUMULATIVE_POINTS, VALID_MARKED,","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"CloudHill"},"content":"                VALID_NOTE);","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"Junyi00"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"JavonTeo"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(VALID_CUSTOMER_TYPE, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"CloudHill"},"content":"                INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_POINTS, VALID_CUMULATIVE_POINTS, VALID_MARKED,","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"CloudHill"},"content":"                VALID_NOTE);","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"Junyi00"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"JavonTeo"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(VALID_CUSTOMER_TYPE, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"CloudHill"},"content":"                null, VALID_ADDRESS, VALID_TAGS, VALID_POINTS, VALID_CUMULATIVE_POINTS, VALID_MARKED,","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"CloudHill"},"content":"                VALID_NOTE);","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"Junyi00"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"JavonTeo"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(VALID_CUSTOMER_TYPE, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"CloudHill"},"content":"                VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS, VALID_POINTS, VALID_CUMULATIVE_POINTS, VALID_MARKED,","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"CloudHill"},"content":"                VALID_NOTE);","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"Junyi00"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"JavonTeo"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(VALID_CUSTOMER_TYPE, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"CloudHill"},"content":"                VALID_EMAIL, null, VALID_TAGS, VALID_POINTS, VALID_CUMULATIVE_POINTS, VALID_MARKED,","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"CloudHill"},"content":"                VALID_NOTE);","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"Junyi00"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"JavonTeo"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(VALID_CUSTOMER_TYPE, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"CloudHill"},"content":"                VALID_EMAIL, VALID_ADDRESS, invalidTags, VALID_POINTS, VALID_CUMULATIVE_POINTS, VALID_MARKED,","lastModifiedDate":"2023-03-18"},{"lineNumber":130,"author":{"gitId":"CloudHill"},"content":"                VALID_NOTE);","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"Junyi00"},"content":"        assertThrows(IllegalValueException.class, customer::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":135,"author":{"gitId":"Junyi00"},"content":"    public void toModelType_nullCustomerType_throwsIllegalValueException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":136,"author":{"gitId":"JavonTeo"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(null, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-03-20"},{"lineNumber":137,"author":{"gitId":"CloudHill"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_POINTS, VALID_CUMULATIVE_POINTS, VALID_MARKED,","lastModifiedDate":"2023-03-18"},{"lineNumber":138,"author":{"gitId":"CloudHill"},"content":"                VALID_NOTE);","lastModifiedDate":"2023-03-18"},{"lineNumber":139,"author":{"gitId":"Junyi00"},"content":"        assertThrows(IllegalValueException.class, customer::toModelType);","lastModifiedDate":"2023-03-07"},{"lineNumber":140,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":141,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":142,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":143,"author":{"gitId":"Junyi00"},"content":"    public void toModelType_invalidCustomerType_throwsIllegalValueException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":144,"author":{"gitId":"JavonTeo"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(INVALID_CUSTOMER_TYPE, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-03-20"},{"lineNumber":145,"author":{"gitId":"CloudHill"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_POINTS, VALID_CUMULATIVE_POINTS, VALID_MARKED,","lastModifiedDate":"2023-03-18"},{"lineNumber":146,"author":{"gitId":"CloudHill"},"content":"                VALID_NOTE);","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"Junyi00"},"content":"        assertThrows(IllegalValueException.class, customer::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"Infrix"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"Infrix"},"content":"    public void toModelType_nullPoints_throwsIllegalValueException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"JavonTeo"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(VALID_CUSTOMER_TYPE, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-03-20"},{"lineNumber":153,"author":{"gitId":"CloudHill"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, null, VALID_CUMULATIVE_POINTS, VALID_MARKED,","lastModifiedDate":"2023-03-18"},{"lineNumber":154,"author":{"gitId":"CloudHill"},"content":"                VALID_NOTE);","lastModifiedDate":"2023-03-18"},{"lineNumber":155,"author":{"gitId":"Infrix"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Points.class.getSimpleName());","lastModifiedDate":"2023-03-17"},{"lineNumber":156,"author":{"gitId":"Infrix"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2023-03-17"},{"lineNumber":157,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":158,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":159,"author":{"gitId":"Infrix"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":160,"author":{"gitId":"Infrix"},"content":"    public void toModelType_invalidPoints_throwsIllegalValueException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":161,"author":{"gitId":"JavonTeo"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(VALID_CUSTOMER_TYPE, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-03-20"},{"lineNumber":162,"author":{"gitId":"CloudHill"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, INVALID_POINTS, VALID_CUMULATIVE_POINTS, VALID_MARKED,","lastModifiedDate":"2023-03-18"},{"lineNumber":163,"author":{"gitId":"CloudHill"},"content":"                VALID_NOTE);","lastModifiedDate":"2023-03-18"},{"lineNumber":164,"author":{"gitId":"Infrix"},"content":"        assertThrows(IllegalValueException.class, customer::toModelType);","lastModifiedDate":"2023-03-17"},{"lineNumber":165,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":166,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":167,"author":{"gitId":"Infrix"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":168,"author":{"gitId":"Infrix"},"content":"    public void toModelType_nullCumulativePoints_throwsIllegalValueException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":169,"author":{"gitId":"CloudHill"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(VALID_CUSTOMER_TYPE, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-03-18"},{"lineNumber":170,"author":{"gitId":"CloudHill"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_POINTS, null, VALID_MARKED,","lastModifiedDate":"2023-03-18"},{"lineNumber":171,"author":{"gitId":"CloudHill"},"content":"                VALID_NOTE);","lastModifiedDate":"2023-03-18"},{"lineNumber":172,"author":{"gitId":"Infrix"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Points.class.getSimpleName());","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"Infrix"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":176,"author":{"gitId":"Infrix"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":177,"author":{"gitId":"Infrix"},"content":"    public void toModelType_invalidCumulativePoints_throwsIllegalValueException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":178,"author":{"gitId":"JavonTeo"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(VALID_CUSTOMER_TYPE, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-03-20"},{"lineNumber":179,"author":{"gitId":"CloudHill"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_POINTS, INVALID_CUMULATIVE_POINTS, VALID_MARKED,","lastModifiedDate":"2023-03-18"},{"lineNumber":180,"author":{"gitId":"CloudHill"},"content":"                VALID_NOTE);","lastModifiedDate":"2023-03-18"},{"lineNumber":181,"author":{"gitId":"Infrix"},"content":"        assertThrows(IllegalValueException.class, customer::toModelType);","lastModifiedDate":"2023-03-17"},{"lineNumber":182,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":183,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":184,"author":{"gitId":"JavonTeo"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":185,"author":{"gitId":"JavonTeo"},"content":"    public void toModelType_nullMarked_throwsIllegalValueException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":186,"author":{"gitId":"JavonTeo"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(VALID_CUSTOMER_TYPE, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-03-20"},{"lineNumber":187,"author":{"gitId":"CloudHill"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_POINTS, VALID_CUMULATIVE_POINTS, null,","lastModifiedDate":"2023-03-18"},{"lineNumber":188,"author":{"gitId":"CloudHill"},"content":"                VALID_NOTE);","lastModifiedDate":"2023-03-18"},{"lineNumber":189,"author":{"gitId":"JavonTeo"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Marked.class.getSimpleName());","lastModifiedDate":"2023-03-20"},{"lineNumber":190,"author":{"gitId":"JavonTeo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2023-03-20"},{"lineNumber":191,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":192,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":193,"author":{"gitId":"CloudHill"},"content":"    public void toModelType_nullNote_throwsIllegalValueException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":194,"author":{"gitId":"CloudHill"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(VALID_CUSTOMER_TYPE, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-03-18"},{"lineNumber":195,"author":{"gitId":"CloudHill"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_POINTS, VALID_CUMULATIVE_POINTS, VALID_MARKED,","lastModifiedDate":"2023-03-18"},{"lineNumber":196,"author":{"gitId":"CloudHill"},"content":"                null);","lastModifiedDate":"2023-03-18"},{"lineNumber":197,"author":{"gitId":"CloudHill"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Note.class.getSimpleName());","lastModifiedDate":"2023-03-18"},{"lineNumber":198,"author":{"gitId":"CloudHill"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2023-03-18"},{"lineNumber":199,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Junyi00":30,"CloudHill":43,"JavonTeo":23,"jednghk":2,"Infrix":26,"-":76}},{"path":"src/test/java/seedu/loyaltylift/storage/JsonAdaptedOrderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.storage;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.storage.JsonAdaptedOrder.CUSTOMER_ID_MESSAGE_FIELD;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.storage.JsonAdaptedOrder.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalOrders.ORDER_A;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import java.util.List;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.AddressBook;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.attribute.Address;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.attribute.Name;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Note;","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.order.CreatedDate;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.order.Quantity;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.order.Status;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.testutil.TypicalCustomers;","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.testutil.TypicalOrders;","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"public class JsonAdaptedOrderTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"    private static final String INVALID_NAME \u003d \"T@rts\";","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"    private static final Integer INVALID_QUANTITY \u003d -1;","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"    private static final List\u003cJsonAdaptedStatusUpdate\u003e INVALID_STATUS \u003d List.of();","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"    private static final String INVALID_CREATED_DATE \u003d \"2020-05-02\";","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"    private static final String VALID_CUSTOMER_UID \u003d ORDER_A.getCustomer().getUid();","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"    private static final String VALID_NAME \u003d ORDER_A.getName().fullName;","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"    private static final Integer VALID_QUANTITY \u003d ORDER_A.getQuantity().value;","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"    private static final List\u003cJsonAdaptedStatusUpdate\u003e VALID_STATUS \u003d ORDER_A.getStatus().getStatusUpdates().stream()","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"            .map(JsonAdaptedStatusUpdate::new)","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"    private static final String VALID_ADDRESS \u003d ORDER_A.getAddress().toString();","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"    private static final String VALID_CREATED_DATE \u003d ORDER_A.getCreatedDate().toString();","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"CloudHill"},"content":"    private static final String VALID_NOTE \u003d ORDER_A.getNote().toString();","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"    private static final AddressBookStub ADDRESS_BOOK_STUB \u003d new AddressBookStub(","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"            TypicalCustomers.getTypicalCustomers(),","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"            TypicalOrders.getTypicalOrders());","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"    private static final AddressBook ADDRESS_BOOK \u003d new AddressBook(ADDRESS_BOOK_STUB);","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"Junyi00"},"content":"    public void toModelType_validOrderDetails_returnsOrder() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"Junyi00"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(ORDER_A);","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"        assertEquals(ORDER_A, order.toModelType(ADDRESS_BOOK));","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"Junyi00"},"content":"    public void toModelType_nullCustomerAssociation_throwsIllegalValueException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"Junyi00"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":"                null, VALID_NAME, VALID_QUANTITY, VALID_STATUS, VALID_ADDRESS,","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"Junyi00"},"content":"                VALID_CREATED_DATE, VALID_NOTE);","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"Junyi00"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, CUSTOMER_ID_MESSAGE_FIELD);","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"Junyi00"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e order.toModelType(ADDRESS_BOOK));","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"Junyi00"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"Junyi00"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"Junyi00"},"content":"                VALID_CUSTOMER_UID, INVALID_NAME, VALID_QUANTITY, VALID_STATUS, VALID_ADDRESS,","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"Junyi00"},"content":"                VALID_CREATED_DATE, VALID_NOTE);","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"Junyi00"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"Junyi00"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e order.toModelType(ADDRESS_BOOK));","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"Junyi00"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"Junyi00"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"Junyi00"},"content":"                VALID_CUSTOMER_UID, null, VALID_QUANTITY, VALID_STATUS, VALID_ADDRESS,","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"Junyi00"},"content":"                VALID_CREATED_DATE, VALID_NOTE);","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"Junyi00"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"Junyi00"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e order.toModelType(ADDRESS_BOOK));","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"Junyi00"},"content":"    public void toModelType_invalidQuantity_throwsIllegalValueException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"Junyi00"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"Junyi00"},"content":"                VALID_CUSTOMER_UID, VALID_NAME, INVALID_QUANTITY, VALID_STATUS, VALID_ADDRESS,","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"Junyi00"},"content":"                VALID_CREATED_DATE, VALID_NOTE);","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"Junyi00"},"content":"        String expectedMessage \u003d Quantity.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"Junyi00"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e order.toModelType(ADDRESS_BOOK));","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"Junyi00"},"content":"    public void toModelType_nullQuantity_throwsIllegalValueException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"Junyi00"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"Junyi00"},"content":"                VALID_CUSTOMER_UID, VALID_NAME, null, VALID_STATUS, VALID_ADDRESS,","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"Junyi00"},"content":"                VALID_CREATED_DATE, VALID_NOTE);","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"Junyi00"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Quantity.class.getSimpleName());","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"Junyi00"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e order.toModelType(ADDRESS_BOOK));","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"Junyi00"},"content":"    public void toModelType_invalidStatus_throwsIllegalValueException() {","lastModifiedDate":"2023-03-25"},{"lineNumber":108,"author":{"gitId":"Junyi00"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"Junyi00"},"content":"                VALID_CUSTOMER_UID, VALID_NAME, VALID_QUANTITY, INVALID_STATUS,","lastModifiedDate":"2023-03-25"},{"lineNumber":110,"author":{"gitId":"Junyi00"},"content":"                VALID_ADDRESS, VALID_CREATED_DATE, VALID_NOTE);","lastModifiedDate":"2023-03-25"},{"lineNumber":111,"author":{"gitId":"Junyi00"},"content":"        assertThrows(IllegalValueException.class, () -\u003e order.toModelType(ADDRESS_BOOK));","lastModifiedDate":"2023-03-25"},{"lineNumber":112,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"Junyi00"},"content":"    public void toModelType_nullStatus_throwsIllegalValueException() {","lastModifiedDate":"2023-03-25"},{"lineNumber":116,"author":{"gitId":"Junyi00"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"CloudHill"},"content":"                VALID_CUSTOMER_UID, VALID_NAME, VALID_QUANTITY, null,","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"Junyi00"},"content":"                VALID_ADDRESS, VALID_CREATED_DATE, VALID_NOTE);","lastModifiedDate":"2023-03-25"},{"lineNumber":119,"author":{"gitId":"Junyi00"},"content":"        assertThrows(IllegalValueException.class, Status.MESSAGE_CONSTRAINTS, () -\u003e order.toModelType(ADDRESS_BOOK));","lastModifiedDate":"2023-03-25"},{"lineNumber":120,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"Junyi00"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-03-25"},{"lineNumber":124,"author":{"gitId":"Junyi00"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"Junyi00"},"content":"                VALID_CUSTOMER_UID, VALID_NAME, VALID_QUANTITY, VALID_STATUS,","lastModifiedDate":"2023-03-25"},{"lineNumber":126,"author":{"gitId":"Junyi00"},"content":"                INVALID_ADDRESS, VALID_CREATED_DATE, VALID_NOTE);","lastModifiedDate":"2023-03-25"},{"lineNumber":127,"author":{"gitId":"Junyi00"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-25"},{"lineNumber":128,"author":{"gitId":"Junyi00"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e order.toModelType(ADDRESS_BOOK));","lastModifiedDate":"2023-03-25"},{"lineNumber":129,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"Junyi00"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-03-25"},{"lineNumber":133,"author":{"gitId":"Junyi00"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"Junyi00"},"content":"                VALID_CUSTOMER_UID, VALID_NAME, VALID_QUANTITY, VALID_STATUS,","lastModifiedDate":"2023-03-25"},{"lineNumber":135,"author":{"gitId":"CloudHill"},"content":"                null, VALID_CREATED_DATE, VALID_NOTE);","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"Junyi00"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2023-03-25"},{"lineNumber":137,"author":{"gitId":"Junyi00"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e order.toModelType(ADDRESS_BOOK));","lastModifiedDate":"2023-03-18"},{"lineNumber":138,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"Junyi00"},"content":"    public void toModelType_invalidCreatedDate_throwsIllegalValueException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"Junyi00"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"Junyi00"},"content":"                VALID_CUSTOMER_UID, VALID_NAME, VALID_QUANTITY, VALID_STATUS,","lastModifiedDate":"2023-03-25"},{"lineNumber":144,"author":{"gitId":"Junyi00"},"content":"                VALID_ADDRESS, INVALID_CREATED_DATE, VALID_NOTE);","lastModifiedDate":"2023-03-25"},{"lineNumber":145,"author":{"gitId":"Junyi00"},"content":"        String expectedMessage \u003d CreatedDate.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"Junyi00"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e order.toModelType(ADDRESS_BOOK));","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"Junyi00"},"content":"    public void toModelType_nullCreatedDate_throwsIllegalValueException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":151,"author":{"gitId":"Junyi00"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(","lastModifiedDate":"2023-03-14"},{"lineNumber":152,"author":{"gitId":"Junyi00"},"content":"                VALID_CUSTOMER_UID, VALID_NAME, VALID_QUANTITY, VALID_STATUS,","lastModifiedDate":"2023-03-25"},{"lineNumber":153,"author":{"gitId":"Junyi00"},"content":"                VALID_ADDRESS, null, VALID_NOTE);","lastModifiedDate":"2023-03-25"},{"lineNumber":154,"author":{"gitId":"Junyi00"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, CreatedDate.class.getSimpleName());","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"Junyi00"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e order.toModelType(ADDRESS_BOOK));","lastModifiedDate":"2023-03-18"},{"lineNumber":156,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":157,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":158,"author":{"gitId":"CloudHill"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":159,"author":{"gitId":"CloudHill"},"content":"    public void toModelType_nullNote_throwsIllegalValueException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":160,"author":{"gitId":"CloudHill"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(","lastModifiedDate":"2023-03-18"},{"lineNumber":161,"author":{"gitId":"Junyi00"},"content":"                VALID_CUSTOMER_UID, VALID_NAME, VALID_QUANTITY, VALID_STATUS,","lastModifiedDate":"2023-03-25"},{"lineNumber":162,"author":{"gitId":"Junyi00"},"content":"                VALID_ADDRESS, VALID_CREATED_DATE, null);","lastModifiedDate":"2023-03-25"},{"lineNumber":163,"author":{"gitId":"CloudHill"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Note.class.getSimpleName());","lastModifiedDate":"2023-03-18"},{"lineNumber":164,"author":{"gitId":"CloudHill"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e order.toModelType(ADDRESS_BOOK));","lastModifiedDate":"2023-03-18"},{"lineNumber":165,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":166,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":167,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":168,"author":{"gitId":"Junyi00"},"content":"     * A stub ReadOnlyAddressBook whose customers list can violate interface constraints.","lastModifiedDate":"2023-03-18"},{"lineNumber":169,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":170,"author":{"gitId":"Junyi00"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2023-03-18"},{"lineNumber":171,"author":{"gitId":"Junyi00"},"content":"        private final ObservableList\u003cCustomer\u003e customers \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-18"},{"lineNumber":172,"author":{"gitId":"Junyi00"},"content":"        private final ObservableList\u003cOrder\u003e orders \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-18"},{"lineNumber":173,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":174,"author":{"gitId":"Junyi00"},"content":"        AddressBookStub(Collection\u003cCustomer\u003e customers, Collection\u003cOrder\u003e orders) {","lastModifiedDate":"2023-03-18"},{"lineNumber":175,"author":{"gitId":"Junyi00"},"content":"            this.customers.setAll(customers);","lastModifiedDate":"2023-03-18"},{"lineNumber":176,"author":{"gitId":"Junyi00"},"content":"            this.orders.setAll(orders);","lastModifiedDate":"2023-03-18"},{"lineNumber":177,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":178,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":179,"author":{"gitId":"Junyi00"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":180,"author":{"gitId":"Junyi00"},"content":"        public ObservableList\u003cCustomer\u003e getCustomerList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":181,"author":{"gitId":"Junyi00"},"content":"            return customers;","lastModifiedDate":"2023-03-18"},{"lineNumber":182,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":183,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":184,"author":{"gitId":"Junyi00"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":185,"author":{"gitId":"Junyi00"},"content":"        public ObservableList\u003cOrder\u003e getOrderList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":186,"author":{"gitId":"Junyi00"},"content":"            return orders;","lastModifiedDate":"2023-03-18"},{"lineNumber":187,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":188,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":189,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Junyi00":178,"CloudHill":11}},{"path":"src/test/java/seedu/loyaltylift/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalCustomers.HOON;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalCustomers.IDA;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.AddressBook;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"    public void readAddressBook_invalidCustomerAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidCustomerAddressBook.json\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"    public void readAddressBook_invalidAndValidCustomerAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Junyi00"},"content":"        assertThrows(","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"                DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidCustomerAddressBook.json\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"Junyi00"},"content":"    public void readAddressBook_missingCustomerTypeAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"Junyi00"},"content":"        assertThrows(","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"Junyi00"},"content":"                DataConversionException.class, () -\u003e readAddressBook(\"missingCustomerTypeAddressBook.json\"));","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"Junyi00"},"content":"        original.addCustomer(HOON);","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"Junyi00"},"content":"        original.removeCustomer(ALICE);","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"Junyi00"},"content":"        original.addCustomer(IDA);","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Junyi00":21,"-":96}},{"path":"src/test/java/seedu/loyaltylift/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.util.JsonUtil;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.AddressBook;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.exceptions.CustomerNotFoundException;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.testutil.TypicalAddressBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"    private static final Path TYPICAL_CUSTOMERS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalCustomersAddressBook.json\");","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"    private static final Path INVALID_CUSTOMER_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidCustomerAddressBook.json\");","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"    private static final Path DUPLICATE_CUSTOMER_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateCustomerAddressBook.json\");","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"    private static final Path CUSTOMER_NOT_FOUND_FILE \u003d TEST_DATA_FOLDER.resolve(\"customerNotFoundAddressBook.json\");","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"    public void toModelType_typicalCustomersFile_success() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_CUSTOMERS_FILE,","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"        AddressBook typicalCustomersAddressBook \u003d TypicalAddressBook.getTypicalAddressBook();","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"        assertEquals(addressBookFromFile, typicalCustomersAddressBook);","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"    public void toModelType_invalidCustomerFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_CUSTOMER_FILE,","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"    public void toModelType_duplicateCustomers_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_CUSTOMER_FILE,","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_CUSTOMER,","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"    public void toModelType_noSuchCustomer_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(CUSTOMER_NOT_FOUND_FILE,","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"        assertThrows(CustomerNotFoundException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Junyi00":27,"-":29}},{"path":"src/test/java/seedu/loyaltylift/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.GuiSettings;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.UserPrefs;","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Junyi00":5,"-":118}},{"path":"src/test/java/seedu/loyaltylift/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.GuiSettings;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.AddressBook;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.UserPrefs;","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Junyi00":6,"-":62}},{"path":"src/test/java/seedu/loyaltylift/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.testutil;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.AddressBook;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withCustomer(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"     * Adds a new {@code Customer} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"    public AddressBookBuilder withCustomer(Customer customer) {","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"        addressBook.addCustomer(customer);","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"     * Adds a new {@code Order} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"    public AddressBookBuilder withOrder(Order order) {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"        addressBook.addOrder(order);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Junyi00":7,"CloudHill":9,"-":27}},{"path":"src/test/java/seedu/loyaltylift/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.testutil;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"Junyi00":1,"-":33}},{"path":"src/test/java/seedu/loyaltylift/testutil/CustomerBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.testutil;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.attribute.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.attribute.Name;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Note;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.CustomerType;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Email;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"import seedu.loyaltylift.model.customer.Marked;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Phone;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"import seedu.loyaltylift.model.customer.Points;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.tag.Tag;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.util.SampleDataUtil;","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":" * A utility class to help with building Customer objects.","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"public class CustomerBuilder {","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"    public static final CustomerType DEFAULT_CUSTOMER_TYPE \u003d CustomerType.INDIVIDUAL;","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"    public static final Integer DEFAULT_POINTS \u003d 0;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"    public static final Integer DEFAULT_CUMULATIVE_POINTS \u003d 0;","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"    public static final Boolean DEFAULT_MARKED \u003d false;","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"    public static final String DEFAULT_NOTE \u003d \"\";","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"    private CustomerType customerType;","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"    private Points points;","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"JavonTeo"},"content":"    private Marked marked;","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"    private Note note;","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"     * Creates a {@code CustomerBuilder} with the default details.","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"    public CustomerBuilder() {","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"        customerType \u003d DEFAULT_CUSTOMER_TYPE;","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"CloudHill"},"content":"        points \u003d new Points(DEFAULT_POINTS, DEFAULT_CUMULATIVE_POINTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"JavonTeo"},"content":"        marked \u003d new Marked(DEFAULT_MARKED);","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"CloudHill"},"content":"        note \u003d new Note(DEFAULT_NOTE);","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"     * Initializes the CustomerBuilder with the data of {@code customerToCopy}.","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"    public CustomerBuilder(Customer customerToCopy) {","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Junyi00"},"content":"        name \u003d customerToCopy.getName();","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Junyi00"},"content":"        phone \u003d customerToCopy.getPhone();","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":"        email \u003d customerToCopy.getEmail();","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Junyi00"},"content":"        address \u003d customerToCopy.getAddress();","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Junyi00"},"content":"        tags \u003d new HashSet\u003c\u003e(customerToCopy.getTags());","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Junyi00"},"content":"        customerType \u003d customerToCopy.getCustomerType();","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"CloudHill"},"content":"        points \u003d customerToCopy.getPoints();","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"JavonTeo"},"content":"        marked \u003d customerToCopy.getMarked();","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"CloudHill"},"content":"        note \u003d customerToCopy.getNote();","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"Junyi00"},"content":"     * Sets the {@code Name} of the {@code Customer} that we are building.","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"Junyi00"},"content":"    public CustomerBuilder withName(String name) {","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"Junyi00"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Customer} that we are building.","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"Junyi00"},"content":"    public CustomerBuilder withTags(String ... tags) {","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"Junyi00"},"content":"     * Sets the {@code Address} of the {@code Customer} that we are building.","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"Junyi00"},"content":"    public CustomerBuilder withAddress(String address) {","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"Junyi00"},"content":"     * Sets the {@code Phone} of the {@code Customer} that we are building.","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"Junyi00"},"content":"    public CustomerBuilder withPhone(String phone) {","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":106,"author":{"gitId":"Junyi00"},"content":"     * Sets the {@code Email} of the {@code Customer} that we are building.","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"Junyi00"},"content":"    public CustomerBuilder withEmail(String email) {","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":113,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"CloudHill"},"content":"     * Sets the {@code CustomerType} of the {@code Customer} that we are building.","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"CloudHill"},"content":"    public CustomerBuilder withCustomerType(CustomerType customerType) {","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"CloudHill"},"content":"        this.customerType \u003d customerType;","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"Infrix"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":122,"author":{"gitId":"CloudHill"},"content":"     * Sets the {@code Points} of the {@code Customer} that we are building.","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":124,"author":{"gitId":"CloudHill"},"content":"    public CustomerBuilder withPoints(Integer points, Integer cumulativePoints) {","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"CloudHill"},"content":"        this.points \u003d new Points(points, cumulativePoints);","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"Junyi00"},"content":"        return this;","lastModifiedDate":"2023-03-07"},{"lineNumber":127,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":128,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":129,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":130,"author":{"gitId":"JavonTeo"},"content":"     * Sets the {@code Marked} of the {@code Customer} that we are building.","lastModifiedDate":"2023-03-20"},{"lineNumber":131,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":132,"author":{"gitId":"JavonTeo"},"content":"    public CustomerBuilder withMarked(Boolean marked) {","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"JavonTeo"},"content":"        this.marked \u003d new Marked(marked);","lastModifiedDate":"2023-03-20"},{"lineNumber":134,"author":{"gitId":"JavonTeo"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":135,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":136,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":137,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":138,"author":{"gitId":"CloudHill"},"content":"     * Sets the {@code Note} of the {@code Customer} that we are building.","lastModifiedDate":"2023-03-18"},{"lineNumber":139,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"CloudHill"},"content":"    public CustomerBuilder withNote(String note) {","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"CloudHill"},"content":"        this.note \u003d new Note(note);","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"CloudHill"},"content":"        return this;","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":145,"author":{"gitId":"Junyi00"},"content":"    public Customer build() {","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"CloudHill"},"content":"        return new Customer(customerType, name, phone, email, address, tags, points, marked, note);","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"Junyi00":37,"CloudHill":24,"JavonTeo":13,"jednghk":2,"Infrix":8,"-":65}},{"path":"src/test/java/seedu/loyaltylift/testutil/CustomerUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.testutil;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_CUSTOMER_TYPE;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.AddCustomerCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.EditCustomerCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.tag.Tag;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":" * A utility class for Customer.","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"public class CustomerUtil {","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"     * Returns an add command string for adding the {@code customer}.","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"    public static String getAddCustomerCommand(Customer customer) {","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"        return AddCustomerCommand.COMMAND_WORD + \" \" + getCustomerDetails(customer);","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"     * Returns the part of command string for the given {@code customer}\u0027s details.","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"    public static String getCustomerDetails(Customer customer) {","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"        sb.append(PREFIX_NAME + customer.getName().fullName + \" \");","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"        sb.append(PREFIX_PHONE + customer.getPhone().value + \" \");","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"        sb.append(PREFIX_EMAIL + customer.getEmail().value + \" \");","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"        sb.append(PREFIX_ADDRESS + customer.getAddress().value + \" \");","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"        sb.append(PREFIX_CUSTOMER_TYPE + customer.getCustomerType().toString() + \" \");","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"        customer.getTags().stream().forEach(","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"     * Returns the part of command string for the given {@code EditCustomerDescriptor}\u0027s details.","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"    public static String getEditCustomerDescriptorDetails(EditCustomerCommand.EditCustomerDescriptor descriptor) {","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"        descriptor.getCustomerType()","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"                .ifPresent(customerType -\u003e sb.append(PREFIX_CUSTOMER_TYPE).append(customerType).append(\" \"));","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Junyi00":28,"-":38}},{"path":"src/test/java/seedu/loyaltylift/testutil/EditCustomerDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.testutil;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.EditCustomerCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.logic.commands.EditCustomerCommand.EditCustomerDescriptor;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.attribute.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"jednghk"},"content":"import seedu.loyaltylift.model.attribute.Name;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.CustomerType;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Email;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Phone;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.tag.Tag;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":" * A utility class to help with building EditCustomerDescriptor objects.","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"public class EditCustomerDescriptorBuilder {","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"    private EditCustomerCommand.EditCustomerDescriptor descriptor;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"    public EditCustomerDescriptorBuilder() {","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"        descriptor \u003d new EditCustomerCommand.EditCustomerDescriptor();","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"    public EditCustomerDescriptorBuilder(EditCustomerCommand.EditCustomerDescriptor descriptor) {","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"        this.descriptor \u003d new EditCustomerDescriptor(descriptor);","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"     * Returns an {@code EditCustomerDescriptor} with fields containing {@code customer}\u0027s details","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"    public EditCustomerDescriptorBuilder(Customer customer) {","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"        descriptor \u003d new EditCustomerDescriptor();","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"        descriptor.setName(customer.getName());","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"        descriptor.setPhone(customer.getPhone());","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"        descriptor.setEmail(customer.getEmail());","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"        descriptor.setAddress(customer.getAddress());","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"        descriptor.setTags(customer.getTags());","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"        descriptor.setCustomerType(customer.getCustomerType());","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"     * Sets the {@code CustomerType} of the {@code EditCustomerDescriptor} that we are building.","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"    public EditCustomerDescriptorBuilder withCustomerType(CustomerType customerType) {","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"        descriptor.setCustomerType(customerType);","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"        return this;","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"     * Sets the {@code Name} of the {@code EditCustomerDescriptor} that we are building.","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"Junyi00"},"content":"    public EditCustomerDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"Junyi00"},"content":"     * Sets the {@code Phone} of the {@code EditCustomerDescriptor} that we are building.","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":"    public EditCustomerDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"Junyi00"},"content":"     * Sets the {@code Email} of the {@code EditCustomerDescriptor} that we are building.","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"Junyi00"},"content":"    public EditCustomerDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"Junyi00"},"content":"     * Sets the {@code Address} of the {@code EditCustomerDescriptor} that we are building.","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"Junyi00"},"content":"    public EditCustomerDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"Junyi00"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditCustomerDescriptor}","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"Junyi00"},"content":"    public EditCustomerDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"Junyi00"},"content":"    public EditCustomerCommand.EditCustomerDescriptor build() {","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Junyi00":43,"jednghk":2,"-":53}},{"path":"src/test/java/seedu/loyaltylift/testutil/OrderBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.testutil;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import java.util.List;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.attribute.Note;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.CreatedDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Quantity;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Status;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.order.StatusUpdate;","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.order.StatusValue;","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":" * A utility class to help with building Order objects.","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"public class OrderBuilder {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"    public static final Customer DEFAULT_CUSTOMER \u003d TypicalCustomers.ALICE;","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":"    public static final String DEFAULT_NAME \u003d \"Banana Split\";","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"    public static final int DEFAULT_QUANTITY \u003d 2;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"    public static final List\u003cStatusUpdate\u003e DEFAULT_STATUS \u003d List.of(","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"            new StatusUpdate(StatusValue.PENDING, LocalDate.of(2022, 12, 20)));","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"11 Fabordrive, Singapore 3001298\";","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"CloudHill"},"content":"    public static final LocalDate DEFAULT_DATE \u003d LocalDate.of(2022, 12, 20);","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"    public static final String DEFAULT_NOTE \u003d \"\";","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"    private Customer customer;","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"    private Name name;","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"    private Quantity quantity;","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"    private Address address;","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"CloudHill"},"content":"    private Status status;","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"CloudHill"},"content":"    private CreatedDate createdDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"    private Note note;","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"CloudHill"},"content":"     * Creates a {@code OrderBuilder} with the default details.","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"    public OrderBuilder() {","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"        customer \u003d DEFAULT_CUSTOMER;","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"CloudHill"},"content":"        quantity \u003d new Quantity(DEFAULT_QUANTITY);","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"        status \u003d new Status(DEFAULT_STATUS);","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"        createdDate \u003d new CreatedDate(DEFAULT_DATE);","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"CloudHill"},"content":"        note \u003d new Note(DEFAULT_NOTE);","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"CloudHill"},"content":"     * Initializes the OrderBuilder with the data of {@code orderToCopy}.","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"CloudHill"},"content":"    public OrderBuilder(Order orderToCopy) {","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"Junyi00"},"content":"        customer \u003d orderToCopy.getCustomer();","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"CloudHill"},"content":"        name \u003d orderToCopy.getName();","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"CloudHill"},"content":"        quantity \u003d orderToCopy.getQuantity();","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"CloudHill"},"content":"        address \u003d orderToCopy.getAddress();","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"CloudHill"},"content":"        status \u003d orderToCopy.getStatus();","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"CloudHill"},"content":"        createdDate \u003d orderToCopy.getCreatedDate();","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"CloudHill"},"content":"        note \u003d orderToCopy.getNote();","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"Junyi00"},"content":"     * Sets the {@code Customer} association of the {@code Order} that we are building.","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"Junyi00"},"content":"    public OrderBuilder withCustomer(Customer customer) {","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"Junyi00"},"content":"        this.customer \u003d customer;","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"Junyi00"},"content":"        return this;","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"CloudHill"},"content":"     * Sets the {@code Name} of the {@code Order} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"CloudHill"},"content":"    public OrderBuilder withName(String name) {","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"CloudHill"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"CloudHill"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"CloudHill"},"content":"     * Sets the {@code Quantity} of the {@code Order} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"CloudHill"},"content":"    public OrderBuilder withQuantity(String quantity) {","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"CloudHill"},"content":"        this.quantity \u003d SampleDataUtil.getQuantity(quantity);","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"CloudHill"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"Junyi00"},"content":"     * Sets a new {@code Status} of the {@code Order} that we are building.","lastModifiedDate":"2023-03-25"},{"lineNumber":92,"author":{"gitId":"Junyi00"},"content":"     * The status will be at \u0027Pending\u0027 stage.","lastModifiedDate":"2023-03-25"},{"lineNumber":93,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"Junyi00"},"content":"    public OrderBuilder withInitialStatus(String date) {","lastModifiedDate":"2023-03-25"},{"lineNumber":95,"author":{"gitId":"Junyi00"},"content":"        this.status \u003d SampleDataUtil.getInitialStatus(date);","lastModifiedDate":"2023-03-25"},{"lineNumber":96,"author":{"gitId":"CloudHill"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"CloudHill"},"content":"     * Sets the {@code Status} of the {@code Order} that we are building.","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"Junyi00"},"content":"     * Status will","lastModifiedDate":"2023-03-25"},{"lineNumber":102,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"Junyi00"},"content":"    public OrderBuilder withNextStatus(String date) {","lastModifiedDate":"2023-03-25"},{"lineNumber":104,"author":{"gitId":"Junyi00"},"content":"        this.status \u003d SampleDataUtil.getNextStatus(status, date);","lastModifiedDate":"2023-03-25"},{"lineNumber":105,"author":{"gitId":"Junyi00"},"content":"        return this;","lastModifiedDate":"2023-03-25"},{"lineNumber":106,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":107,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":108,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":109,"author":{"gitId":"Junyi00"},"content":"     * Sets the {@code Address} of the {@code Order} that we are building.","lastModifiedDate":"2023-03-25"},{"lineNumber":110,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":111,"author":{"gitId":"Junyi00"},"content":"    public OrderBuilder withAddress(String address) {","lastModifiedDate":"2023-03-25"},{"lineNumber":112,"author":{"gitId":"Junyi00"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2023-03-25"},{"lineNumber":113,"author":{"gitId":"CloudHill"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"CloudHill"},"content":"     * Sets the {@code CreatedDate} of the {@code Order} that we are building.","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"CloudHill"},"content":"    public OrderBuilder withCreatedDate(String createdDate) {","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"CloudHill"},"content":"        this.createdDate \u003d SampleDataUtil.getCreatedDate(createdDate);","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"CloudHill"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"CloudHill"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"CloudHill"},"content":"     * Sets the {@code Note} of the {@code Order} that we are building.","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"CloudHill"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":127,"author":{"gitId":"CloudHill"},"content":"    public OrderBuilder withNote(String note) {","lastModifiedDate":"2023-03-18"},{"lineNumber":128,"author":{"gitId":"CloudHill"},"content":"        this.note \u003d new Note(note);","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"CloudHill"},"content":"        return this;","lastModifiedDate":"2023-03-18"},{"lineNumber":130,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"CloudHill"},"content":"    public Order build() {","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"CloudHill"},"content":"        return new Order(customer, name, quantity, address, status, createdDate, note);","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Junyi00":34,"CloudHill":102}},{"path":"src/test/java/seedu/loyaltylift/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.testutil;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Junyi00":1,"-":71}},{"path":"src/test/java/seedu/loyaltylift/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.testutil;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.Model;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"     * Returns the middle index of the customer in the {@code model}\u0027s customer list.","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"        return Index.fromOneBased(model.getFilteredCustomerList().size() / 2);","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"     * Returns the last index of the customer in the {@code model}\u0027s customer list.","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"        return Index.fromOneBased(model.getFilteredCustomerList().size());","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"     * Returns the customer in the {@code model}\u0027s customer list at {@code index}.","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"    public static Customer getCustomer(Model model, Index index) {","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"        return model.getFilteredCustomerList().get(index.getZeroBased());","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Junyi00":11,"-":44}},{"path":"src/test/java/seedu/loyaltylift/testutil/TypicalAddressBook.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.testutil;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalCustomers.getTypicalCustomers;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.TypicalOrders.getTypicalOrders;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.AddressBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":" * A utility class contains the @{code AddressBook} to be used in tests.","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"public class TypicalAddressBook {","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"    private TypicalAddressBook() {} // prevents instantiation","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"     * Returns an {@code AddressBook} with all the typical customers.","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"        for (Customer customer : getTypicalCustomers()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"            ab.addCustomer(customer);","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"        for (Order order : getTypicalOrders()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"            ab.addOrder(order);","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"        return ab;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Junyi00":32}},{"path":"src/test/java/seedu/loyaltylift/testutil/TypicalCustomers.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.testutil;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.Customer;","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.model.customer.CustomerType;","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":" * A utility class containing a list of {@code Customer} objects to be used in tests.","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"public class TypicalCustomers {","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"    public static final Customer ALICE \u003d new CustomerBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"CloudHill"},"content":"            .withEmail(\"alice@example.com\").withPhone(\"94351253\")","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"    public static final Customer BENSON \u003d new CustomerBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":"            .withTags(\"owesMoney\", \"friends\").withPoints(0, 0).withMarked(true).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"    public static final Customer CARL \u003d new CustomerBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"    public static final Customer DANIEL \u003d new CustomerBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"    public static final Customer ELLE \u003d new CustomerBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"    public static final Customer FIONA \u003d new CustomerBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"    public static final Customer GEORGE \u003d new CustomerBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"    public static final Customer HOON \u003d new CustomerBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"    public static final Customer IDA \u003d new CustomerBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"    // Manually added - Customer\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"    public static final Customer AMY \u003d new CustomerBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"    public static final Customer BOB \u003d new CustomerBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"    // Manually added - Enterprises","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"    public static final Customer CHOCOLATE_FACTORY \u003d new CustomerBuilder().withName(\"The Chocolate Factory\")","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"Junyi00"},"content":"            .withPhone(\"69920123\").withEmail(\"chocofactory@enterprise.com\").withAddress(\"30 Chocolate Street, #01-02\")","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"            .withCustomerType(CustomerType.ENTERPRISE).build();","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":63,"author":{"gitId":"Junyi00"},"content":"    public static final Customer SLY_FOX \u003d new CustomerBuilder().withName(\"The Sly Fox\")","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":"            .withPhone(\"60012421\").withEmail(\"slyfox@enterprise.com\").withAddress(\"30 Wolf Street, #01-33\")","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"Junyi00"},"content":"            .withCustomerType(CustomerType.ENTERPRISE).build();","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":69,"author":{"gitId":"Junyi00"},"content":"    public static List\u003cCustomer\u003e getTypicalCustomers() {","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Junyi00"},"content":"        return new ArrayList\u003c\u003e(","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"Junyi00"},"content":"                Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE, CHOCOLATE_FACTORY, SLY_FOX));","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Junyi00":37,"CloudHill":2,"JavonTeo":1,"-":33}},{"path":"src/test/java/seedu/loyaltylift/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.testutil;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.commons.core.index.Index;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"    public static final Index INDEX_FIRST \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"    public static final Index INDEX_SECOND \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"CloudHill"},"content":"    public static final Index INDEX_THIRD \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"Junyi00":2,"CloudHill":3,"-":7}},{"path":"src/test/java/seedu/loyaltylift/testutil/TypicalOrders.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CloudHill"},"content":"package seedu.loyaltylift.testutil;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_ADDRESS_A;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_ADDRESS_B;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_CREATED_DATE_A;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_CREATED_DATE_B;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_NAME_A;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_NAME_B;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_QUANTITY_A;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"CloudHill"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_QUANTITY_B;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_STATUS_A_PAID_DATE;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_STATUS_A_PENDING_DATE;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.logic.commands.CommandTestUtil.VALID_STATUS_B_PENDING_DATE;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"CloudHill"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"CloudHill"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"CloudHill"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"CloudHill"},"content":"import seedu.loyaltylift.model.order.Order;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"CloudHill"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":" * A utility class containing a list of {@code Order} objects to be used in","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":" * tests.","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"CloudHill"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"CloudHill"},"content":"public class TypicalOrders {","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"CloudHill"},"content":"    // Manually added - Order\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"CloudHill"},"content":"    public static final Order ORDER_A \u003d new OrderBuilder().withName(VALID_NAME_A).withQuantity(VALID_QUANTITY_A)","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"            .withInitialStatus(VALID_STATUS_A_PENDING_DATE).withNextStatus(VALID_STATUS_A_PAID_DATE)","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"            .withAddress(VALID_ADDRESS_A).withCreatedDate(VALID_CREATED_DATE_A).build();","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"CloudHill"},"content":"    public static final Order ORDER_B \u003d new OrderBuilder().withName(VALID_NAME_B).withQuantity(VALID_QUANTITY_B)","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"            .withInitialStatus(VALID_STATUS_B_PENDING_DATE).withAddress(VALID_ADDRESS_B)","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"            .withCreatedDate(VALID_CREATED_DATE_B).build();","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"CloudHill"},"content":"    // Manually added","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"CloudHill"},"content":"    public static final Order ORDER_C \u003d new OrderBuilder().withName(\"Melon Cookie\")","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"            .withAddress(\"9 Bishan Rd, Singapore 310909\").withInitialStatus(\"2022/12/09\")","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"            .withNextStatus(\"2023/02/02\").withNextStatus(\"2023/02/15\")","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"CloudHill"},"content":"            .withQuantity(\"50\").withCreatedDate(\"2022/12/20\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"CloudHill"},"content":"    public static final Order ORDER_D \u003d new OrderBuilder().withName(\"Strawberry Shortcake\")","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"CloudHill"},"content":"            .withAddress(\"9 Bishan Rd, Singapore 310909\")","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"            .withInitialStatus(\"2022/10/11\").withQuantity(\"3\")","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"CloudHill"},"content":"            .withCreatedDate(\"2022/12/12\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"CloudHill"},"content":"    public static final String KEYWORD_MATCHING_SHORTCAKE \u003d \"Shortcake\"; // A keyword that matches Shortcake","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"    private TypicalOrders() {","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"    } // prevents instantiation","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"CloudHill"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"CloudHill"},"content":"    public static List\u003cOrder\u003e getTypicalOrders() {","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"CloudHill"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ORDER_A, ORDER_B, ORDER_C, ORDER_D));","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"CloudHill"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"CloudHill"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Junyi00":14,"CloudHill":38}},{"path":"src/test/java/seedu/loyaltylift/ui/BadgeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.ui;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"public class BadgeTest {","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"    public void createCustomerTypeBadge_nullCustomerType_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"        assertThrows(NullPointerException.class, () -\u003e Badge.createCustomerTypeBadge(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"    public void createOrderStatusBadge_nullStatus_throwsNullPointerException() {","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"        assertThrows(NullPointerException.class, () -\u003e Badge.createOrderStatusBadge(null));","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"    public void colorToHex() {","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"        assertEquals(Badge.colorToHex(Color.WHITE), \"#ffffff\");","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"        assertEquals(Badge.colorToHex(Color.valueOf(\"#1a1a1a\")), \"#1a1a1a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"Junyi00":27}},{"path":"src/test/java/seedu/loyaltylift/ui/BookmarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package seedu.loyaltylift.ui;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"public class BookmarkTest {","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"    public void createBookmark_nullMarked_throwsNullPointerException() {","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"        assertThrows(NullPointerException.class, () -\u003e Bookmark.createBookmarkIcon(null));","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"JavonTeo":13}},{"path":"src/test/java/seedu/loyaltylift/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"Junyi00":1,"-":34}},{"path":"src/test/java/seedu/loyaltylift/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"package seedu.loyaltylift.ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import static seedu.loyaltylift.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"import seedu.loyaltylift.MainApp;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"Junyi00":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"\u003c?import seedu.loyaltylift.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"Junyi00":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"\u003cfx:root type\u003d\"seedu.loyaltylift.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Junyi00":1,"-":5}}]
