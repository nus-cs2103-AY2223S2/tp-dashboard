[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"[![Java CI](https://github.com/AY2223S2-CS2103T-W13-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S2-CS2103T-W13-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-W13-2/tp/branch/master/graph/badge.svg?token\u003dG042ARZGB0)](https://codecov.io/gh/AY2223S2-CS2103T-W13-2/tp)","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"* This is **a project by CS2103T Group W13-2**.\u003cbr\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"  Example usage:","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"Tempura-Person"},"content":"  * for student coaches to manage training sessions with student athletes","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"Tempura-Person"},"content":"* The project simulates an ongoing software project for a desktop application (called _SportSync_) used for student coaches to manage training sessions with student athletes.","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base.","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"Tempura-Person":8,"-":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"Tempura-Person"},"content":"run {","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"Tempura-Person"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"Tempura-Person"},"content":"}","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"Tempura-Person"},"content":"    archiveFileName \u003d \u0027sportsync.jar\u0027","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"tricixg":1,"Tempura-Person":4,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"## Project team","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"### Leon Lim","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"\u003cimg src\u003d\"images/tempura-person.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"[[github](http://github.com/tempura-person)]","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"[[portfolio](team/tempura-person.md)]","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Tempura-Person"},"content":"* Role: Developer","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Tempura-Person"},"content":"* Responsibilities: Developing","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"### Oliver Loo","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"\u003cimg src\u003d\"images/oliverloo0909.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Tempura-Person"},"content":"[[github](http://github.com/oliverloo0909)] [[portfolio](team/oliverloo0909.md)]","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Tempura-Person"},"content":"* Responsibilities: Developing","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"### Jeng Yee","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"\u003cimg src\u003d\"images/jengoc415.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"[[github](http://github.com/jengoc415)]","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"[[portfolio](team/jengoc415.md)]","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Tempura-Person"},"content":"* Responsibilities: Developing","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"### Tricia Goh","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"\u003cimg src\u003d\"images/tricixg.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"[[github](http://github.com/tricixg)]","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"[[portfolio](team/tricixg.md)]","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"Tempura-Person"},"content":"* Responsibilities: Developing","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"tricixg":15,"Tempura-Person":6,"-":28}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.","lastModifiedDate":"2023-01-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info about the coverage of your tests.","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"However, because Codecov is known to run into intermittent problems (e.g., report upload fails) due to issues on the Codecov service side, the CI is configured to pass even if the Codecov task failed. Therefore, developers are advised to check the code coverage levels periodically and take corrective actions if the coverage level falls below desired levels.","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"To enable Codecov for forks of this project, follow the steps given in [this se-edu guide](https://se-education.org/guides/tutorials/codecov.html).","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"Tempura-Person"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/AY2223S2-CS2103T-W13-2/tp/blob/master/src/main/java/seedu/address/MainApp.java).","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"Tempura-Person":1,"-":78}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"Tempura-Person"},"content":"* Undo/redo feature implementation concept from original [_AddressBook 3 Developer Guide_](https://nus-cs2103-ay2223s2.github.io/tp/DeveloperGuide.html).","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"* Calendar feature implementation adapted from this [_JavaFX guide_](http://www.java2s.com/ref/java/javafx-gridpane-layout-calendar.html).","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"Tempura-Person"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2223S2-CS2103T-W13-2/tp/tree/master/docs/diagrams) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Tempura-Person"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S2-CS2103T-W13-2/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2223S2-CS2103T-W13-2/tp/blob/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"Oliverloo0909"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the Coach issues the command `delete 1`.","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"Tempura-Person"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.)","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"Tempura-Person"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S2-CS2103T-W13-2/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"Tempura-Person"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `personListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"Tempura-Person"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2223S2-CS2103T-W13-2/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S2-CS2103T-W13-2/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"Oliverloo0909"},"content":"* executes Coach commands using the `Logic` component.","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"Tempura-Person"},"content":"* depends on some classes in the `Model` component, as it displays `athlete` object residing in the `Model`.","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"Tempura-Person"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S2-CS2103T-W13-2/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"Oliverloo0909"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the Coach command.","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"Tempura-Person"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add an athlete).","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"Tempura-Person"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned from `Logic`.","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"Tempura-Person"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the \u0027destroy\u0027 marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"Tempura-Person"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a coach command:","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"Oliverloo0909"},"content":"* When called upon to parse a Coach command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the Coach command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"Tempura-Person"},"content":"**API** : [`Model.java`](https://github.com/AY2223S2-CS2103T-W13-2/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-03-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"Tempura-Person"},"content":"* stores the AddressBook data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"Tempura-Person"},"content":"* stores a `UserPref` object that represents the Coach’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2023-03-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"Tempura-Person"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S2-CS2103T-W13-2/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-03-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"Tempura-Person"},"content":"* can save both AddressBook data and Coach preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2023-03-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-03-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"Oliverloo0909"},"content":"Classes used by multiple components are in the `seedu.AddressBook.commons` package.","lastModifiedDate":"2023-03-01"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"jengoc415"},"content":"### Sort feature","lastModifiedDate":"2023-03-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":160,"author":{"gitId":"Tempura-Person"},"content":"#### Implementation","lastModifiedDate":"2023-03-27"},{"lineNumber":161,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":162,"author":{"gitId":"jengoc415"},"content":"The proposed sort mechanism is facilitated by `UniquePersonList`.","lastModifiedDate":"2023-03-24"},{"lineNumber":163,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":164,"author":{"gitId":"Tempura-Person"},"content":"Step 1. The Coach launches the application for the first time. The AddressBook is initialised.","lastModifiedDate":"2023-03-27"},{"lineNumber":165,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":166,"author":{"gitId":"Tempura-Person"},"content":"Step 2. The Coach keys in some athletes and their details with the `add` method.","lastModifiedDate":"2023-03-27"},{"lineNumber":167,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":168,"author":{"gitId":"Tempura-Person"},"content":"Step 3. After adding his athletes, the Coach wants to view his athletes in alphabetical order, so he wants to sort them by name in ascending order.","lastModifiedDate":"2023-03-27"},{"lineNumber":169,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":170,"author":{"gitId":"Tempura-Person"},"content":"Step 4. The Coach then decides to execute the command `sort 1`.","lastModifiedDate":"2023-04-02"},{"lineNumber":171,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":172,"author":{"gitId":"jengoc415"},"content":"#### Design considerations:","lastModifiedDate":"2023-03-24"},{"lineNumber":173,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":174,"author":{"gitId":"Tempura-Person"},"content":"Restricting attribute and order to an integer value allows for the input to be easily anticipated and controlled.","lastModifiedDate":"2023-03-27"},{"lineNumber":175,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":176,"author":{"gitId":"Tempura-Person"},"content":"* **Alternative 1 (current choice):** Allow coaches to specify how to sort their list.","lastModifiedDate":"2023-04-02"},{"lineNumber":177,"author":{"gitId":"Tempura-Person"},"content":"    * Pros: More flexible and customisable to the needs of the coach.","lastModifiedDate":"2023-03-27"},{"lineNumber":178,"author":{"gitId":"Tempura-Person"},"content":"    * Cons: More troublesome as coach needs to check the User Guide to learn what integers to use.","lastModifiedDate":"2023-03-27"},{"lineNumber":179,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":180,"author":{"gitId":"Tempura-Person"},"content":"### Undo/redo feature","lastModifiedDate":"2023-03-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"Tempura-Person"},"content":"#### Implementation","lastModifiedDate":"2023-03-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2023-03-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"Tempura-Person"},"content":"* `VersionedAddressBook#commit()` — Saves the current AddressBook state in its history.","lastModifiedDate":"2023-03-27"},{"lineNumber":187,"author":{"gitId":"Tempura-Person"},"content":"* `VersionedAddressBook#undo()` — Restores the previous AddressBook state from its history.","lastModifiedDate":"2023-03-27"},{"lineNumber":188,"author":{"gitId":"Tempura-Person"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone AddressBook state from its history.","lastModifiedDate":"2023-03-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2023-03-01"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"Tempura-Person"},"content":"Step 1. The Coach launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial AddressBook state, and the `currentStatePointer` pointing to that single AddressBook state.","lastModifiedDate":"2023-03-27"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"Tempura-Person"},"content":"Step 2. The Coach executes `delete 5` command to delete the 5th athlete in the AddressBook. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the AddressBook after the `delete 5` command executes to be saved in the `AddressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted AddressBook state.","lastModifiedDate":"2023-03-27"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"Tempura-Person"},"content":"Step 3. The Coach executes `add n/David …​` to add a new athlete. The `add` command also calls `Model#commitAddressBook()`, causing another modified AddressBook state to be saved into the `AddressBookStateList`.","lastModifiedDate":"2023-03-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"Tempura-Person"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the AddressBook state will not be saved into the `AddressBookStateList`.","lastModifiedDate":"2023-03-27"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"Tempura-Person"},"content":"Step 4. The Coach now decides that adding the athlete was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous AddressBook state, and restores the AddressBook to that state.","lastModifiedDate":"2023-03-27"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"Tempura-Person"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `VersionedAddressBook#canUndo()` to check if this is the case. If so, it will return an error to the Coach rather","lastModifiedDate":"2023-03-22"},{"lineNumber":215,"author":{"gitId":"Tempura-Person"},"content":"than attempting to perform the undo operation.","lastModifiedDate":"2023-03-27"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"Tempura-Person"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the \u0027destroy\u0027 marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-03-27"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"Tempura-Person"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the AddressBook to that state.","lastModifiedDate":"2023-03-27"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"Tempura-Person"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `AddressBookStateList.size() - 1`, pointing to the latest AddressBook state, then there are no undone AddressBook states to restore. The `redo` command uses `VersionedAddressBook#canRedo()` to check if this is the case. If so, it will return an error to the Coach rather than attempting to perform the redo.","lastModifiedDate":"2023-03-27"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"Tempura-Person"},"content":"Step 5. The Coach then decides to execute the command `list`. Commands that do not modify the AddressBook, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `AddressBookStateList` remains unchanged.","lastModifiedDate":"2023-03-27"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"Tempura-Person"},"content":"Step 6. The Coach executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `AddressBookStateList`, all AddressBook states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2023-03-27"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"Oliverloo0909"},"content":"The following activity diagram summarizes what happens when a Coach executes a new command:","lastModifiedDate":"2023-03-01"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"Tempura-Person"},"content":"* **Alternative 1 (current choice):** Saves the entire AddressBook.","lastModifiedDate":"2023-03-27"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"Tempura-Person"},"content":"  * Cons: May eventually have performance issues in terms of memory usage.","lastModifiedDate":"2023-03-27"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"Tempura-Person"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the `Person` being deleted).","lastModifiedDate":"2023-03-27"},{"lineNumber":256,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"Oliverloo0909"},"content":"**Target Coach profile**: Sports Coaches","lastModifiedDate":"2023-03-01"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"Tempura-Person"},"content":"* has a need to manage a significant number of athletes.","lastModifiedDate":"2023-03-27"},{"lineNumber":277,"author":{"gitId":"Tempura-Person"},"content":"* prefer desktop apps over other types.","lastModifiedDate":"2023-03-27"},{"lineNumber":278,"author":{"gitId":"Tempura-Person"},"content":"* can type fast.","lastModifiedDate":"2023-03-27"},{"lineNumber":279,"author":{"gitId":"Tempura-Person"},"content":"* prefers typing rather than mouse interaction.","lastModifiedDate":"2023-03-27"},{"lineNumber":280,"author":{"gitId":"Tempura-Person"},"content":"* is reasonably comfortable using CLI (Command Line Interface) apps.","lastModifiedDate":"2023-03-27"},{"lineNumber":281,"author":{"gitId":"Tempura-Person"},"content":"* requires to organise their coaching schedule on a frequent basis.","lastModifiedDate":"2023-03-27"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"Oliverloo0909"},"content":"**Value proposition**:","lastModifiedDate":"2023-03-01"},{"lineNumber":284,"author":{"gitId":"Tempura-Person"},"content":"* manage contacts faster than a typical mouse/GUI-driven app.","lastModifiedDate":"2023-03-27"},{"lineNumber":285,"author":{"gitId":"Tempura-Person"},"content":"* features are geared towards managing athletes.","lastModifiedDate":"2023-03-27"},{"lineNumber":286,"author":{"gitId":"Tempura-Person"},"content":"* makes scheduling of training sessions more convenient than a regular calendar app.","lastModifiedDate":"2023-03-27"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"Oliverloo0909"},"content":"### Coach stories","lastModifiedDate":"2023-03-01"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"Tempura-Person"},"content":"Priorities:\u003cbr\u003eHigh (must have) - `* * *`\u003cbr\u003eMedium (nice to have) - `* *`\u003cbr\u003eLow (unlikely to have) - `*`","lastModifiedDate":"2023-04-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"| Priority | As a …​                           | I want to …​                              | So that I can…​                                                           |","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"Tempura-Person"},"content":"|----------|-----------------------------------|-------------------------------------------|---------------------------------------------------------------------------|","lastModifiedDate":"2023-03-27"},{"lineNumber":295,"author":{"gitId":"Tempura-Person"},"content":"| `* * *`  | new coach                         | see usage instructions                    | refer to instructions when I forget how to use the app                    |","lastModifiedDate":"2023-03-27"},{"lineNumber":296,"author":{"gitId":"Tempura-Person"},"content":"| `* * *`  | coach                             | add a new athlete                         | record their profile                                                      |","lastModifiedDate":"2023-03-27"},{"lineNumber":297,"author":{"gitId":"Tempura-Person"},"content":"| `* * *`  | coach                             | delete an athlete                         | remove athletes that I no longer train                                    |","lastModifiedDate":"2023-03-27"},{"lineNumber":298,"author":{"gitId":"Tempura-Person"},"content":"| `* * *`  | coach                             | edit an athlete\u0027s details                 | refer to accurate information regarding that athlete                      |","lastModifiedDate":"2023-03-27"},{"lineNumber":299,"author":{"gitId":"Tempura-Person"},"content":"| `* *`    | coach                             | find an athlete by name                   | locate details of an athlete without having to go through the entire list |","lastModifiedDate":"2023-03-27"},{"lineNumber":300,"author":{"gitId":"Tempura-Person"},"content":"| `* *`    | coach                             | hide an athlete\u0027s private contact details | minimize chance of someone else seeing them by accident                   |","lastModifiedDate":"2023-03-27"},{"lineNumber":301,"author":{"gitId":"Tempura-Person"},"content":"| `* *`    | coach                             | organise athletes by groups               | facilitate better contact management                                      |","lastModifiedDate":"2023-03-27"},{"lineNumber":302,"author":{"gitId":"Tempura-Person"},"content":"| `*`      | coach with many athletes          | sort athletes by name                     | locate an athlete easily                                                  |","lastModifiedDate":"2023-03-27"},{"lineNumber":303,"author":{"gitId":"Tempura-Person"},"content":"| `*`      | coach with many training sessions | view my upcoming schedule as a calendar   | better plan my week.                                                      |","lastModifiedDate":"2023-03-27"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"Tempura-Person"},"content":"#### Use case: Ask for help","lastModifiedDate":"2023-03-27"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":309,"author":{"gitId":"Oliverloo0909"},"content":"**MSS**","lastModifiedDate":"2023-03-01"},{"lineNumber":310,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":311,"author":{"gitId":"Tempura-Person"},"content":"1. Coach requests for help.","lastModifiedDate":"2023-03-16"},{"lineNumber":312,"author":{"gitId":"Tempura-Person"},"content":"2. SportSync displays a link to the SportSync User Guide.","lastModifiedDate":"2023-03-16"},{"lineNumber":313,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":314,"author":{"gitId":"Oliverloo0909"},"content":"    Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":315,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":316,"author":{"gitId":"Tempura-Person"},"content":"#### Use case: Add an athlete","lastModifiedDate":"2023-03-27"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"Tempura-Person"},"content":"1. Coach requests to add a new athlete in the list.","lastModifiedDate":"2023-03-27"},{"lineNumber":321,"author":{"gitId":"Tempura-Person"},"content":"2. SportSync adds the athlete.","lastModifiedDate":"2023-03-27"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"Tempura-Person"},"content":"**Extensions**","lastModifiedDate":"2023-03-16"},{"lineNumber":326,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":327,"author":{"gitId":"Tempura-Person"},"content":"* 1a. Not enough details of the athlete were given.","lastModifiedDate":"2023-03-27"},{"lineNumber":328,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":329,"author":{"gitId":"Tempura-Person"},"content":"    * 1a1. SportSync shows an error message.","lastModifiedDate":"2023-03-16"},{"lineNumber":330,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":331,"author":{"gitId":"Tempura-Person"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-03-16"},{"lineNumber":332,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":333,"author":{"gitId":"Tempura-Person"},"content":"#### Use case: Delete an athlete","lastModifiedDate":"2023-03-27"},{"lineNumber":334,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":335,"author":{"gitId":"Oliverloo0909"},"content":"**MSS**","lastModifiedDate":"2023-03-01"},{"lineNumber":336,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":337,"author":{"gitId":"Tempura-Person"},"content":"1. Coach requests to delete a specific athlete in the list.","lastModifiedDate":"2023-03-27"},{"lineNumber":338,"author":{"gitId":"Tempura-Person"},"content":"2. SportSync deletes the athlete.","lastModifiedDate":"2023-03-27"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":342,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-03-16"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":344,"author":{"gitId":"Tempura-Person"},"content":"* 1a. The given index is invalid.","lastModifiedDate":"2023-03-16"},{"lineNumber":345,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":346,"author":{"gitId":"Tempura-Person"},"content":"    * 1a1. SportSync shows an error message.","lastModifiedDate":"2023-03-16"},{"lineNumber":347,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":348,"author":{"gitId":"Tempura-Person"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-03-16"},{"lineNumber":349,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":350,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-03-16"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":352,"author":{"gitId":"Tempura-Person"},"content":"    * 2a1. SportSync shows an error message.","lastModifiedDate":"2023-03-28"},{"lineNumber":353,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":354,"author":{"gitId":"Tempura-Person"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-03-28"},{"lineNumber":355,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":356,"author":{"gitId":"Tempura-Person"},"content":"   Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":357,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":358,"author":{"gitId":"Tempura-Person"},"content":"#### Use case: Edit an athlete","lastModifiedDate":"2023-03-27"},{"lineNumber":359,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":360,"author":{"gitId":"Tempura-Person"},"content":"**MSS**","lastModifiedDate":"2023-03-16"},{"lineNumber":361,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":362,"author":{"gitId":"Tempura-Person"},"content":"1. Coach requests to edit a specific athlete\u0027s attribute in the list.","lastModifiedDate":"2023-03-27"},{"lineNumber":363,"author":{"gitId":"Tempura-Person"},"content":"2. SportSync edits the specified athlete\u0027s attribute.","lastModifiedDate":"2023-03-27"},{"lineNumber":364,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":365,"author":{"gitId":"Tempura-Person"},"content":"    Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":366,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":367,"author":{"gitId":"Tempura-Person"},"content":"**Extensions**","lastModifiedDate":"2023-03-16"},{"lineNumber":368,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":369,"author":{"gitId":"Tempura-Person"},"content":"* 1a. The given index/attribute(s) are invalid.","lastModifiedDate":"2023-03-16"},{"lineNumber":370,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":371,"author":{"gitId":"Tempura-Person"},"content":"    * 1a1. SportSync shows an error message.","lastModifiedDate":"2023-03-16"},{"lineNumber":372,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":373,"author":{"gitId":"Tempura-Person"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-03-16"},{"lineNumber":374,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":375,"author":{"gitId":"Tempura-Person"},"content":"#### Use case: Find an athlete","lastModifiedDate":"2023-03-27"},{"lineNumber":376,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":377,"author":{"gitId":"Tempura-Person"},"content":"**MSS**","lastModifiedDate":"2023-03-16"},{"lineNumber":378,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":379,"author":{"gitId":"Tempura-Person"},"content":"1. Coach requests to find a specific athlete by part of their name, in the list.","lastModifiedDate":"2023-03-27"},{"lineNumber":380,"author":{"gitId":"Tempura-Person"},"content":"2. SportSync displays the search results.","lastModifiedDate":"2023-03-16"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":382,"author":{"gitId":"Tempura-Person"},"content":"    Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":383,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":384,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"Tempura-Person"},"content":"* 1a. The given name / part of the name does not exist within the list.","lastModifiedDate":"2023-03-27"},{"lineNumber":387,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":388,"author":{"gitId":"Tempura-Person"},"content":"    * 1a1. SportSync shows an empty list.","lastModifiedDate":"2023-03-27"},{"lineNumber":389,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":390,"author":{"gitId":"Tempura-Person"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-03-16"},{"lineNumber":391,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":392,"author":{"gitId":"Tempura-Person"},"content":"#### Use case: List all athletes","lastModifiedDate":"2023-04-02"},{"lineNumber":393,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":394,"author":{"gitId":"Tempura-Person"},"content":"**MSS**","lastModifiedDate":"2023-04-02"},{"lineNumber":395,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":396,"author":{"gitId":"Tempura-Person"},"content":"1. Coach requests to list out all athletes.","lastModifiedDate":"2023-04-02"},{"lineNumber":397,"author":{"gitId":"Tempura-Person"},"content":"2. SportSync displays all athletes.","lastModifiedDate":"2023-04-02"},{"lineNumber":398,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":399,"author":{"gitId":"Tempura-Person"},"content":"    Use case ends.","lastModifiedDate":"2023-04-02"},{"lineNumber":400,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":401,"author":{"gitId":"Tempura-Person"},"content":"#### Use case: Clear the list","lastModifiedDate":"2023-03-27"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":403,"author":{"gitId":"Tempura-Person"},"content":"**MSS**","lastModifiedDate":"2023-03-16"},{"lineNumber":404,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":405,"author":{"gitId":"Tempura-Person"},"content":"1.  Coach requests to clear all athletes from the list.","lastModifiedDate":"2023-03-27"},{"lineNumber":406,"author":{"gitId":"Tempura-Person"},"content":"2.  SportSync clears all athletes from the list.","lastModifiedDate":"2023-03-27"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":408,"author":{"gitId":"Tempura-Person"},"content":"    Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":410,"author":{"gitId":"Tempura-Person"},"content":"#### Use case: Sort the list by name in alphabetical order","lastModifiedDate":"2023-03-27"},{"lineNumber":411,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":412,"author":{"gitId":"Tempura-Person"},"content":"**MSS**","lastModifiedDate":"2023-03-16"},{"lineNumber":413,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":414,"author":{"gitId":"Tempura-Person"},"content":"1. Coach requests to sort all athletes in the list by name in alphabetical order.","lastModifiedDate":"2023-03-27"},{"lineNumber":415,"author":{"gitId":"Tempura-Person"},"content":"2. SportSync sorts all athletes in the list by name in alphabetical order.","lastModifiedDate":"2023-03-27"},{"lineNumber":416,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":417,"author":{"gitId":"Tempura-Person"},"content":"    Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":418,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":419,"author":{"gitId":"Tempura-Person"},"content":"#### Use case: Sort the list by pay rate in increasing order","lastModifiedDate":"2023-04-02"},{"lineNumber":420,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":421,"author":{"gitId":"Tempura-Person"},"content":"**MSS**","lastModifiedDate":"2023-03-27"},{"lineNumber":422,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":423,"author":{"gitId":"Tempura-Person"},"content":"1.  Coach requests to sort all athletes in the list by pay rate in increasing order.","lastModifiedDate":"2023-04-02"},{"lineNumber":424,"author":{"gitId":"Tempura-Person"},"content":"2.  SportSync sorts all athletes in the list by pay rate in increasing order.","lastModifiedDate":"2023-04-02"},{"lineNumber":425,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":426,"author":{"gitId":"Tempura-Person"},"content":"    Use case ends.","lastModifiedDate":"2023-03-27"},{"lineNumber":427,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":428,"author":{"gitId":"Tempura-Person"},"content":"#### Use case: Display all athletes belonging to tag(s)","lastModifiedDate":"2023-04-02"},{"lineNumber":429,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":430,"author":{"gitId":"Tempura-Person"},"content":"**MSS**","lastModifiedDate":"2023-03-22"},{"lineNumber":431,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":432,"author":{"gitId":"Tempura-Person"},"content":"1. Coach requests to display all athletes belonging to specified tag(s) by name.","lastModifiedDate":"2023-04-02"},{"lineNumber":433,"author":{"gitId":"Tempura-Person"},"content":"2. SportSync displays all athletes by name, belonging to one or more of the specified tag(s).","lastModifiedDate":"2023-04-02"},{"lineNumber":434,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":435,"author":{"gitId":"Tempura-Person"},"content":"   Use case ends.","lastModifiedDate":"2023-03-22"},{"lineNumber":436,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":437,"author":{"gitId":"Tempura-Person"},"content":"#### Use case: Undo a command","lastModifiedDate":"2023-03-27"},{"lineNumber":438,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":439,"author":{"gitId":"tricixg"},"content":"**MSS**","lastModifiedDate":"2023-03-23"},{"lineNumber":440,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":441,"author":{"gitId":"Tempura-Person"},"content":"1. Coach requests to undo a mistakenly entered command.","lastModifiedDate":"2023-03-27"},{"lineNumber":442,"author":{"gitId":"Tempura-Person"},"content":"2. SportSync undoes the mistakenly entered command.","lastModifiedDate":"2023-03-27"},{"lineNumber":443,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":444,"author":{"gitId":"tricixg"},"content":"   Use case ends.","lastModifiedDate":"2023-03-23"},{"lineNumber":445,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":446,"author":{"gitId":"Tempura-Person"},"content":"#### Use case: Redo a command","lastModifiedDate":"2023-03-27"},{"lineNumber":447,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":448,"author":{"gitId":"Tempura-Person"},"content":"**MSS**","lastModifiedDate":"2023-03-27"},{"lineNumber":449,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":450,"author":{"gitId":"Tempura-Person"},"content":"1. Coach requests to redo a mistakenly undone command.","lastModifiedDate":"2023-03-27"},{"lineNumber":451,"author":{"gitId":"Tempura-Person"},"content":"2. SportSync redoes the mistakenly undone command.","lastModifiedDate":"2023-03-27"},{"lineNumber":452,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":453,"author":{"gitId":"Tempura-Person"},"content":"   Use case ends.","lastModifiedDate":"2023-03-27"},{"lineNumber":454,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":455,"author":{"gitId":"Tempura-Person"},"content":"#### Use case: View calendar events","lastModifiedDate":"2023-03-27"},{"lineNumber":456,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":457,"author":{"gitId":"Tempura-Person"},"content":"**MSS**","lastModifiedDate":"2023-03-27"},{"lineNumber":458,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":459,"author":{"gitId":"Tempura-Person"},"content":"1. Coach requests to view the calendar events.","lastModifiedDate":"2023-03-27"},{"lineNumber":460,"author":{"gitId":"Tempura-Person"},"content":"2. SportSync displays the calendar events on the interface.","lastModifiedDate":"2023-03-27"},{"lineNumber":461,"author":{"gitId":"Tempura-Person"},"content":"3. Coach interacts with the calendar events as required. ","lastModifiedDate":"2023-03-27"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"Tempura-Person"},"content":"    Use case ends.","lastModifiedDate":"2023-03-27"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"Tempura-Person"},"content":"2.  Should be able to hold up to 1000 athletes without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-03-27"},{"lineNumber":469,"author":{"gitId":"Oliverloo0909"},"content":"3.  A Coach with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-03-01"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"Tempura-Person"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X.","lastModifiedDate":"2023-03-27"},{"lineNumber":474,"author":{"gitId":"Tempura-Person"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others.","lastModifiedDate":"2023-03-27"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"Tempura-Person"},"content":"### Deleting an athlete","lastModifiedDate":"2023-03-27"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"Tempura-Person"},"content":"1. Deleting an athlete while all athletes are being shown","lastModifiedDate":"2023-03-27"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"Tempura-Person"},"content":"   1. Prerequisites: List all athletes using the `list` command. Multiple athletes in the list.","lastModifiedDate":"2023-03-27"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"Tempura-Person"},"content":"      Expected: No athlete is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-03-27"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":529,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"tricixg":6,"jengoc415":23,"Tempura-Person":188,"Oliverloo0909":18,"-":294}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   1. Run the `seedu.address.Main` and try a few commands.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"Tempura-Person"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [SportSync’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"Tempura-Person":1,"-":54}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Tempura-Person"},"content":"SportSync is a **desktop app for managing training sessions and athletes, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, SportSync can get your training management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Tempura-Person"},"content":"## **Quick start**","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"### Prerequisites","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"Ensure that you have Java 11 or above installed on your computer. If you don\u0027t have Java installed, you can download it from the official Java website [here](https://www.oracle.com/java/technologies/downloads/).","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"1. Download the latest `sportsync.jar` from [here](https://github.com/AY2223S2-CS2103T-W13-2/tp/releases).","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"2. Copy the file to the folder you want to use as the _home folder_ for your SportSync.","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"3. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar sportsync.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"Tempura-Person"},"content":"   e.g. `cd Desktop\\New_Folder` and then `java -jar sportsync.jar`\u003cbr\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":24,"author":{"gitId":"Tempura-Person"},"content":"   A GUI similar to the below should appear in a few seconds. This shows the session list, which is currently empty.\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":25,"author":{"gitId":"Tempura-Person"},"content":"   Below that is the income analytics, which tabulates how much you\u0027ve earned through your sessions.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":26,"author":{"gitId":"Tempura-Person"},"content":"   ![EmptySessionUi](images/EmptySessionUi.png)\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":27,"author":{"gitId":"Tempura-Person"},"content":"   Click the `Contacts` tab, or press the shortcut `CTRL + 2`. You have just navigated to the contact list.\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":28,"author":{"gitId":"Tempura-Person"},"content":"   Note how the app contains some sample data.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"4. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Tempura-Person"},"content":"    * `list` : Lists all athletes.","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Tempura-Person"},"content":"    * `add n/John Doe p/98765432 a/311, Clementi Ave 2, r/35 t/friends t/owesMoney` : Adds athlete `John Doe` to SportSync.","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"Tempura-Person"},"content":"    * `delete 3` : Deletes the 3rd athlete shown in the current list.","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Tempura-Person"},"content":"    * `clear` : Deletes all athletes.","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Tempura-Person"},"content":"Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"Tempura-Person"},"content":"5. Click the `Calendar` tab, or press the shortcut `CTRL + 3`. You have just navigated to the calendar, which is currently empty.\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":47,"author":{"gitId":"Tempura-Person"},"content":"   All future scheduled sessions will automatically show up on the calendar.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":48,"author":{"gitId":"Tempura-Person"},"content":"   ![Ui](images/EmptyCalendarUi.png)\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":49,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":50,"author":{"gitId":"Tempura-Person"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-04-02"},{"lineNumber":51,"author":{"gitId":"Tempura-Person"},"content":"Here are some useful shortcuts that can help you save time:\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":52,"author":{"gitId":"Tempura-Person"},"content":"**F1**: Opens the help menu.","lastModifiedDate":"2023-04-02"},{"lineNumber":53,"author":{"gitId":"Tempura-Person"},"content":"**CTRL + 1**: Switches to the `Sessions` tab.","lastModifiedDate":"2023-04-02"},{"lineNumber":54,"author":{"gitId":"Tempura-Person"},"content":"**CTRL + 2**: Switches to the `Contacts` tab.","lastModifiedDate":"2023-04-02"},{"lineNumber":55,"author":{"gitId":"Tempura-Person"},"content":"**CTRL + 3**: Switches to the `Calendar` tab.","lastModifiedDate":"2023-04-02"},{"lineNumber":56,"author":{"gitId":"Tempura-Person"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"Tempura-Person"},"content":"## **Features**","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"tricixg"},"content":"* Parameters are used to specify information that is required for the command to be executed correctly.","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"Tempura-Person"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the coach. \u003cbr\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"Tempura-Person"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe…​`.","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"Tempura-Person"},"content":"  e.g. `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"Tempura-Person"},"content":"* If a parameter is expected only once in the command but is specified multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"tricixg"},"content":"## General","lastModifiedDate":"2023-04-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"Tempura-Person"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"Tempura-Person"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"Tempura-Person"},"content":"The help menu can also be accessed by pressing the F1 key.","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"Tempura-Person"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"Tempura-Person"},"content":"### Undoing a previous command : `undo`","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":102,"author":{"gitId":"Tempura-Person"},"content":"Undoes a previously entered command.","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"Tempura-Person"},"content":"Format: `undo`","lastModifiedDate":"2023-03-22"},{"lineNumber":105,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":106,"author":{"gitId":"Tempura-Person"},"content":"* Returns the state of the athlete list to the state before the last entered command.","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"Tempura-Person"},"content":"* Cannot be used if no commands have been entered yet.","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"Tempura-Person"},"content":"### Redoing a previous command : `redo`","lastModifiedDate":"2023-03-22"},{"lineNumber":110,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":111,"author":{"gitId":"Tempura-Person"},"content":"Redoes a previously entered command.","lastModifiedDate":"2023-03-22"},{"lineNumber":112,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"Tempura-Person"},"content":"Format: `redo`","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"Tempura-Person"},"content":"* Returns the state of the athlete list to the state before undoing the last entered command.","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"Tempura-Person"},"content":"* Cannot be used if no commands have been entered yet.","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"Tempura-Person"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-03-27"},{"lineNumber":119,"author":{"gitId":"Tempura-Person"},"content":"If the athlete list is changed after an undo command, a redo cannot be done.","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"Tempura-Person"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"tricixg"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2023-04-03"},{"lineNumber":123,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":124,"author":{"gitId":"tricixg"},"content":"Exits the program.","lastModifiedDate":"2023-04-03"},{"lineNumber":125,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":126,"author":{"gitId":"tricixg"},"content":"Format: `exit`","lastModifiedDate":"2023-04-03"},{"lineNumber":127,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":128,"author":{"gitId":"tricixg"},"content":"### Saving the data","lastModifiedDate":"2023-04-03"},{"lineNumber":129,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":130,"author":{"gitId":"tricixg"},"content":"SportSync data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-04-03"},{"lineNumber":131,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":132,"author":{"gitId":"tricixg"},"content":"### Editing the data file","lastModifiedDate":"2023-04-03"},{"lineNumber":133,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":134,"author":{"gitId":"tricixg"},"content":"SportSync data is saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced coaches are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-04-03"},{"lineNumber":135,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":136,"author":{"gitId":"tricixg"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-04-03"},{"lineNumber":137,"author":{"gitId":"tricixg"},"content":"If your changes to the data file makes its format invalid, SportSync will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-04-03"},{"lineNumber":138,"author":{"gitId":"tricixg"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":140,"author":{"gitId":"tricixg"},"content":"## Athelete Management","lastModifiedDate":"2023-04-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":142,"author":{"gitId":"Tempura-Person"},"content":"### Adding an athlete: `add`","lastModifiedDate":"2023-03-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"Tempura-Person"},"content":"Adds an athlete to SportSync.","lastModifiedDate":"2023-03-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"Tempura-Person"},"content":"Format: `add n/NAME p/PHONE_NUMBER a/ADDRESS r/PAY_RATE [t/TAG]…​`","lastModifiedDate":"2023-03-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"Tempura-Person"},"content":"An athlete can have any number of tags (including 0)","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"tricixg"},"content":"\u003cbr\u003e`add n/John Doe p/98765432 r/44 a/UTown Residences, #01-01`","lastModifiedDate":"2023-04-03"},{"lineNumber":154,"author":{"gitId":"tricixg"},"content":"\u003cbr\u003e Adds an athlete with name \"John Doe\", phone number \"98765432\", Payrate \"44\" and address \"UTown Residences, #01-01\".","lastModifiedDate":"2023-04-03"},{"lineNumber":155,"author":{"gitId":"tricixg"},"content":"\u003cbr\u003e`add n/Betsy Crowe t/friend a/Sheares Hall p/1234567 t/basketball r/5`","lastModifiedDate":"2023-04-03"},{"lineNumber":156,"author":{"gitId":"tricixg"},"content":"\u003cbr\u003e Adds an athlete with name \"Betsy Crowe\", phone number \"1234567\", Payrate \"5\", address \"Sheares Hall\" and tags \"friend\", \"basketball\".","lastModifiedDate":"2023-04-03"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"Tempura-Person"},"content":"### Listing all athletes : `list`","lastModifiedDate":"2023-03-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"Tempura-Person"},"content":"Shows a list of all athletes.","lastModifiedDate":"2023-03-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"Tempura-Person"},"content":"### Editing an athlete : `edit`","lastModifiedDate":"2023-03-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"Tempura-Person"},"content":"Edits an existing athlete in the athlete list.","lastModifiedDate":"2023-03-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"Tempura-Person"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [r/PAY_RATE] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2023-03-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"tricixg"},"content":"* The index refers to the index number shown in the displayed athlete list.","lastModifiedDate":"2023-04-03"},{"lineNumber":171,"author":{"gitId":"tricixg"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-04-03"},{"lineNumber":172,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"Tempura-Person"},"content":"* When editing tags, the existing tags of the athlete will be removed. \u003cbr\u003e(i.e. adding of tags is not cumulative)","lastModifiedDate":"2023-03-28"},{"lineNumber":175,"author":{"gitId":"Tempura-Person"},"content":"* You can remove all the athlete’s tags by typing `t/` without","lastModifiedDate":"2023-03-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"tricixg"},"content":"\u003cbr\u003e`edit 1 p/91234567 r/3` \u003cbr\u003eEdits the phone number and pay rate of the 1st athlete to be `91234567` and `3` respectively.","lastModifiedDate":"2023-04-03"},{"lineNumber":180,"author":{"gitId":"tricixg"},"content":"\u003cbr\u003e`edit 2 n/Betsy Crower t/` \u003cbr\u003e Edits the name of the 2nd athlete to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2023-04-03"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"Tempura-Person"},"content":"### Locating athletes by name: `find`","lastModifiedDate":"2023-03-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"Tempura-Person"},"content":"Finds athletes whose names contain any of the given keywords.","lastModifiedDate":"2023-03-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"Tempura-Person"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`","lastModifiedDate":"2023-03-27"},{"lineNumber":189,"author":{"gitId":"Tempura-Person"},"content":"* Full and partial words will be matched e.g. `Han` and `Hans` will both match `Hans`","lastModifiedDate":"2023-03-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"Tempura-Person"},"content":"* Athletes matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-03-27"},{"lineNumber":193,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"tricixg"},"content":"\u003cbr\u003e`find John` \u003cbr\u003e Returns \"john\" and \"John Doe\"","lastModifiedDate":"2023-04-03"},{"lineNumber":197,"author":{"gitId":"tricixg"},"content":"\u003cbr\u003e`find carl alice` \u003cbr\u003eReturns \"Alice Pauline\", \"Carl Kurz\"\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":198,"author":{"gitId":"Tempura-Person"},"content":"![result for \u0027find alex david\u0027](images/findCarlAliceResult.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"Tempura-Person"},"content":"### Deleting an athlete : `delete`","lastModifiedDate":"2023-03-27"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"Tempura-Person"},"content":"Deletes the specified athlete from the athlete list.","lastModifiedDate":"2023-03-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"Tempura-Person"},"content":"* The index refers to the index number shown in the displayed athlete list.","lastModifiedDate":"2023-03-27"},{"lineNumber":207,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"tricixg"},"content":"\u003cbr\u003e`list` followed by `delete 2` \u003cbr\u003eDeletes the 2nd athlete in the athlete list.","lastModifiedDate":"2023-04-03"},{"lineNumber":211,"author":{"gitId":"tricixg"},"content":"\u003cbr\u003e`find Betsy` followed by `delete 1` \u003cbr\u003e Deletes the 1st athlete in the results of the `find` command.","lastModifiedDate":"2023-04-03"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"Tempura-Person"},"content":"### Clearing all athletes : `clear`","lastModifiedDate":"2023-03-27"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"Tempura-Person"},"content":"Clears all athletes from the athlete list.","lastModifiedDate":"2023-03-27"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"Tempura-Person"},"content":"### Sorting the athlete list : `sort`","lastModifiedDate":"2023-03-27"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":222,"author":{"gitId":"Tempura-Person"},"content":"Sorts all athletes in the athlete list according to provided attribute.","lastModifiedDate":"2023-03-27"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":224,"author":{"gitId":"Tempura-Person"},"content":"Format: `sort ATTRIBUTE`","lastModifiedDate":"2023-04-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":226,"author":{"gitId":"Tempura-Person"},"content":"* Sorts the athlete according to specified attribute `ATTRIBUTE`.","lastModifiedDate":"2023-04-02"},{"lineNumber":227,"author":{"gitId":"jengoc415"},"content":"* Attributes:","lastModifiedDate":"2023-03-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":229,"author":{"gitId":"jengoc415"},"content":"  * 1 - Name","lastModifiedDate":"2023-03-24"},{"lineNumber":230,"author":{"gitId":"Tempura-Person"},"content":"  * 2 - Pay rate","lastModifiedDate":"2023-03-27"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":232,"author":{"gitId":"jengoc415"},"content":"Examples:","lastModifiedDate":"2023-03-24"},{"lineNumber":233,"author":{"gitId":"Tempura-Person"},"content":"* `sort 1` sorts the athlete list by name in alphabetical order.","lastModifiedDate":"2023-04-02"},{"lineNumber":234,"author":{"gitId":"Tempura-Person"},"content":"* `sort 2` sorts the athlete list according to pay rate, from cheapest to most expensive.","lastModifiedDate":"2023-04-02"},{"lineNumber":235,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":236,"author":{"gitId":"tricixg"},"content":"## Tag Management","lastModifiedDate":"2023-04-03"},{"lineNumber":237,"author":{"gitId":"Oliverloo0909"},"content":"### Adding a tag : `add-tag`","lastModifiedDate":"2023-03-29"},{"lineNumber":238,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":239,"author":{"gitId":"Oliverloo0909"},"content":"Adds a specified tag to a specified athlete.","lastModifiedDate":"2023-03-29"},{"lineNumber":240,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":241,"author":{"gitId":"Oliverloo0909"},"content":"Format: `add-tag INDEX t/TAGNAME`","lastModifiedDate":"2023-03-29"},{"lineNumber":242,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":243,"author":{"gitId":"Tempura-Person"},"content":"Examples:","lastModifiedDate":"2023-03-16"},{"lineNumber":244,"author":{"gitId":"tricixg"},"content":"`add-tag 1 t/Hall`","lastModifiedDate":"2023-04-03"},{"lineNumber":245,"author":{"gitId":"tricixg"},"content":"\u003cbr\u003e Adds a tag of name \"Hall\" to the person at Index 1.","lastModifiedDate":"2023-04-03"},{"lineNumber":246,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":247,"author":{"gitId":"Oliverloo0909"},"content":"### Removing a tag : `remove-tag`","lastModifiedDate":"2023-03-29"},{"lineNumber":248,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":249,"author":{"gitId":"tricixg"},"content":"Removes a specified tag to a specified athlete.","lastModifiedDate":"2023-04-03"},{"lineNumber":250,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":251,"author":{"gitId":"Oliverloo0909"},"content":"Format: `remove-tag INDEX t/TAGNAME`","lastModifiedDate":"2023-03-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":254,"author":{"gitId":"Tempura-Person"},"content":"Examples:","lastModifiedDate":"2023-03-16"},{"lineNumber":255,"author":{"gitId":"tricixg"},"content":"`remove-tag 1 t/Hall`","lastModifiedDate":"2023-04-03"},{"lineNumber":256,"author":{"gitId":"tricixg"},"content":"\u003cbr\u003eRemove a tag of name \"Hall\" from the person at Index 1.","lastModifiedDate":"2023-04-03"},{"lineNumber":257,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":258,"author":{"gitId":"Oliverloo0909"},"content":"### Showing athletes with the specified tag : `show`","lastModifiedDate":"2023-03-29"},{"lineNumber":259,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":260,"author":{"gitId":"Oliverloo0909"},"content":"Shows all athletes belonging to at least one of the tags specified.","lastModifiedDate":"2023-03-29"},{"lineNumber":261,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":262,"author":{"gitId":"Tempura-Person"},"content":"Format: `show [TAG1]…​`","lastModifiedDate":"2023-04-02"},{"lineNumber":263,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":264,"author":{"gitId":"Tempura-Person"},"content":"* Filters list of athletes to only contain athletes belonging to one or more of the specific tag(s).","lastModifiedDate":"2023-04-02"},{"lineNumber":265,"author":{"gitId":"Oliverloo0909"},"content":"* At least one tag name **must be provided.**","lastModifiedDate":"2023-03-29"},{"lineNumber":266,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":267,"author":{"gitId":"Tempura-Person"},"content":"Examples:","lastModifiedDate":"2023-03-16"},{"lineNumber":268,"author":{"gitId":"tricixg"},"content":"\u003cbr\u003e`show varsity` \u003cbr\u003eshows people belonging to group `varsity`.","lastModifiedDate":"2023-04-03"},{"lineNumber":269,"author":{"gitId":"tricixg"},"content":"\u003cbr\u003e`show hockey tennis`\u003cbr\u003eShows people belonging to either group `hockey`, `tennis` or both.","lastModifiedDate":"2023-04-03"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":271,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":272,"author":{"gitId":"tricixg"},"content":"## Session Management","lastModifiedDate":"2023-04-03"},{"lineNumber":273,"author":{"gitId":"Oliverloo0909"},"content":"### Create a session : `create-session`","lastModifiedDate":"2023-03-31"},{"lineNumber":274,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":275,"author":{"gitId":"Oliverloo0909"},"content":"Adds a new session to the session list.","lastModifiedDate":"2023-03-31"},{"lineNumber":276,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":277,"author":{"gitId":"Oliverloo0909"},"content":"Format: `create-session n/NAME s/SESSION l/LOCATION `","lastModifiedDate":"2023-03-31"},{"lineNumber":278,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":279,"author":{"gitId":"Oliverloo0909"},"content":"* Duplicate sessions cannot be created.","lastModifiedDate":"2023-03-31"},{"lineNumber":280,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":281,"author":{"gitId":"tricixg"},"content":"Examples:`create-session n/Hall s/10-03-2022 10:00 to 10-03-2022 11:00 l/MPSH2` \u003cbr\u003e Creates a session with name Hall from 10 March 2022, 10-11 a.m. at MPSH2.","lastModifiedDate":"2023-04-03"},{"lineNumber":282,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":283,"author":{"gitId":"Oliverloo0909"},"content":"### Delete an existing session : `delete-session`","lastModifiedDate":"2023-03-31"},{"lineNumber":284,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":285,"author":{"gitId":"Tempura-Person"},"content":"Removes an existing session from the session list.","lastModifiedDate":"2023-04-02"},{"lineNumber":286,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":287,"author":{"gitId":"Oliverloo0909"},"content":"Format: `delete-session INDEX `","lastModifiedDate":"2023-03-31"},{"lineNumber":288,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":289,"author":{"gitId":"Oliverloo0909"},"content":"* Sessions that do not exist cannot be deleted.","lastModifiedDate":"2023-03-31"},{"lineNumber":290,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":291,"author":{"gitId":"Oliverloo0909"},"content":"Examples:","lastModifiedDate":"2023-03-31"},{"lineNumber":292,"author":{"gitId":"tricixg"},"content":"`delete-session 3` \u003cbr\u003e Deletes the 3rd session in the session list.","lastModifiedDate":"2023-04-03"},{"lineNumber":293,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":294,"author":{"gitId":"Oliverloo0909"},"content":"### Edit an existing session : `session-edit`","lastModifiedDate":"2023-03-31"},{"lineNumber":295,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":296,"author":{"gitId":"Tempura-Person"},"content":"Edits the details of an existing session in the session list.","lastModifiedDate":"2023-04-02"},{"lineNumber":297,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":298,"author":{"gitId":"Oliverloo0909"},"content":"Format: `session-edit INDEX [n/NAME] [s/SESSION] [l/LOCATION]`","lastModifiedDate":"2023-03-31"},{"lineNumber":299,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":300,"author":{"gitId":"Oliverloo0909"},"content":"* At least one of the fields must be provided.","lastModifiedDate":"2023-03-31"},{"lineNumber":301,"author":{"gitId":"Oliverloo0909"},"content":"* Session must already exist.","lastModifiedDate":"2023-03-31"},{"lineNumber":302,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":303,"author":{"gitId":"Oliverloo0909"},"content":"Examples:","lastModifiedDate":"2023-03-31"},{"lineNumber":304,"author":{"gitId":"tricixg"},"content":"`session-edit 2 n/Hall` \u003cbr\u003eChanges the location of the 2nd session in the session list to Hall.","lastModifiedDate":"2023-04-03"},{"lineNumber":305,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":306,"author":{"gitId":"Oliverloo0909"},"content":"### Mark an athlete\u0027s attendance : `mark`","lastModifiedDate":"2023-03-31"},{"lineNumber":307,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":308,"author":{"gitId":"Oliverloo0909"},"content":"Marks the athlete as present for a specified session.","lastModifiedDate":"2023-03-31"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":310,"author":{"gitId":"Oliverloo0909"},"content":"Format: `mark INDEX n/NAME`","lastModifiedDate":"2023-03-31"},{"lineNumber":311,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":312,"author":{"gitId":"Oliverloo0909"},"content":"* Session and athlete must already exist.","lastModifiedDate":"2023-03-31"},{"lineNumber":313,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":314,"author":{"gitId":"Oliverloo0909"},"content":"Examples:","lastModifiedDate":"2023-03-31"},{"lineNumber":315,"author":{"gitId":"tricixg"},"content":"`mark 1 n/John Doe` \u003cbr\u003e Marks John Doe\u0027s attendance as present in the 1st session in the session list.","lastModifiedDate":"2023-04-03"},{"lineNumber":316,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":317,"author":{"gitId":"Oliverloo0909"},"content":"### Unmark an athlete\u0027s attendance : `unmark`","lastModifiedDate":"2023-03-31"},{"lineNumber":318,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":319,"author":{"gitId":"Oliverloo0909"},"content":"Marks the athlete as absent for a specified session.","lastModifiedDate":"2023-03-31"},{"lineNumber":320,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":321,"author":{"gitId":"Oliverloo0909"},"content":"Format: `unmark INDEX n/NAME`","lastModifiedDate":"2023-03-31"},{"lineNumber":322,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":323,"author":{"gitId":"Oliverloo0909"},"content":"* Session and athlete must already exist.","lastModifiedDate":"2023-03-31"},{"lineNumber":324,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":325,"author":{"gitId":"Oliverloo0909"},"content":"Examples:","lastModifiedDate":"2023-03-31"},{"lineNumber":326,"author":{"gitId":"tricixg"},"content":"`unmark 1 n/John Doe` \u003cbr\u003e Marks John Doe\u0027s attendance as absent in the 1st session in the session list.","lastModifiedDate":"2023-04-03"},{"lineNumber":327,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":328,"author":{"gitId":"Oliverloo0909"},"content":"### Adding an athlete to a session: `student-add`","lastModifiedDate":"2023-03-31"},{"lineNumber":329,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":330,"author":{"gitId":"Oliverloo0909"},"content":"Adds an athlete of a specified index to the specified session.","lastModifiedDate":"2023-03-31"},{"lineNumber":331,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":332,"author":{"gitId":"Oliverloo0909"},"content":"Format: `student-add INDEX n/HALL`","lastModifiedDate":"2023-03-31"},{"lineNumber":333,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":334,"author":{"gitId":"Oliverloo0909"},"content":"Examples:","lastModifiedDate":"2023-03-31"},{"lineNumber":335,"author":{"gitId":"tricixg"},"content":"`student-add 1 n/hall` \u003cbr\u003eAdds an athlete at index 1 of the contact list to the session “Hall”.","lastModifiedDate":"2023-04-03"},{"lineNumber":336,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":337,"author":{"gitId":"Oliverloo0909"},"content":"### Removing an athlete from a session: `student-remove`","lastModifiedDate":"2023-03-31"},{"lineNumber":338,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":339,"author":{"gitId":"Oliverloo0909"},"content":"Removes an athlete of a specified index from the specified session.","lastModifiedDate":"2023-03-31"},{"lineNumber":340,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":341,"author":{"gitId":"Oliverloo0909"},"content":"Format: `student-remove INDEX n/HALL`","lastModifiedDate":"2023-03-31"},{"lineNumber":342,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":343,"author":{"gitId":"Oliverloo0909"},"content":"Examples:","lastModifiedDate":"2023-03-31"},{"lineNumber":344,"author":{"gitId":"tricixg"},"content":"`student-remove 1 n/hall`","lastModifiedDate":"2023-04-03"},{"lineNumber":345,"author":{"gitId":"tricixg"},"content":"\u003cbr\u003e Removes an athlete at index 1 of the contact list from the session “Hall”.","lastModifiedDate":"2023-04-03"},{"lineNumber":346,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":347,"author":{"gitId":"tricixg"},"content":"## Income Analytics","lastModifiedDate":"2023-04-03"},{"lineNumber":348,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":349,"author":{"gitId":"tricixg"},"content":"The **Income Analytics** Panel is an automated feature that tracks and displays your coaching income based on athlete attendance and pay rates.","lastModifiedDate":"2023-04-03"},{"lineNumber":350,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":351,"author":{"gitId":"tricixg"},"content":"### How to view","lastModifiedDate":"2023-04-03"},{"lineNumber":352,"author":{"gitId":"tricixg"},"content":"The panel is automatically updated based on athlete attendance and pay rates. It displays today\u0027s income, weekly income, monthly income, and lifetime income.","lastModifiedDate":"2023-04-03"},{"lineNumber":353,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":354,"author":{"gitId":"tricixg"},"content":"### Features","lastModifiedDate":"2023-04-03"},{"lineNumber":355,"author":{"gitId":"tricixg"},"content":"The displayed income is based on the athlete\u0027s pay rate per hour and the session duration. It is only reflected if the athlete is marked as present.","lastModifiedDate":"2023-04-03"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":357,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"Tempura-Person"},"content":"## **FAQ**","lastModifiedDate":"2023-03-27"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"Tempura-Person"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous SportSync home folder.","lastModifiedDate":"2023-03-01"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"Tempura-Person"},"content":"## **Glossary**","lastModifiedDate":"2023-03-28"},{"lineNumber":365,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":366,"author":{"gitId":"Tempura-Person"},"content":"* **Pay rate**: The amount of fees paid by the athlete per training session.","lastModifiedDate":"2023-03-27"},{"lineNumber":367,"author":{"gitId":"tricixg"},"content":"* **Athlete**: A student of the Coach.","lastModifiedDate":"2023-03-30"},{"lineNumber":368,"author":{"gitId":"tricixg"},"content":"* **Attendance**: A record of the presence or absence of an athlete at a training session.","lastModifiedDate":"2023-03-30"},{"lineNumber":369,"author":{"gitId":"tricixg"},"content":"* **Coach**: A person who trains and directs athletes or a team.","lastModifiedDate":"2023-03-30"},{"lineNumber":370,"author":{"gitId":"tricixg"},"content":"* **Session**: A training period for athletes conducted by a coach.","lastModifiedDate":"2023-03-30"},{"lineNumber":371,"author":{"gitId":"tricixg"},"content":"* **Tag**: A label attached to an athlete in SportSync, used to group athletes together for easier management.","lastModifiedDate":"2023-04-03"},{"lineNumber":372,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":374,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"Tempura-Person"},"content":"## **Command summary**","lastModifiedDate":"2023-03-27"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"Tempura-Person"},"content":"| Action                | Format, Examples                                                                                                                                      |","lastModifiedDate":"2023-02-26"},{"lineNumber":379,"author":{"gitId":"tricixg"},"content":"|-----------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-04-03"},{"lineNumber":380,"author":{"gitId":"Tempura-Person"},"content":"| **Help**              | `help`                                                                                                                                                |","lastModifiedDate":"2023-02-26"},{"lineNumber":381,"author":{"gitId":"Tempura-Person"},"content":"| **Undo**              | `undo`                                                                                                                                                |","lastModifiedDate":"2023-03-22"},{"lineNumber":382,"author":{"gitId":"Tempura-Person"},"content":"| **Redo**              | `redo`                                                                                                                                                |","lastModifiedDate":"2023-03-22"},{"lineNumber":383,"author":{"gitId":"tricixg"},"content":"| **Exit**              | `exit`                                                                                                                                                |","lastModifiedDate":"2023-04-03"},{"lineNumber":384,"author":{"gitId":"tricixg"},"content":"| **Add**               | `add n/NAME p/PHONE_NUMBER r/PAY_RATE a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g. `add n/James Ho p/22224444 r/7 a/123, Clementi Rd, 1234665 t/friend t/colleague` |","lastModifiedDate":"2023-04-03"},{"lineNumber":385,"author":{"gitId":"tricixg"},"content":"| **List**              | `list`                                                                                                                                                |","lastModifiedDate":"2023-04-03"},{"lineNumber":386,"author":{"gitId":"tricixg"},"content":"| **Edit**              | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [r/PAY_RATE] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g. `edit 2 n/James Lee r/3`                                           |","lastModifiedDate":"2023-04-03"},{"lineNumber":387,"author":{"gitId":"tricixg"},"content":"| **Find**              | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g. `find James Jake`                                                                                             |","lastModifiedDate":"2023-04-03"},{"lineNumber":388,"author":{"gitId":"tricixg"},"content":"| **Delete**            | `delete INDEX`\u003cbr\u003e e.g. `delete 3`                                                                                                                    |","lastModifiedDate":"2023-04-03"},{"lineNumber":389,"author":{"gitId":"tricixg"},"content":"| **Clear**             | `clear`                                                                                                                                               |","lastModifiedDate":"2023-04-03"},{"lineNumber":390,"author":{"gitId":"tricixg"},"content":"| **Sort**              | `sort ATTRIBUTE ORDER`\u003cbr\u003e e.g. `sort 1 2`                                                                                                            |","lastModifiedDate":"2023-04-03"},{"lineNumber":391,"author":{"gitId":"tricixg"},"content":"| **Add Tag**           | `add-tag INDEX t/TAGNAME​` \u003cbr\u003e e.g. `add-tag 2 t/Private`                                                                                            |","lastModifiedDate":"2023-04-03"},{"lineNumber":392,"author":{"gitId":"tricixg"},"content":"| **Remove Tag**        | `remove-tag INDEX t/TAGNAME​` \u003cbr\u003e e.g. `remove-tag 2 t/Private`                                                                                      |","lastModifiedDate":"2023-04-03"},{"lineNumber":393,"author":{"gitId":"tricixg"},"content":"| **Show**              | `show [TAG1]`\u003cbr\u003e e.g. `show Hall`                                                                                                                    |","lastModifiedDate":"2023-04-03"},{"lineNumber":394,"author":{"gitId":"tricixg"},"content":"| **Create Session**    | `create-session n/NAME s/SESSION l/LOCATION`\u003cbr\u003e e.g., `create-session n/Hall s/10-03-2022 10:00 to 10-03-2022 11:00 l/MPSH2`                         |","lastModifiedDate":"2023-04-03"},{"lineNumber":395,"author":{"gitId":"tricixg"},"content":"| **Delete Session**    | `delete-session INDEX`\u003cbr\u003e e.g. `delete-session 3`                                                                                                    |","lastModifiedDate":"2023-04-03"},{"lineNumber":396,"author":{"gitId":"tricixg"},"content":"| **Edit Session**      | `session-edit INDEX [n/NAME] [s/SESSION] [l/LOCATION]`\u003cbr\u003e e.g. `session-edit 2 n/Hall`                                                               |","lastModifiedDate":"2023-04-03"},{"lineNumber":397,"author":{"gitId":"tricixg"},"content":"| **Mark Attendance**   | `mark INDEX n/NAME` \u003cbr\u003e e.g. `mark 1 n/John Doe`                                                                                                     |","lastModifiedDate":"2023-04-03"},{"lineNumber":398,"author":{"gitId":"tricixg"},"content":"| **UnMark Attendance** | `unmark INDEX n/NAME` \u003cbr\u003e e.g. `unmark 1 n/John Doe`                                                                                                 |","lastModifiedDate":"2023-04-03"},{"lineNumber":399,"author":{"gitId":"tricixg"},"content":"| **Add Student**       | `student-add INDEX n/HALL` \u003cbr\u003e e.g. `student-add 1 n/hall`                                                                                           |","lastModifiedDate":"2023-04-03"},{"lineNumber":400,"author":{"gitId":"tricixg"},"content":"| **Remove Student**    | `student-remove INDEX n/HALL` \u003cbr\u003e e.g. `student-remove 1 n/hall`                                                                                     |","lastModifiedDate":"2023-04-03"},{"lineNumber":401,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"}],"authorContributionMap":{"tricixg":92,"jengoc415":3,"Tempura-Person":111,"Oliverloo0909":72,"-":123}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"Tempura-Person"},"content":"    content: \"SportSync\";","lastModifiedDate":"2023-03-01"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"Tempura-Person":1,"-":294}},{"path":"docs/diagrams/GroupingFunctionality/GroupListclassdiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"!include style-group.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"UniqueGroupList *-right-\u003e \"1\" Group","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"Group *-down-\u003e \"1\" UniquePersonList","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"Group *-down-\u003e Tag","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"UniquePersonList -right-\u003e \"*\" Person","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Oliverloo0909":12}},{"path":"docs/diagrams/GroupingFunctionality/GroupObject.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"object Tag {","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"    -name: \"Hall\"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"object UniquePersonList {","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"object hallGroup","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"object UniqueGroupList","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"hallGroup -down-\u003e Tag","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"UniqueGroupList -down-\u003e hallGroup","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"hallGroup --\u003e UniquePersonList","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Oliverloo0909":18}},{"path":"docs/diagrams/GroupingFunctionality/GroupRemoveSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"!include style-group.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"activate LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"create DeleteCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"activate DeleteCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"activate DeleteCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"create DeleteCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"activate DeleteCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"deactivate DeleteCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"Oliverloo0909"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"Oliverloo0909"},"content":"activate DeleteCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"Oliverloo0909"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"Oliverloo0909"},"content":"activate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"Oliverloo0909"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"Oliverloo0909"},"content":"deactivate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"Oliverloo0909"},"content":"create CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"Oliverloo0909"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"Oliverloo0909"},"content":"activate CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"Oliverloo0909"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"Oliverloo0909"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"Oliverloo0909"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"Oliverloo0909"},"content":"deactivate DeleteCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"Oliverloo0909"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"Oliverloo0909"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"Oliverloo0909"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Oliverloo0909":69}},{"path":"docs/diagrams/GroupingFunctionality/sequence_group.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"!include style-group.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"user -[USER_COLOR]\u003e ui : \"groupmod 1 m/add g/hall\"","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"activate ui UI_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"ui -[UI_COLOR]\u003e logic : \"groupmod 1 m/add g/hall\"","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"logic -[LOGIC_COLOR]\u003e model : addPersonToGroup(p)","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"deactivate model","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"deactivate storage","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"deactivate storage","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"deactivate logic","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"deactivate ui","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Oliverloo0909":38}},{"path":"docs/diagrams/GroupingFunctionality/style-group.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"/\u0027","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":" \u0027/","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"skinparam BackgroundColor #FFFFFFF","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"skinparam Shadowing false","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"skinparam Class {","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"    BorderThickness 1","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"    FontName Arial","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"Oliverloo0909"},"content":"skinparam Actor {","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"Oliverloo0909"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"Oliverloo0909"},"content":"    Color USER_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"Oliverloo0909"},"content":"    FontName Arial","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"Oliverloo0909"},"content":"skinparam Sequence {","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"Oliverloo0909"},"content":"    MessageAlign center","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"Oliverloo0909"},"content":"    BoxFontSize 15","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"Oliverloo0909"},"content":"    BoxPadding 0","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"Oliverloo0909"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"Oliverloo0909"},"content":"    FontName Arial","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"Oliverloo0909"},"content":"skinparam Participant {","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"Oliverloo0909"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"Oliverloo0909"},"content":"    Padding 20","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"Oliverloo0909"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"Oliverloo0909"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"Oliverloo0909"},"content":"skinparam Shadowing false","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"Oliverloo0909"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"Oliverloo0909"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"Oliverloo0909"},"content":"hide footbox","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"Oliverloo0909"},"content":"hide members","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"Oliverloo0909"},"content":"hide circle","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Oliverloo0909":75}},{"path":"docs/diagrams/ModelClassDiagram3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"!include style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"AddressBook *-down-\u003e \"1\" UniqueGroupList","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"UniqueGroupList -down-\u003e Group","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"Group -right-\u003e Person","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Oliverloo0909":19}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Tempura-Person"},"content":"title: SportSync","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Tempura-Person"},"content":"**SportSync is a desktop application for coaches to manage training sessions and student athletes.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"* If you are interested in using SportSync, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"Tempura-Person"},"content":"* If you are interested about developing SportSync, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Tempura-Person":4,"-":15}},{"path":"docs/team/jengoc415.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jengoc415"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"jengoc415"},"content":"layout: page","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"jengoc415"},"content":"title: Jeng\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"jengoc415"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"jengoc415"},"content":"### Project: SportSync","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"jengoc415"},"content":"SportSync is a desktop address book application used for coaching student athletes. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"jengoc415"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"jengoc415"},"content":"* **New Feature**: Added the ability to view payment rate of each student.","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"jengoc415"},"content":"    * What it does: Each student now has a payment rate attribute.","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"jengoc415"},"content":"    * Justification: This feature improves the user experience of the user as the payment rate of each student can be easily viewed.","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"jengoc415"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of the dependencies. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"jengoc415"},"content":"    * Credits:","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"jengoc415"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"jengoc415"},"content":"* **Project management**:","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"jengoc415"},"content":"    * Managed releases `v1.1` on GitHub","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"jengoc415"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"jengoc415"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"jengoc415"},"content":"    * User Guide:","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"jengoc415"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"jengoc415"},"content":"* **Community**:","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"jengoc415"},"content":"* **Tools**:","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"jengoc415":30}},{"path":"docs/team/oliverloo0909.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"layout: page","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"title: Oliver Loo\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"### Project: Unibook","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"Unibook is a desktop address book application used for coaching student athletes. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"* **New Feature**:","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"    * What it does: ability to group student\u0027s however the coach likes","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"    * Justification: for better contact management handling","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"    * Highlights:","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"    * Credits: Oliver Loo","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"* **New Feature**:","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"* **Project management**:","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"    * User Guide:","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"* **Community**:","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#1](https://github.com/nus-cs2103-AY2223S2/ip/pull/268/files/4ab762fcdf788b39ccd9a54756e40336b1284ef4), [\\#2](https://github.com/nus-cs2103-AY2223S2/ip/pull/236/files/c28028a6dfb59dee69061e00e77305dad24c2931)","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"* **Tools**:","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"    * Integrated a third party library * to the project ([\\#42]())","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"Oliverloo0909":40}},{"path":"docs/team/tempura-person.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"---","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"Tempura-Person"},"content":"layout: page","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"Tempura-Person"},"content":"title: Leon Lim\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"Tempura-Person"},"content":"---","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"### Project: SportSync","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"Tempura-Person"},"content":"SportSync is a desktop address book application used for coaching student athletes. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"* **New Feature**:","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"Tempura-Person"},"content":"    * What it does:","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"Tempura-Person"},"content":"    * Justification:","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"Tempura-Person"},"content":"    * Highlights:","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"Tempura-Person"},"content":"    * Credits:","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"Tempura-Person"},"content":"* **New Feature**: Added the ability to sort the contact list.","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"Tempura-Person"},"content":"  * What it does: Calling sort will automatically sort the list of contacts in alphabetical order.","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"Tempura-Person"},"content":"  * Justification: This feature gives convenience to the user by letting them know where a specific contact can be found in relation to others.","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"Tempura-Person"},"content":"  * Highlights: Implementing this feature involved understanding the complex code flow and the relationship between many classes.","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"Tempura-Person"},"content":"* **New Feature**: Added the ability to undo and redo previously entered commands.","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"Tempura-Person"},"content":"  * What it does: Calling undo will undo the last user-entered command while calling redo will redo the last user-entered command.","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"Tempura-Person"},"content":"  * Justification: This feature saves the user\u0027s time when they accidentally make mistakes while typing.","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"Tempura-Person"},"content":"  * Highlights: Implementing this feature involved rigorous understanding of class instances and the pass-by-reference concept.","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"Tempura-Person"},"content":"  * Credits: The previous team that worked on AddressBook 3, as I used their proposed implementation for this.","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"Tempura-Person"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"Tempura-Person"},"content":"* **Project management**:","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"Tempura-Person"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"Tempura-Person"},"content":"    * Updated aesthetics of GUI with curated colour scheme and custom app icon.","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"Tempura-Person"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"Tempura-Person"},"content":"    * User Guide: Features as of v1.2b","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"Tempura-Person"},"content":"    * Developer Guide: Features as of v1.2b","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"Tempura-Person"},"content":"* **Community**:","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"Tempura-Person"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#1](https://github.com/nus-cs2103-AY2223S2/ip/pull/268/files/4ab762fcdf788b39ccd9a54756e40336b1284ef4), [\\#2](https://github.com/nus-cs2103-AY2223S2/ip/pull/236/files/c28028a6dfb59dee69061e00e77305dad24c2931)","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"Tempura-Person"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"Tempura-Person"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"Tempura-Person"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"Tempura-Person"},"content":"* **Tools**:","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"Tempura-Person"},"content":"    * Integrated a third party library * to the project ([\\#42]())","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"Tempura-Person"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"Tempura-Person":50,"Oliverloo0909":1}},{"path":"docs/team/tricixg.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"layout: page","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"title: Tricia\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"## Project: SportSync","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"SportSync is a desktop address book application used for coaching student athletes. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"### New Feature:","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"**Income Analytics Panel** [\\#94](https://github.com/AY2223S2-CS2103T-W13-2/tp/pull/94)","lastModifiedDate":"2023-04-03"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"* I implemented the income analytics panel, which contains the income earned today, weekly, monthly, and lifetime. It features a bargraph comparing income for the past 6 months.","lastModifiedDate":"2023-04-03"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"* Justification: This feature improved the application\u0027s functionality by allowing coaches to track their income and compare it over time. The bargraph feature and different time frames made it easy to quickly analyze earnings and identify any trends or changes in income.","lastModifiedDate":"2023-04-03"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"**Session List Panel** [\\#80](https://github.com/AY2223S2-CS2103T-W13-2/tp/pull/80)","lastModifiedDate":"2023-04-03"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"* I implemented the session list panel, which displays the session information when clicked on. This panel includes all necessary session information as well as a new piechart that shows the students\u0027 attendance.","lastModifiedDate":"2023-04-03"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"* Justification: This feature improved the application\u0027s organization by providing coaches with an easy-to-use and comprehensive overview of their training sessions. The piechart added an extra level of detail and made it easy to quickly see which students attended which sessions.","lastModifiedDate":"2023-04-03"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"**Baseline Session Class** [\\#40](https://github.com/AY2223S2-CS2103T-W13-2/tp/pull/40)","lastModifiedDate":"2023-04-03"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"* I implemented the baseline session class, which includes the input parser, datetime validity, and other basic properties.","lastModifiedDate":"2023-04-03"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"* Justification:This feature improved the application\u0027s codebase by ensuring consistency throughout the application. The input parser and datetime validity checks also ensured that all input data was validated and formatted correctly, improving the application\u0027s reliability and accuracy.","lastModifiedDate":"2023-04-03"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"**Calendar Interface** [\\#51](https://github.com/AY2223S2-CS2103T-W13-2/tp/pull/51) [\\#79](https://github.com/AY2223S2-CS2103T-W13-2/tp/pull/79)","lastModifiedDate":"2023-04-03"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"* I added the calendar interface that updates when sessions are added or deleted. It also includes a popup window when clicking on an event.","lastModifiedDate":"2023-04-03"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"* Justification: This feature greatly improved the usability of the application by allowing coaches to easily track their training sessions and view their schedules at a glance. The popup window feature also made it easier to view the details of each session and provided coaches with a more interactive and user-friendly interface.","lastModifiedDate":"2023-04-03"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"  * Credits: adapted from http://www.java2s.com/ref/java/javafx-gridpane-layout-calendar.html","lastModifiedDate":"2023-04-03"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"### Code contributed:","lastModifiedDate":"2023-04-03"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"[RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dtricixg\u0026tabRepo\u003dAY2223S2-CS2103T-W13-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003dfunctional-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-04-03"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"### Project management:","lastModifiedDate":"2023-04-03"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"* Provided support to team members by reviewing their pull requests and helping with any technical issues they faced.","lastModifiedDate":"2023-04-03"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"* Helped with debugging and testing the application to ensure its functionality.","lastModifiedDate":"2023-04-03"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"* Reviewed and provided feedback on several pull requests from team members.","lastModifiedDate":"2023-04-03"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"* Added branch protection to require a reviewer before merging to ensure all code is reviewed before being merged.","lastModifiedDate":"2023-04-03"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"* Reminded teammates to use GitHub functionalities like \"close #issues number\" for easy issue tracking and management.","lastModifiedDate":"2023-04-03"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"### Enhancements to existing features:","lastModifiedDate":"2023-04-03"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"**Fuzzy Search** [\\#34](https://github.com/AY2223S2-CS2103T-W13-2/tp/pull/34)","lastModifiedDate":"2023-04-03"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":63,"author":{"gitId":"tricixg"},"content":"* I enhanced the `find` command so that even partial searches are accepted.","lastModifiedDate":"2023-04-03"},{"lineNumber":64,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":65,"author":{"gitId":"tricixg"},"content":"* Justification: This feature improved the application\u0027s search functionality by making it more user-friendly and allowing coaches to search for sessions using partial or incomplete search terms. It made finding specific sessions easier and faster, saving coaches time and effort.","lastModifiedDate":"2023-04-03"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"### Documentation:","lastModifiedDate":"2023-04-03"},{"lineNumber":68,"author":{"gitId":"tricixg"},"content":"* About Us: [\\#20](https://github.com/AY2223S2-CS2103T-W13-2/tp/pull/20)","lastModifiedDate":"2023-04-03"},{"lineNumber":69,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"tricixg"},"content":"  * Added Profile Picture for teammates","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"tricixg"},"content":"* User Guide: [\\#151](https://github.com/AY2223S2-CS2103T-W13-2/tp/pull/151)","lastModifiedDate":"2023-04-03"},{"lineNumber":72,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"tricixg"},"content":"  * Contributed to various sections of the user guide, including the calendar interface, income analytics panel, session list panel, and search functionality.","lastModifiedDate":"2023-04-03"},{"lineNumber":74,"author":{"gitId":"tricixg"},"content":"  * Formatted the user guide to make it more visually appealing and easier to navigate.","lastModifiedDate":"2023-04-03"},{"lineNumber":75,"author":{"gitId":"tricixg"},"content":"  * Added subheadings for visibility and ensured consistency throughout the document.","lastModifiedDate":"2023-04-03"},{"lineNumber":76,"author":{"gitId":"tricixg"},"content":"  * Updated the command summary to provide a comprehensive and clear overview of the application\u0027s functionality.","lastModifiedDate":"2023-04-03"},{"lineNumber":77,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"tricixg"},"content":"* Developer Guide:","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"tricixg"},"content":"### Community:","lastModifiedDate":"2023-04-03"},{"lineNumber":82,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"tricixg"},"content":"[//]: # (  * PRs reviewed \u0026#40;with non-trivial review comments\u0026#41;: [\\#12]\u0026#40;\u0026#41;, [\\#32]\u0026#40;\u0026#41;, [\\#19]\u0026#40;\u0026#41;, [\\#42]\u0026#40;\u0026#41;)","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"tricixg"},"content":"[//]: # (  * Contributed to forum discussions \u0026#40;examples: [1]\u0026#40;\u0026#41;, [2]\u0026#40;\u0026#41;, [3]\u0026#40;\u0026#41;, [4]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"tricixg"},"content":"[//]: # (  * Reported bugs and suggestions for other teams in the class \u0026#40;examples: [1]\u0026#40;\u0026#41;, [2]\u0026#40;\u0026#41;, [3]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"tricixg"},"content":"[//]: # (  * Some parts of the history feature I added was adopted by several other class mates \u0026#40;[1]\u0026#40;\u0026#41;, [2]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"tricixg":91}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"Tempura-Person"},"content":":information_source: The screenshot below is from AddressBook 3, but the result is the same as SportSync, for the sake of tutorial.","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":237,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"Tempura-Person"},"content":"That’s it! Fire up the application again, and you should see something like this:","lastModifiedDate":"2023-03-27"},{"lineNumber":268,"author":{"gitId":"Tempura-Person"},"content":":information_source: The screenshot below is from AddressBook 3, but the result is the same as SportSync, for the sake of tutorial.","lastModifiedDate":"2023-03-27"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"Tempura-Person"},"content":":information_source: The screenshot below is from AddressBook 3, but the result is the same as SportSync, for the sake of tutorial.","lastModifiedDate":"2023-03-27"},{"lineNumber":324,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":325,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":353,"author":{"gitId":"Tempura-Person"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getPayRate(),","lastModifiedDate":"2023-03-27"},{"lineNumber":354,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":364,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":365,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"Tempura-Person"},"content":":information_source: The screenshot below is from AddressBook 3, but the result is the same as SportSync, for the sake of tutorial.","lastModifiedDate":"2023-03-27"},{"lineNumber":374,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":375,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":385,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":404,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":406,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":408,"author":{"gitId":"Tempura-Person"},"content":"This concludes the tutorial for adding a new `Command` to SportSync.","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"Tempura-Person":10,"-":398}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"Tempura-Person"},"content":":information_source: The screenshot below is from AddressBook 3, but the result is the same as SportSync, for the sake of tutorial.","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"jengoc415"},"content":"\u003cLabel fx:id\u003d\"payRate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$payRate\" /\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"jengoc415"},"content":"    \"payRate\": \"hans@example.com\",","lastModifiedDate":"2023-02-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2023-03-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jengoc415":2,"Tempura-Person":2,"-":110}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"Tempura-Person"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [r/PAY_RATE] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Tempura-Person":1,"-":300}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"Tempura-Person"},"content":"        logger.info(\"Starting SportSync \" + MainApp.VERSION);","lastModifiedDate":"2023-03-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tempura-Person":1,"-":182}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String MESSAGE_INVALID_SESSION_DISPLAYED_INDEX \u003d \"The session index provided is invalid\";","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Oliverloo0909":1,"-":13}},{"path":"src/main/java/seedu/address/logic/CalendarLogic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import static javafx.scene.paint.Color.WHITE;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"import java.util.Calendar;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"import java.util.GregorianCalendar;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"import seedu.address.model.calendar.CalendarMonth;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-04-03"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"import seedu.address.ui.calendar.CalendarDisplay;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"import seedu.address.ui.calendar.CalendarEventListPanel;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"//Solution below adapted from http://www.java2s.com/ref/java/javafx-gridpane-layout-calendar.html","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":" * The manager of the logic for the Calendar.","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"public class CalendarLogic {","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"    private static final String[] MONTH_NAMES \u003d { \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"        \"August\", \"September\", \"October\", \"November\", \"December\" };","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"    private static final String[] DAY_NAMES \u003d {","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"        \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"    };","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"    private static final String TEXT_HEADER_STYLE \u003d \"-fx-font-size: 15pt; -fx-text-fill: white;\"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"            + \" -fx-font-family: \u0027Comic Sans\u0027;\"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"            + \"-fx-background-color: #fff\";","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"    private static final String EMPTY_MESSAGE \u003d \"\";","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"    private static final String SUCCESS_MESSAGE \u003d \"success\";","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"    private static final String WRONG_FORMAT_MESSAGE \u003d \"failure\";","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"    private Stage primaryStage;","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"    private Logic logic;","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"    private Calendar currentMonth;","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"    private CalendarMonth calendarMonth;","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"    private ObservableList\u003cSession\u003e filteredSessionsList;","lastModifiedDate":"2023-04-03"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"    private CalendarDisplay calendarDisplay;","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"     * Constructs a {@code CalendarLogic} with the given {@code Logic}, {@code Stage}","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"     * {@code GridPane} and {@code HBox}.","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"    public CalendarLogic(Logic logic, Stage primaryStage, CalendarDisplay calendarDisplay) {","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"        requireAllNonNull(logic, primaryStage, calendarDisplay);","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"        this.calendarDisplay \u003d calendarDisplay;","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"        ListChangeListener\u003cSession\u003e temp \u003d (x) -\u003e {","lastModifiedDate":"2023-04-03"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"            x.next();","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"            refresh();","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"        };","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"        this.filteredSessionsList \u003d logic.getFilteredSessionList();","lastModifiedDate":"2023-04-03"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"        filteredSessionsList.addListener(temp);","lastModifiedDate":"2023-04-03"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"tricixg"},"content":"     * Initialises the logic components for the Calendar.","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"    public void initialiseLogic() {","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"        calendarMonth \u003d new CalendarMonth(filteredSessionsList);","lastModifiedDate":"2023-04-03"},{"lineNumber":68,"author":{"gitId":"tricixg"},"content":"        currentMonth \u003d new GregorianCalendar();","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"tricixg"},"content":"        currentMonth.set(Calendar.DAY_OF_MONTH, 1);","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"tricixg"},"content":"     * Fills body of the Calendar with the individual date components.","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"tricixg"},"content":"    public void drawBody() {","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"tricixg"},"content":"        // Draw days of the week","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"tricixg"},"content":"        for (int day \u003d 1; day \u003c\u003d 7; day++) {","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"tricixg"},"content":"            Text tDayName \u003d new Text(\" \" + getDayName(day));","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"tricixg"},"content":"            tDayName.setFill(WHITE);","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"tricixg"},"content":"            calendarDisplay.addToCalendarGrid(tDayName, day - 1, 0);","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"tricixg"},"content":"        // Draw days in month","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"tricixg"},"content":"        int currentDay \u003d currentMonth.get(Calendar.DAY_OF_MONTH);","lastModifiedDate":"2023-03-21"},{"lineNumber":86,"author":{"gitId":"tricixg"},"content":"        int daysInMonth \u003d currentMonth.getActualMaximum(Calendar.DAY_OF_MONTH);","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"tricixg"},"content":"        int dayOfWeek \u003d currentMonth.get(Calendar.DAY_OF_WEEK);","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"tricixg"},"content":"        int row \u003d 1;","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"tricixg"},"content":"        for (int i \u003d currentDay; i \u003c\u003d daysInMonth; i++) {","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"tricixg"},"content":"            if (dayOfWeek \u003d\u003d 8) {","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"tricixg"},"content":"                dayOfWeek \u003d 1;","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"tricixg"},"content":"                row++;","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"tricixg"},"content":"            ObservableList\u003cSession\u003e sessionsInDayOfMonth \u003d calendarMonth","lastModifiedDate":"2023-04-03"},{"lineNumber":95,"author":{"gitId":"tricixg"},"content":"                    .getSessionsInDayOfMonth(currentDay, currentMonth.get(Calendar.MONTH) + 1,","lastModifiedDate":"2023-04-03"},{"lineNumber":96,"author":{"gitId":"tricixg"},"content":"                            currentMonth.get(Calendar.YEAR));","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"tricixg"},"content":"            CalendarEventListPanel calendarEventListPanel \u003d new CalendarEventListPanel(sessionsInDayOfMonth,","lastModifiedDate":"2023-04-03"},{"lineNumber":98,"author":{"gitId":"tricixg"},"content":"                    primaryStage);","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"tricixg"},"content":"            VBox calendarEventList \u003d calendarEventListPanel.getCalendarEventList(currentDay);","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"tricixg"},"content":"            calendarDisplay.addToCalendarGrid(calendarEventList, dayOfWeek - 1, row);","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"tricixg"},"content":"            currentDay++;","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"tricixg"},"content":"            dayOfWeek++;","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"tricixg"},"content":"    public String getDayName(int n) {","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"tricixg"},"content":"        return DAY_NAMES[n - 1];","lastModifiedDate":"2023-03-21"},{"lineNumber":108,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":109,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":110,"author":{"gitId":"tricixg"},"content":"    public String getMonthName(int n) {","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"tricixg"},"content":"        return MONTH_NAMES[n];","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":113,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":114,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":116,"author":{"gitId":"tricixg"},"content":"     * Returns the {@code Text} representing the current month.","lastModifiedDate":"2023-03-21"},{"lineNumber":117,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"tricixg"},"content":"    public Text getTextHeader() {","lastModifiedDate":"2023-03-21"},{"lineNumber":119,"author":{"gitId":"tricixg"},"content":"        String monthString \u003d getMonthName(currentMonth.get(Calendar.MONTH));","lastModifiedDate":"2023-03-21"},{"lineNumber":120,"author":{"gitId":"tricixg"},"content":"        String yearString \u003d String.valueOf(currentMonth.get(Calendar.YEAR));","lastModifiedDate":"2023-03-21"},{"lineNumber":121,"author":{"gitId":"tricixg"},"content":"        Text header \u003d new Text(monthString + \", \" + yearString);","lastModifiedDate":"2023-03-21"},{"lineNumber":122,"author":{"gitId":"tricixg"},"content":"        header.setStyle(TEXT_HEADER_STYLE);","lastModifiedDate":"2023-03-21"},{"lineNumber":123,"author":{"gitId":"tricixg"},"content":"        header.setFill(WHITE);","lastModifiedDate":"2023-03-21"},{"lineNumber":124,"author":{"gitId":"tricixg"},"content":"        return header;","lastModifiedDate":"2023-03-21"},{"lineNumber":125,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":126,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":127,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":129,"author":{"gitId":"tricixg"},"content":"     * Refreshes the CalendarEvents.","lastModifiedDate":"2023-03-21"},{"lineNumber":130,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"tricixg"},"content":"    public void refresh() {","lastModifiedDate":"2023-03-21"},{"lineNumber":132,"author":{"gitId":"tricixg"},"content":"        calendarDisplay.resetGridPane();","lastModifiedDate":"2023-03-21"},{"lineNumber":133,"author":{"gitId":"tricixg"},"content":"        this.calendarMonth \u003d new CalendarMonth(filteredSessionsList);","lastModifiedDate":"2023-04-03"},{"lineNumber":134,"author":{"gitId":"tricixg"},"content":"        calendarDisplay.drawCalendar();","lastModifiedDate":"2023-03-21"},{"lineNumber":135,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":136,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":137,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":139,"author":{"gitId":"tricixg"},"content":"     * Displays the CalendarEvents in the previous month.","lastModifiedDate":"2023-03-21"},{"lineNumber":140,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"tricixg"},"content":"    public void previous() {","lastModifiedDate":"2023-03-21"},{"lineNumber":142,"author":{"gitId":"tricixg"},"content":"        this.calendarMonth \u003d new CalendarMonth(filteredSessionsList);","lastModifiedDate":"2023-04-03"},{"lineNumber":143,"author":{"gitId":"tricixg"},"content":"        currentMonth \u003d getPreviousMonth(currentMonth);","lastModifiedDate":"2023-03-21"},{"lineNumber":144,"author":{"gitId":"tricixg"},"content":"        updateCalendarMonth();","lastModifiedDate":"2023-03-21"},{"lineNumber":145,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":146,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":147,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":149,"author":{"gitId":"tricixg"},"content":"     * Displays the CalendarEvents in the next month.","lastModifiedDate":"2023-03-21"},{"lineNumber":150,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"tricixg"},"content":"    public void next() {","lastModifiedDate":"2023-03-21"},{"lineNumber":152,"author":{"gitId":"tricixg"},"content":"        this.calendarMonth \u003d new CalendarMonth(filteredSessionsList);","lastModifiedDate":"2023-04-03"},{"lineNumber":153,"author":{"gitId":"tricixg"},"content":"        currentMonth \u003d getNextMonth(currentMonth);","lastModifiedDate":"2023-03-21"},{"lineNumber":154,"author":{"gitId":"tricixg"},"content":"        updateCalendarMonth();","lastModifiedDate":"2023-03-21"},{"lineNumber":155,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":156,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":157,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":158,"author":{"gitId":"tricixg"},"content":"    private void updateCalendarMonth() {","lastModifiedDate":"2023-03-21"},{"lineNumber":159,"author":{"gitId":"tricixg"},"content":"        Text newMonthHeader \u003d getTextHeader();","lastModifiedDate":"2023-03-21"},{"lineNumber":160,"author":{"gitId":"tricixg"},"content":"        calendarDisplay.setTopCalendarHeader(0, newMonthHeader);","lastModifiedDate":"2023-03-21"},{"lineNumber":161,"author":{"gitId":"tricixg"},"content":"        calendarDisplay.resetMargin(newMonthHeader);","lastModifiedDate":"2023-03-21"},{"lineNumber":162,"author":{"gitId":"tricixg"},"content":"        calendarDisplay.resetCalendarBody();","lastModifiedDate":"2023-03-21"},{"lineNumber":163,"author":{"gitId":"tricixg"},"content":"        drawBody();","lastModifiedDate":"2023-03-21"},{"lineNumber":164,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":165,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":166,"author":{"gitId":"tricixg"},"content":"    private GregorianCalendar getPreviousMonth(Calendar cal) {","lastModifiedDate":"2023-03-21"},{"lineNumber":167,"author":{"gitId":"tricixg"},"content":"        int prevMonth;","lastModifiedDate":"2023-03-21"},{"lineNumber":168,"author":{"gitId":"tricixg"},"content":"        int prevYear;","lastModifiedDate":"2023-03-21"},{"lineNumber":169,"author":{"gitId":"tricixg"},"content":"        int currentMonth \u003d cal.get(Calendar.MONTH);","lastModifiedDate":"2023-03-21"},{"lineNumber":170,"author":{"gitId":"tricixg"},"content":"        //If December, reset back to January, Add a year","lastModifiedDate":"2023-03-21"},{"lineNumber":171,"author":{"gitId":"tricixg"},"content":"        if (currentMonth \u003d\u003d 0) {","lastModifiedDate":"2023-03-21"},{"lineNumber":172,"author":{"gitId":"tricixg"},"content":"            prevMonth \u003d 11;","lastModifiedDate":"2023-03-21"},{"lineNumber":173,"author":{"gitId":"tricixg"},"content":"            prevYear \u003d cal.get(Calendar.YEAR) - 1;","lastModifiedDate":"2023-03-21"},{"lineNumber":174,"author":{"gitId":"tricixg"},"content":"        } else { //else add a month, retain the year","lastModifiedDate":"2023-03-21"},{"lineNumber":175,"author":{"gitId":"tricixg"},"content":"            prevMonth \u003d currentMonth - 1;","lastModifiedDate":"2023-03-21"},{"lineNumber":176,"author":{"gitId":"tricixg"},"content":"            prevYear \u003d cal.get(Calendar.YEAR);","lastModifiedDate":"2023-03-21"},{"lineNumber":177,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":178,"author":{"gitId":"tricixg"},"content":"        return new GregorianCalendar(prevYear, prevMonth, 1);","lastModifiedDate":"2023-03-21"},{"lineNumber":179,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":180,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":181,"author":{"gitId":"tricixg"},"content":"    private GregorianCalendar getNextMonth(Calendar cal) {","lastModifiedDate":"2023-03-21"},{"lineNumber":182,"author":{"gitId":"tricixg"},"content":"        int futureMonth;","lastModifiedDate":"2023-03-21"},{"lineNumber":183,"author":{"gitId":"tricixg"},"content":"        int futureYear;","lastModifiedDate":"2023-03-21"},{"lineNumber":184,"author":{"gitId":"tricixg"},"content":"        int currentMonth \u003d cal.get(Calendar.MONTH);","lastModifiedDate":"2023-03-21"},{"lineNumber":185,"author":{"gitId":"tricixg"},"content":"        //If January, reset back to December, decrement a year","lastModifiedDate":"2023-03-21"},{"lineNumber":186,"author":{"gitId":"tricixg"},"content":"        if (currentMonth \u003d\u003d 11) {","lastModifiedDate":"2023-03-21"},{"lineNumber":187,"author":{"gitId":"tricixg"},"content":"            futureMonth \u003d 0;","lastModifiedDate":"2023-03-21"},{"lineNumber":188,"author":{"gitId":"tricixg"},"content":"            futureYear \u003d cal.get(Calendar.YEAR) + 1;","lastModifiedDate":"2023-03-21"},{"lineNumber":189,"author":{"gitId":"tricixg"},"content":"        } else { //else decrement a month, retain the year","lastModifiedDate":"2023-03-21"},{"lineNumber":190,"author":{"gitId":"tricixg"},"content":"            futureMonth \u003d currentMonth + 1;","lastModifiedDate":"2023-03-21"},{"lineNumber":191,"author":{"gitId":"tricixg"},"content":"            futureYear \u003d cal.get(Calendar.YEAR);","lastModifiedDate":"2023-03-21"},{"lineNumber":192,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":193,"author":{"gitId":"tricixg"},"content":"        return new GregorianCalendar(futureYear, futureMonth, 1);","lastModifiedDate":"2023-03-21"},{"lineNumber":194,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":195,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-03-21"},{"lineNumber":196,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"tricixg":196}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"Oliverloo0909"},"content":"    ObservableList\u003cSession\u003e getFilteredSessionList();","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"tricixg":1,"Oliverloo0909":3,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"Oliverloo0909"},"content":"    public ObservableList\u003cSession\u003e getFilteredSessionList() {","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"Oliverloo0909"},"content":"        return model.getFilteredSessionList();","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"tricixg":1,"Oliverloo0909":6,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"jengoc415"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PAY_RATE;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"jengoc415"},"content":"            + PREFIX_PAY_RATE + \"PAY RATE \"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"jengoc415"},"content":"            + PREFIX_PAY_RATE + \"35 \"","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"Tempura-Person"},"content":"        model.commitAddressBook();","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jengoc415":3,"Tempura-Person":1,"-":64}},{"path":"src/main/java/seedu/address/logic/commands/AddTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.person.PayRate;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":" * Adds a person to a tag to in the address book.","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"public class AddTagCommand extends Command {","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String COMMAND_WORD \u003d \"add-tag\";","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Add a person of index i to a tag specified. \"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"            + PREFIX_TAG + \"varsity\";","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String ADD_TAG_PERSON_SUCCESS \u003d \"Added Person: %1$s to tags: %2$s\";","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String STUDENT_ALREADY_ADDED_FAILURE \u003d \"%1$s already has tag: %2$s\";","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"    private final Set\u003cTag\u003e tagsToAdd;","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"    private final Index index;","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"     * command constructor","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"     * @param tagsToAdd details to edit the person with","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"    public AddTagCommand(Index index, Set\u003cTag\u003e tagsToAdd) {","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"Oliverloo0909"},"content":"        this.tagsToAdd \u003d tagsToAdd;","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"Oliverloo0909"},"content":"     * creates a modified person","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"Oliverloo0909"},"content":"     * @param person","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"Oliverloo0909"},"content":"     * @param tags","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"Oliverloo0909"},"content":"     * @return","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"Oliverloo0909"},"content":"    public Person createModifiedPerson(Person person, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"Oliverloo0909"},"content":"        Name updatedName \u003d person.getName();","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Oliverloo0909"},"content":"        Phone updatedPhone \u003d person.getPhone();","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"Oliverloo0909"},"content":"        Address updatedAddress \u003d person.getAddress();","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"Oliverloo0909"},"content":"        PayRate updatedPayRate \u003d person.getPayRate();","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"Oliverloo0909"},"content":"        Set\u003cTag\u003e updatedTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"Oliverloo0909"},"content":"        updatedTags.addAll(tags);","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"Oliverloo0909"},"content":"        return new Person(updatedName, updatedPhone, updatedAddress, updatedPayRate, updatedTags);","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"Oliverloo0909"},"content":"     * Create modified tag","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"Oliverloo0909"},"content":"     * @param model","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"Oliverloo0909"},"content":"     * @param personToModify","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"Oliverloo0909"},"content":"     * @return Set of tags","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"Oliverloo0909"},"content":"     * @throws CommandException","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"Oliverloo0909"},"content":"    public Set\u003cTag\u003e addToModifiedTag(Model model, Person personToModify) throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"Oliverloo0909"},"content":"        Set\u003cTag\u003e existingTag \u003d personToModify.getTags();","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"Oliverloo0909"},"content":"        Set\u003cTag\u003e modifiedTag \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"Oliverloo0909"},"content":"        modifiedTag.addAll(existingTag);","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"Oliverloo0909"},"content":"        for (Tag tag : tagsToAdd) {","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"Oliverloo0909"},"content":"            if (personToModify.getTags().contains(tag)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"Oliverloo0909"},"content":"                throw new CommandException(String.format(","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"Oliverloo0909"},"content":"                        STUDENT_ALREADY_ADDED_FAILURE,","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"jengoc415"},"content":"                        personToModify.getName().formattedName,","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"Oliverloo0909"},"content":"                        tag));","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"Oliverloo0909"},"content":"            modifiedTag.add(tag);","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"Oliverloo0909"},"content":"        return modifiedTag;","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"Oliverloo0909"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"Oliverloo0909"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"Oliverloo0909"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"Oliverloo0909"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"Oliverloo0909"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"Oliverloo0909"},"content":"        Person personToAddTag \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"Oliverloo0909"},"content":"        Set\u003cTag\u003e tagsAdded \u003d addToModifiedTag(model, personToAddTag);","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"Oliverloo0909"},"content":"        Person modifiedPerson \u003d createModifiedPerson(personToAddTag, tagsAdded);","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"Oliverloo0909"},"content":"        model.setPerson(personToAddTag, modifiedPerson);","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"Oliverloo0909"},"content":"        model.commitAddressBook();","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"Oliverloo0909"},"content":"        return new CommandResult(String.format(ADD_TAG_PERSON_SUCCESS, personToAddTag.getName(), tagsToAdd));","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"Oliverloo0909"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"Oliverloo0909"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"Oliverloo0909"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"Oliverloo0909"},"content":"            return true;","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"Oliverloo0909"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"Oliverloo0909"},"content":"        if (!(other instanceof AddTagCommand)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"Oliverloo0909"},"content":"            return false;","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"Oliverloo0909"},"content":"        AddTagCommand e \u003d (AddTagCommand) other;","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"Oliverloo0909"},"content":"        return index.equals(e.index) \u0026\u0026 tagsToAdd.equals(e.tagsToAdd);","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"jengoc415":1,"Oliverloo0909":119}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"Tempura-Person"},"content":"        model.commitAddressBook();","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tempura-Person":1,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/CreateSessionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SESSION;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"import java.util.List;","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":" * Creates session and adds it to the session list","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"public class CreateSessionCommand extends Command {","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String COMMAND_WORD \u003d \"create-session\";","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a new session to the address book. \"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"            + PREFIX_SESSION + \"SESSION \"","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"jengoc415"},"content":"            + PREFIX_LOCATION + \"LOCATION \\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"            + PREFIX_NAME + \"Hall \"","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"            + PREFIX_SESSION + \"10-03-2022 10:00 to 10-03-2022 11:00 \"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"            + PREFIX_LOCATION + \"Leon Lim Sports Hall Of Champions\";","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New session added: %1$s\";","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String MESSAGE_DUPLICATE_SESSION \u003d \"This session already exists in the address book\";","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"    public static final String MESSAGE_SESSION_OVERLAP \u003d \"This session overlaps with an existing session\";","lastModifiedDate":"2023-04-03"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"    private final Session toAdd;","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"     * Creates an CreateSessionCommand to add the specified {@code Session}","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"    public CreateSessionCommand(Session session) {","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"        requireNonNull(session);","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"        toAdd \u003d session;","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"Oliverloo0909"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"Oliverloo0909"},"content":"        if (model.hasSession(toAdd)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"Oliverloo0909"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_SESSION);","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"        List\u003cSession\u003e overlappingSessions \u003d model.getFilteredSessionList().stream()","lastModifiedDate":"2023-04-03"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"                .filter(session -\u003e session.overlaps(toAdd))","lastModifiedDate":"2023-04-03"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-04-03"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"        if (!overlappingSessions.isEmpty()) {","lastModifiedDate":"2023-04-03"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"            throw new CommandException(MESSAGE_SESSION_OVERLAP);","lastModifiedDate":"2023-04-03"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":61,"author":{"gitId":"Oliverloo0909"},"content":"        model.addSession(toAdd);","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"Oliverloo0909"},"content":"        model.commitAddressBook();","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"Oliverloo0909"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"Oliverloo0909"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"Oliverloo0909"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"Oliverloo0909"},"content":"                || (other instanceof CreateSessionCommand // instanceof handles nulls","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"Oliverloo0909"},"content":"                \u0026\u0026 toAdd.equals(((CreateSessionCommand) other).toAdd));","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"tricixg":17,"jengoc415":1,"Oliverloo0909":54}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"Tempura-Person"},"content":"        model.commitAddressBook();","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tempura-Person":1,"-":53}},{"path":"src/main/java/seedu/address/logic/commands/DeleteSessionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":" * Deletes a session from the address book.","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"public class DeleteSessionCommand extends Command {","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String COMMAND_WORD \u003d \"delete-session\";","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Removes an existing session to the address book. \"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \";","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Session removed: %1$s\";","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String MESSAGE_SESSION_NOT_FOUND \u003d \"This session does not exist in the address book\";","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"    public final Index index;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"     * Creates a DeleteSessionCommand to remove the specified {@code Session}","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"     * @param index","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"    public DeleteSessionCommand(Index index) {","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"        List\u003cSession\u003e lastShownList \u003d model.getFilteredSessionList();","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_SESSION_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"        Session toRemove \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"Oliverloo0909"},"content":"        if (!model.hasSession(toRemove)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"Oliverloo0909"},"content":"            throw new CommandException(MESSAGE_SESSION_NOT_FOUND);","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"Oliverloo0909"},"content":"        model.removeSession(toRemove);","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"Oliverloo0909"},"content":"        model.commitAddressBook();","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"Oliverloo0909"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toRemove));","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"tricixg":7,"Oliverloo0909":48}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"jengoc415"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PAY_RATE;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"import seedu.address.model.person.PayRate;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"jengoc415"},"content":"            + \"[\" + PREFIX_PAY_RATE + \"PAY RATE] \"","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"jengoc415"},"content":"            + PREFIX_PAY_RATE + \"90\";","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"Tempura-Person"},"content":"        model.commitAddressBook();","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"jengoc415"},"content":"        PayRate updatedPayRate \u003d editPersonDescriptor.getPayRate().orElse(personToEdit.getPayRate());","lastModifiedDate":"2023-02-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"Tempura-Person"},"content":"        return new Person(updatedName, updatedPhone, updatedAddress, updatedPayRate, updatedTags);","lastModifiedDate":"2023-03-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"jengoc415"},"content":"        private PayRate payRate;","lastModifiedDate":"2023-02-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"Oliverloo0909"},"content":"        private Tag groupToAdd;","lastModifiedDate":"2023-03-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"jengoc415"},"content":"            setPayRate(toCopy.payRate);","lastModifiedDate":"2023-02-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"jengoc415"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, address, payRate, tags);","lastModifiedDate":"2023-02-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"jengoc415"},"content":"        public void setPayRate(PayRate payRate) {","lastModifiedDate":"2023-02-24"},{"lineNumber":178,"author":{"gitId":"jengoc415"},"content":"            this.payRate \u003d payRate;","lastModifiedDate":"2023-02-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"jengoc415"},"content":"        public Optional\u003cPayRate\u003e getPayRate() {","lastModifiedDate":"2023-02-24"},{"lineNumber":182,"author":{"gitId":"jengoc415"},"content":"            return Optional.ofNullable(payRate);","lastModifiedDate":"2023-02-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":229,"author":{"gitId":"jengoc415"},"content":"                    \u0026\u0026 getPayRate().equals(e.getPayRate())","lastModifiedDate":"2023-02-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"tricixg":3,"jengoc415":12,"Tempura-Person":2,"Oliverloo0909":4,"-":212}},{"path":"src/main/java/seedu/address/logic/commands/EditSessionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jengoc415"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"jengoc415"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"jengoc415"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"jengoc415"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"jengoc415"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SESSION;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"jengoc415"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_SESSIONS;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"jengoc415"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"jengoc415"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"jengoc415"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"jengoc415"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"jengoc415"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"jengoc415"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"jengoc415"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"jengoc415"},"content":"import seedu.address.model.session.Location;","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"jengoc415"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"jengoc415"},"content":"import seedu.address.model.session.SessionName;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"jengoc415"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"jengoc415"},"content":" * Edits the details of an existing session in the address book.","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"jengoc415"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"jengoc415"},"content":"public class EditSessionCommand extends Command {","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"jengoc415"},"content":"    public static final String COMMAND_WORD \u003d \"session-edit\";","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"jengoc415"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the session identified \"","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"jengoc415"},"content":"            + \"by the index number used in the displayed session list. \"","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"jengoc415"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"jengoc415"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"jengoc415"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"jengoc415"},"content":"            + \"[\" + PREFIX_SESSION + \"SESSION] \"","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"jengoc415"},"content":"            + \"[\" + PREFIX_LOCATION + \"LOCATION] \"","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"jengoc415"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"jengoc415"},"content":"            + PREFIX_NAME + \"Hall \"","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"jengoc415"},"content":"            + PREFIX_SESSION + \"10-03-2022 10:00 to 10-03-2022 11:00 \"","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"jengoc415"},"content":"            + PREFIX_LOCATION + \"MPSH\";","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"jengoc415"},"content":"    public static final String MESSAGE_EDIT_SESSION_SUCCESS \u003d \"Edited Session: %1$s\";","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"jengoc415"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"    public static final String MESSAGE_DUPLICATE_SESSION_TIME \u003d \"This session overlaps with an existing session.\";","lastModifiedDate":"2023-04-03"},{"lineNumber":44,"author":{"gitId":"jengoc415"},"content":"    public static final String MESSAGE_DUPLICATE_SESSION \u003d \"This session already exists in the address book.\";","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":47,"author":{"gitId":"jengoc415"},"content":"    private final Index index;","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"jengoc415"},"content":"    private final EditSessionDescriptor editSessionDescriptor;","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"jengoc415"},"content":"     * @param index of the session in the filtered session list to edit","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"jengoc415"},"content":"     * @param editSessionDescriptor details to edit the session with","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"jengoc415"},"content":"    public EditSessionCommand(Index index, EditSessionDescriptor editSessionDescriptor) {","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"jengoc415"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"jengoc415"},"content":"        requireNonNull(editSessionDescriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"jengoc415"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"jengoc415"},"content":"        this.editSessionDescriptor \u003d new EditSessionDescriptor(editSessionDescriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"jengoc415"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"jengoc415"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"jengoc415"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"jengoc415"},"content":"        List\u003cSession\u003e lastShownList \u003d model.getFilteredSessionList();","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"jengoc415"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"jengoc415"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_SESSION_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"jengoc415"},"content":"        Session sessionToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"jengoc415"},"content":"        Session editedSession \u003d createEditedSession(sessionToEdit, editSessionDescriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"tricixg"},"content":"        if (!sessionToEdit.isSameSession(editedSession)) {","lastModifiedDate":"2023-04-03"},{"lineNumber":76,"author":{"gitId":"jengoc415"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_SESSION);","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"tricixg"},"content":"        if (sessionToEdit.overlaps(editedSession)) {","lastModifiedDate":"2023-04-03"},{"lineNumber":80,"author":{"gitId":"tricixg"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_SESSION_TIME);","lastModifiedDate":"2023-04-03"},{"lineNumber":81,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":82,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":83,"author":{"gitId":"jengoc415"},"content":"        model.setSession(sessionToEdit, editedSession);","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"jengoc415"},"content":"        model.updateFilteredSessionList(PREDICATE_SHOW_ALL_SESSIONS);","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"jengoc415"},"content":"        model.commitAddressBook();","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"jengoc415"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_SESSION_SUCCESS, editedSession));","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"jengoc415"},"content":"     * Creates and returns a {@code Session} with the details of {@code sessionToEdit}","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"jengoc415"},"content":"     * edited with {@code editSessionDescriptor}.","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"jengoc415"},"content":"    private static Session createEditedSession(Session sessionToEdit, EditSessionDescriptor editSessionDescriptor) {","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"jengoc415"},"content":"        assert sessionToEdit !\u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"jengoc415"},"content":"        SessionName updatedSessionName \u003d editSessionDescriptor.getSessionName().orElse(","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"jengoc415"},"content":"                sessionToEdit.getSessionName());","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"jengoc415"},"content":"        String updatedSessionStartDateTime \u003d editSessionDescriptor.getStartDateTime().orElse(","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"jengoc415"},"content":"                sessionToEdit.getStartDateTime());","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"jengoc415"},"content":"        String updatedSessionEndDateTime \u003d editSessionDescriptor.getEndDateTime().orElse(","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"jengoc415"},"content":"                sessionToEdit.getEndDateTime());","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"jengoc415"},"content":"        Location updatedLocation \u003d editSessionDescriptor.getLocation().orElse(","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"jengoc415"},"content":"                sessionToEdit.getLocation());","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"jengoc415"},"content":"        return new Session(updatedSessionStartDateTime, updatedSessionEndDateTime, updatedSessionName, updatedLocation);","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"jengoc415"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"jengoc415"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"jengoc415"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"jengoc415"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"jengoc415"},"content":"            return true;","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"jengoc415"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"jengoc415"},"content":"        if (!(other instanceof EditSessionCommand)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"jengoc415"},"content":"            return false;","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"jengoc415"},"content":"        // state check","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"jengoc415"},"content":"        EditSessionCommand e \u003d (EditSessionCommand) other;","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"jengoc415"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"jengoc415"},"content":"                \u0026\u0026 editSessionDescriptor.equals(e.editSessionDescriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"jengoc415"},"content":"     * Stores the details to edit the Session with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"jengoc415"},"content":"     * corresponding field value of the Session.","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"jengoc415"},"content":"    public static class EditSessionDescriptor {","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"jengoc415"},"content":"        private SessionName sessionName;","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"jengoc415"},"content":"        private String startDateTime;","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"jengoc415"},"content":"        private String endDateTime;","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"jengoc415"},"content":"        private Location location;","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"jengoc415"},"content":"        public EditSessionDescriptor() {","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":138,"author":{"gitId":"jengoc415"},"content":"        /**","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"jengoc415"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"jengoc415"},"content":"         * A defensive copy is used internally.","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"jengoc415"},"content":"         */","lastModifiedDate":"2023-03-30"},{"lineNumber":142,"author":{"gitId":"jengoc415"},"content":"        public EditSessionDescriptor(EditSessionDescriptor toCopy) {","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"jengoc415"},"content":"            setSessionName(toCopy.sessionName);","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"jengoc415"},"content":"            setStartDateTime(toCopy.startDateTime);","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"jengoc415"},"content":"            setEndDateTime(toCopy.endDateTime);","lastModifiedDate":"2023-03-30"},{"lineNumber":146,"author":{"gitId":"jengoc415"},"content":"            setLocation(toCopy.location);","lastModifiedDate":"2023-03-30"},{"lineNumber":147,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"jengoc415"},"content":"        /**","lastModifiedDate":"2023-03-30"},{"lineNumber":150,"author":{"gitId":"jengoc415"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-30"},{"lineNumber":151,"author":{"gitId":"jengoc415"},"content":"         */","lastModifiedDate":"2023-03-30"},{"lineNumber":152,"author":{"gitId":"jengoc415"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-30"},{"lineNumber":153,"author":{"gitId":"jengoc415"},"content":"            return CollectionUtil.isAnyNonNull(sessionName, startDateTime, endDateTime, location);","lastModifiedDate":"2023-03-30"},{"lineNumber":154,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":155,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":156,"author":{"gitId":"jengoc415"},"content":"        public void setSessionName(SessionName sessionName) {","lastModifiedDate":"2023-03-30"},{"lineNumber":157,"author":{"gitId":"jengoc415"},"content":"            this.sessionName \u003d sessionName;","lastModifiedDate":"2023-03-30"},{"lineNumber":158,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":159,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":160,"author":{"gitId":"jengoc415"},"content":"        public Optional\u003cSessionName\u003e getSessionName() {","lastModifiedDate":"2023-03-30"},{"lineNumber":161,"author":{"gitId":"jengoc415"},"content":"            return Optional.ofNullable(sessionName);","lastModifiedDate":"2023-03-30"},{"lineNumber":162,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":163,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":164,"author":{"gitId":"jengoc415"},"content":"        public void setStartDateTime(String startDateTime) {","lastModifiedDate":"2023-03-30"},{"lineNumber":165,"author":{"gitId":"jengoc415"},"content":"            this.startDateTime \u003d startDateTime;","lastModifiedDate":"2023-03-30"},{"lineNumber":166,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":167,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":168,"author":{"gitId":"jengoc415"},"content":"        public void setEndDateTime(String endDateTime) {","lastModifiedDate":"2023-03-30"},{"lineNumber":169,"author":{"gitId":"jengoc415"},"content":"            this.endDateTime \u003d endDateTime;","lastModifiedDate":"2023-03-30"},{"lineNumber":170,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":172,"author":{"gitId":"jengoc415"},"content":"        public Optional\u003cString\u003e getStartDateTime() {","lastModifiedDate":"2023-03-30"},{"lineNumber":173,"author":{"gitId":"jengoc415"},"content":"            return Optional.ofNullable(startDateTime);","lastModifiedDate":"2023-03-30"},{"lineNumber":174,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":175,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":176,"author":{"gitId":"jengoc415"},"content":"        public Optional\u003cString\u003e getEndDateTime() {","lastModifiedDate":"2023-03-30"},{"lineNumber":177,"author":{"gitId":"jengoc415"},"content":"            return Optional.ofNullable(endDateTime);","lastModifiedDate":"2023-03-30"},{"lineNumber":178,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":179,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":180,"author":{"gitId":"jengoc415"},"content":"        public void setLocation(Location location) {","lastModifiedDate":"2023-03-30"},{"lineNumber":181,"author":{"gitId":"jengoc415"},"content":"            this.location \u003d location;","lastModifiedDate":"2023-03-30"},{"lineNumber":182,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":183,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":184,"author":{"gitId":"jengoc415"},"content":"        public Optional\u003cLocation\u003e getLocation() {","lastModifiedDate":"2023-03-30"},{"lineNumber":185,"author":{"gitId":"jengoc415"},"content":"            return Optional.ofNullable(location);","lastModifiedDate":"2023-03-30"},{"lineNumber":186,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":187,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":188,"author":{"gitId":"jengoc415"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":189,"author":{"gitId":"jengoc415"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-30"},{"lineNumber":190,"author":{"gitId":"jengoc415"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-30"},{"lineNumber":191,"author":{"gitId":"jengoc415"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-30"},{"lineNumber":192,"author":{"gitId":"jengoc415"},"content":"                return true;","lastModifiedDate":"2023-03-30"},{"lineNumber":193,"author":{"gitId":"jengoc415"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":194,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":195,"author":{"gitId":"jengoc415"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-30"},{"lineNumber":196,"author":{"gitId":"jengoc415"},"content":"            if (!(other instanceof EditSessionDescriptor)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":197,"author":{"gitId":"jengoc415"},"content":"                return false;","lastModifiedDate":"2023-03-30"},{"lineNumber":198,"author":{"gitId":"jengoc415"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":199,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":200,"author":{"gitId":"jengoc415"},"content":"            // state check","lastModifiedDate":"2023-03-30"},{"lineNumber":201,"author":{"gitId":"jengoc415"},"content":"            EditSessionDescriptor e \u003d (EditSessionDescriptor) other;","lastModifiedDate":"2023-03-30"},{"lineNumber":202,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":203,"author":{"gitId":"jengoc415"},"content":"            return getSessionName().equals(e.getSessionName())","lastModifiedDate":"2023-03-30"},{"lineNumber":204,"author":{"gitId":"jengoc415"},"content":"                    \u0026\u0026 getStartDateTime().equals(e.getStartDateTime())","lastModifiedDate":"2023-03-30"},{"lineNumber":205,"author":{"gitId":"jengoc415"},"content":"                    \u0026\u0026 getEndDateTime().equals(e.getEndDateTime())","lastModifiedDate":"2023-03-30"},{"lineNumber":206,"author":{"gitId":"jengoc415"},"content":"                    \u0026\u0026 getLocation().equals(e.getLocation());","lastModifiedDate":"2023-03-30"},{"lineNumber":207,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":208,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":209,"author":{"gitId":"jengoc415"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"tricixg":7,"jengoc415":202}},{"path":"src/main/java/seedu/address/logic/commands/MarkAttendanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jengoc415"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":" * Represents a command to mark attendance of a student in a specified session.","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"public class MarkAttendanceCommand extends Command {","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"            + \": mark attendance of specified person\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"            + \"Parameters: SESSION INDEX \" + PREFIX_NAME + \"STUDENT_NAME\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"            + PREFIX_NAME + \"John Doe\";","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"marked attendance of %1s in %2s\\n\";","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String MESSAGE_PERSON_NOT_FOUND \u003d \"person specified cannot be found\";","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"    private Name personName;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"    private Index index;","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"     * Constructs a MarkAttendanceCommand with the given session index and person name.","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"     * @param index Index of the session in the filtered session list to mark attendance for.","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"     * @param personName Name of the person to mark attendance for.","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"    public MarkAttendanceCommand(Index index, Name personName) {","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"        this.personName \u003d personName;","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"        List\u003cSession\u003e lastShownList \u003d model.getFilteredSessionList();","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"Oliverloo0909"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"Oliverloo0909"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_SESSION_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"Oliverloo0909"},"content":"        Session sessionToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"Oliverloo0909"},"content":"        Session editedSession \u003d sessionToEdit.copy();","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"jengoc415"},"content":"        if (!sessionToEdit.contains(personName.formattedName)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"Oliverloo0909"},"content":"            throw new CommandException(MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"Oliverloo0909"},"content":"        //mark student in session","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"jengoc415"},"content":"        editedSession.markStudentPresent(personName.formattedName);","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"Oliverloo0909"},"content":"        model.setSession(sessionToEdit, editedSession);","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"Oliverloo0909"},"content":"        model.commitAddressBook();","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"Oliverloo0909"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, personName, sessionToEdit.getName()));","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"jengoc415"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"tricixg":13,"jengoc415":5,"Oliverloo0909":47}},{"path":"src/main/java/seedu/address/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"Tempura-Person"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"Tempura-Person"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"Tempura-Person"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"Tempura-Person"},"content":" * Redoes a previously executed command from the user.","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"Tempura-Person"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"Tempura-Person"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Redo a previous command. \"","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"Tempura-Person"},"content":"            + \"Example: \" + COMMAND_WORD + \" \";","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"Tempura-Person"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Redid previous command\";","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"Tempura-Person"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"Tempura-Person"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"Tempura-Person"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"Tempura-Person"},"content":"        model.redoAddressBook();","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"Tempura-Person"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"Tempura-Person"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"Tempura-Person":26}},{"path":"src/main/java/seedu/address/logic/commands/RemoveTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.person.PayRate;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":" * Removes a person from a tag in the address book.","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"public class RemoveTagCommand extends Command {","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String COMMAND_WORD \u003d \"remove-tag\";","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Remove a person of index i to a tag specified. \"","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"            + PREFIX_TAG + \"varsity\";","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String REMOVE_TAG_PERSON_SUCCESS \u003d \"Removed Person: %1$s from tags: %2$s\";","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String TAG_NOT_FOUND_FAILURE \u003d \"Tags not found: %1$s\";","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"    private final Set\u003cTag\u003e tagsToRemove;","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"    private final Index index;","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"     * command constructor","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"     * @param tagsToRemove details to edit the person with","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"    public RemoveTagCommand(Index index, Set\u003cTag\u003e tagsToRemove) {","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"        this.tagsToRemove \u003d tagsToRemove;","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"Oliverloo0909"},"content":"     * creates a modified person","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"Oliverloo0909"},"content":"     * @param person","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"Oliverloo0909"},"content":"     * @param tags","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"Oliverloo0909"},"content":"     * @return","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"Oliverloo0909"},"content":"    public Person createModifiedPerson(Person person, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"Oliverloo0909"},"content":"        Name updatedName \u003d person.getName();","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"Oliverloo0909"},"content":"        Phone updatedPhone \u003d person.getPhone();","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Oliverloo0909"},"content":"        Address updatedAddress \u003d person.getAddress();","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"Oliverloo0909"},"content":"        PayRate updatedPayRate \u003d person.getPayRate();","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"Oliverloo0909"},"content":"        Set\u003cTag\u003e updatedTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"Oliverloo0909"},"content":"        updatedTags.addAll(tags);","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"Oliverloo0909"},"content":"        return new Person(updatedName, updatedPhone, updatedAddress, updatedPayRate, updatedTags);","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"Oliverloo0909"},"content":"     * Create modified tag","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"Oliverloo0909"},"content":"     * @param model","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"Oliverloo0909"},"content":"     * @param personToModify","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"Oliverloo0909"},"content":"     * @return set of tags","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"Oliverloo0909"},"content":"     * @throws CommandException","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"Oliverloo0909"},"content":"    public Set\u003cTag\u003e removeFromModifiedTag(Model model, Person personToModify) throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"Oliverloo0909"},"content":"        Set\u003cTag\u003e existingTag \u003d personToModify.getTags();","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"Oliverloo0909"},"content":"        Set\u003cTag\u003e modifiedTag \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"Oliverloo0909"},"content":"        modifiedTag.addAll(existingTag);","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"Oliverloo0909"},"content":"        for (Tag tag : tagsToRemove) {","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"Oliverloo0909"},"content":"            if (!personToModify.getTags().contains(tag)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"Oliverloo0909"},"content":"                throw new CommandException(String.format(TAG_NOT_FOUND_FAILURE,","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"Oliverloo0909"},"content":"                        tag));","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"Oliverloo0909"},"content":"            modifiedTag.remove(tag);","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"Oliverloo0909"},"content":"        return modifiedTag;","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"Oliverloo0909"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"Oliverloo0909"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"Oliverloo0909"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"Oliverloo0909"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"Oliverloo0909"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"Oliverloo0909"},"content":"        Person personToRemoveTag \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"Oliverloo0909"},"content":"        Set\u003cTag\u003e tagsRemoved \u003d removeFromModifiedTag(model, personToRemoveTag);","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"Oliverloo0909"},"content":"        Person modifiedPerson \u003d createModifiedPerson(personToRemoveTag, tagsRemoved);","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"Oliverloo0909"},"content":"        model.setPerson(personToRemoveTag, modifiedPerson);","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"Oliverloo0909"},"content":"        model.commitAddressBook();","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"Oliverloo0909"},"content":"        return new CommandResult(String.format(REMOVE_TAG_PERSON_SUCCESS, personToRemoveTag.getName(), tagsToRemove));","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"Oliverloo0909"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"Oliverloo0909"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"Oliverloo0909"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"Oliverloo0909"},"content":"            return true;","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"Oliverloo0909"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"Oliverloo0909"},"content":"        if (!(other instanceof RemoveTagCommand)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"Oliverloo0909"},"content":"            return false;","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"Oliverloo0909"},"content":"        RemoveTagCommand e \u003d (RemoveTagCommand) other;","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"Oliverloo0909"},"content":"        return index.equals(e.index) \u0026\u0026 tagsToRemove.equals(e.tagsToRemove);","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Oliverloo0909":117}},{"path":"src/main/java/seedu/address/logic/commands/ShowCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.person.TagContainsGroupsPredicate;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Tempura-Person"},"content":" * Filters all persons in address book who belongs to any of the tags specified in the argument.","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":" * group name matching is case-insensitive.","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"public class ShowCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String COMMAND_WORD \u003d \"show\";","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Tempura-Person"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Displays all athletes who belong to at least one of \"","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"Tempura-Person"},"content":"            + \"the specified tags (case-insensitive).\\n\"","lastModifiedDate":"2023-04-02"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"            + \"Example: \" + COMMAND_WORD + \" Varsity Hall\";","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Tempura-Person"},"content":"    public static final String MESSAGE_SHOW_GROUP_SUCCESS \u003d \"Listed all athletes that belong to \"","lastModifiedDate":"2023-04-02"},{"lineNumber":22,"author":{"gitId":"Tempura-Person"},"content":"            + \"at least one of the following tags specified: %1$s\";","lastModifiedDate":"2023-04-02"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"    private final TagContainsGroupsPredicate predicate;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"    public ShowCommand(TagContainsGroupsPredicate predicate) {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"                String.format(MESSAGE_SHOW_GROUP_SUCCESS, predicate));","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"                || (other instanceof ShowCommand // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"                \u0026\u0026 predicate.equals(((ShowCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Tempura-Person":6,"Oliverloo0909":39}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"Tempura-Person"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"Tempura-Person"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"Tempura-Person"},"content":" * Sorts all persons in the address book and shows it to the user.","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"Tempura-Person"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"Tempura-Person"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"jengoc415"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"jengoc415"},"content":"            + \": Sorts list by given attribute\\n\"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Tempura-Person"},"content":"            + \"Parameters: ATTRIBUTE (1 - pay rate or 2 - name)\\n\"","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"jengoc415"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"jengoc415"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sorted all persons according to given attribute.\\n\";","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"jengoc415"},"content":"    private final int attribute;","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"jengoc415"},"content":"    public SortCommand(int attribute) {","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"jengoc415"},"content":"        this.attribute \u003d attribute;","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"Tempura-Person"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"Tempura-Person"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"Tempura-Person"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"jengoc415"},"content":"        model.sortAddressBook(attribute);","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"Tempura-Person"},"content":"        model.commitAddressBook();","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"Tempura-Person"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"Tempura-Person"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"jengoc415":11,"Tempura-Person":23}},{"path":"src/main/java/seedu/address/logic/commands/StudentAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.session.SessionName;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":" * Command that adds a student to a session","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"public class StudentAddCommand extends Command {","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String COMMAND_WORD \u003d \"student-add\";","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"jengoc415"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Add a student of index i to a session specified. \"","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"jengoc415"},"content":"            + \"\\nParameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"jengoc415"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"            + PREFIX_NAME + \"hall\";","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String SESSION_ADD_PERSON_SUCCESS \u003d \"Added Person: %1$s to Session: %2$s\";","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String SESSION_NOT_FOUND_FAILURE \u003d \"Session: %1$s cannot be found. \"","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"            + \"Here are the list of existing sessions: %2$s\";","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String STUDENT_ALREADY_ADDED_FAILURE \u003d \"Student already belongs to %1$s\";","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"    private SessionName sessionName;","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"    private Index index;","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"     * Creates a new {@code StudentAddCommand} to add a student to a session.","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"     * @param index Index of the student in the student list to add.","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"     * @param sessionName Name of the session to add the student to.","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"    public StudentAddCommand(Index index, SessionName sessionName) {","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"        this.sessionName \u003d sessionName;","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"Oliverloo0909"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"Oliverloo0909"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"Oliverloo0909"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"Oliverloo0909"},"content":"        Person studentToAdd \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"Oliverloo0909"},"content":"        if (!model.hasSessionName(sessionName)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"Oliverloo0909"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"Oliverloo0909"},"content":"                    SESSION_NOT_FOUND_FAILURE,","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"Oliverloo0909"},"content":"                    sessionName,","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"Oliverloo0909"},"content":"                    model.getAddressBook().getSessionList()","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"Oliverloo0909"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"Oliverloo0909"},"content":"        //Find session","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"Oliverloo0909"},"content":"        Session sessionToBeAddedTo \u003d model.getSessionFromName(sessionName);","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"Oliverloo0909"},"content":"        if (sessionToBeAddedTo.contains(studentToAdd","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"jengoc415"},"content":"                .getName().formattedName)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"Oliverloo0909"},"content":"            throw new CommandException(","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"Oliverloo0909"},"content":"                    String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"Oliverloo0909"},"content":"                            STUDENT_ALREADY_ADDED_FAILURE,","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"Oliverloo0909"},"content":"                            sessionName","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"Oliverloo0909"},"content":"                    ));","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"Oliverloo0909"},"content":"        model.addPersonToSession(studentToAdd, sessionToBeAddedTo);","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"Oliverloo0909"},"content":"        model.commitAddressBook();","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"Oliverloo0909"},"content":"        return new CommandResult(String.format(SESSION_ADD_PERSON_SUCCESS, studentToAdd.getName(), sessionToBeAddedTo));","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"tricixg":6,"jengoc415":4,"Oliverloo0909":69}},{"path":"src/main/java/seedu/address/logic/commands/StudentRemoveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"jengoc415"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"jengoc415"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"jengoc415"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"jengoc415"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"jengoc415"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"jengoc415"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"jengoc415"},"content":"import seedu.address.model.session.SessionName;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"jengoc415"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"jengoc415"},"content":" * Command to remove a student from a session","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"jengoc415"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"jengoc415"},"content":"public class StudentRemoveCommand extends Command {","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"jengoc415"},"content":"    public static final String COMMAND_WORD \u003d \"student-remove\";","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"jengoc415"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Remove a student of index i from a session specified.\"","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"jengoc415"},"content":"            + \"\\nParameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"jengoc415"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"jengoc415"},"content":"            + PREFIX_NAME + \"hall\";","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String SESSION_REMOVE_PERSON_SUCCESS \u003d \"Removed Person: %1$s to Session: %2$s\";","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String SESSION_NOT_FOUND_FAILURE \u003d \"Session: %1$s cannot be found. \";","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"jengoc415"},"content":"    public static final String STUDENT_NOT_FOUND_FAILURE \u003d \"Student not found\";","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"jengoc415"},"content":"    private SessionName sessionName;","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"jengoc415"},"content":"    private Index index;","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"     * Represents a command to remove a student from a session.","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"jengoc415"},"content":"    public StudentRemoveCommand(Index index, SessionName sessionName) {","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"jengoc415"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"jengoc415"},"content":"        this.sessionName \u003d sessionName;","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"jengoc415"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"jengoc415"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"jengoc415"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"jengoc415"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"jengoc415"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"jengoc415"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"jengoc415"},"content":"        Person studentToRemove \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"Oliverloo0909"},"content":"        if (!model.hasSessionName(sessionName)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"Oliverloo0909"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"Oliverloo0909"},"content":"                    SESSION_NOT_FOUND_FAILURE,","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"Oliverloo0909"},"content":"                    sessionName","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"Oliverloo0909"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"jengoc415"},"content":"        //Find session","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"jengoc415"},"content":"        Session session \u003d model.getSessionFromName(sessionName);","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"Oliverloo0909"},"content":"        if (!session.contains(studentToRemove","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"jengoc415"},"content":"                .getName().formattedName)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"Oliverloo0909"},"content":"            throw new CommandException(STUDENT_NOT_FOUND_FAILURE);","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"Oliverloo0909"},"content":"        model.removePersonFromSession(studentToRemove, session);","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"jengoc415"},"content":"        model.commitAddressBook();","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"jengoc415"},"content":"        return new CommandResult(String.format(SESSION_REMOVE_PERSON_SUCCESS, studentToRemove.getName(), session));","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"tricixg":8,"jengoc415":48,"Oliverloo0909":18}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"Tempura-Person"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"Tempura-Person"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"Tempura-Person"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"Tempura-Person"},"content":" * Undoes a previously executed command from the user.","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"Tempura-Person"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"Tempura-Person"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Undo a previous command. \"","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"Tempura-Person"},"content":"            + \"Example: \" + COMMAND_WORD + \" \";","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"Tempura-Person"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Undid previous command\";","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"Tempura-Person"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"Tempura-Person"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"Tempura-Person"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"Tempura-Person"},"content":"        model.undoAddressBook();","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"Tempura-Person"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"Tempura-Person"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"Tempura-Person":26}},{"path":"src/main/java/seedu/address/logic/commands/UnmarkAttendanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jengoc415"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"jengoc415"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"jengoc415"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"jengoc415"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":" * Command to unmark attendance of a specified person in a session.","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"public class UnmarkAttendanceCommand extends Command {","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"jengoc415"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"jengoc415"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"jengoc415"},"content":"            + \": Unmark attendance of specified person\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"            + \"Parameters: SESSION INDEX \" + PREFIX_NAME + \"STUDENT_NAME\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"jengoc415"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"            + PREFIX_NAME + \"John Doe\";","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Unmarked attendance of %1s in %2s\\n\";","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String MESSAGE_PERSON_NOT_FOUND \u003d \"person specified cannot be found\";","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"    private Name personName;","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"jengoc415"},"content":"    private Index index;","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"     * Constructs an UnmarkAttendanceCommand with the specified session index and person name.","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"     * @param index Index of the session in the displayed list.","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"     * @param personName Name of the person to unmark attendance for.","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"    public UnmarkAttendanceCommand(Index index, Name personName) {","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"jengoc415"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"        this.personName \u003d personName;","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"jengoc415"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"jengoc415"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"jengoc415"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"        List\u003cSession\u003e lastShownList \u003d model.getFilteredSessionList();","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"Oliverloo0909"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"Oliverloo0909"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_SESSION_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"Oliverloo0909"},"content":"        Session sessionToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"Oliverloo0909"},"content":"        Session editedSession \u003d sessionToEdit.copy();","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"jengoc415"},"content":"        if (!sessionToEdit.contains(personName.formattedName)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"Oliverloo0909"},"content":"            throw new CommandException(MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"Oliverloo0909"},"content":"        //unmark student in session","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"jengoc415"},"content":"        editedSession.markStudentAbsent(personName.formattedName);","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"Oliverloo0909"},"content":"        model.setSession(sessionToEdit, editedSession);","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"jengoc415"},"content":"        model.commitAddressBook();","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"Oliverloo0909"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, personName, sessionToEdit.getName()));","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"jengoc415"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"tricixg":13,"jengoc415":24,"Oliverloo0909":29}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PAY_RATE;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"import seedu.address.model.person.Address; // create a new import group for Address","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"import seedu.address.model.person.PayRate;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"Tempura-Person"},"content":"                        PREFIX_ADDRESS, PREFIX_PAY_RATE, PREFIX_TAG);","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"Tempura-Person"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_PAY_RATE)","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"jengoc415"},"content":"        PayRate payRate \u003d ParserUtil.parsePayRate(argMultimap.getValue(PREFIX_PAY_RATE).get());","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"Tempura-Person"},"content":"        Person person \u003d new Person(name, phone, address, payRate, tagList);","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"tricixg":4,"jengoc415":1,"Tempura-Person":3,"-":52}},{"path":"src/main/java/seedu/address/logic/parser/AddTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.logic.commands.AddTagCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":" * Parses input arguments and creates a new AddTagCommand object","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"public class AddTagCommandParser implements Parser\u003cAddTagCommand\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"     * informs user that he/she did not add the tag field","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String MESSAGE_TAG_DOES_NOT_EXIST_PARSE_FAILURE \u003d \"Did not specify tag field! \\n%1$s\";","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTagCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"     * and returns an specific case of AddTagCommand object for execution.","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"    public AddTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"        Index index;","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"                    AddTagCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"        if (argMultimap.getAllValues(PREFIX_TAG).isEmpty()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"            throw new ParseException(String.format(MESSAGE_TAG_DOES_NOT_EXIST_PARSE_FAILURE,","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"                    AddTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"        return new AddTagCommand(index, tagList);","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Oliverloo0909":48}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"jengoc415"},"content":"import seedu.address.logic.commands.AddTagCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"jengoc415"},"content":"import seedu.address.logic.commands.CreateSessionCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"jengoc415"},"content":"import seedu.address.logic.commands.DeleteSessionCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"jengoc415"},"content":"import seedu.address.logic.commands.EditSessionCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"jengoc415"},"content":"import seedu.address.logic.commands.MarkAttendanceCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"jengoc415"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"jengoc415"},"content":"import seedu.address.logic.commands.RemoveTagCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"jengoc415"},"content":"import seedu.address.logic.commands.ShowCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"jengoc415"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"jengoc415"},"content":"import seedu.address.logic.commands.StudentAddCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"jengoc415"},"content":"import seedu.address.logic.commands.StudentRemoveCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"jengoc415"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"jengoc415"},"content":"import seedu.address.logic.commands.UnmarkAttendanceCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"Oliverloo0909"},"content":"        case CreateSessionCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"Oliverloo0909"},"content":"            return new CreateSessionCommandParser().parse(arguments);","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"Oliverloo0909"},"content":"        case DeleteSessionCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"Oliverloo0909"},"content":"            return new DeleteSessionCommandParser().parse(arguments);","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"jengoc415"},"content":"        case EditSessionCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"jengoc415"},"content":"            return new EditSessionCommandParser().parse(arguments);","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"Oliverloo0909"},"content":"        case StudentAddCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"Oliverloo0909"},"content":"            return new StudentAddCommandParser().parse(arguments);","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"jengoc415"},"content":"        case StudentRemoveCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"jengoc415"},"content":"            return new StudentRemoveCommandParser().parse(arguments);","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"Oliverloo0909"},"content":"        case AddTagCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"Oliverloo0909"},"content":"            return new AddTagCommandParser().parse(arguments);","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"Oliverloo0909"},"content":"        case RemoveTagCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"Oliverloo0909"},"content":"            return new RemoveTagCommandParser().parse(arguments);","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":105,"author":{"gitId":"Tempura-Person"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-04"},{"lineNumber":106,"author":{"gitId":"jengoc415"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"Oliverloo0909"},"content":"        case ShowCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"Oliverloo0909"},"content":"            return new ShowCommandParser().parse(arguments);","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"Tempura-Person"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-22"},{"lineNumber":112,"author":{"gitId":"Tempura-Person"},"content":"            return new UndoCommand();","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"Tempura-Person"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"Tempura-Person"},"content":"            return new RedoCommand();","lastModifiedDate":"2023-03-22"},{"lineNumber":116,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"jengoc415"},"content":"        case MarkAttendanceCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"jengoc415"},"content":"            return new MarkAttendanceCommandParser().parse(arguments);","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"jengoc415"},"content":"        case UnmarkAttendanceCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"jengoc415"},"content":"            return new UnmarkAttendanceCommandParser().parse(arguments);","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jengoc415":26,"Tempura-Person":7,"Oliverloo0909":19,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"jengoc415"},"content":"    public static final Prefix PREFIX_PAY_RATE \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"    public static final Prefix PREFIX_SESSION \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"    public static final Prefix PREFIX_LOCATION \u003d new Prefix(\"l/\");","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jengoc415":1,"Oliverloo0909":2,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/CreateSessionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SESSION;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.logic.commands.CreateSessionCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.session.Location;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"import seedu.address.model.session.SessionName;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":" * Parses input arguments and creates a new CreateSessionCommand object.","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"public class CreateSessionCommandParser {","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"    public CreateSessionCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_SESSION,","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"                        PREFIX_LOCATION);","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_SESSION,","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"                PREFIX_LOCATION)","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateSessionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"        SessionName name \u003d ParserUtil.parseSessionName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"        ArrayList\u003cString\u003e startEnd \u003d ParserUtil.parseSession(argMultimap.getValue(PREFIX_SESSION).get());","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"        String startDateTime \u003d startEnd.get(0);","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"        String endDateTime \u003d startEnd.get(1);","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"        Location location \u003d ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get());","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"        Session session \u003d new Session(startDateTime, endDateTime, name, location);","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"        return new CreateSessionCommand(session);","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"Oliverloo0909"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"Oliverloo0909"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"Oliverloo0909"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"Oliverloo0909"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"tricixg":7,"Oliverloo0909":48}},{"path":"src/main/java/seedu/address/logic/parser/DeleteSessionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.logic.commands.DeleteSessionCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":" * Parses input arguments and creates a new DeleteSessionCommand object.","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"public class DeleteSessionCommandParser {","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"     * Parses the given {@code args} string into a {@code DeleteSessionCommand} object.","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"     * @param args The user input string to be parsed.","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"     * @return A DeleteSessionCommand object representing the parsed user input.","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"     * @throws ParseException If the user input string does not conform to the expected format.","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"    public DeleteSessionCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"                ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"        Index index;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"        try {","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"                    DeleteSessionCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"        return new DeleteSessionCommand(index);","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"tricixg":14,"Oliverloo0909":23}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"jengoc415"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PAY_RATE;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"jengoc415"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_ADDRESS, PREFIX_PAY_RATE,","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Tempura-Person"},"content":"                        PREFIX_TAG);","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"jengoc415"},"content":"        if (argMultimap.getValue(PREFIX_PAY_RATE).isPresent()) {","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"jengoc415"},"content":"            editPersonDescriptor.setPayRate(ParserUtil.parsePayRate(argMultimap.getValue(PREFIX_PAY_RATE).get()));","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jengoc415":5,"Tempura-Person":1,"-":77}},{"path":"src/main/java/seedu/address/logic/parser/EditSessionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jengoc415"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"jengoc415"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"jengoc415"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"jengoc415"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"jengoc415"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"jengoc415"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SESSION;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"jengoc415"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"jengoc415"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"jengoc415"},"content":"import seedu.address.logic.commands.EditSessionCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"jengoc415"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"jengoc415"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"jengoc415"},"content":" * Parses input arguments and creates a new EditSessionCommand object","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"jengoc415"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"jengoc415"},"content":"public class EditSessionCommandParser implements Parser\u003cEditSessionCommand\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"jengoc415"},"content":"     * Parses the given {@code String} of arguments in the context of the EditSessionCommand","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"jengoc415"},"content":"     * and returns an EditSessionCommand object for execution.","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"jengoc415"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"jengoc415"},"content":"    public EditSessionCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"jengoc415"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"jengoc415"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"jengoc415"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_SESSION, PREFIX_LOCATION);","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"jengoc415"},"content":"        Index index;","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"jengoc415"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"jengoc415"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"jengoc415"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"jengoc415"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"jengoc415"},"content":"                    EditSessionCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"jengoc415"},"content":"        EditSessionCommand.EditSessionDescriptor editSessionDescriptor \u003d new EditSessionCommand.EditSessionDescriptor();","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"jengoc415"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"jengoc415"},"content":"            editSessionDescriptor.setSessionName(ParserUtil.parseSessionName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"jengoc415"},"content":"        if (argMultimap.getValue(PREFIX_SESSION).isPresent()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"jengoc415"},"content":"            ArrayList\u003cString\u003e startEnd \u003d ParserUtil.parseSession(argMultimap.getValue(PREFIX_SESSION).get());","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"jengoc415"},"content":"            String startDateTime \u003d startEnd.get(0);","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"jengoc415"},"content":"            String endDateTime \u003d startEnd.get(1);","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"jengoc415"},"content":"            editSessionDescriptor.setStartDateTime(startDateTime);","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"jengoc415"},"content":"            editSessionDescriptor.setEndDateTime(endDateTime);","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"jengoc415"},"content":"        if (argMultimap.getValue(PREFIX_LOCATION).isPresent()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"jengoc415"},"content":"            editSessionDescriptor.setLocation(ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get()));","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"jengoc415"},"content":"        if (!editSessionDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"jengoc415"},"content":"            throw new ParseException(EditSessionCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"jengoc415"},"content":"        return new EditSessionCommand(index, editSessionDescriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"jengoc415"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"jengoc415":60}},{"path":"src/main/java/seedu/address/logic/parser/MarkAttendanceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.logic.commands.MarkAttendanceCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":" * Parses input arguments and creates a new MarkAttendanceCommand object","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"public class MarkAttendanceCommandParser {","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"     * informs user that he/she did not add the name field","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String MESSAGE_NAME_DOES_NOT_EXIST_PARSE_FAILURE \u003d \"Did not specify name field! \\n%1$s\";","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkAttendanceCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"     * and returns an specific case of GroupAddCommand object for execution.","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"    public MarkAttendanceCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"        Index index;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"                    MarkAttendanceCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"        if (argMultimap.getAllValues(PREFIX_NAME).isEmpty()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"            throw new ParseException(String.format(MESSAGE_NAME_DOES_NOT_EXIST_PARSE_FAILURE,","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"                    MarkAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"        Name personName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"        return new MarkAttendanceCommand(index, personName);","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"tricixg":4,"Oliverloo0909":41}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"import seedu.address.model.person.Address; // create a new import group for Address","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"import seedu.address.model.person.PayRate;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.session.Location;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.session.SessionName;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"Oliverloo0909"},"content":"     * Parses a {@code String session name} into a {@code SessionName}.","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"Oliverloo0909"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"Oliverloo0909"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"Oliverloo0909"},"content":"     * @throws ParseException if the given {@code session name} is invalid.","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"Oliverloo0909"},"content":"    public static SessionName parseSessionName(String name) throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"Oliverloo0909"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"Oliverloo0909"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"Oliverloo0909"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"Oliverloo0909"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"Oliverloo0909"},"content":"        return new SessionName(trimmedName);","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"jengoc415"},"content":"    public static PayRate parsePayRate(String pay) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":111,"author":{"gitId":"jengoc415"},"content":"        requireNonNull(pay);","lastModifiedDate":"2023-02-24"},{"lineNumber":112,"author":{"gitId":"jengoc415"},"content":"        String trimmedPay \u003d pay.trim();","lastModifiedDate":"2023-02-24"},{"lineNumber":113,"author":{"gitId":"jengoc415"},"content":"        if (!PayRate.isValidPayRate(trimmedPay)) {","lastModifiedDate":"2023-02-24"},{"lineNumber":114,"author":{"gitId":"jengoc415"},"content":"            throw new ParseException(PayRate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"jengoc415"},"content":"        return new PayRate(trimmedPay);","lastModifiedDate":"2023-02-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"Oliverloo0909"},"content":"            throw new ParseException(Tag.MESSAGE_ALPHANUMERIC_CONSTRAINTS);","lastModifiedDate":"2023-04-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":132,"author":{"gitId":"Oliverloo0909"},"content":"        if (!Tag.isValidLengthTagName(trimmedTag)) {","lastModifiedDate":"2023-04-03"},{"lineNumber":133,"author":{"gitId":"Oliverloo0909"},"content":"            throw new ParseException(Tag.MESSAGE_MAXIMUM_CHARACTER_CONSTRAINTS);","lastModifiedDate":"2023-04-03"},{"lineNumber":134,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":135,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":150,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":151,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":152,"author":{"gitId":"Oliverloo0909"},"content":"     * Parses a {@code String session} into an {@code Session}.","lastModifiedDate":"2023-03-27"},{"lineNumber":153,"author":{"gitId":"Oliverloo0909"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-27"},{"lineNumber":154,"author":{"gitId":"Oliverloo0909"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":155,"author":{"gitId":"Oliverloo0909"},"content":"     * @throws ParseException if the given {@code session} is invalid.","lastModifiedDate":"2023-03-27"},{"lineNumber":156,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":157,"author":{"gitId":"Oliverloo0909"},"content":"    public static ArrayList\u003cString\u003e parseSession(String session) throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":158,"author":{"gitId":"Oliverloo0909"},"content":"        requireNonNull(session);","lastModifiedDate":"2023-03-27"},{"lineNumber":159,"author":{"gitId":"Oliverloo0909"},"content":"        String trimmedSession \u003d session.trim();","lastModifiedDate":"2023-03-27"},{"lineNumber":160,"author":{"gitId":"Oliverloo0909"},"content":"        String[] dateTime \u003d trimmedSession.split(\" to \");","lastModifiedDate":"2023-03-27"},{"lineNumber":161,"author":{"gitId":"Oliverloo0909"},"content":"        if (dateTime.length !\u003d 2) {","lastModifiedDate":"2023-03-27"},{"lineNumber":162,"author":{"gitId":"Oliverloo0909"},"content":"            throw new ParseException(Session.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":163,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":164,"author":{"gitId":"Oliverloo0909"},"content":"        String[] startDateAndTime \u003d dateTime[0].split(\" \");","lastModifiedDate":"2023-03-27"},{"lineNumber":165,"author":{"gitId":"Oliverloo0909"},"content":"        String[] endDateAndTime \u003d dateTime[1].split(\" \");","lastModifiedDate":"2023-03-27"},{"lineNumber":166,"author":{"gitId":"Oliverloo0909"},"content":"        if (startDateAndTime.length !\u003d 2 || endDateAndTime.length !\u003d 2","lastModifiedDate":"2023-03-27"},{"lineNumber":167,"author":{"gitId":"Oliverloo0909"},"content":"                || !Session.isValidDateFormat(startDateAndTime[0].trim())","lastModifiedDate":"2023-03-27"},{"lineNumber":168,"author":{"gitId":"Oliverloo0909"},"content":"                || !Session.isValidDateFormat(endDateAndTime[0].trim())","lastModifiedDate":"2023-03-27"},{"lineNumber":169,"author":{"gitId":"Oliverloo0909"},"content":"                || !Session.isValidTimeFormat(startDateAndTime[1].trim())","lastModifiedDate":"2023-03-27"},{"lineNumber":170,"author":{"gitId":"Oliverloo0909"},"content":"                || !Session.isValidTimeFormat(endDateAndTime[1].trim())) {","lastModifiedDate":"2023-03-27"},{"lineNumber":171,"author":{"gitId":"Oliverloo0909"},"content":"            throw new ParseException(Session.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":172,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":173,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":174,"author":{"gitId":"tricixg"},"content":"        String startTime \u003d startDateAndTime[0].trim() + \" \" + startDateAndTime[1].trim();","lastModifiedDate":"2023-03-28"},{"lineNumber":175,"author":{"gitId":"tricixg"},"content":"        String endTime \u003d endDateAndTime[0].trim() + \" \" + endDateAndTime[1].trim();","lastModifiedDate":"2023-03-28"},{"lineNumber":176,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":177,"author":{"gitId":"tricixg"},"content":"        return new ArrayList\u003cString\u003e(Arrays.asList(startTime, endTime));","lastModifiedDate":"2023-03-28"},{"lineNumber":178,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":179,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":180,"author":{"gitId":"tricixg"},"content":"     * Parses the given {@code String} location and returns a {@code Location} object.","lastModifiedDate":"2023-03-28"},{"lineNumber":181,"author":{"gitId":"tricixg"},"content":"     * @param location A string representing the location to be parsed.","lastModifiedDate":"2023-03-28"},{"lineNumber":182,"author":{"gitId":"tricixg"},"content":"     * @return A {@code Location} object.","lastModifiedDate":"2023-03-28"},{"lineNumber":183,"author":{"gitId":"tricixg"},"content":"     * @throws ParseException if the given location string does not conform to the expected format.","lastModifiedDate":"2023-03-28"},{"lineNumber":184,"author":{"gitId":"tricixg"},"content":"     * @throws NullPointerException if the given location string is null.","lastModifiedDate":"2023-03-28"},{"lineNumber":185,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":186,"author":{"gitId":"Oliverloo0909"},"content":"    public static Location parseLocation(String location) throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":187,"author":{"gitId":"Oliverloo0909"},"content":"        requireNonNull(location);","lastModifiedDate":"2023-03-27"},{"lineNumber":188,"author":{"gitId":"Oliverloo0909"},"content":"        String trimmedLocation \u003d location.trim();","lastModifiedDate":"2023-03-27"},{"lineNumber":189,"author":{"gitId":"Oliverloo0909"},"content":"        if (!Location.isValidLocation(trimmedLocation)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":190,"author":{"gitId":"Oliverloo0909"},"content":"            throw new ParseException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":191,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":192,"author":{"gitId":"Oliverloo0909"},"content":"        return new Location(trimmedLocation);","lastModifiedDate":"2023-03-27"},{"lineNumber":193,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":194,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":195,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":196,"author":{"gitId":"Oliverloo0909"},"content":"     * capitalises every word in a string","lastModifiedDate":"2023-03-29"},{"lineNumber":197,"author":{"gitId":"Oliverloo0909"},"content":"     * @param input","lastModifiedDate":"2023-03-29"},{"lineNumber":198,"author":{"gitId":"Oliverloo0909"},"content":"     * @return","lastModifiedDate":"2023-03-29"},{"lineNumber":199,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":200,"author":{"gitId":"Oliverloo0909"},"content":"    public static String toTitleCase(String input) {","lastModifiedDate":"2023-03-29"},{"lineNumber":201,"author":{"gitId":"Oliverloo0909"},"content":"        StringBuilder titleCase \u003d new StringBuilder();","lastModifiedDate":"2023-03-29"},{"lineNumber":202,"author":{"gitId":"Oliverloo0909"},"content":"        boolean nextTitleCase \u003d true;","lastModifiedDate":"2023-03-29"},{"lineNumber":203,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":204,"author":{"gitId":"Oliverloo0909"},"content":"        for (char c : input.toCharArray()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":205,"author":{"gitId":"Oliverloo0909"},"content":"            if (Character.isSpaceChar(c)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":206,"author":{"gitId":"Oliverloo0909"},"content":"                nextTitleCase \u003d true;","lastModifiedDate":"2023-03-29"},{"lineNumber":207,"author":{"gitId":"Oliverloo0909"},"content":"            } else if (nextTitleCase) {","lastModifiedDate":"2023-03-29"},{"lineNumber":208,"author":{"gitId":"Oliverloo0909"},"content":"                c \u003d Character.toTitleCase(c);","lastModifiedDate":"2023-03-29"},{"lineNumber":209,"author":{"gitId":"Oliverloo0909"},"content":"                nextTitleCase \u003d false;","lastModifiedDate":"2023-03-29"},{"lineNumber":210,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":211,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":212,"author":{"gitId":"Oliverloo0909"},"content":"            titleCase.append(c);","lastModifiedDate":"2023-03-29"},{"lineNumber":213,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":214,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":215,"author":{"gitId":"Oliverloo0909"},"content":"        return titleCase.toString();","lastModifiedDate":"2023-03-29"},{"lineNumber":216,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"tricixg":12,"jengoc415":6,"Oliverloo0909":84,"-":115}},{"path":"src/main/java/seedu/address/logic/parser/RemoveTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.logic.commands.RemoveTagCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":" * Parses input arguments and creates a new RemoveTagCommand object","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"public class RemoveTagCommandParser implements Parser\u003cRemoveTagCommand\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"     * informs user that he/she did not add the tag field","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String MESSAGE_TAG_DOES_NOT_EXIST_PARSE_FAILURE \u003d \"Did not specify tag field! \\n%1$s\";","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"     * Parses the given {@code String} of arguments in the context of the RemoveTagCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"     * and returns an specific case of RemoveTagCommand object for execution.","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"    public RemoveTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"        Index index;","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"                    RemoveTagCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"        if (argMultimap.getAllValues(PREFIX_TAG).isEmpty()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"            throw new ParseException(String.format(MESSAGE_TAG_DOES_NOT_EXIST_PARSE_FAILURE,","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"                    RemoveTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"        return new RemoveTagCommand(index, tagList);","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Oliverloo0909":48}},{"path":"src/main/java/seedu/address/logic/parser/ShowCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.logic.commands.ShowCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.person.TagContainsGroupsPredicate;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":" * Parses input arguments and creates a new ShowCommand object","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"public class ShowCommandParser implements Parser\u003cShowCommand\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"     * Parses the given {@code String} of arguments in the context of the ShowCommand","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"     * and returns a ShowCommand object for execution.","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"    public ShowCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ShowCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"        return new ShowCommand(new TagContainsGroupsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Oliverloo0909":33}},{"path":"src/main/java/seedu/address/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jengoc415"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"jengoc415"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"jengoc415"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"jengoc415"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"jengoc415"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"jengoc415"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"jengoc415"},"content":" * Parses input arguments and creates a new SortCommand object","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"jengoc415"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"jengoc415"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"jengoc415"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"jengoc415"},"content":"     * and returns a SortCommand object for execution.","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"jengoc415"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"jengoc415"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"jengoc415"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"jengoc415"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"jengoc415"},"content":"            int attribute \u003d index.getOneBased();","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"jengoc415"},"content":"            return new SortCommand(attribute);","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"jengoc415"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"jengoc415"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"jengoc415"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"jengoc415"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"jengoc415":30}},{"path":"src/main/java/seedu/address/logic/parser/StudentAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.logic.commands.StudentAddCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.session.SessionName;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":" * Parses input arguments and creates a new StudentAddCommand object","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"public class StudentAddCommandParser implements Parser\u003cStudentAddCommand\u003e {","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"     * informs user that he/she did not add the tag field","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String MESSAGE_NAME_DOES_NOT_EXIST_PARSE_FAILURE \u003d \"Did not specify name field! \\n%1$s\";","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"     * Parses the given {@code String} of arguments in the context of the StudentAddCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"     * and returns an specific case of GroupAddCommand object for execution.","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"    public StudentAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"        Index index;","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"                    StudentAddCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"        if (argMultimap.getAllValues(PREFIX_NAME).isEmpty()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"            throw new ParseException(String.format(MESSAGE_NAME_DOES_NOT_EXIST_PARSE_FAILURE,","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"                    StudentAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"        SessionName sessionName \u003d ParserUtil.parseSessionName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"        return new StudentAddCommand(index, sessionName);","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"Oliverloo0909":46}},{"path":"src/main/java/seedu/address/logic/parser/StudentRemoveCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jengoc415"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"jengoc415"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"jengoc415"},"content":"import seedu.address.logic.commands.StudentRemoveCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"jengoc415"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"jengoc415"},"content":"import seedu.address.model.session.SessionName;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"jengoc415"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"jengoc415"},"content":" * Parses input arguments and creates a new StudentRemoveCommand object","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"jengoc415"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"jengoc415"},"content":"public class StudentRemoveCommandParser implements Parser\u003cStudentRemoveCommand\u003e {","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"jengoc415"},"content":"     * informs user that he/she did not add the tag field","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"jengoc415"},"content":"    public static final String MESSAGE_NAME_DOES_NOT_EXIST_PARSE_FAILURE \u003d \"Did not specify name field! \\n%1$s\";","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"jengoc415"},"content":"     * Parses the given {@code String} of arguments in the context of the StudentRemoveCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"jengoc415"},"content":"     * and returns an specific case of GroupRemoveCommand object for execution.","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"jengoc415"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"jengoc415"},"content":"    public StudentRemoveCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"jengoc415"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"jengoc415"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"jengoc415"},"content":"        Index index;","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"jengoc415"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"jengoc415"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"jengoc415"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"jengoc415"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"jengoc415"},"content":"                    StudentRemoveCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"jengoc415"},"content":"        if (argMultimap.getAllValues(PREFIX_NAME).isEmpty()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"jengoc415"},"content":"            throw new ParseException(String.format(MESSAGE_NAME_DOES_NOT_EXIST_PARSE_FAILURE,","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"jengoc415"},"content":"                    StudentRemoveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"jengoc415"},"content":"        SessionName sessionName \u003d ParserUtil.parseSessionName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"jengoc415"},"content":"        return new StudentRemoveCommand(index, sessionName);","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"jengoc415"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"tricixg":4,"jengoc415":42}},{"path":"src/main/java/seedu/address/logic/parser/UnmarkAttendanceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.logic.commands.UnmarkAttendanceCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":" * Parses input arguments and creates a new UnmarkAttendanceCommand object","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"public class UnmarkAttendanceCommandParser {","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"     * informs user that he/she did not add the name field","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String MESSAGE_NAME_DOES_NOT_EXIST_PARSE_FAILURE \u003d \"Did not specify name field! \\n%1$s\";","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"     * Parses the given {@code String} of arguments in the context of the UnmarkAttendanceCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"     * and returns an specific case of GroupAddCommand object for execution.","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"    public UnmarkAttendanceCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"        Index index;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"                    UnmarkAttendanceCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"        if (argMultimap.getAllValues(PREFIX_NAME).isEmpty()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"            throw new ParseException(String.format(MESSAGE_NAME_DOES_NOT_EXIST_PARSE_FAILURE,","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"                    UnmarkAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"        Name personName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"        return new UnmarkAttendanceCommand(index, personName);","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"tricixg":4,"Oliverloo0909":41}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"jengoc415"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.session.SessionName;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"jengoc415"},"content":"import seedu.address.model.session.UniqueSessionList;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.session.exceptions.SessionNotFoundException;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":24,"author":{"gitId":"jengoc415"},"content":"    private final UniqueSessionList sessions;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":35,"author":{"gitId":"jengoc415"},"content":"        sessions \u003d new UniqueSessionList();","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"Tempura-Person"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"Tempura-Person"},"content":"     * Alternate AddressBook constructor","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"Tempura-Person"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"Tempura-Person"},"content":"    public AddressBook(AddressBook toBeCloned) {","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"Tempura-Person"},"content":"        this();","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"Tempura-Person"},"content":"        setPersons(toBeCloned.getPersonList());","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"jengoc415"},"content":"        setSessions(toBeCloned.getSessionList());","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"jengoc415"},"content":"    public void setSessions(List\u003cSession\u003e sessions) {","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"jengoc415"},"content":"        this.sessions.setSessions(sessions);","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":78,"author":{"gitId":"jengoc415"},"content":"        setSessions(newData.getSessionList());","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"Tempura-Person"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"Tempura-Person"},"content":"     * Alternate resetData implementation.","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"Tempura-Person"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"Tempura-Person"},"content":"    public void resetData(AddressBook newData) {","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"Tempura-Person"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"Tempura-Person"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"jengoc415"},"content":"        setSessions(newData.getSessionList());","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"jengoc415"},"content":"     * Returns true if a session with the same identity as {@code session} exists in the address book.","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"jengoc415"},"content":"    public boolean hasSession(Session session) {","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"jengoc415"},"content":"        requireNonNull(session);","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"jengoc415"},"content":"        return sessions.contains(session);","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"jengoc415"},"content":"     * Adds a session to the address book.","lastModifiedDate":"2023-03-27"},{"lineNumber":119,"author":{"gitId":"jengoc415"},"content":"     * The session must not already exist in the address book.","lastModifiedDate":"2023-03-27"},{"lineNumber":120,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"jengoc415"},"content":"    public void addSession(Session s) {","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"jengoc415"},"content":"        sessions.add(s);","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"Oliverloo0909"},"content":"    public void setSession(Session target, Session editedSession) {","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"Oliverloo0909"},"content":"        requireNonNull(editedSession);","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"Oliverloo0909"},"content":"        sessions.setSession(target, editedSession);","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"tricixg"},"content":"     * Adds the specified {@code Person} to the given {@code Session}.","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"tricixg"},"content":"     * The {@code Person} and {@code Session} must not be null.","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"tricixg"},"content":"     * The {@code Session} must already exist in the address book,","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"tricixg"},"content":"     * otherwise a {@code SessionNotFoundException} is thrown.","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"tricixg"},"content":"     * If the person is already in the session, nothing is done.","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"tricixg"},"content":"     * @param person The person to add to the session.","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"tricixg"},"content":"     * @param session The session to add the person to.","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"tricixg"},"content":"     * @throws SessionNotFoundException If the specified session does not exist in the address book.","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"jengoc415"},"content":"    public void addPersonToSession(Person person, Session session) {","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"Oliverloo0909"},"content":"        requireAllNonNull(person, session);","lastModifiedDate":"2023-03-27"},{"lineNumber":153,"author":{"gitId":"Oliverloo0909"},"content":"        if (!sessions.contains(session)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":154,"author":{"gitId":"Oliverloo0909"},"content":"            throw new SessionNotFoundException();","lastModifiedDate":"2023-03-27"},{"lineNumber":155,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":156,"author":{"gitId":"Tempura-Person"},"content":"        Session newSession \u003d session.copy();","lastModifiedDate":"2023-04-02"},{"lineNumber":157,"author":{"gitId":"jengoc415"},"content":"        newSession.addPersonToSession(person);","lastModifiedDate":"2023-03-30"},{"lineNumber":158,"author":{"gitId":"Oliverloo0909"},"content":"        sessions.setSession(session, newSession);","lastModifiedDate":"2023-03-27"},{"lineNumber":159,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":160,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"tricixg"},"content":"     * Removes the specified {@code Person} from the given {@code Session}.","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"tricixg"},"content":"     * The {@code Person} and {@code Session} must not be null.","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"tricixg"},"content":"     * The {@code Session} must already exist in the address book,","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"tricixg"},"content":"     * otherwise a {@code SessionNotFoundException} is thrown.","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"tricixg"},"content":"     * If the person is not in the session,","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"tricixg"},"content":"     * a {@code PersonNotFoundException} is thrown.","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"tricixg"},"content":"     * @param person The person to remove from the session.","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"tricixg"},"content":"     * @param session The session to remove the person from.","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"tricixg"},"content":"     * @throws SessionNotFoundException If the specified session does not exist in the address book.","lastModifiedDate":"2023-03-28"},{"lineNumber":170,"author":{"gitId":"tricixg"},"content":"     * @throws PersonNotFoundException If the specified person is not in the session.","lastModifiedDate":"2023-03-28"},{"lineNumber":171,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":172,"author":{"gitId":"jengoc415"},"content":"    public void removePersonFromSession(Person person, Session session) {","lastModifiedDate":"2023-03-28"},{"lineNumber":173,"author":{"gitId":"Oliverloo0909"},"content":"        requireAllNonNull(person, session);","lastModifiedDate":"2023-03-27"},{"lineNumber":174,"author":{"gitId":"jengoc415"},"content":"        String name \u003d person.getName().toString();","lastModifiedDate":"2023-03-28"},{"lineNumber":175,"author":{"gitId":"Oliverloo0909"},"content":"        if (!sessions.contains(session)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":176,"author":{"gitId":"Oliverloo0909"},"content":"            throw new SessionNotFoundException();","lastModifiedDate":"2023-03-27"},{"lineNumber":177,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":178,"author":{"gitId":"jengoc415"},"content":"        if (!session.contains(name)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":179,"author":{"gitId":"Oliverloo0909"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-27"},{"lineNumber":180,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":181,"author":{"gitId":"Tempura-Person"},"content":"        Session newSession \u003d session.copy();","lastModifiedDate":"2023-04-02"},{"lineNumber":182,"author":{"gitId":"jengoc415"},"content":"        newSession.removePersonFromSession(name);","lastModifiedDate":"2023-03-28"},{"lineNumber":183,"author":{"gitId":"Oliverloo0909"},"content":"        sessions.setSession(session, newSession);","lastModifiedDate":"2023-03-27"},{"lineNumber":184,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":185,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":186,"author":{"gitId":"Oliverloo0909"},"content":"    public void removeSession(Session session) {","lastModifiedDate":"2023-03-27"},{"lineNumber":187,"author":{"gitId":"Oliverloo0909"},"content":"        sessions.remove(session);","lastModifiedDate":"2023-03-27"},{"lineNumber":188,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":189,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":211,"author":{"gitId":"jengoc415"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":212,"author":{"gitId":"jengoc415"},"content":"    public ObservableList\u003cSession\u003e getSessionList() {","lastModifiedDate":"2023-03-27"},{"lineNumber":213,"author":{"gitId":"jengoc415"},"content":"        return sessions.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-27"},{"lineNumber":214,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":215,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":220,"author":{"gitId":"Oliverloo0909"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons)","lastModifiedDate":"2023-03-08"},{"lineNumber":221,"author":{"gitId":"Oliverloo0909"},"content":"                \u0026\u0026 sessions.equals(((AddressBook) other).sessions));","lastModifiedDate":"2023-04-03"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2023-03-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":228,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":229,"author":{"gitId":"jengoc415"},"content":"    public void sort(int targetField) {","lastModifiedDate":"2023-03-24"},{"lineNumber":230,"author":{"gitId":"jengoc415"},"content":"        persons.sort(targetField);","lastModifiedDate":"2023-03-24"},{"lineNumber":231,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":232,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":233,"author":{"gitId":"Oliverloo0909"},"content":"    public Session getSessionFromName(SessionName name) throws PersonNotFoundException {","lastModifiedDate":"2023-03-28"},{"lineNumber":234,"author":{"gitId":"Oliverloo0909"},"content":"        for (Session session: sessions) {","lastModifiedDate":"2023-03-28"},{"lineNumber":235,"author":{"gitId":"Oliverloo0909"},"content":"            if (name.sessionName.equals(session.getName().toString())) {","lastModifiedDate":"2023-03-28"},{"lineNumber":236,"author":{"gitId":"Oliverloo0909"},"content":"                return session;","lastModifiedDate":"2023-03-28"},{"lineNumber":237,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":238,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":239,"author":{"gitId":"Oliverloo0909"},"content":"        throw new SessionNotFoundException();","lastModifiedDate":"2023-03-28"},{"lineNumber":240,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":241,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":242,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":243,"author":{"gitId":"tricixg"},"content":"     * Returns true if there is a session with the same name as {@code name} in the address book.","lastModifiedDate":"2023-03-28"},{"lineNumber":244,"author":{"gitId":"tricixg"},"content":"     * @param name The name of the session to be checked for existence.","lastModifiedDate":"2023-03-28"},{"lineNumber":245,"author":{"gitId":"tricixg"},"content":"     * @return True if a session with the same name as {@code name} exists in the address book, false otherwise.","lastModifiedDate":"2023-03-28"},{"lineNumber":246,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":247,"author":{"gitId":"Oliverloo0909"},"content":"    public boolean hasSessionName(SessionName name) {","lastModifiedDate":"2023-03-28"},{"lineNumber":248,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":249,"author":{"gitId":"Oliverloo0909"},"content":"        for (Session session: sessions) {","lastModifiedDate":"2023-03-28"},{"lineNumber":250,"author":{"gitId":"Oliverloo0909"},"content":"            if (name.sessionName.equals(session.getName().toString())) {","lastModifiedDate":"2023-03-28"},{"lineNumber":251,"author":{"gitId":"Oliverloo0909"},"content":"                return true;","lastModifiedDate":"2023-03-28"},{"lineNumber":252,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":253,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":254,"author":{"gitId":"Oliverloo0909"},"content":"        return false;","lastModifiedDate":"2023-03-28"},{"lineNumber":255,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":256,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":257,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":258,"author":{"gitId":"jengoc415"},"content":"     * Returns pay rate per hour of specified person {@code name} in the address book.","lastModifiedDate":"2023-03-29"},{"lineNumber":259,"author":{"gitId":"Tempura-Person"},"content":"     * @param name Name of person.","lastModifiedDate":"2023-04-02"},{"lineNumber":260,"author":{"gitId":"jengoc415"},"content":"     * @return Non-negative integer if a person with the same name as {@code name}","lastModifiedDate":"2023-03-29"},{"lineNumber":261,"author":{"gitId":"jengoc415"},"content":"     *      exists in the address book, -1 otherwise.","lastModifiedDate":"2023-03-29"},{"lineNumber":262,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":263,"author":{"gitId":"jengoc415"},"content":"    public int getPayRateFromName(String name) {","lastModifiedDate":"2023-03-29"},{"lineNumber":264,"author":{"gitId":"jengoc415"},"content":"        for (Person person: persons) {","lastModifiedDate":"2023-03-29"},{"lineNumber":265,"author":{"gitId":"jengoc415"},"content":"            String toCompareWith \u003d person.getName().toString().toLowerCase();","lastModifiedDate":"2023-03-29"},{"lineNumber":266,"author":{"gitId":"jengoc415"},"content":"            if (name.toLowerCase().equals(toCompareWith)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":267,"author":{"gitId":"jengoc415"},"content":"                return person.getPayRate().toInt();","lastModifiedDate":"2023-03-29"},{"lineNumber":268,"author":{"gitId":"jengoc415"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":269,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":270,"author":{"gitId":"jengoc415"},"content":"        return -1;","lastModifiedDate":"2023-03-29"},{"lineNumber":271,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tricixg":27,"jengoc415":56,"Tempura-Person":20,"Oliverloo0909":48,"-":121}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"Tempura-Person"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.session.SessionName;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"jengoc415"},"content":"    Predicate\u003cSession\u003e PREDICATE_SHOW_ALL_SESSIONS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"Oliverloo0909"},"content":"    /** Returns an unmodifiable view of the filtered session list */","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"Oliverloo0909"},"content":"    ObservableList\u003cSession\u003e getFilteredSessionList();","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"Tempura-Person"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"jengoc415"},"content":"     * Sorts the person list with specified attribute.","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"Tempura-Person"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"jengoc415"},"content":"    void sortAddressBook(int targetField);","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"jengoc415"},"content":"    void setSession(Session target, Session editedSession);","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"Tempura-Person"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"Tempura-Person"},"content":"     * Commits the current state of the address book.","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"Tempura-Person"},"content":"     * Removes all elements of the addressBookStateList beyond the current pointer.","lastModifiedDate":"2023-03-22"},{"lineNumber":105,"author":{"gitId":"Tempura-Person"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":106,"author":{"gitId":"Tempura-Person"},"content":"    void commitAddressBook();","lastModifiedDate":"2023-03-22"},{"lineNumber":107,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":108,"author":{"gitId":"Tempura-Person"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"Tempura-Person"},"content":"     * Undoes the previous command by resetting the state of the address book to the previous state.","lastModifiedDate":"2023-03-22"},{"lineNumber":110,"author":{"gitId":"Tempura-Person"},"content":"     * @throws CommandException If there are no more commands left to undo.","lastModifiedDate":"2023-03-22"},{"lineNumber":111,"author":{"gitId":"Tempura-Person"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":112,"author":{"gitId":"Tempura-Person"},"content":"    void undoAddressBook() throws CommandException;","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"Tempura-Person"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"Tempura-Person"},"content":"     * Redoes the previous undone command by resetting the state of the address book to the next state.","lastModifiedDate":"2023-03-22"},{"lineNumber":116,"author":{"gitId":"Tempura-Person"},"content":"     * @throws CommandException If there are no more commands left to redo.","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"Tempura-Person"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"Tempura-Person"},"content":"    void redoAddressBook() throws CommandException;","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"Oliverloo0909"},"content":"    void updateFilteredSessionList(Predicate\u003cSession\u003e predicate);","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"Oliverloo0909"},"content":"    boolean hasSession(Session toAdd);","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"Oliverloo0909"},"content":"    void addSession(Session toAdd);","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"Oliverloo0909"},"content":"    void removeSession(Session toRemove);","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":128,"author":{"gitId":"jengoc415"},"content":"    void addPersonToSession(Person person, Session session);","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"jengoc415"},"content":"    void removePersonFromSession(Person person, Session session);","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"Oliverloo0909"},"content":"    Session getSessionFromName(SessionName name);","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"Oliverloo0909"},"content":"    boolean hasSessionName(SessionName sessionName);","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jengoc415":6,"Tempura-Person":22,"Oliverloo0909":20,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"Tempura-Person"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"jengoc415"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.session.SessionName;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"    private static final Predicate\u003cSession\u003e PREDICATE_SHOW_ALL_SESSIONS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"Tempura-Person"},"content":"    private final VersionedAddressBook addressBook;","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"    private final FilteredList\u003cSession\u003e filteredSessions;","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"    private final ObservableList\u003cSession\u003e calendarEventList;","lastModifiedDate":"2023-04-03"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"Tempura-Person"},"content":"        AddressBook readAddressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"Tempura-Person"},"content":"        this.addressBook \u003d new VersionedAddressBook(readAddressBook);","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"jengoc415"},"content":"        filteredSessions \u003d new FilteredList\u003c\u003e(this.addressBook.getSessionList());","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"        this.calendarEventList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"Tempura-Person"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"jengoc415"},"content":"    public void sortAddressBook(int targetField) {","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"jengoc415"},"content":"        addressBook.sort(targetField);","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"Tempura-Person"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":106,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":131,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"Oliverloo0909"},"content":"    public void setSession(Session target, Session editedSession) {","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"Oliverloo0909"},"content":"        requireAllNonNull(target, editedSession);","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"Oliverloo0909"},"content":"        addressBook.setSession(target, editedSession);","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"Tempura-Person"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":139,"author":{"gitId":"Tempura-Person"},"content":"    public void commitAddressBook() {","lastModifiedDate":"2023-03-22"},{"lineNumber":140,"author":{"gitId":"Tempura-Person"},"content":"        addressBook.commit();","lastModifiedDate":"2023-03-22"},{"lineNumber":141,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":142,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":143,"author":{"gitId":"Tempura-Person"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":144,"author":{"gitId":"Tempura-Person"},"content":"    public void undoAddressBook() throws CommandException {","lastModifiedDate":"2023-03-22"},{"lineNumber":145,"author":{"gitId":"Tempura-Person"},"content":"        addressBook.undo();","lastModifiedDate":"2023-03-22"},{"lineNumber":146,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":147,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":148,"author":{"gitId":"Tempura-Person"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":149,"author":{"gitId":"Tempura-Person"},"content":"    public void redoAddressBook() throws CommandException {","lastModifiedDate":"2023-03-22"},{"lineNumber":150,"author":{"gitId":"Tempura-Person"},"content":"        addressBook.redo();","lastModifiedDate":"2023-03-22"},{"lineNumber":151,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":152,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":164,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":165,"author":{"gitId":"Oliverloo0909"},"content":"    public ObservableList\u003cSession\u003e getFilteredSessionList() {","lastModifiedDate":"2023-03-27"},{"lineNumber":166,"author":{"gitId":"Oliverloo0909"},"content":"        return filteredSessions;","lastModifiedDate":"2023-03-27"},{"lineNumber":167,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":168,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":175,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":176,"author":{"gitId":"Oliverloo0909"},"content":"    public void updateFilteredSessionList(Predicate\u003cSession\u003e predicate) {","lastModifiedDate":"2023-03-27"},{"lineNumber":177,"author":{"gitId":"Oliverloo0909"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-27"},{"lineNumber":178,"author":{"gitId":"Oliverloo0909"},"content":"        filteredSessions.setPredicate(predicate);","lastModifiedDate":"2023-03-27"},{"lineNumber":179,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":180,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":181,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":182,"author":{"gitId":"Oliverloo0909"},"content":"    public boolean hasSession(Session toAdd) {","lastModifiedDate":"2023-03-27"},{"lineNumber":183,"author":{"gitId":"Oliverloo0909"},"content":"        return addressBook.hasSession(toAdd);","lastModifiedDate":"2023-03-27"},{"lineNumber":184,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":185,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":186,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":187,"author":{"gitId":"Oliverloo0909"},"content":"    public void addSession(Session toAdd) {","lastModifiedDate":"2023-03-27"},{"lineNumber":188,"author":{"gitId":"Oliverloo0909"},"content":"        addressBook.addSession(toAdd);","lastModifiedDate":"2023-03-27"},{"lineNumber":189,"author":{"gitId":"Oliverloo0909"},"content":"        updateFilteredSessionList(PREDICATE_SHOW_ALL_SESSIONS);","lastModifiedDate":"2023-03-27"},{"lineNumber":190,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":191,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":192,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":193,"author":{"gitId":"Oliverloo0909"},"content":"    public void removeSession(Session toRemove) {","lastModifiedDate":"2023-03-27"},{"lineNumber":194,"author":{"gitId":"Oliverloo0909"},"content":"        addressBook.removeSession(toRemove);","lastModifiedDate":"2023-03-27"},{"lineNumber":195,"author":{"gitId":"Oliverloo0909"},"content":"        updateFilteredSessionList(PREDICATE_SHOW_ALL_SESSIONS);","lastModifiedDate":"2023-03-27"},{"lineNumber":196,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":197,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":198,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":199,"author":{"gitId":"jengoc415"},"content":"    public void addPersonToSession(Person person, Session session) {","lastModifiedDate":"2023-03-28"},{"lineNumber":200,"author":{"gitId":"jengoc415"},"content":"        addressBook.addPersonToSession(person, session);","lastModifiedDate":"2023-03-28"},{"lineNumber":201,"author":{"gitId":"Oliverloo0909"},"content":"        updateFilteredSessionList(PREDICATE_SHOW_ALL_SESSIONS);","lastModifiedDate":"2023-03-28"},{"lineNumber":202,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":203,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":204,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":205,"author":{"gitId":"jengoc415"},"content":"    public void removePersonFromSession(Person person, Session session) {","lastModifiedDate":"2023-03-28"},{"lineNumber":206,"author":{"gitId":"jengoc415"},"content":"        addressBook.removePersonFromSession(person, session);","lastModifiedDate":"2023-03-28"},{"lineNumber":207,"author":{"gitId":"Oliverloo0909"},"content":"        updateFilteredSessionList(PREDICATE_SHOW_ALL_SESSIONS);","lastModifiedDate":"2023-03-28"},{"lineNumber":208,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":209,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":210,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":211,"author":{"gitId":"Oliverloo0909"},"content":"    public Session getSessionFromName(SessionName name) {","lastModifiedDate":"2023-03-28"},{"lineNumber":212,"author":{"gitId":"Oliverloo0909"},"content":"        return addressBook.getSessionFromName(name);","lastModifiedDate":"2023-03-28"},{"lineNumber":213,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":214,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":215,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":216,"author":{"gitId":"Oliverloo0909"},"content":"    public boolean hasSessionName(SessionName sessionName) {","lastModifiedDate":"2023-03-28"},{"lineNumber":217,"author":{"gitId":"Oliverloo0909"},"content":"        return addressBook.hasSessionName(sessionName);","lastModifiedDate":"2023-03-28"},{"lineNumber":218,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":219,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tricixg":5,"jengoc415":8,"Tempura-Person":22,"Oliverloo0909":56,"-":148}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"jengoc415"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"jengoc415"},"content":"    ObservableList\u003cSession\u003e getSessionList();","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jengoc415":2,"-":17}},{"path":"src/main/java/seedu/address/model/VersionedAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"Tempura-Person"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"Tempura-Person"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"Tempura-Person"},"content":" * An address book that allows for undo and redo operations.","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"Tempura-Person"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":"public class VersionedAddressBook extends AddressBook {","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"Tempura-Person"},"content":"    public static final String UNDO_FAILURE \u003d \"No more commands left to undo\";","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"    public static final String REDO_FAILURE \u003d \"No more commands left to redo\";","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"Tempura-Person"},"content":"    private final ArrayList\u003cAddressBook\u003e addressBookStateList;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"Tempura-Person"},"content":"    private int currentStatePointer;","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"Tempura-Person"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"Tempura-Person"},"content":"     * Creates a new VersionedAddressBook object with the given AddressBook as the initial state.","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"Tempura-Person"},"content":"     * @param addressBook The initial state of the address book.","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"Tempura-Person"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"Tempura-Person"},"content":"    public VersionedAddressBook(AddressBook addressBook) {","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"Tempura-Person"},"content":"        super(addressBook);","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"Tempura-Person"},"content":"        addressBookStateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"Tempura-Person"},"content":"        AddressBook newAddition \u003d new AddressBook(addressBook);","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"Tempura-Person"},"content":"        addressBookStateList.add(newAddition);","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"Tempura-Person"},"content":"        currentStatePointer \u003d 0;","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"Tempura-Person"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"Tempura-Person"},"content":"     * Commits the current state of the address book.","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"Tempura-Person"},"content":"     * Removes all elements of the addressBookStateList beyond the current pointer.","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"Tempura-Person"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"Tempura-Person"},"content":"    public void commit() {","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"Tempura-Person"},"content":"        // removes ALL elements of the addressBookStateList from beyond the current pointer onwards.","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"Tempura-Person"},"content":"        if (currentStatePointer \u003c addressBookStateList.size() - 1) {","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"Tempura-Person"},"content":"            addressBookStateList.subList(currentStatePointer + 1, addressBookStateList.size()).clear();","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"Tempura-Person"},"content":"        AddressBook newAddition \u003d new AddressBook(this);","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"Tempura-Person"},"content":"        addressBookStateList.add(newAddition);","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"Tempura-Person"},"content":"        currentStatePointer \u003d addressBookStateList.size() - 1;","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"Tempura-Person"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"Tempura-Person"},"content":"     * Undoes the previous command by resetting the state of the address book to the previous state.","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"Tempura-Person"},"content":"     * @throws CommandException If there are no more commands left to undo.","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"Tempura-Person"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"Tempura-Person"},"content":"    public void undo() throws CommandException {","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"Tempura-Person"},"content":"        if (canUndo()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"Tempura-Person"},"content":"            currentStatePointer--;","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"Tempura-Person"},"content":"            resetData(getCurrentState());","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"Tempura-Person"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"Tempura-Person"},"content":"            throw new CommandException(UNDO_FAILURE);","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"Tempura-Person"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"Tempura-Person"},"content":"     * Redoes the previous undone command by resetting the state of the address book to the next state.","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"Tempura-Person"},"content":"     * @throws CommandException If there are no more commands left to redo.","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"Tempura-Person"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"Tempura-Person"},"content":"    public void redo() throws CommandException {","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"Tempura-Person"},"content":"        if (canRedo()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"Tempura-Person"},"content":"            currentStatePointer++;","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"Tempura-Person"},"content":"            resetData(getCurrentState());","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"Tempura-Person"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"Tempura-Person"},"content":"            throw new CommandException(REDO_FAILURE);","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"Tempura-Person"},"content":"    public boolean canUndo() {","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"Tempura-Person"},"content":"        return currentStatePointer \u003e 0;","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"Tempura-Person"},"content":"    public boolean canRedo() {","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"Tempura-Person"},"content":"        return currentStatePointer \u003c addressBookStateList.size() - 1;","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"Tempura-Person"},"content":"    public AddressBook getCurrentState() {","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"Tempura-Person"},"content":"        return addressBookStateList.get(currentStatePointer);","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"Tempura-Person"},"content":"    public ArrayList\u003cAddressBook\u003e getStateList() {","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"Tempura-Person"},"content":"        return addressBookStateList;","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"Tempura-Person"},"content":"    public int getCurrentStatePointer() {","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"Tempura-Person"},"content":"        return currentStatePointer;","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"Tempura-Person"},"content":"}","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"Tempura-Person":90}},{"path":"src/main/java/seedu/address/model/calendar/CalendarMonth.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"package seedu.address.model.calendar;","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-04-03"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":" * Represents a Calendar in the address book.","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"public class CalendarMonth {","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"    // Data fields","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"    private ObservableList\u003cSession\u003e sessions;","lastModifiedDate":"2023-04-03"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"    public CalendarMonth(ObservableList\u003cSession\u003e sessions) {","lastModifiedDate":"2023-04-03"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"        requireAllNonNull(sessions);","lastModifiedDate":"2023-04-03"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"        this.sessions \u003d sessions;","lastModifiedDate":"2023-04-03"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"     * Returns a mutable list of CalendarEvents.","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"    public ObservableList\u003cSession\u003e getSessions() {","lastModifiedDate":"2023-04-03"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"        return sessions;","lastModifiedDate":"2023-04-03"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"    public ObservableList\u003cSession\u003e getSessionsInDayOfMonth(Integer day, Integer month, Integer year) {","lastModifiedDate":"2023-04-03"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"        requireAllNonNull(day, month, year);","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"        List\u003cSession\u003e sessionsInDayOfMonth \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-03"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"        Predicate\u003cSession\u003e filter \u003d (e) -\u003e e.getDay() \u003d\u003d day \u0026\u0026 e.getMonth() \u003d\u003d month \u0026\u0026 e.getYear() \u003d\u003d year;","lastModifiedDate":"2023-04-03"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"        sessions.stream().filter(filter).forEach(sessionsInDayOfMonth::add);","lastModifiedDate":"2023-04-03"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"        return FXCollections.observableList(sessionsInDayOfMonth);","lastModifiedDate":"2023-04-03"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"     * Returns true if both calendar month data field.","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"     * This defines a stronger notion of equality between two calendar month.","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"            return true;","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"tricixg"},"content":"        if (!(other instanceof CalendarMonth)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"tricixg"},"content":"            return false;","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"tricixg"},"content":"        CalendarMonth otherCalendar \u003d (CalendarMonth) other;","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"tricixg"},"content":"        return otherCalendar.getSessions().equals(getSessions());","lastModifiedDate":"2023-04-03"},{"lineNumber":70,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"tricixg"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"tricixg"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"tricixg"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"tricixg"},"content":"        return Objects.hash(sessions);","lastModifiedDate":"2023-04-03"},{"lineNumber":76,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"tricixg":75,"Tempura-Person":3}},{"path":"src/main/java/seedu/address/model/person/HasPaid.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":" * The HasPaid class represents a boolean value indicating whether a person has paid or not.","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"public class HasPaid {","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"    private boolean hasPaid;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"     * Creates a new HasPaid object with a default value of false.","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"    public HasPaid() {","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"        this.hasPaid \u003d false;","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"     * Creates a new HasPaid object with the specified value.","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"     * @param hasPaid the value to set for the HasPaid object","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"    public HasPaid(boolean hasPaid) {","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"        this.hasPaid \u003d hasPaid;","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"     * Marks the HasPaid object as present by setting its value to true.","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"    public void markPaid() {","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"        this.hasPaid \u003d true;","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"     * Marks the HasPaid object as absent by setting its value to false.","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"    public void markUnpaid() {","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"        this.hasPaid \u003d false;","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"     * Returns a string representation of the HasPaid object.","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"     * @return a string representation of the HasPaid object, with [X] if the object is marked present, [ ] otherwise","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"    public String toString() {","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"        if (hasPaid) {","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"            return \"[has paid]\";","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"        } else {","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"Oliverloo0909"},"content":"            return \"[not yet paid]\";","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"Oliverloo0909"},"content":"     * returns the boolean","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"Oliverloo0909"},"content":"     * @return","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"Oliverloo0909"},"content":"    public boolean getBool() {","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"Oliverloo0909"},"content":"        return hasPaid;","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"Oliverloo0909"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"Oliverloo0909"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"Oliverloo0909"},"content":"            return true;","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"Oliverloo0909"},"content":"        if (!(other instanceof HasPaid)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"Oliverloo0909"},"content":"            return false;","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"Oliverloo0909"},"content":"        return ((HasPaid) other).hasPaid \u003d\u003d hasPaid;","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Oliverloo0909":70}},{"path":"src/main/java/seedu/address/model/person/IsPresent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":" * Represents the attendance status of a person, whether present or absent.","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"public class IsPresent {","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"     * Indicates whether the person is present or not.","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"    private boolean isPresent;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"     * Constructs a default isPresent object with false as the initial attendance status.","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"    public IsPresent() {","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"        this.isPresent \u003d false;","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"     * Constructs an isPresent object with the specified attendance status.","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"     * @param isPresent The attendance status to set.","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"    public IsPresent(boolean isPresent) {","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"        this.isPresent \u003d isPresent;","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"     * Marks the person as present.","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"    public void markPresent() {","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"        this.isPresent \u003d true;","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"     * Marks the person as absent.","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"    public void markAbsent() {","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"        this.isPresent \u003d false;","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"     * Returns a string representation of the attendance status.","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"     * @return A string representation of the attendance status.","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"Oliverloo0909"},"content":"    public String toString() {","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"Oliverloo0909"},"content":"        if (isPresent) {","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"Oliverloo0909"},"content":"            return \"[present]\";","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"Oliverloo0909"},"content":"        } else {","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"Oliverloo0909"},"content":"            return \"[absent]\";","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"Oliverloo0909"},"content":"     * returns the boolean","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"Oliverloo0909"},"content":"     * @return","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"Oliverloo0909"},"content":"    public boolean getBool() {","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"Oliverloo0909"},"content":"        return isPresent;","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"Oliverloo0909"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"Oliverloo0909"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"Oliverloo0909"},"content":"            return true;","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"Oliverloo0909"},"content":"        if (!(other instanceof IsPresent)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"Oliverloo0909"},"content":"            return false;","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"Oliverloo0909"},"content":"        return ((IsPresent) other).isPresent \u003d\u003d isPresent;","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Oliverloo0909":76}},{"path":"src/main/java/seedu/address/model/person/Location.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jengoc415"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"jengoc415"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"jengoc415"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"jengoc415"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"jengoc415"},"content":" * Represents a Session\u0027s location.","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"jengoc415"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLocation(String)}","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"jengoc415"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"jengoc415"},"content":"public class Location {","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"jengoc415"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"jengoc415"},"content":"            \"Location should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"jengoc415"},"content":"    /*","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"jengoc415"},"content":"     * The first character of the location must not be a whitespace,","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"jengoc415"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"jengoc415"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"jengoc415"},"content":"    public final String location;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"jengoc415"},"content":"     * Constructs a {@code Location}.","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"jengoc415"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"jengoc415"},"content":"     * @param location A valid location.","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"jengoc415"},"content":"    public Location(String location) {","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"jengoc415"},"content":"        requireNonNull(location);","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"jengoc415"},"content":"        checkArgument(isValidLocation(location), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"jengoc415"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"jengoc415"},"content":"     * Returns true if a given string is a valid location.","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"jengoc415"},"content":"    public static boolean isValidLocation(String test) {","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"jengoc415"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"jengoc415"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"jengoc415"},"content":"    public String toString() {","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"jengoc415"},"content":"        return location;","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"jengoc415"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"jengoc415"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"jengoc415"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"jengoc415"},"content":"                || (other instanceof Location // instanceof handles nulls","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"jengoc415"},"content":"                \u0026\u0026 location.equals(((Location) other).location)); // state check","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"jengoc415"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"jengoc415"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"jengoc415"},"content":"        return location.hashCode();","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"jengoc415"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"jengoc415":59}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.logic.parser.ParserUtil.toTitleCase;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"jengoc415"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"jengoc415"},"content":"    public final String formattedName;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"        formattedName \u003d toTitleCase(name);","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"jengoc415"},"content":"        return formattedName;","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"jengoc415"},"content":"                \u0026\u0026 formattedName.equals(((Name) other).formattedName)); // state check","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"jengoc415"},"content":"        return formattedName.hashCode();","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jengoc415":5,"Oliverloo0909":2,"-":52}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":" * using fuzzy search.","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"     * Constructor for NameContainsKeywordsPredicate.","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"     * @param keywords List of keywords to match against the name.","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"     * Tests if the {@code Name} of a {@code Person} matches any of the keywords","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"     * given using fuzzy search.","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"     * @param person The {@code Person} to test against.","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"     * @return true if the name of the person matches any of the keywords given using fuzzy search, false otherwise.","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"jengoc415"},"content":"        String fullName \u003d person.getName().formattedName.toLowerCase();","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"        for (String keyword : keywords) {","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"            if (isFuzzyMatch(fullName, keyword.toLowerCase())) {","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"                return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"        return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"     * Checks if a keyword matches a name using fuzzy search.","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"     * @param fullName The name to match against.","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"     * @param keyword The keyword to match.","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"     * @return true if the keyword matches a contiguous substring of the name,false otherwise.","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"    private boolean isFuzzyMatch(String fullName, String keyword) {","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"        int lastMatch \u003d -1;","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"        for (int i \u003d 0; i \u003c keyword.length(); i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"            char c \u003d keyword.charAt(i);","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"            int index \u003d fullName.indexOf(c, lastMatch + 1);","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"            if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"                return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"            if (lastMatch !\u003d -1 \u0026\u0026 index - lastMatch \u003e 1) {","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"                return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"            lastMatch \u003d index;","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"        return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"tricixg"},"content":"     * Checks if this object is equal to another object.","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"     * @param other The object to compare to.","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"     * @return true if the two objects are equal, false otherwise.","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"tricixg":49,"jengoc415":1,"-":26}},{"path":"src/main/java/seedu/address/model/person/PayRate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jengoc415"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"jengoc415"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"jengoc415"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"jengoc415"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"jengoc415"},"content":" * Represents a Person\u0027s Pay Rate in the address book.","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"jengoc415"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPayRate(int)}","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"jengoc415"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"jengoc415"},"content":"public class PayRate {","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"jengoc415"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Pay Rate should be a non-negative integer, \"","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"jengoc415"},"content":"        + \"representing pay per hour.\";","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"jengoc415"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[0-9]+$\";","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"jengoc415"},"content":"    public final String value;","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"jengoc415"},"content":"     * Constructs an {@code PayRate}.","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"jengoc415"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"jengoc415"},"content":"     * @param pay A valid pay rate.","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"jengoc415"},"content":"    public PayRate(String pay) {","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"jengoc415"},"content":"        requireNonNull(pay);","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"jengoc415"},"content":"        checkArgument(isValidPayRate(pay), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"jengoc415"},"content":"        value \u003d pay;","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"jengoc415"},"content":"     * Returns if a given integer is a valid pay rate.","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"jengoc415"},"content":"    public static boolean isValidPayRate(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"jengoc415"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"jengoc415"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"jengoc415"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"jengoc415"},"content":"        return value;","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"jengoc415"},"content":"    public int toInt() {","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"jengoc415"},"content":"        return Integer.parseInt(value);","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"jengoc415"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"jengoc415"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"jengoc415"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"jengoc415"},"content":"                || (other instanceof PayRate // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"jengoc415"},"content":"                \u0026\u0026 value.equals(((PayRate) other).value)); // state check","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"jengoc415"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"jengoc415"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"jengoc415"},"content":"        return value.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"jengoc415"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"jengoc415":57}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":"//import seedu.address.model.calendar.CalendarEvent;","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"jengoc415"},"content":"    private final PayRate payRate;","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"jengoc415"},"content":"    private final int id;","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"Tempura-Person"},"content":"    public Person(Name name, Phone phone, Address address, PayRate payRate, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"Tempura-Person"},"content":"        requireAllNonNull(name, phone, payRate, address, tags);","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"        this.payRate \u003d payRate;","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"jengoc415"},"content":"        this.id \u003d name.hashCode();","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"jengoc415"},"content":"    public PayRate getPayRate() {","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"jengoc415"},"content":"        return payRate;","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"jengoc415"},"content":"    public int getId() {","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"jengoc415"},"content":"        return id;","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":100,"author":{"gitId":"jengoc415"},"content":"                \u0026\u0026 otherPerson.getPayRate().equals(getPayRate())","lastModifiedDate":"2023-02-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2023-03-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"jengoc415"},"content":"        return Objects.hash(name, phone, address, payRate, tags, id);","lastModifiedDate":"2023-03-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":118,"author":{"gitId":"jengoc415"},"content":"                .append(getAddress())","lastModifiedDate":"2023-02-24"},{"lineNumber":119,"author":{"gitId":"jengoc415"},"content":"                .append(\"; Pay Rate: \")","lastModifiedDate":"2023-02-24"},{"lineNumber":120,"author":{"gitId":"Tempura-Person"},"content":"                .append(getPayRate());","lastModifiedDate":"2023-03-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":130,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tricixg":1,"jengoc415":13,"Tempura-Person":4,"Oliverloo0909":1,"-":112}},{"path":"src/main/java/seedu/address/model/person/TagContainsGroupsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":" * Tests that a {@code Person}\u0027s {@code Tag} matches any of the groups given.","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"public class TagContainsGroupsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"    private final List\u003cString\u003e groups;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"    public TagContainsGroupsPredicate(List\u003cString\u003e groups) {","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"        this.groups \u003d groups;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"        return groups.stream()","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"                .anyMatch(keyword -\u003e person.getTags().contains(new Tag(keyword)));","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"                || (other instanceof TagContainsGroupsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"                \u0026\u0026 groups.equals(((TagContainsGroupsPredicate) other).groups)); // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"        return groups.stream().collect(Collectors.joining(\" , \"));","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Oliverloo0909":36}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":139,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":140,"author":{"gitId":"jengoc415"},"content":"     * Sorts the list of persons according to the given attribute.","lastModifiedDate":"2023-03-24"},{"lineNumber":141,"author":{"gitId":"Tempura-Person"},"content":"     * @param attribute the attribute to sort by. 1 indicates sorting by name, and 2 indicates sorting by pay rate.","lastModifiedDate":"2023-03-26"},{"lineNumber":142,"author":{"gitId":"jengoc415"},"content":"     * @throws NumberFormatException if the pay rate is not in a valid format","lastModifiedDate":"2023-03-24"},{"lineNumber":143,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":144,"author":{"gitId":"jengoc415"},"content":"    public void sort(int attribute) {","lastModifiedDate":"2023-03-24"},{"lineNumber":145,"author":{"gitId":"jengoc415"},"content":"        if (attribute \u003d\u003d 1) {","lastModifiedDate":"2023-03-24"},{"lineNumber":146,"author":{"gitId":"jengoc415"},"content":"            // Sort by name","lastModifiedDate":"2023-03-24"},{"lineNumber":147,"author":{"gitId":"Tempura-Person"},"content":"            internalList.sort(Comparator.comparing(person -\u003e person.getName().toString()));","lastModifiedDate":"2023-03-04"},{"lineNumber":148,"author":{"gitId":"jengoc415"},"content":"        } else if (attribute \u003d\u003d 2) {","lastModifiedDate":"2023-03-24"},{"lineNumber":149,"author":{"gitId":"jengoc415"},"content":"            // Sort by pay rate","lastModifiedDate":"2023-03-24"},{"lineNumber":150,"author":{"gitId":"jengoc415"},"content":"            internalList.sort(Comparator.comparing(person -\u003e Integer.parseInt(person.getPayRate().toString())));","lastModifiedDate":"2023-03-24"},{"lineNumber":151,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":152,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jengoc415":11,"Tempura-Person":5,"-":137}},{"path":"src/main/java/seedu/address/model/session/Location.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jengoc415"},"content":"package seedu.address.model.session;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"jengoc415"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"jengoc415"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"jengoc415"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"jengoc415"},"content":" * Represents a Session\u0027s location.","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"jengoc415"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLocation(String)}","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"jengoc415"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"jengoc415"},"content":"public class Location {","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"jengoc415"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"jengoc415"},"content":"            \"Location should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"jengoc415"},"content":"    /*","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"jengoc415"},"content":"     * The first character of the location must not be a whitespace,","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"jengoc415"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"jengoc415"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"jengoc415"},"content":"    public final String location;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"jengoc415"},"content":"     * Constructs a {@code Location}.","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"jengoc415"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"jengoc415"},"content":"     * @param location A valid location.","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"jengoc415"},"content":"    public Location(String location) {","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"jengoc415"},"content":"        requireNonNull(location);","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"jengoc415"},"content":"        checkArgument(isValidLocation(location), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"jengoc415"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"jengoc415"},"content":"     * Returns true if a given string is a valid location.","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"jengoc415"},"content":"    public static boolean isValidLocation(String test) {","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"jengoc415"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"    public String get() {","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"        return location;","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"jengoc415"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"jengoc415"},"content":"    public String toString() {","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"jengoc415"},"content":"        return location;","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"jengoc415"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"jengoc415"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"jengoc415"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"jengoc415"},"content":"                || (other instanceof Location // instanceof handles nulls","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"jengoc415"},"content":"                \u0026\u0026 location.equals(((Location) other).location)); // state check","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"jengoc415"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"jengoc415"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"jengoc415"},"content":"        return location.hashCode();","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"jengoc415"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"jengoc415":59,"Oliverloo0909":3}},{"path":"src/main/java/seedu/address/model/session/NameBooleanPair.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jengoc415"},"content":"package seedu.address.model.session;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":" * A pair of a name and a boolean indicating whether the person is present.","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"jengoc415"},"content":"public class NameBooleanPair {","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"    private String name;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"    private boolean isPresent;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"     * Constructs a {@code NameBooleanPair} object with the given name and presence status.","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"     * @param name The name of the person.","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"     * @param isPresent The presence status of the person.","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"jengoc415"},"content":"    public NameBooleanPair(String name, boolean isPresent) {","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"jengoc415"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"        this.isPresent \u003d isPresent;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"     * Returns the name of the person in this pair.","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"     * @return The name of the person.","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"    public String getName() {","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"        return name;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"     * Returns the presence status of the person in this pair.","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"     * @return True if the person is present, false otherwise.","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"    public boolean isPresent() {","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"        return isPresent;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"    public String toString() {","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"        if (isPresent) {","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"            return name + \": present\";","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"        } else {","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"            return name + \": absent\";","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"jengoc415"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"tricixg":24,"jengoc415":6,"Oliverloo0909":9}},{"path":"src/main/java/seedu/address/model/session/NamePayRatePair.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jengoc415"},"content":"package seedu.address.model.session;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"jengoc415"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"jengoc415"},"content":" * A pair of a name and a pay rate indicating person\u0027s pay rate.","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"jengoc415"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"jengoc415"},"content":"public class NamePayRatePair {","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"jengoc415"},"content":"    private String name;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"jengoc415"},"content":"    private int payRate;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"jengoc415"},"content":"     * Constructs a {@code NamePayRatePair} object with the given name and presence status.","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"jengoc415"},"content":"     * @param name The name of the person.","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"jengoc415"},"content":"     * @param payRate The pay rate of the person.","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"jengoc415"},"content":"    public NamePayRatePair(String name, int payRate) {","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"jengoc415"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"jengoc415"},"content":"        this.payRate \u003d payRate;","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"jengoc415"},"content":"     * Returns the name of the person in this pair.","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"jengoc415"},"content":"     * @return The name of the person.","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"jengoc415"},"content":"    public String getName() {","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"jengoc415"},"content":"        return name;","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"jengoc415"},"content":"     * Returns the pay rate of the person.","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"jengoc415"},"content":"     * @return PayRate of person.","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"jengoc415"},"content":"    public int getPayRate() {","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"jengoc415"},"content":"        return payRate;","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"jengoc415"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"jengoc415"},"content":"    public String toString() {","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"jengoc415"},"content":"        return name + \": \" + payRate;","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"jengoc415"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"jengoc415":39}},{"path":"src/main/java/seedu/address/model/session/Session.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jengoc415"},"content":"package seedu.address.model.session;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import java.time.Duration;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"jengoc415"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.List;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"jengoc415"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"jengoc415"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"jengoc415"},"content":"import seedu.address.model.person.PayRate;","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"jengoc415"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":" * Represents a Session in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"public class Session implements Comparable\u003cSession\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Start date time should be before end date time.\";","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"    public static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"    private String command;","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"    private final String startDateTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"    private final String endDateTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"    private final SessionName name;","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"jengoc415"},"content":"    private final int id;","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"jengoc415"},"content":"    private final Location location;","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"jengoc415"},"content":"    private HashMap\u003cString, Boolean\u003e attendanceMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"jengoc415"},"content":"    private HashMap\u003cString, Integer\u003e payRateMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jengoc415"},"content":"     * @param startDateTime start time","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"jengoc415"},"content":"     * @param endDateTime end time","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"jengoc415"},"content":"     * @param name name of session","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"jengoc415"},"content":"     * @param location place of event","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"    public Session(String startDateTime, String endDateTime, SessionName name, Location location) {","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"jengoc415"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"jengoc415"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"jengoc415"},"content":"        this.id \u003d name.hashCode();","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"        if (!isValidDateTimeFormat(this.startDateTime) || !isValidDateTimeFormat(this.endDateTime)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"            throw new IllegalArgumentException(\"Date Time should be in the format dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"        if (!this.isValidSession()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"            throw new IllegalArgumentException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"     * Constructs a {@code Session}.","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"     * @param startDateTime A valid start date and time.","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"tricixg"},"content":"     * @param endDateTime A valid end date and time.","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"tricixg"},"content":"     * @param name A valid session name.","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"tricixg"},"content":"     * @param location A valid location.","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"     * @param id A valid id.","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"     * @throws IllegalArgumentException If any of the constraints are violated.","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"Oliverloo0909"},"content":"    public Session(String startDateTime, String endDateTime, SessionName name, Location location, int id) {","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"Oliverloo0909"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"Oliverloo0909"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"Oliverloo0909"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"Oliverloo0909"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"Oliverloo0909"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"Oliverloo0909"},"content":"        if (!isValidDateTimeFormat(this.startDateTime) || !isValidDateTimeFormat(this.endDateTime)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"Oliverloo0909"},"content":"            throw new IllegalArgumentException(\"Date Time should be in the format dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"Oliverloo0909"},"content":"        if (!this.isValidSession()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"Oliverloo0909"},"content":"            throw new IllegalArgumentException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"tricixg"},"content":"     * Represents a session in the sports tracker.","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"tricixg"},"content":"     * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"jengoc415"},"content":"    public Session(String startDateTime,","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"jengoc415"},"content":"                   String endDateTime,","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"jengoc415"},"content":"                   SessionName name,","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"jengoc415"},"content":"                   Location location,","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"jengoc415"},"content":"                   int id,","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"jengoc415"},"content":"                   List\u003cNameBooleanPair\u003e nameBooleanPairs,","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"jengoc415"},"content":"                   List\u003cNamePayRatePair\u003e namePayRatePairs) {","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"Oliverloo0909"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"Oliverloo0909"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"Oliverloo0909"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"Oliverloo0909"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"Oliverloo0909"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"tricixg"},"content":"        for (NameBooleanPair pair : nameBooleanPairs) {","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"tricixg"},"content":"            attendanceMap.put(pair.getName(), pair.isPresent());","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"jengoc415"},"content":"        for (NamePayRatePair pair : namePayRatePairs) {","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"jengoc415"},"content":"            payRateMap.put(pair.getName(), pair.getPayRate());","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"Oliverloo0909"},"content":"        if (!isValidDateTimeFormat(this.startDateTime) || !isValidDateTimeFormat(this.endDateTime)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"Oliverloo0909"},"content":"            throw new IllegalArgumentException(\"Date Time should be in the format dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"Oliverloo0909"},"content":"        if (!this.isValidSession()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"Oliverloo0909"},"content":"            throw new IllegalArgumentException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"jengoc415"},"content":"     * adds person to a session","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"jengoc415"},"content":"     * @param person Person to add","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":119,"author":{"gitId":"jengoc415"},"content":"    public void addPersonToSession(Person person) {","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"jengoc415"},"content":"        String name \u003d person.getName().formattedName;","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"jengoc415"},"content":"        PayRate payRate \u003d person.getPayRate();","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"jengoc415"},"content":"        attendanceMap.put(name, false);","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"jengoc415"},"content":"        payRateMap.put(name, payRate.toInt());","lastModifiedDate":"2023-03-31"},{"lineNumber":124,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"jengoc415"},"content":"     * removes person from a session","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"jengoc415"},"content":"     * @param name String name of person","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"jengoc415"},"content":"    public void removePersonFromSession(String name) {","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"jengoc415"},"content":"        attendanceMap.remove(name);","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"jengoc415"},"content":"        payRateMap.remove(name);","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":134,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":135,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":136,"author":{"gitId":"Oliverloo0909"},"content":"     * sets student as present","lastModifiedDate":"2023-03-27"},{"lineNumber":137,"author":{"gitId":"jengoc415"},"content":"     * @param name String name of person","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":139,"author":{"gitId":"jengoc415"},"content":"    public void markStudentPresent(String name) {","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"Oliverloo0909"},"content":"        attendanceMap.remove(name);","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"jengoc415"},"content":"        attendanceMap.put(name, true);","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":143,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":144,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":145,"author":{"gitId":"Oliverloo0909"},"content":"     * sets student as absent","lastModifiedDate":"2023-03-27"},{"lineNumber":146,"author":{"gitId":"jengoc415"},"content":"     * @param name String name of person","lastModifiedDate":"2023-03-29"},{"lineNumber":147,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":148,"author":{"gitId":"jengoc415"},"content":"    public void markStudentAbsent(String name) {","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"Oliverloo0909"},"content":"        attendanceMap.remove(name);","lastModifiedDate":"2023-03-30"},{"lineNumber":150,"author":{"gitId":"jengoc415"},"content":"        attendanceMap.put(name, false);","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":152,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":153,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":154,"author":{"gitId":"Oliverloo0909"},"content":"     * checks if session contains student","lastModifiedDate":"2023-03-27"},{"lineNumber":155,"author":{"gitId":"jengoc415"},"content":"     * @param name String name of person","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":157,"author":{"gitId":"jengoc415"},"content":"    public boolean contains(String name) {","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"jengoc415"},"content":"        return attendanceMap.containsKey(name);","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":160,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":161,"author":{"gitId":"jengoc415"},"content":"    //    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":162,"author":{"gitId":"jengoc415"},"content":"    //     * Represents a session that a person can have.","lastModifiedDate":"2023-03-27"},{"lineNumber":163,"author":{"gitId":"jengoc415"},"content":"    //     * A session consists of a start date time and an end date time.","lastModifiedDate":"2023-03-27"},{"lineNumber":164,"author":{"gitId":"jengoc415"},"content":"    //     * @param sessionString","lastModifiedDate":"2023-03-27"},{"lineNumber":165,"author":{"gitId":"jengoc415"},"content":"    //     * @throws IllegalValueException","lastModifiedDate":"2023-03-27"},{"lineNumber":166,"author":{"gitId":"jengoc415"},"content":"    //     */","lastModifiedDate":"2023-03-27"},{"lineNumber":167,"author":{"gitId":"jengoc415"},"content":"    //    public Session(String sessionString) throws IllegalValueException {","lastModifiedDate":"2023-03-27"},{"lineNumber":168,"author":{"gitId":"jengoc415"},"content":"    //        String[] parts \u003d sessionString.split(\" to \");","lastModifiedDate":"2023-03-27"},{"lineNumber":169,"author":{"gitId":"jengoc415"},"content":"    //        if (parts.length !\u003d 2) {","lastModifiedDate":"2023-03-27"},{"lineNumber":170,"author":{"gitId":"jengoc415"},"content":"    //            throw new IllegalValueException(Session.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":171,"author":{"gitId":"jengoc415"},"content":"    //        }","lastModifiedDate":"2023-03-27"},{"lineNumber":172,"author":{"gitId":"jengoc415"},"content":"    //","lastModifiedDate":"2023-03-27"},{"lineNumber":173,"author":{"gitId":"jengoc415"},"content":"    //        String startDateTime \u003d parts[0];","lastModifiedDate":"2023-03-27"},{"lineNumber":174,"author":{"gitId":"jengoc415"},"content":"    //        String endDateTime \u003d parts[1];","lastModifiedDate":"2023-03-27"},{"lineNumber":175,"author":{"gitId":"jengoc415"},"content":"    //","lastModifiedDate":"2023-03-27"},{"lineNumber":176,"author":{"gitId":"jengoc415"},"content":"    //        if (!Session.isValidDateTimeFormat(startDateTime) || !Session.isValidDateTimeFormat(endDateTime)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":177,"author":{"gitId":"jengoc415"},"content":"    //            throw new IllegalValueException(Session.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":178,"author":{"gitId":"jengoc415"},"content":"    //        }","lastModifiedDate":"2023-03-27"},{"lineNumber":179,"author":{"gitId":"jengoc415"},"content":"    //","lastModifiedDate":"2023-03-27"},{"lineNumber":180,"author":{"gitId":"jengoc415"},"content":"    //        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2023-03-27"},{"lineNumber":181,"author":{"gitId":"jengoc415"},"content":"    //        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2023-03-27"},{"lineNumber":182,"author":{"gitId":"jengoc415"},"content":"    //    }","lastModifiedDate":"2023-03-27"},{"lineNumber":183,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":184,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":185,"author":{"gitId":"tricixg"},"content":"     * Returns true if the given string is a valid date format.","lastModifiedDate":"2023-03-14"},{"lineNumber":186,"author":{"gitId":"tricixg"},"content":"     * The date format is \"dd-MM-yyyy\".","lastModifiedDate":"2023-03-14"},{"lineNumber":187,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":188,"author":{"gitId":"tricixg"},"content":"    public static boolean isValidDateFormat(String str) {","lastModifiedDate":"2023-03-14"},{"lineNumber":189,"author":{"gitId":"tricixg"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":190,"author":{"gitId":"tricixg"},"content":"            LocalDate.parse(str, DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":191,"author":{"gitId":"tricixg"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":192,"author":{"gitId":"tricixg"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":193,"author":{"gitId":"tricixg"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":194,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":195,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":196,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":197,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":198,"author":{"gitId":"tricixg"},"content":"     * Returns true if the given string is a valid time format, i.e. \"HH:mm\".","lastModifiedDate":"2023-03-14"},{"lineNumber":199,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":200,"author":{"gitId":"tricixg"},"content":"    public static boolean isValidTimeFormat(String test) {","lastModifiedDate":"2023-03-14"},{"lineNumber":201,"author":{"gitId":"tricixg"},"content":"        if (test \u003d\u003d null || test.isEmpty()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":202,"author":{"gitId":"tricixg"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":203,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":204,"author":{"gitId":"tricixg"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":205,"author":{"gitId":"tricixg"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2023-03-14"},{"lineNumber":206,"author":{"gitId":"tricixg"},"content":"            LocalTime.parse(test, formatter);","lastModifiedDate":"2023-03-14"},{"lineNumber":207,"author":{"gitId":"tricixg"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":208,"author":{"gitId":"tricixg"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":209,"author":{"gitId":"tricixg"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":210,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":211,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":212,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":213,"author":{"gitId":"tricixg"},"content":"    public String getStartDateTime() {","lastModifiedDate":"2023-03-14"},{"lineNumber":214,"author":{"gitId":"tricixg"},"content":"        return startDateTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":215,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":216,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":217,"author":{"gitId":"tricixg"},"content":"    public String getEndDateTime() {","lastModifiedDate":"2023-03-14"},{"lineNumber":218,"author":{"gitId":"tricixg"},"content":"        return endDateTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":219,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":220,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":221,"author":{"gitId":"jengoc415"},"content":"    public SessionName getSessionName() {","lastModifiedDate":"2023-03-30"},{"lineNumber":222,"author":{"gitId":"jengoc415"},"content":"        return name;","lastModifiedDate":"2023-03-30"},{"lineNumber":223,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":224,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":225,"author":{"gitId":"jengoc415"},"content":"    public String getName() {","lastModifiedDate":"2023-03-28"},{"lineNumber":226,"author":{"gitId":"jengoc415"},"content":"        return name.toString();","lastModifiedDate":"2023-03-28"},{"lineNumber":227,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":228,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":229,"author":{"gitId":"jengoc415"},"content":"    public Location getLocation() {","lastModifiedDate":"2023-03-30"},{"lineNumber":230,"author":{"gitId":"jengoc415"},"content":"        return location;","lastModifiedDate":"2023-03-30"},{"lineNumber":231,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":232,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":233,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":234,"author":{"gitId":"tricixg"},"content":"     * Returns true if a given string is a valid date time format.","lastModifiedDate":"2023-03-14"},{"lineNumber":235,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":236,"author":{"gitId":"tricixg"},"content":"    public static boolean isValidDateTimeFormat(String test) {","lastModifiedDate":"2023-03-14"},{"lineNumber":237,"author":{"gitId":"tricixg"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":238,"author":{"gitId":"tricixg"},"content":"            LocalDateTime.parse(test, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-03-14"},{"lineNumber":239,"author":{"gitId":"tricixg"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":240,"author":{"gitId":"tricixg"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":241,"author":{"gitId":"tricixg"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":242,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":243,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":244,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":245,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":246,"author":{"gitId":"jengoc415"},"content":"     * Returns true if both sessions have the same identity and attributes.","lastModifiedDate":"2023-03-28"},{"lineNumber":247,"author":{"gitId":"tricixg"},"content":"     * This defines a stronger notion of equality between two sessions.","lastModifiedDate":"2023-03-14"},{"lineNumber":248,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":249,"author":{"gitId":"tricixg"},"content":"    public boolean isSameSession(Session otherSession) {","lastModifiedDate":"2023-03-14"},{"lineNumber":250,"author":{"gitId":"tricixg"},"content":"        if (otherSession \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":251,"author":{"gitId":"tricixg"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":252,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":253,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":254,"author":{"gitId":"tricixg"},"content":"        return otherSession !\u003d null","lastModifiedDate":"2023-03-14"},{"lineNumber":255,"author":{"gitId":"tricixg"},"content":"                \u0026\u0026 otherSession.getStartDateTime().equals(getStartDateTime())","lastModifiedDate":"2023-03-14"},{"lineNumber":256,"author":{"gitId":"jengoc415"},"content":"                \u0026\u0026 otherSession.getEndDateTime().equals(getEndDateTime())","lastModifiedDate":"2023-03-28"},{"lineNumber":257,"author":{"gitId":"jengoc415"},"content":"                \u0026\u0026 otherSession.getName().equals(getName())","lastModifiedDate":"2023-03-28"},{"lineNumber":258,"author":{"gitId":"jengoc415"},"content":"                \u0026\u0026 otherSession.getLocation().equals(getLocation());","lastModifiedDate":"2023-03-28"},{"lineNumber":259,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":260,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":261,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":262,"author":{"gitId":"jengoc415"},"content":"     * Returns true if both sessions have the same identity and attributes.","lastModifiedDate":"2023-03-28"},{"lineNumber":263,"author":{"gitId":"tricixg"},"content":"     * This defines a weaker notion of equality between two sessions.","lastModifiedDate":"2023-03-14"},{"lineNumber":264,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":265,"author":{"gitId":"tricixg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":266,"author":{"gitId":"tricixg"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":267,"author":{"gitId":"tricixg"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":268,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":269,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":270,"author":{"gitId":"tricixg"},"content":"        if (!(other instanceof Session)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":271,"author":{"gitId":"tricixg"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":272,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":273,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":274,"author":{"gitId":"tricixg"},"content":"        Session otherSession \u003d (Session) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":275,"author":{"gitId":"tricixg"},"content":"        return otherSession.getStartDateTime().equals(getStartDateTime())","lastModifiedDate":"2023-03-14"},{"lineNumber":276,"author":{"gitId":"jengoc415"},"content":"                \u0026\u0026 otherSession.getEndDateTime().equals(getEndDateTime())","lastModifiedDate":"2023-03-28"},{"lineNumber":277,"author":{"gitId":"jengoc415"},"content":"                \u0026\u0026 otherSession.getName().equals(getName())","lastModifiedDate":"2023-03-28"},{"lineNumber":278,"author":{"gitId":"jengoc415"},"content":"                \u0026\u0026 otherSession.getLocation().equals(getLocation());","lastModifiedDate":"2023-03-28"},{"lineNumber":279,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":280,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":281,"author":{"gitId":"tricixg"},"content":"    public boolean isValidSession() {","lastModifiedDate":"2023-03-14"},{"lineNumber":282,"author":{"gitId":"tricixg"},"content":"        return LocalDateTime.parse(startDateTime, DateTimeFormatter","lastModifiedDate":"2023-03-16"},{"lineNumber":283,"author":{"gitId":"tricixg"},"content":"                        .ofPattern(\"dd-MM-yyyy HH:mm\"))","lastModifiedDate":"2023-03-16"},{"lineNumber":284,"author":{"gitId":"tricixg"},"content":"                .isBefore(LocalDateTime.parse(endDateTime, DateTimeFormatter","lastModifiedDate":"2023-03-16"},{"lineNumber":285,"author":{"gitId":"jengoc415"},"content":"                        .ofPattern(\"dd-MM-yyyy HH:mm\")))","lastModifiedDate":"2023-03-28"},{"lineNumber":286,"author":{"gitId":"jengoc415"},"content":"                \u0026\u0026 Name.isValidName(getName()) \u0026\u0026 Location.isValidLocation(getLocation().toString());","lastModifiedDate":"2023-03-30"},{"lineNumber":287,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":288,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":289,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":290,"author":{"gitId":"tricixg"},"content":"     * Returns the duration of the session.","lastModifiedDate":"2023-03-14"},{"lineNumber":291,"author":{"gitId":"tricixg"},"content":"     * @return duration of the session.","lastModifiedDate":"2023-03-14"},{"lineNumber":292,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":293,"author":{"gitId":"tricixg"},"content":"    public Duration getSessionDuration() {","lastModifiedDate":"2023-03-14"},{"lineNumber":294,"author":{"gitId":"tricixg"},"content":"        return Duration.between(LocalDateTime.parse(startDateTime,","lastModifiedDate":"2023-03-16"},{"lineNumber":295,"author":{"gitId":"tricixg"},"content":"                        DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\")),","lastModifiedDate":"2023-03-16"},{"lineNumber":296,"author":{"gitId":"tricixg"},"content":"                LocalDateTime.parse(endDateTime,","lastModifiedDate":"2023-03-16"},{"lineNumber":297,"author":{"gitId":"tricixg"},"content":"                        DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\")));","lastModifiedDate":"2023-03-16"},{"lineNumber":298,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":299,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":300,"author":{"gitId":"tricixg"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":301,"author":{"gitId":"tricixg"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-14"},{"lineNumber":302,"author":{"gitId":"tricixg"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-14"},{"lineNumber":303,"author":{"gitId":"jengoc415"},"content":"        return Objects.hash(startDateTime, endDateTime, name, location);","lastModifiedDate":"2023-03-28"},{"lineNumber":304,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":305,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":306,"author":{"gitId":"jengoc415"},"content":"    public String getAttendees() {","lastModifiedDate":"2023-03-28"},{"lineNumber":307,"author":{"gitId":"jengoc415"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-28"},{"lineNumber":308,"author":{"gitId":"jengoc415"},"content":"        for (Map.Entry\u003cString, Boolean\u003e entry : attendanceMap.entrySet()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":309,"author":{"gitId":"jengoc415"},"content":"            sb.append(entry.getKey()).append(\": \");","lastModifiedDate":"2023-03-28"},{"lineNumber":310,"author":{"gitId":"jengoc415"},"content":"            if (entry.getValue()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":311,"author":{"gitId":"jengoc415"},"content":"                sb.append(\"1, \");","lastModifiedDate":"2023-03-28"},{"lineNumber":312,"author":{"gitId":"jengoc415"},"content":"            } else {","lastModifiedDate":"2023-03-28"},{"lineNumber":313,"author":{"gitId":"jengoc415"},"content":"                sb.append(\"0, \");","lastModifiedDate":"2023-03-28"},{"lineNumber":314,"author":{"gitId":"jengoc415"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":315,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":316,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":317,"author":{"gitId":"jengoc415"},"content":"        if (attendanceMap.size() \u003e 0) {","lastModifiedDate":"2023-03-28"},{"lineNumber":318,"author":{"gitId":"jengoc415"},"content":"            sb.setLength(sb.length() - 2);","lastModifiedDate":"2023-03-28"},{"lineNumber":319,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":320,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":321,"author":{"gitId":"jengoc415"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-29"},{"lineNumber":322,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":323,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":324,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":325,"author":{"gitId":"jengoc415"},"content":"     * Calculates the total pay for a session based on the pay rates of the attendees","lastModifiedDate":"2023-03-30"},{"lineNumber":326,"author":{"gitId":"jengoc415"},"content":"     * and the duration of the session.","lastModifiedDate":"2023-03-29"},{"lineNumber":327,"author":{"gitId":"jengoc415"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":328,"author":{"gitId":"jengoc415"},"content":"     * @return the total pay for the session","lastModifiedDate":"2023-03-29"},{"lineNumber":329,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":330,"author":{"gitId":"jengoc415"},"content":"    public float getTotalPay() {","lastModifiedDate":"2023-03-30"},{"lineNumber":331,"author":{"gitId":"jengoc415"},"content":"        float totalPay \u003d 0;","lastModifiedDate":"2023-03-29"},{"lineNumber":332,"author":{"gitId":"jengoc415"},"content":"        long durationInMins \u003d getSessionDuration().toMinutes();","lastModifiedDate":"2023-03-29"},{"lineNumber":333,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":334,"author":{"gitId":"tricixg"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":335,"author":{"gitId":"jengoc415"},"content":"            for (Map.Entry\u003cString, Boolean\u003e entry : attendanceMap.entrySet()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":336,"author":{"gitId":"jengoc415"},"content":"                if (entry.getValue()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":337,"author":{"gitId":"jengoc415"},"content":"                    float indivPay \u003d payRateMap.get(entry.getKey());","lastModifiedDate":"2023-03-31"},{"lineNumber":338,"author":{"gitId":"jengoc415"},"content":"                    totalPay +\u003d indivPay / 60 * durationInMins;","lastModifiedDate":"2023-03-29"},{"lineNumber":339,"author":{"gitId":"jengoc415"},"content":"                }","lastModifiedDate":"2023-03-29"},{"lineNumber":340,"author":{"gitId":"jengoc415"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":341,"author":{"gitId":"tricixg"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-03-30"},{"lineNumber":342,"author":{"gitId":"tricixg"},"content":"            logger.warning(\"No pay rates for session \" + getName());","lastModifiedDate":"2023-03-30"},{"lineNumber":343,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":344,"author":{"gitId":"jengoc415"},"content":"        return totalPay;","lastModifiedDate":"2023-03-29"},{"lineNumber":345,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":346,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":347,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":348,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":349,"author":{"gitId":"jengoc415"},"content":"     * Returns a string representation of the attendance count for the session.","lastModifiedDate":"2023-03-29"},{"lineNumber":350,"author":{"gitId":"jengoc415"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":351,"author":{"gitId":"jengoc415"},"content":"     * @return a string of the format \"X/Y\", where X is the number of attendees","lastModifiedDate":"2023-03-29"},{"lineNumber":352,"author":{"gitId":"jengoc415"},"content":"     *      present and Y is the total number of attendees","lastModifiedDate":"2023-03-29"},{"lineNumber":353,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":354,"author":{"gitId":"jengoc415"},"content":"    public String getAttendanceCount() {","lastModifiedDate":"2023-03-29"},{"lineNumber":355,"author":{"gitId":"jengoc415"},"content":"        int totalCount \u003d 0;","lastModifiedDate":"2023-03-29"},{"lineNumber":356,"author":{"gitId":"jengoc415"},"content":"        int presentCount \u003d 0;","lastModifiedDate":"2023-03-29"},{"lineNumber":357,"author":{"gitId":"jengoc415"},"content":"        for (Map.Entry\u003cString, Boolean\u003e entry : attendanceMap.entrySet()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":358,"author":{"gitId":"jengoc415"},"content":"            if (entry.getValue()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":359,"author":{"gitId":"jengoc415"},"content":"                presentCount++;","lastModifiedDate":"2023-03-29"},{"lineNumber":360,"author":{"gitId":"jengoc415"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":361,"author":{"gitId":"jengoc415"},"content":"            totalCount++;","lastModifiedDate":"2023-03-29"},{"lineNumber":362,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":363,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":364,"author":{"gitId":"jengoc415"},"content":"        return String.format(\"%d/%d\", presentCount, totalCount);","lastModifiedDate":"2023-03-29"},{"lineNumber":365,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":366,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":367,"author":{"gitId":"tricixg"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":368,"author":{"gitId":"tricixg"},"content":"    public String toString() {","lastModifiedDate":"2023-03-14"},{"lineNumber":369,"author":{"gitId":"tricixg"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-14"},{"lineNumber":370,"author":{"gitId":"jengoc415"},"content":"        builder.append(\" Session name: \")","lastModifiedDate":"2023-03-28"},{"lineNumber":371,"author":{"gitId":"jengoc415"},"content":"                .append(getName())","lastModifiedDate":"2023-03-28"},{"lineNumber":372,"author":{"gitId":"jengoc415"},"content":"                .append(\"\\n Start: \")","lastModifiedDate":"2023-03-28"},{"lineNumber":373,"author":{"gitId":"tricixg"},"content":"                .append(LocalDateTime.parse(getStartDateTime(),","lastModifiedDate":"2023-03-16"},{"lineNumber":374,"author":{"gitId":"tricixg"},"content":"                        DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\")).format(DATE_TIME_FORMATTER))","lastModifiedDate":"2023-03-16"},{"lineNumber":375,"author":{"gitId":"tricixg"},"content":"                .append(\"\\n End: \")","lastModifiedDate":"2023-03-23"},{"lineNumber":376,"author":{"gitId":"tricixg"},"content":"                .append(LocalDateTime.parse(getEndDateTime(),","lastModifiedDate":"2023-03-16"},{"lineNumber":377,"author":{"gitId":"jengoc415"},"content":"                        DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\")).format(DATE_TIME_FORMATTER))","lastModifiedDate":"2023-03-28"},{"lineNumber":378,"author":{"gitId":"jengoc415"},"content":"                .append(\"\\n Location: \")","lastModifiedDate":"2023-03-28"},{"lineNumber":379,"author":{"gitId":"jengoc415"},"content":"                .append(getLocation())","lastModifiedDate":"2023-03-28"},{"lineNumber":380,"author":{"gitId":"jengoc415"},"content":"                .append(\"\\n Attendees: \")","lastModifiedDate":"2023-03-28"},{"lineNumber":381,"author":{"gitId":"jengoc415"},"content":"                .append(getAttendees());","lastModifiedDate":"2023-03-28"},{"lineNumber":382,"author":{"gitId":"tricixg"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-14"},{"lineNumber":383,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":384,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":385,"author":{"gitId":"tricixg"},"content":"    public String getCommand() {","lastModifiedDate":"2023-03-14"},{"lineNumber":386,"author":{"gitId":"jengoc415"},"content":"        return String.format(\"%s: from %s to %s | at %s\",","lastModifiedDate":"2023-03-28"},{"lineNumber":387,"author":{"gitId":"jengoc415"},"content":"                getName(), startDateTime, endDateTime, getLocation());","lastModifiedDate":"2023-03-28"},{"lineNumber":388,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":389,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":390,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":391,"author":{"gitId":"tricixg"},"content":"     * Returns a command string representation of this {@code Session} object.","lastModifiedDate":"2023-03-16"},{"lineNumber":392,"author":{"gitId":"tricixg"},"content":"     * The command string is in the format of \"start date time to end date time\".","lastModifiedDate":"2023-03-16"},{"lineNumber":393,"author":{"gitId":"tricixg"},"content":"     * @return a command string representation of this {@code Session} object.","lastModifiedDate":"2023-03-16"},{"lineNumber":394,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":395,"author":{"gitId":"tricixg"},"content":"    public String toCommandString() {","lastModifiedDate":"2023-03-15"},{"lineNumber":396,"author":{"gitId":"tricixg"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-15"},{"lineNumber":397,"author":{"gitId":"jengoc415"},"content":"        builder.append(getName())","lastModifiedDate":"2023-03-28"},{"lineNumber":398,"author":{"gitId":"jengoc415"},"content":"                .append(\": \")","lastModifiedDate":"2023-03-28"},{"lineNumber":399,"author":{"gitId":"jengoc415"},"content":"                .append(LocalDateTime.parse(getStartDateTime(),","lastModifiedDate":"2023-03-28"},{"lineNumber":400,"author":{"gitId":"tricixg"},"content":"                        DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\")).format(DATE_TIME_FORMATTER))","lastModifiedDate":"2023-03-16"},{"lineNumber":401,"author":{"gitId":"tricixg"},"content":"                .append(\" to \")","lastModifiedDate":"2023-03-15"},{"lineNumber":402,"author":{"gitId":"tricixg"},"content":"                .append(LocalDateTime.parse(getEndDateTime(),","lastModifiedDate":"2023-03-16"},{"lineNumber":403,"author":{"gitId":"jengoc415"},"content":"                        DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\")).format(DATE_TIME_FORMATTER))","lastModifiedDate":"2023-03-28"},{"lineNumber":404,"author":{"gitId":"jengoc415"},"content":"                .append(\" at \")","lastModifiedDate":"2023-03-28"},{"lineNumber":405,"author":{"gitId":"jengoc415"},"content":"                .append(getLocation());","lastModifiedDate":"2023-03-28"},{"lineNumber":406,"author":{"gitId":"tricixg"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-15"},{"lineNumber":407,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":408,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":409,"author":{"gitId":"tricixg"},"content":"    public String getDate() {","lastModifiedDate":"2023-03-21"},{"lineNumber":410,"author":{"gitId":"tricixg"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(startDateTime, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":411,"author":{"gitId":"tricixg"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":412,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":413,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":414,"author":{"gitId":"tricixg"},"content":"    public int getDay() {","lastModifiedDate":"2023-03-21"},{"lineNumber":415,"author":{"gitId":"tricixg"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(startDateTime, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":416,"author":{"gitId":"tricixg"},"content":"        return dateTime.getDayOfMonth();","lastModifiedDate":"2023-03-21"},{"lineNumber":417,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":418,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":419,"author":{"gitId":"tricixg"},"content":"    public int getMonth() {","lastModifiedDate":"2023-03-21"},{"lineNumber":420,"author":{"gitId":"tricixg"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(startDateTime, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":421,"author":{"gitId":"tricixg"},"content":"        return dateTime.getMonthValue();","lastModifiedDate":"2023-03-21"},{"lineNumber":422,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":423,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":424,"author":{"gitId":"tricixg"},"content":"    public int getYear() {","lastModifiedDate":"2023-03-21"},{"lineNumber":425,"author":{"gitId":"tricixg"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(startDateTime, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":426,"author":{"gitId":"tricixg"},"content":"        return dateTime.getYear();","lastModifiedDate":"2023-03-21"},{"lineNumber":427,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":428,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":429,"author":{"gitId":"tricixg"},"content":"    public String getTimeFormat() {","lastModifiedDate":"2023-03-21"},{"lineNumber":430,"author":{"gitId":"tricixg"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(startDateTime, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":431,"author":{"gitId":"tricixg"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":432,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":433,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":434,"author":{"gitId":"tricixg"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":435,"author":{"gitId":"tricixg"},"content":"    public int compareTo(Session other) {","lastModifiedDate":"2023-03-21"},{"lineNumber":436,"author":{"gitId":"tricixg"},"content":"        LocalDateTime thisStartDateTime \u003d LocalDateTime.parse(startDateTime, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-03-21"},{"lineNumber":437,"author":{"gitId":"tricixg"},"content":"        LocalDateTime otherStartDateTime \u003d LocalDateTime.parse(other.startDateTime, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-03-21"},{"lineNumber":438,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":439,"author":{"gitId":"tricixg"},"content":"        return thisStartDateTime.compareTo(otherStartDateTime);","lastModifiedDate":"2023-03-21"},{"lineNumber":440,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":441,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":442,"author":{"gitId":"Oliverloo0909"},"content":"    public String getId() {","lastModifiedDate":"2023-03-27"},{"lineNumber":443,"author":{"gitId":"Oliverloo0909"},"content":"        return String.valueOf(id);","lastModifiedDate":"2023-03-27"},{"lineNumber":444,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":445,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":446,"author":{"gitId":"jengoc415"},"content":"    public ArrayList\u003cNameBooleanPair\u003e getNameBooleanMap() {","lastModifiedDate":"2023-03-30"},{"lineNumber":447,"author":{"gitId":"Oliverloo0909"},"content":"        ArrayList\u003cNameBooleanPair\u003e map \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":448,"author":{"gitId":"tricixg"},"content":"        for (Map.Entry\u003cString, Boolean\u003e set","lastModifiedDate":"2023-03-28"},{"lineNumber":449,"author":{"gitId":"tricixg"},"content":"                : attendanceMap.entrySet()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":450,"author":{"gitId":"Oliverloo0909"},"content":"            NameBooleanPair toAdd \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":451,"author":{"gitId":"Oliverloo0909"},"content":"                    new NameBooleanPair(","lastModifiedDate":"2023-03-28"},{"lineNumber":452,"author":{"gitId":"Oliverloo0909"},"content":"                            set.getKey(),","lastModifiedDate":"2023-03-28"},{"lineNumber":453,"author":{"gitId":"Oliverloo0909"},"content":"                            set.getValue());","lastModifiedDate":"2023-03-28"},{"lineNumber":454,"author":{"gitId":"Oliverloo0909"},"content":"            map.add(toAdd);","lastModifiedDate":"2023-03-28"},{"lineNumber":455,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":456,"author":{"gitId":"Oliverloo0909"},"content":"        return map;","lastModifiedDate":"2023-03-28"},{"lineNumber":457,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":458,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":459,"author":{"gitId":"jengoc415"},"content":"    public ArrayList\u003cNamePayRatePair\u003e getNamePayRateMap() {","lastModifiedDate":"2023-03-30"},{"lineNumber":460,"author":{"gitId":"jengoc415"},"content":"        ArrayList\u003cNamePayRatePair\u003e map \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":461,"author":{"gitId":"jengoc415"},"content":"        for (Map.Entry\u003cString, Integer\u003e set","lastModifiedDate":"2023-03-31"},{"lineNumber":462,"author":{"gitId":"jengoc415"},"content":"                : payRateMap.entrySet()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":463,"author":{"gitId":"jengoc415"},"content":"            NamePayRatePair toAdd \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":464,"author":{"gitId":"jengoc415"},"content":"                    new NamePayRatePair(","lastModifiedDate":"2023-03-30"},{"lineNumber":465,"author":{"gitId":"jengoc415"},"content":"                            set.getKey(),","lastModifiedDate":"2023-03-30"},{"lineNumber":466,"author":{"gitId":"jengoc415"},"content":"                            set.getValue());","lastModifiedDate":"2023-03-30"},{"lineNumber":467,"author":{"gitId":"jengoc415"},"content":"            map.add(toAdd);","lastModifiedDate":"2023-03-30"},{"lineNumber":468,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":469,"author":{"gitId":"jengoc415"},"content":"        return map;","lastModifiedDate":"2023-03-30"},{"lineNumber":470,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":471,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":472,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":473,"author":{"gitId":"tricixg"},"content":"     * @return A new Session object that is a copy of this session.","lastModifiedDate":"2023-03-28"},{"lineNumber":474,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":475,"author":{"gitId":"Oliverloo0909"},"content":"    public Session copy() {","lastModifiedDate":"2023-03-28"},{"lineNumber":476,"author":{"gitId":"Oliverloo0909"},"content":"        return new Session(this.startDateTime,","lastModifiedDate":"2023-03-28"},{"lineNumber":477,"author":{"gitId":"Oliverloo0909"},"content":"                this.endDateTime,","lastModifiedDate":"2023-03-28"},{"lineNumber":478,"author":{"gitId":"Oliverloo0909"},"content":"                this.name,","lastModifiedDate":"2023-03-28"},{"lineNumber":479,"author":{"gitId":"Oliverloo0909"},"content":"                this.location,","lastModifiedDate":"2023-03-28"},{"lineNumber":480,"author":{"gitId":"Oliverloo0909"},"content":"                this.id,","lastModifiedDate":"2023-03-28"},{"lineNumber":481,"author":{"gitId":"jengoc415"},"content":"                this.getNameBooleanMap(),","lastModifiedDate":"2023-03-30"},{"lineNumber":482,"author":{"gitId":"jengoc415"},"content":"                this.getNamePayRateMap());","lastModifiedDate":"2023-03-30"},{"lineNumber":483,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":484,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":485,"author":{"gitId":"tricixg"},"content":"    public HashMap\u003cString, Boolean\u003e getAttendanceMap() {","lastModifiedDate":"2023-03-28"},{"lineNumber":486,"author":{"gitId":"tricixg"},"content":"        return attendanceMap;","lastModifiedDate":"2023-03-28"},{"lineNumber":487,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":488,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":489,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":490,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":491,"author":{"gitId":"tricixg"},"content":"     * Checks if this session overlaps with the given session.","lastModifiedDate":"2023-04-03"},{"lineNumber":492,"author":{"gitId":"tricixg"},"content":"     * Two sessions overlap if their scheduled timings intersect.","lastModifiedDate":"2023-04-03"},{"lineNumber":493,"author":{"gitId":"tricixg"},"content":"     * @param otherSession The other session to check for overlap.","lastModifiedDate":"2023-04-03"},{"lineNumber":494,"author":{"gitId":"tricixg"},"content":"     * @return {@code true} if the sessions overlap, {@code false} otherwise.","lastModifiedDate":"2023-04-03"},{"lineNumber":495,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":496,"author":{"gitId":"tricixg"},"content":"    public boolean overlaps(Session otherSession) {","lastModifiedDate":"2023-04-03"},{"lineNumber":497,"author":{"gitId":"tricixg"},"content":"        return LocalDateTime.parse(endDateTime, DateTimeFormatter","lastModifiedDate":"2023-04-03"},{"lineNumber":498,"author":{"gitId":"tricixg"},"content":"                .ofPattern(\"dd-MM-yyyy HH:mm\")).isAfter(LocalDateTime.parse(otherSession.getStartDateTime(),","lastModifiedDate":"2023-04-03"},{"lineNumber":499,"author":{"gitId":"tricixg"},"content":"                DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\")))","lastModifiedDate":"2023-04-03"},{"lineNumber":500,"author":{"gitId":"tricixg"},"content":"                \u0026\u0026 LocalDateTime.parse(otherSession.getEndDateTime(), DateTimeFormatter","lastModifiedDate":"2023-04-03"},{"lineNumber":501,"author":{"gitId":"tricixg"},"content":"                .ofPattern(\"dd-MM-yyyy HH:mm\")).isAfter(LocalDateTime.parse(this.getStartDateTime(),","lastModifiedDate":"2023-04-03"},{"lineNumber":502,"author":{"gitId":"tricixg"},"content":"                DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\")));","lastModifiedDate":"2023-04-03"},{"lineNumber":503,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":504,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":505,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"tricixg":243,"jengoc415":181,"Oliverloo0909":81}},{"path":"src/main/java/seedu/address/model/session/SessionName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jengoc415"},"content":"package seedu.address.model.session;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"jengoc415"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"jengoc415"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.logic.parser.ParserUtil.toTitleCase;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"jengoc415"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"jengoc415"},"content":" * Represents a Session\u0027s name in the address book.","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"jengoc415"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"jengoc415"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"public class SessionName {","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"jengoc415"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"jengoc415"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"jengoc415"},"content":"    /*","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"jengoc415"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"jengoc415"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"jengoc415"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"jengoc415"},"content":"    public final String sessionName;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"jengoc415"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"jengoc415"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"jengoc415"},"content":"     * @param name A valid name.","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"    public SessionName(String name) {","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"jengoc415"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"jengoc415"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"        sessionName \u003d toTitleCase(name);","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"jengoc415"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"jengoc415"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"jengoc415"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"    public String get() {","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"        return sessionName;","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"jengoc415"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"jengoc415"},"content":"    public String toString() {","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"jengoc415"},"content":"        return sessionName;","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"jengoc415"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"jengoc415"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"jengoc415"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"Oliverloo0909"},"content":"                || (other instanceof SessionName // instanceof handles nulls","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"Oliverloo0909"},"content":"                \u0026\u0026 sessionName.equalsIgnoreCase(((SessionName) other).sessionName)); // state check","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"jengoc415"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"jengoc415"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"jengoc415"},"content":"        return sessionName.hashCode();","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"jengoc415"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"jengoc415":54,"Oliverloo0909":9}},{"path":"src/main/java/seedu/address/model/session/UniqueSessionList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jengoc415"},"content":"package seedu.address.model.session;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"jengoc415"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"jengoc415"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"jengoc415"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"jengoc415"},"content":"import java.util.List;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"jengoc415"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"jengoc415"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"jengoc415"},"content":"import seedu.address.model.session.exceptions.DuplicateSessionException;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"jengoc415"},"content":"import seedu.address.model.session.exceptions.SessionNotFoundException;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"jengoc415"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"jengoc415"},"content":" * A list of sessions that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":" * A session is considered unique by comparing using","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":" * {@code Session#isSameSession(Session)}. As such, adding and updating of","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"jengoc415"},"content":" * sessions uses Session#isSameSession(Session) for equality so as to ensure that the session being added or updated is","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":" * unique in terms of identity in the UniqueSessionList.","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":" * However, the removal of a session uses Session#equals(Object) so","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"jengoc415"},"content":" * as to ensure that the session with exactly the same fields will be removed.","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"jengoc415"},"content":" *","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"jengoc415"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"jengoc415"},"content":" *","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"jengoc415"},"content":" * @see Session#isSameSession(Session)","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"jengoc415"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"jengoc415"},"content":"public class UniqueSessionList implements Iterable\u003cSession\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"jengoc415"},"content":"    private final ObservableList\u003cSession\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"jengoc415"},"content":"    private final ObservableList\u003cSession\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"jengoc415"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"jengoc415"},"content":"     * Returns true if the list contains an equivalent session as the given argument.","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"jengoc415"},"content":"    public boolean contains(Session toCheck) {","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"jengoc415"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"jengoc415"},"content":"        return internalList.stream().anyMatch(toCheck::isSameSession);","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"jengoc415"},"content":"     * Adds a session to the list.","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"jengoc415"},"content":"     * The session must not already exist in the list.","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"jengoc415"},"content":"    public void add(Session toAdd) {","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"jengoc415"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"jengoc415"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"jengoc415"},"content":"            throw new DuplicateSessionException();","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"jengoc415"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"jengoc415"},"content":"     * Replaces the session {@code target} in the list with {@code editedSession}.","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"jengoc415"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"jengoc415"},"content":"     * The session identity of {@code editedSession} must not be the same as another existing session in the list.","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"jengoc415"},"content":"    public void setSession(Session target, Session editedSession) {","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"jengoc415"},"content":"        requireAllNonNull(target, editedSession);","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"jengoc415"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"jengoc415"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"jengoc415"},"content":"            throw new SessionNotFoundException();","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"jengoc415"},"content":"        if (!target.isSameSession(editedSession) \u0026\u0026 contains(editedSession)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"jengoc415"},"content":"            throw new DuplicateSessionException();","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"jengoc415"},"content":"        internalList.set(index, editedSession);","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"jengoc415"},"content":"     * Removes the equivalent session from the list.","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"jengoc415"},"content":"     * The session must exist in the list.","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"jengoc415"},"content":"    public void remove(Session toRemove) {","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"jengoc415"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"jengoc415"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"jengoc415"},"content":"            throw new SessionNotFoundException();","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"jengoc415"},"content":"    public void setSessions(UniqueSessionList replacement) {","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"jengoc415"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"jengoc415"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"jengoc415"},"content":"     * Replaces the contents of this list with {@code sessions}.","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"jengoc415"},"content":"     * {@code sessions} must not contain duplicate sessions.","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"jengoc415"},"content":"    public void setSessions(List\u003cSession\u003e sessions) {","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"jengoc415"},"content":"        requireAllNonNull(sessions);","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"jengoc415"},"content":"        if (!sessionsAreUnique(sessions)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"jengoc415"},"content":"            throw new DuplicateSessionException();","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"jengoc415"},"content":"        internalList.setAll(sessions);","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"jengoc415"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"jengoc415"},"content":"    public ObservableList\u003cSession\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"jengoc415"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"jengoc415"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"jengoc415"},"content":"    public Iterator\u003cSession\u003e iterator() {","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"jengoc415"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"jengoc415"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"jengoc415"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"jengoc415"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"jengoc415"},"content":"                || (other instanceof seedu.address.model.session.UniqueSessionList // instanceof handles nulls","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"jengoc415"},"content":"                \u0026\u0026 internalList.equals(((seedu.address.model.session.UniqueSessionList) other).internalList));","lastModifiedDate":"2023-03-27"},{"lineNumber":119,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":120,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"jengoc415"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"jengoc415"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"jengoc415"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"jengoc415"},"content":"     * Returns true if {@code sessions} contains only unique sessions.","lastModifiedDate":"2023-03-27"},{"lineNumber":128,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":129,"author":{"gitId":"jengoc415"},"content":"    private boolean sessionsAreUnique(List\u003cSession\u003e sessions) {","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"jengoc415"},"content":"        for (int i \u003d 0; i \u003c sessions.size() - 1; i++) {","lastModifiedDate":"2023-03-27"},{"lineNumber":131,"author":{"gitId":"jengoc415"},"content":"            for (int j \u003d i + 1; j \u003c sessions.size(); j++) {","lastModifiedDate":"2023-03-27"},{"lineNumber":132,"author":{"gitId":"jengoc415"},"content":"                if (sessions.get(i).isSameSession(sessions.get(j))) {","lastModifiedDate":"2023-03-27"},{"lineNumber":133,"author":{"gitId":"jengoc415"},"content":"                    return false;","lastModifiedDate":"2023-03-27"},{"lineNumber":134,"author":{"gitId":"jengoc415"},"content":"                }","lastModifiedDate":"2023-03-27"},{"lineNumber":135,"author":{"gitId":"jengoc415"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":136,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":137,"author":{"gitId":"jengoc415"},"content":"        return true;","lastModifiedDate":"2023-03-27"},{"lineNumber":138,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":139,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":140,"author":{"gitId":"jengoc415"},"content":"    //    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":141,"author":{"gitId":"jengoc415"},"content":"    //     * Sorts the list of sessions according to the given attribute.","lastModifiedDate":"2023-03-27"},{"lineNumber":142,"author":{"gitId":"tricixg"},"content":"    //     * @param attribute the attribute to sort by. 1 indicates sorting by name,","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"tricixg"},"content":"    //     and 2 indicates sorting by pay rate.","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"jengoc415"},"content":"    //     * @throws NumberFormatException if the pay rate is not in a valid format","lastModifiedDate":"2023-03-27"},{"lineNumber":145,"author":{"gitId":"jengoc415"},"content":"    //     */","lastModifiedDate":"2023-03-27"},{"lineNumber":146,"author":{"gitId":"jengoc415"},"content":"    //    public void sort(int attribute) {","lastModifiedDate":"2023-03-27"},{"lineNumber":147,"author":{"gitId":"jengoc415"},"content":"    //        if (attribute \u003d\u003d 1) {","lastModifiedDate":"2023-03-27"},{"lineNumber":148,"author":{"gitId":"jengoc415"},"content":"    //            // Sort by name","lastModifiedDate":"2023-03-27"},{"lineNumber":149,"author":{"gitId":"jengoc415"},"content":"    //            internalList.sort(Comparator.comparing(person -\u003e person.getName().toString()));","lastModifiedDate":"2023-03-27"},{"lineNumber":150,"author":{"gitId":"jengoc415"},"content":"    //        } else if (attribute \u003d\u003d 2) {","lastModifiedDate":"2023-03-27"},{"lineNumber":151,"author":{"gitId":"jengoc415"},"content":"    //            // Sort by pay rate","lastModifiedDate":"2023-03-27"},{"lineNumber":152,"author":{"gitId":"jengoc415"},"content":"    //            internalList.sort(Comparator.comparing(person -\u003e Integer.parseInt(person.getPayRate().toString())));","lastModifiedDate":"2023-03-27"},{"lineNumber":153,"author":{"gitId":"jengoc415"},"content":"    //        }","lastModifiedDate":"2023-03-27"},{"lineNumber":154,"author":{"gitId":"jengoc415"},"content":"    //    }","lastModifiedDate":"2023-03-27"},{"lineNumber":155,"author":{"gitId":"jengoc415"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"tricixg":6,"jengoc415":149}},{"path":"src/main/java/seedu/address/model/session/exceptions/DuplicateSessionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jengoc415"},"content":"package seedu.address.model.session.exceptions;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"jengoc415"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":" * Signals that the operation will result in","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":" * duplicate Sessions (Sessions are considered duplicates if they have the same","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"jengoc415"},"content":" * identity).","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"jengoc415"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"jengoc415"},"content":"public class DuplicateSessionException extends RuntimeException {","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"jengoc415"},"content":"    public DuplicateSessionException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"jengoc415"},"content":"        super(\"Operation would result in duplicate sessions\");","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"jengoc415"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"tricixg":2,"jengoc415":10}},{"path":"src/main/java/seedu/address/model/session/exceptions/SessionNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jengoc415"},"content":"package seedu.address.model.session.exceptions;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"jengoc415"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"jengoc415"},"content":" * Signals that the operation is unable to find the specified session.","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"jengoc415"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"jengoc415"},"content":"public class SessionNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"jengoc415":6}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.Locale;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String MESSAGE_ALPHANUMERIC_CONSTRAINTS \u003d \"Tags names should be alphanumeric.\";","lastModifiedDate":"2023-04-03"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String MESSAGE_MAXIMUM_CHARACTER_CONSTRAINTS \u003d \"Tag name exceeded 20 character limit.\";","lastModifiedDate":"2023-04-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_ALPHANUMERIC_CONSTRAINTS);","lastModifiedDate":"2023-04-03"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_MAXIMUM_CHARACTER_CONSTRAINTS);","lastModifiedDate":"2023-04-03"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"        this.tagName \u003d tagName.toLowerCase(Locale.ROOT);","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"     * Returns true if a given string does not exceed 20 characters.","lastModifiedDate":"2023-04-03"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"    public static boolean isValidLengthTagName(String input) {","lastModifiedDate":"2023-04-03"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"        if (input \u003d\u003d null) {","lastModifiedDate":"2023-04-03"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"            return false;","lastModifiedDate":"2023-04-03"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"        return input.length() \u003c\u003d 20;","lastModifiedDate":"2023-04-03"},{"lineNumber":47,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":48,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"Oliverloo0909"},"content":"    public String getTag() {","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"Oliverloo0909"},"content":"        return tagName;","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"Oliverloo0909"},"content":"     * compares and checks if two tags are same or different","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"Oliverloo0909"},"content":"     * @param otherTag","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"Oliverloo0909"},"content":"     * @return","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"Oliverloo0909"},"content":"    public boolean isSameTag(Tag otherTag) {","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"Oliverloo0909"},"content":"        if (otherTag \u003d\u003d this) {","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"Oliverloo0909"},"content":"            return true;","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"Oliverloo0909"},"content":"        return otherTag !\u003d null","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"Oliverloo0909"},"content":"                \u0026\u0026 otherTag.getTag().equals(getTag());","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Oliverloo0909":34,"-":51}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"jengoc415"},"content":"import seedu.address.model.person.PayRate;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"        return new Person[] {new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"jengoc415"},"content":"                new PayRate(\"90\"),","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"                getTagSet(\"friends\")), new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"jengoc415"},"content":"                        new PayRate(\"123\"),","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"                        getTagSet(\"colleagues\", \"friends\")), new Person(new Name(\"Charlotte Oliveiro\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"                            new Phone(\"93210283\"), new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"jengoc415"},"content":"                            new PayRate(\"12\"),","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"                        getTagSet(\"neighbours\")), new Person(new Name(\"David Li\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"                            new Phone(\"91031282\"), new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"jengoc415"},"content":"                            new PayRate(\"0\"),","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"                        getTagSet(\"family\")), new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                            new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"jengoc415"},"content":"                            new PayRate(\"5\"),","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"                        getTagSet(\"classmates\")), new Person(new Name(\"Roy Balakrishnan\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"                            new Phone(\"92624417\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                            new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"jengoc415"},"content":"                            new PayRate(\"5\"),","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                        getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"tricixg":9,"jengoc415":7,"-":44}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedNameBooleanPair.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.session.NameBooleanPair;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":" * Jackson-friendly version of {@link seedu.address.model.session.NameBooleanPair}.","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"public class JsonAdaptedNameBooleanPair {","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"    private final String studentName;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"    private final String isPresent;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"    public JsonAdaptedNameBooleanPair(@JsonProperty(\"name\") String studentName,","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"                                      @JsonProperty(\"attendance\") String isPresent) {","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"        this.studentName \u003d studentName;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"        this.isPresent \u003d isPresent;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"    public JsonAdaptedNameBooleanPair(NameBooleanPair source) {","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"        this.studentName \u003d source.getName();","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"        this.isPresent \u003d String.valueOf(source.isPresent());","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"    public NameBooleanPair toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"        if (!Name.isValidName(studentName)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-03"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"Oliverloo0909"},"content":"        return new NameBooleanPair(studentName, Boolean.parseBoolean(isPresent));","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"tricixg":3,"Oliverloo0909":47}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedNamePayRatePair.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jengoc415"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"jengoc415"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"jengoc415"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"jengoc415"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"jengoc415"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"jengoc415"},"content":"import seedu.address.model.session.NamePayRatePair;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"jengoc415"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"jengoc415"},"content":" * Jackson-friendly version of {@link NamePayRatePair}.","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"jengoc415"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"jengoc415"},"content":"public class JsonAdaptedNamePayRatePair {","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"jengoc415"},"content":"    private final String studentName;","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"jengoc415"},"content":"    private final int payRate;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"jengoc415"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"jengoc415"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"jengoc415"},"content":"    public JsonAdaptedNamePayRatePair(@JsonProperty(\"name\") String studentName,","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"jengoc415"},"content":"                                      @JsonProperty(\"payRate\") int payRate) {","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"jengoc415"},"content":"        this.studentName \u003d studentName;","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"jengoc415"},"content":"        this.payRate \u003d payRate;","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"jengoc415"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"jengoc415"},"content":"    public JsonAdaptedNamePayRatePair(NamePayRatePair source) {","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"jengoc415"},"content":"        this.studentName \u003d source.getName();","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"jengoc415"},"content":"        this.payRate \u003d source.getPayRate();","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"jengoc415"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"jengoc415"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"jengoc415"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"jengoc415"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"jengoc415"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"jengoc415"},"content":"    public NamePayRatePair toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"jengoc415"},"content":"        if (!Name.isValidName(studentName)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-03"},{"lineNumber":44,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"jengoc415"},"content":"        return new NamePayRatePair(studentName, payRate);","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"jengoc415"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"jengoc415":48,"Oliverloo0909":1}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"import seedu.address.model.person.Address; // create a new import group for Address","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"import seedu.address.model.person.PayRate;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"    static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"jengoc415"},"content":"    private final String payRate;","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name,","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"                             @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"                             @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"                             @JsonProperty(\"payRate\") String payRate,","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"jengoc415"},"content":"        this.payRate \u003d payRate;","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"jengoc415"},"content":"        name \u003d source.getName().formattedName;","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"jengoc415"},"content":"        payRate \u003d source.getPayRate().value;","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"jengoc415"},"content":"        if (payRate \u003d\u003d null) {","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"jengoc415"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, PayRate.class.getSimpleName()));","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"jengoc415"},"content":"        if (!PayRate.isValidPayRate(payRate)) {","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"jengoc415"},"content":"            throw new IllegalValueException(PayRate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"jengoc415"},"content":"        final PayRate modelPayRate \u003d new PayRate(payRate);","lastModifiedDate":"2023-02-24"},{"lineNumber":91,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"Oliverloo0909"},"content":"        return new Person(modelName, modelPhone,","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"Tempura-Person"},"content":"                modelAddress, modelPayRate, modelTags);","lastModifiedDate":"2023-03-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tricixg":4,"jengoc415":12,"Tempura-Person":1,"Oliverloo0909":5,"-":75}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedSession.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"jengoc415"},"content":"import seedu.address.model.session.Location;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"jengoc415"},"content":"import seedu.address.model.session.NameBooleanPair;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"jengoc415"},"content":"import seedu.address.model.session.NamePayRatePair;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"jengoc415"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"jengoc415"},"content":"import seedu.address.model.session.SessionName;","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":" * Jackson-friendly version of {@link seedu.address.model.session.Session}.","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"public class JsonAdaptedSession {","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"    static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Session\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"    private final String startDateTime;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"    private final String endDateTime;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"    private final String name;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"    private final String id;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"    private final String location;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"    private final List\u003cJsonAdaptedNameBooleanPair\u003e attendanceMap \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"jengoc415"},"content":"    private final List\u003cJsonAdaptedNamePayRatePair\u003e payRateMap \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"     * Constructs a {@code JsonAdaptedSession} with the given session details.","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"    public JsonAdaptedSession(@JsonProperty(\"name\") String name,","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"                             @JsonProperty(\"startTime\") String startDateTime,","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"                             @JsonProperty(\"endTime\") String endDateTime,","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"                             @JsonProperty(\"location\") String location,","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"                             @JsonProperty(\"id\") String id,","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"                              @JsonProperty(\"attendanceMap\")","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"                              List\u003cJsonAdaptedNameBooleanPair\u003e attendanceMap) {","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"        if (attendanceMap !\u003d null) {","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"Oliverloo0909"},"content":"            this.attendanceMap.addAll(attendanceMap);","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"     * Constructs a {@code JsonAdaptedSession} with the given session.","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"Oliverloo0909"},"content":"    public JsonAdaptedSession(Session source) {","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"Oliverloo0909"},"content":"        name \u003d source.getName();","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"Oliverloo0909"},"content":"        startDateTime \u003d source.getStartDateTime();","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"Oliverloo0909"},"content":"        endDateTime \u003d source.getEndDateTime();","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"jengoc415"},"content":"        location \u003d source.getLocation().toString();","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"Oliverloo0909"},"content":"        id \u003d source.getId();","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"jengoc415"},"content":"        attendanceMap.addAll(source.getNameBooleanMap().stream()","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"Oliverloo0909"},"content":"                .map(JsonAdaptedNameBooleanPair::new)","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"Oliverloo0909"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"jengoc415"},"content":"        payRateMap.addAll(source.getNamePayRateMap().stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"jengoc415"},"content":"                .map(JsonAdaptedNamePayRatePair::new)","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"jengoc415"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"     * Converts this Jackson-friendly adapted session object into the model\u0027s {@code Session} object.","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"tricixg"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted session.","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"Oliverloo0909"},"content":"    public Session toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"Oliverloo0909"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"tricixg"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"tricixg"},"content":"                    SessionName.class.getSimpleName()));","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"Oliverloo0909"},"content":"        if (!SessionName.isValidName(name)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"Oliverloo0909"},"content":"            throw new IllegalValueException(SessionName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"Oliverloo0909"},"content":"        final SessionName modelName \u003d new SessionName(name);","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"Oliverloo0909"},"content":"        if (startDateTime \u003d\u003d null) {","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"tricixg"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"tricixg"},"content":"                    \"Start Date Time\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"Oliverloo0909"},"content":"        final String modelStartDateTime \u003d startDateTime;","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"Oliverloo0909"},"content":"        if (endDateTime \u003d\u003d null) {","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"tricixg"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"tricixg"},"content":"                    \"End Date Time\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"Oliverloo0909"},"content":"        final String modelEndDateTime \u003d endDateTime;","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"Oliverloo0909"},"content":"        if (location \u003d\u003d null) {","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"tricixg"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"tricixg"},"content":"                    Location.class.getSimpleName()));","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"Oliverloo0909"},"content":"        final Location modelLocation \u003d new Location(location);","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"Oliverloo0909"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"Oliverloo0909"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Id\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"Oliverloo0909"},"content":"        final int modelId \u003d Integer.parseInt(id);","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"Oliverloo0909"},"content":"        ArrayList\u003cNameBooleanPair\u003e modelAttendanceList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"Oliverloo0909"},"content":"        for (JsonAdaptedNameBooleanPair jsonAdaptedPair : attendanceMap) {","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"Oliverloo0909"},"content":"            NameBooleanPair pair \u003d jsonAdaptedPair.toModelType();","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"Oliverloo0909"},"content":"            modelAttendanceList.add(pair);","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"jengoc415"},"content":"        ArrayList\u003cNamePayRatePair\u003e modelPayRateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"jengoc415"},"content":"        for (JsonAdaptedNamePayRatePair jsonAdaptedPair : payRateMap) {","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"jengoc415"},"content":"            NamePayRatePair pair \u003d jsonAdaptedPair.toModelType();","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"jengoc415"},"content":"            modelPayRateList.add(pair);","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"jengoc415"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"tricixg"},"content":"        return new Session(modelStartDateTime, modelEndDateTime,","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"jengoc415"},"content":"                modelName, modelLocation, modelId, modelAttendanceList, modelPayRateList);","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"tricixg":27,"jengoc415":18,"Oliverloo0909":78}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"public class JsonAdaptedTag {","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"            throw new IllegalValueException(Tag.MESSAGE_ALPHANUMERIC_CONSTRAINTS);","lastModifiedDate":"2023-04-03"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"        if (!Tag.isValidLengthTagName(tagName)) {","lastModifiedDate":"2023-04-03"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"            throw new IllegalValueException(Tag.MESSAGE_MAXIMUM_CHARACTER_CONSTRAINTS);","lastModifiedDate":"2023-04-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tricixg":1,"Oliverloo0909":4,"-":46}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"    public static final String MESSAGE_DUPLICATE_SESSION \u003d \"Session list contains duplicate session(s).\";","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"    private final List\u003cJsonAdaptedSession\u003e sessions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\")List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"                                       @JsonProperty(\"sessions\") List\u003cJsonAdaptedSession\u003e sessions) {","lastModifiedDate":"2023-04-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"        this.sessions.addAll(sessions);","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"Oliverloo0909"},"content":"        sessions.addAll(source.getSessionList().stream().map(JsonAdaptedSession::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"Oliverloo0909"},"content":"        for (JsonAdaptedSession jsonAdaptedSession : sessions) {","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"Oliverloo0909"},"content":"            Session session \u003d jsonAdaptedSession.toModelType();","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"Oliverloo0909"},"content":"            if (addressBook.hasSession(session)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"Oliverloo0909"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_SESSION);","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"Oliverloo0909"},"content":"            addressBook.addSession(session);","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tricixg":1,"Oliverloo0909":17,"-":58}},{"path":"src/main/java/seedu/address/ui/EarningsBarChart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"import javafx.scene.chart.BarChart;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"import javafx.scene.chart.CategoryAxis;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"import javafx.scene.chart.NumberAxis;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":" * Constructs a barchart for earnings the past 6 months","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"public class EarningsBarChart extends BarChart\u003cString, Number\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"    private static final int NUM_MONTHS \u003d 6;","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"     * @param sessionList sessions of the coach","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"    public EarningsBarChart(ObservableList\u003cSession\u003e sessionList) {","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"        super(new CategoryAxis(), new NumberAxis());","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"        // Set the title of the chart","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"        setTitle(\"Monthly Earnings (past \" + NUM_MONTHS + \" months)\");","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"        // Set the labels for the X and Y axes","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"        getXAxis().setLabel(\"Month\");","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"        getYAxis().setLabel(\"Earnings\");","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"        // Set the data for the chart","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"        setData(getChartData(sessionList));","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"    private ObservableList\u003cSeries\u003cString, Number\u003e\u003e getChartData(ObservableList\u003cSession\u003e sessionList) {","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"        // Create an observable list of series for the chart","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"        ObservableList\u003cSeries\u003cString, Number\u003e\u003e data \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"        // Get the current date","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"        // Iterate through the past NUM_MONTHS months and add the earnings for each month to the data list","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"        for (int i \u003d 0; i \u003c NUM_MONTHS; i++) {","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"            // Calculate the start and end dates for the current month","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"            LocalDate startDate \u003d currentDate.withDayOfMonth(1).minus(i, ChronoUnit.MONTHS);","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"            LocalDate endDate \u003d startDate.plusMonths(1).minusDays(1);","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"            // Calculate the earnings for the current month","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"            float earnings \u003d getMonthlyEarnings(sessionList, startDate, endDate);","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"            // Create a series for the current month and add it to the data list","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"            Series\u003cString, Number\u003e series \u003d new Series\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"            series.getData().add(new Data\u003c\u003e(startDate.format(DateTimeFormatter.ofPattern(\"MMM yy\")), earnings));","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"            data.add(series);","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"        return data;","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"tricixg"},"content":"    private float getMonthlyEarnings(ObservableList\u003cSession\u003e sessionList, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"tricixg"},"content":"        float totalEarnings \u003d 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"        for (Session session : sessionList) {","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"            LocalDate sessionDate \u003d LocalDate.parse(session","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"tricixg"},"content":"                            .getStartDateTime().split(\" \")[0],","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"tricixg"},"content":"                    DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"tricixg"},"content":"            if (sessionDate.isEqual(startDate)","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"tricixg"},"content":"                    || (sessionDate.isAfter(startDate) \u0026\u0026 sessionDate.isBefore(endDate.plusDays(1)))) {","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"tricixg"},"content":"                totalEarnings +\u003d session.getTotalPay();","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"tricixg"},"content":"        return totalEarnings;","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"tricixg":78}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Tempura-Person"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103t-w13-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Tempura-Person":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"import javafx.scene.control.Tab;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"import javafx.scene.control.TabPane;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"import javafx.scene.input.KeyCodeCombination;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"import seedu.address.ui.calendar.CalendarDisplay;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"    private SessionListPanel sessionListPanel;","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"    private CalendarDisplay calendarDisplay;","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"    private TextField commandTextField;","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"Oliverloo0909"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"Oliverloo0909"},"content":"    private StackPane sessionListPanelPlaceholder;","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"    private StackPane calendarDisplayPlaceholder;","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"tricixg"},"content":"    private TabPane tabPane;","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"tricixg"},"content":"    private Tab contactsTab;","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"tricixg"},"content":"    private Tab calendarTab;","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"Oliverloo0909"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"Oliverloo0909"},"content":"    private Tab sessionTab;","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"tricixg"},"content":"        registerShortcutsForTabs();","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"tricixg"},"content":"     * Display details of session in sessionListPanel","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"tricixg"},"content":"     * @param selectedSession the session input by user","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"tricixg"},"content":"    void showSelectedSession(Session selectedSession) {","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"tricixg"},"content":"        sessionListPanel.updateDisplay(selectedSession);","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"tricixg"},"content":"    private void registerShortcutsForTabs() {","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"tricixg"},"content":"        tabPane.getStyleClass().add(\"floating\");","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"Tempura-Person"},"content":"        registerShortcut(tabPane, contactsTab, new KeyCodeCombination(KeyCode.DIGIT2,","lastModifiedDate":"2023-03-31"},{"lineNumber":118,"author":{"gitId":"tricixg"},"content":"                KeyCombination.CONTROL_DOWN));","lastModifiedDate":"2023-03-20"},{"lineNumber":119,"author":{"gitId":"Tempura-Person"},"content":"        registerShortcut(tabPane, calendarTab, new KeyCodeCombination(KeyCode.DIGIT3,","lastModifiedDate":"2023-03-31"},{"lineNumber":120,"author":{"gitId":"tricixg"},"content":"                KeyCombination.CONTROL_DOWN));","lastModifiedDate":"2023-03-20"},{"lineNumber":121,"author":{"gitId":"Tempura-Person"},"content":"        registerShortcut(tabPane, sessionTab, new KeyCodeCombination(KeyCode.DIGIT1,","lastModifiedDate":"2023-03-31"},{"lineNumber":122,"author":{"gitId":"Oliverloo0909"},"content":"                KeyCombination.CONTROL_DOWN));","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":124,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":125,"author":{"gitId":"tricixg"},"content":"    private void registerShortcut(TabPane tabPane, Tab tab, KeyCombination combination) {","lastModifiedDate":"2023-03-20"},{"lineNumber":126,"author":{"gitId":"tricixg"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":127,"author":{"gitId":"tricixg"},"content":"            if (combination.match(event)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":128,"author":{"gitId":"tricixg"},"content":"                tabPane.getSelectionModel().select(tab);","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"tricixg"},"content":"                event.consume();","lastModifiedDate":"2023-03-20"},{"lineNumber":130,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":131,"author":{"gitId":"tricixg"},"content":"        });","lastModifiedDate":"2023-03-20"},{"lineNumber":132,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":173,"author":{"gitId":"tricixg"},"content":"        calendarDisplay \u003d new CalendarDisplay(logic, primaryStage);","lastModifiedDate":"2023-03-28"},{"lineNumber":174,"author":{"gitId":"tricixg"},"content":"        calendarDisplayPlaceholder.getChildren().add(calendarDisplay.getRoot());","lastModifiedDate":"2023-03-28"},{"lineNumber":175,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":176,"author":{"gitId":"tricixg"},"content":"        sessionListPanel \u003d new SessionListPanel(logic.getFilteredSessionList(), logic);","lastModifiedDate":"2023-03-28"},{"lineNumber":177,"author":{"gitId":"Oliverloo0909"},"content":"        sessionListPanelPlaceholder.getChildren().add(sessionListPanel.getRoot());","lastModifiedDate":"2023-03-27"},{"lineNumber":178,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":179,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"tricixg":48,"Tempura-Person":3,"Oliverloo0909":11,"-":195}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"jengoc415"},"content":"    private Label payRate;","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"jengoc415"},"content":"        name.setText(person.getName().formattedName);","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"jengoc415"},"content":"        payRate.setText(person.getPayRate().value);","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jengoc415":3,"-":75}},{"path":"src/main/java/seedu/address/ui/SessionCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"public class SessionCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"    private static final String FXML \u003d \"SessionListCard.fxml\";","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"    public final Session session;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"    private Label id;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"    private Label name;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"    private Label locationField;","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"    private Label startDate;","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"    private Label endDate;","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"    @FXML","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"    private FlowPane attendanceList;","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"Oliverloo0909"},"content":"    public SessionCard(Session session, int displayedIndex) {","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"Oliverloo0909"},"content":"        super(FXML);","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"Oliverloo0909"},"content":"        this.session \u003d session;","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"Oliverloo0909"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"Oliverloo0909"},"content":"        name.setText(session.getName());","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"jengoc415"},"content":"        locationField.setText(session.getLocation().toString());","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"Oliverloo0909"},"content":"        startDate.setText(session.getStartDateTime());","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"Oliverloo0909"},"content":"        endDate.setText(session.getEndDateTime());","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"jengoc415"},"content":"        session.getNameBooleanMap().stream()","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"Oliverloo0909"},"content":"                .forEach(","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"Oliverloo0909"},"content":"                        pair -\u003e attendanceList","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"Oliverloo0909"},"content":"                                .getChildren()","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"Oliverloo0909"},"content":"                                .add(new Label(pair.toString())));","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"Oliverloo0909"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"Oliverloo0909"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"Oliverloo0909"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"Oliverloo0909"},"content":"            return true;","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"Oliverloo0909"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"Oliverloo0909"},"content":"        if (!(other instanceof SessionCard)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"Oliverloo0909"},"content":"            return false;","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"Oliverloo0909"},"content":"        // state check","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"Oliverloo0909"},"content":"        SessionCard card \u003d (SessionCard) other;","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"Oliverloo0909"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"Oliverloo0909"},"content":"                \u0026\u0026 session.equals(card.session);","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"jengoc415":2,"Oliverloo0909":77}},{"path":"src/main/java/seedu/address/ui/SessionListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"import javafx.scene.chart.PieChart;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"public class SessionListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"    private static final String FXML \u003d \"SessionListPanel.fxml\";","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(SessionListPanel.class);","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"    private ListView\u003cSession\u003e sessionListView;","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"    private ScrollPane sessionDetailDisplay;","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"    private VBox sessionDetailContainer;","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"    private Label selectedSession;","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"    private Label selectedName;","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"    private Label selectedDate;","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"    private Label selectedLocation;","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"    private Label selectedStudents;","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"    private Label selectedEarnings;","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"    private PieChart attendanceChart;","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"    private Label nameField;","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"    private Label dateField;","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"tricixg"},"content":"    private Label locationField;","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"    private Label studentsField;","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"tricixg"},"content":"    private Label earningsField;","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"tricixg"},"content":"    //Statistics","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"tricixg"},"content":"    private Label todayField;","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"tricixg"},"content":"    private Label today;","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"tricixg"},"content":"    private Label thisWeekField;","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"tricixg"},"content":"    private Label thisWeek;","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"tricixg"},"content":"    private Label thisMonthField;","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"tricixg"},"content":"    private Label thisMonth;","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"tricixg"},"content":"    private Label lifetimeField;","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"tricixg"},"content":"    private Label lifetime;","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"tricixg"},"content":"    private VBox earningsChart;","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"Oliverloo0909"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"tricixg"},"content":"    public SessionListPanel(ObservableList\u003cSession\u003e sessionList, Logic logic) {","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"Oliverloo0909"},"content":"        super(FXML);","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"Oliverloo0909"},"content":"        sessionListView.setItems(sessionList);","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"Oliverloo0909"},"content":"        sessionListView.setCellFactory(listView -\u003e new SessionListViewCell());","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"tricixg"},"content":"        //        if (sessionListView.getItems() !\u003d null) {","lastModifiedDate":"2023-03-31"},{"lineNumber":104,"author":{"gitId":"tricixg"},"content":"        //            updateDisplay(sessionListView.getItems().get(0));","lastModifiedDate":"2023-03-31"},{"lineNumber":105,"author":{"gitId":"tricixg"},"content":"        //        }","lastModifiedDate":"2023-03-31"},{"lineNumber":106,"author":{"gitId":"tricixg"},"content":"        getStatistics(sessionList);","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"tricixg"},"content":"        setClickEventListener();","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"tricixg"},"content":"        setUpdateEventListener(logic);","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"tricixg"},"content":"    private void getStatistics(ObservableList\u003cSession\u003e sessionList) {","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"tricixg"},"content":"        Label[] fields \u003d new Label[]{todayField, thisWeekField, thisMonthField, lifetimeField};","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"tricixg"},"content":"        Label[] details \u003d new Label[]{today, thisWeek, thisMonth, lifetime};","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"tricixg"},"content":"        setStatisticsFieldDisplay(fields);","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"tricixg"},"content":"        if (sessionList !\u003d null) {","lastModifiedDate":"2023-03-31"},{"lineNumber":117,"author":{"gitId":"tricixg"},"content":"            updateStatisticsDetail(sessionList, details);","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":121,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":122,"author":{"gitId":"tricixg"},"content":"    private void updateStatisticsDetail(ObservableList\u003cSession\u003e sessionList, Label[] details) {","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"tricixg"},"content":"        float todaysEarnings \u003d getTodaysEarnings(sessionList);","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"tricixg"},"content":"        float weeklyEarnings \u003d getWeeklyEarnings(sessionList);","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"tricixg"},"content":"        float monthlyEarnings \u003d getMonthlyEarnings(sessionList);","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"tricixg"},"content":"        float lifetimeEarnings \u003d getLifetimeEarnings(sessionList);","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"tricixg"},"content":"        today.setText(\"$\" + String.format(\"%.2f\", todaysEarnings));","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"tricixg"},"content":"        thisWeek.setText(\"$\" + String.format(\"%.2f\", weeklyEarnings));","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"tricixg"},"content":"        thisMonth.setText(\"$\" + String.format(\"%.2f\", monthlyEarnings));","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"tricixg"},"content":"        lifetime.setText(\"$\" + String.format(\"%.2f\", lifetimeEarnings));","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"Tempura-Person"},"content":"        EarningsBarChart barChart \u003d new EarningsBarChart(sessionList);","lastModifiedDate":"2023-03-31"},{"lineNumber":134,"author":{"gitId":"Tempura-Person"},"content":"        barChart.setStyle(\"-fx-text-inner-color: white;\");","lastModifiedDate":"2023-03-31"},{"lineNumber":135,"author":{"gitId":"Tempura-Person"},"content":"        earningsChart.getChildren().add(barChart);","lastModifiedDate":"2023-03-31"},{"lineNumber":136,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":138,"author":{"gitId":"tricixg"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"tricixg"},"content":"            for (Label detail : details) {","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"tricixg"},"content":"                detail.setWrapText(true);","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"tricixg"},"content":"                detail.setMinWidth(0);","lastModifiedDate":"2023-03-30"},{"lineNumber":142,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"tricixg"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"tricixg"},"content":"            logger.info(\"Pay rate calculation error\");","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":146,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":147,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"tricixg"},"content":"     * Gets the earnings from sessions that occurred on the current date.","lastModifiedDate":"2023-03-30"},{"lineNumber":150,"author":{"gitId":"tricixg"},"content":"     * @param sessionList The list of sessions to search through.","lastModifiedDate":"2023-03-30"},{"lineNumber":151,"author":{"gitId":"tricixg"},"content":"     * @return The total earnings from today\u0027s sessions.","lastModifiedDate":"2023-03-30"},{"lineNumber":152,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":153,"author":{"gitId":"tricixg"},"content":"    private float getTodaysEarnings(ObservableList\u003cSession\u003e sessionList) {","lastModifiedDate":"2023-03-30"},{"lineNumber":154,"author":{"gitId":"tricixg"},"content":"        float totalEarnings \u003d 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":155,"author":{"gitId":"tricixg"},"content":"        LocalDate now \u003d LocalDate.now();","lastModifiedDate":"2023-03-30"},{"lineNumber":156,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":157,"author":{"gitId":"tricixg"},"content":"        for (Session session : sessionList) {","lastModifiedDate":"2023-03-30"},{"lineNumber":158,"author":{"gitId":"tricixg"},"content":"            LocalDate sessionDate \u003d LocalDate.parse(session.getStartDateTime().split(\" \")[0],","lastModifiedDate":"2023-03-30"},{"lineNumber":159,"author":{"gitId":"tricixg"},"content":"                    DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":160,"author":{"gitId":"tricixg"},"content":"            if (sessionDate.isEqual(now)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":161,"author":{"gitId":"tricixg"},"content":"                totalEarnings +\u003d session.getTotalPay();","lastModifiedDate":"2023-03-30"},{"lineNumber":162,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":163,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":164,"author":{"gitId":"tricixg"},"content":"        return totalEarnings;","lastModifiedDate":"2023-03-30"},{"lineNumber":165,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":166,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":167,"author":{"gitId":"tricixg"},"content":"    private float getWeeklyEarnings(ObservableList\u003cSession\u003e sessionList) {","lastModifiedDate":"2023-03-30"},{"lineNumber":168,"author":{"gitId":"tricixg"},"content":"        float totalEarnings \u003d 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":169,"author":{"gitId":"tricixg"},"content":"        LocalDate now \u003d LocalDate.now();","lastModifiedDate":"2023-03-30"},{"lineNumber":170,"author":{"gitId":"tricixg"},"content":"        LocalDate startOfWeek \u003d now.with(DayOfWeek.MONDAY);","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":172,"author":{"gitId":"tricixg"},"content":"        for (Session session : sessionList) {","lastModifiedDate":"2023-03-30"},{"lineNumber":173,"author":{"gitId":"tricixg"},"content":"            LocalDate sessionDate \u003d LocalDate.parse(session.getStartDateTime().split(\" \")[0],","lastModifiedDate":"2023-03-30"},{"lineNumber":174,"author":{"gitId":"tricixg"},"content":"                    DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":175,"author":{"gitId":"tricixg"},"content":"            if (sessionDate.isEqual(now) || sessionDate.isAfter(startOfWeek)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":176,"author":{"gitId":"tricixg"},"content":"                totalEarnings +\u003d session.getTotalPay();","lastModifiedDate":"2023-03-30"},{"lineNumber":177,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":178,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":179,"author":{"gitId":"tricixg"},"content":"        return totalEarnings;","lastModifiedDate":"2023-03-30"},{"lineNumber":180,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":181,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":182,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":183,"author":{"gitId":"tricixg"},"content":"     * Gets the earnings from sessions that occurred in the current month.","lastModifiedDate":"2023-03-30"},{"lineNumber":184,"author":{"gitId":"tricixg"},"content":"     * @param sessionList The list of sessions to search through.","lastModifiedDate":"2023-03-30"},{"lineNumber":185,"author":{"gitId":"tricixg"},"content":"     * @return The total earnings from this month\u0027s sessions.","lastModifiedDate":"2023-03-30"},{"lineNumber":186,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":187,"author":{"gitId":"tricixg"},"content":"    private float getMonthlyEarnings(ObservableList\u003cSession\u003e sessionList) {","lastModifiedDate":"2023-03-30"},{"lineNumber":188,"author":{"gitId":"tricixg"},"content":"        float totalEarnings \u003d 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":189,"author":{"gitId":"tricixg"},"content":"        LocalDate now \u003d LocalDate.now();","lastModifiedDate":"2023-03-30"},{"lineNumber":190,"author":{"gitId":"tricixg"},"content":"        LocalDate startOfMonth \u003d now.withDayOfMonth(1);","lastModifiedDate":"2023-03-30"},{"lineNumber":191,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":192,"author":{"gitId":"tricixg"},"content":"        for (Session session : sessionList) {","lastModifiedDate":"2023-03-30"},{"lineNumber":193,"author":{"gitId":"tricixg"},"content":"            LocalDate sessionDate \u003d LocalDate.parse(session.getStartDateTime().split(\" \")[0],","lastModifiedDate":"2023-03-30"},{"lineNumber":194,"author":{"gitId":"tricixg"},"content":"                    DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":195,"author":{"gitId":"tricixg"},"content":"            if (sessionDate.isEqual(now) || (sessionDate.isAfter(startOfMonth)","lastModifiedDate":"2023-03-30"},{"lineNumber":196,"author":{"gitId":"tricixg"},"content":"                    \u0026\u0026 sessionDate.isBefore(now.plusDays(1)))) {","lastModifiedDate":"2023-03-30"},{"lineNumber":197,"author":{"gitId":"tricixg"},"content":"                totalEarnings +\u003d session.getTotalPay();","lastModifiedDate":"2023-03-30"},{"lineNumber":198,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":199,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":200,"author":{"gitId":"tricixg"},"content":"        return totalEarnings;","lastModifiedDate":"2023-03-30"},{"lineNumber":201,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":202,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":203,"author":{"gitId":"tricixg"},"content":"    private float getLifetimeEarnings(ObservableList\u003cSession\u003e sessionList) {","lastModifiedDate":"2023-03-30"},{"lineNumber":204,"author":{"gitId":"tricixg"},"content":"        float totalEarnings \u003d 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":205,"author":{"gitId":"tricixg"},"content":"        for (Session session : sessionList) {","lastModifiedDate":"2023-03-30"},{"lineNumber":206,"author":{"gitId":"tricixg"},"content":"            totalEarnings +\u003d session.getTotalPay();","lastModifiedDate":"2023-03-30"},{"lineNumber":207,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":208,"author":{"gitId":"tricixg"},"content":"        return totalEarnings;","lastModifiedDate":"2023-03-30"},{"lineNumber":209,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":210,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":211,"author":{"gitId":"tricixg"},"content":"    private void setStatisticsFieldDisplay(Label[] fields) {","lastModifiedDate":"2023-03-30"},{"lineNumber":212,"author":{"gitId":"Tempura-Person"},"content":"        todayField.setText(\"Today\");","lastModifiedDate":"2023-03-31"},{"lineNumber":213,"author":{"gitId":"Tempura-Person"},"content":"        thisWeekField.setText(\"This Week\");","lastModifiedDate":"2023-03-31"},{"lineNumber":214,"author":{"gitId":"Tempura-Person"},"content":"        thisMonthField.setText(\"This Month\");","lastModifiedDate":"2023-03-31"},{"lineNumber":215,"author":{"gitId":"Tempura-Person"},"content":"        lifetimeField.setText(\"Lifetime\");","lastModifiedDate":"2023-03-31"},{"lineNumber":216,"author":{"gitId":"tricixg"},"content":"        for (Label field: fields) {","lastModifiedDate":"2023-03-30"},{"lineNumber":217,"author":{"gitId":"tricixg"},"content":"            field.setBackground(new Background(new BackgroundFill(Color.WHITE, new CornerRadii(4),","lastModifiedDate":"2023-03-30"},{"lineNumber":218,"author":{"gitId":"tricixg"},"content":"                    new Insets(-3, -10, -3, -10))));","lastModifiedDate":"2023-03-30"},{"lineNumber":219,"author":{"gitId":"tricixg"},"content":"            VBox parent \u003d (VBox) field.getParent();","lastModifiedDate":"2023-03-30"},{"lineNumber":220,"author":{"gitId":"tricixg"},"content":"            parent.setMargin(field, new Insets(0, 0, 10, 0));","lastModifiedDate":"2023-03-30"},{"lineNumber":221,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":222,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":223,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":224,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":225,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":226,"author":{"gitId":"tricixg"},"content":"     * Set up event listener to listen to updates within the ObservableList","lastModifiedDate":"2023-03-28"},{"lineNumber":227,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":228,"author":{"gitId":"tricixg"},"content":"    private void setUpdateEventListener(Logic logic) {","lastModifiedDate":"2023-03-28"},{"lineNumber":229,"author":{"gitId":"tricixg"},"content":"        logic.getFilteredSessionList().addListener(new ListChangeListener\u003cSession\u003e() {","lastModifiedDate":"2023-03-28"},{"lineNumber":230,"author":{"gitId":"tricixg"},"content":"            @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":231,"author":{"gitId":"tricixg"},"content":"            public void onChanged(Change\u003c? extends Session\u003e c) {","lastModifiedDate":"2023-03-28"},{"lineNumber":232,"author":{"gitId":"tricixg"},"content":"                Session selectedSession \u003d sessionListView.getSelectionModel().getSelectedItem();","lastModifiedDate":"2023-03-28"},{"lineNumber":233,"author":{"gitId":"tricixg"},"content":"                updateDisplay(selectedSession);","lastModifiedDate":"2023-03-28"},{"lineNumber":234,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":235,"author":{"gitId":"tricixg"},"content":"        });","lastModifiedDate":"2023-03-28"},{"lineNumber":236,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":237,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":238,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":239,"author":{"gitId":"tricixg"},"content":"     * Set up event listener to listen to click events within sessionListView","lastModifiedDate":"2023-03-28"},{"lineNumber":240,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":241,"author":{"gitId":"tricixg"},"content":"    private void setClickEventListener() {","lastModifiedDate":"2023-03-28"},{"lineNumber":242,"author":{"gitId":"tricixg"},"content":"        sessionListView.setOnMouseClicked(event -\u003e {","lastModifiedDate":"2023-03-28"},{"lineNumber":243,"author":{"gitId":"tricixg"},"content":"            Session selectedSession \u003d sessionListView.getSelectionModel().getSelectedItem();","lastModifiedDate":"2023-03-28"},{"lineNumber":244,"author":{"gitId":"tricixg"},"content":"            if (selectedSession !\u003d null) {","lastModifiedDate":"2023-03-28"},{"lineNumber":245,"author":{"gitId":"tricixg"},"content":"                updateDisplay(selectedSession);","lastModifiedDate":"2023-03-28"},{"lineNumber":246,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":247,"author":{"gitId":"tricixg"},"content":"        });","lastModifiedDate":"2023-03-28"},{"lineNumber":248,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":249,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":250,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":251,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":252,"author":{"gitId":"tricixg"},"content":"     * Update the display inside {@code sessionDetailDisplay} in response to changes inside the ObservableList or click","lastModifiedDate":"2023-03-28"},{"lineNumber":253,"author":{"gitId":"tricixg"},"content":"     * @param selectedSession the session to be displayed","lastModifiedDate":"2023-03-28"},{"lineNumber":254,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":255,"author":{"gitId":"tricixg"},"content":"    public void updateDisplay(Session selectedSession) {","lastModifiedDate":"2023-03-28"},{"lineNumber":256,"author":{"gitId":"tricixg"},"content":"        Label[] fields \u003d new Label[]{dateField, locationField, studentsField, earningsField};","lastModifiedDate":"2023-03-30"},{"lineNumber":257,"author":{"gitId":"tricixg"},"content":"        Label[] details \u003d new Label[]{selectedName, selectedDate, selectedLocation, selectedEarnings};","lastModifiedDate":"2023-03-30"},{"lineNumber":258,"author":{"gitId":"tricixg"},"content":"        setupStyle();","lastModifiedDate":"2023-03-28"},{"lineNumber":259,"author":{"gitId":"tricixg"},"content":"        setSessionFieldDisplay(fields);","lastModifiedDate":"2023-03-28"},{"lineNumber":260,"author":{"gitId":"tricixg"},"content":"        updateDisplayedSessionDetail(selectedSession, details);","lastModifiedDate":"2023-03-28"},{"lineNumber":261,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":262,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":263,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":264,"author":{"gitId":"tricixg"},"content":"     * Set up the display of relevant Session fields","lastModifiedDate":"2023-03-28"},{"lineNumber":265,"author":{"gitId":"tricixg"},"content":"     * @param fields fields to be displayed","lastModifiedDate":"2023-03-28"},{"lineNumber":266,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":267,"author":{"gitId":"tricixg"},"content":"    private void setSessionFieldDisplay(Label[] fields) {","lastModifiedDate":"2023-03-28"},{"lineNumber":268,"author":{"gitId":"tricixg"},"content":"        locationField.setText(\"Location\");","lastModifiedDate":"2023-03-28"},{"lineNumber":269,"author":{"gitId":"tricixg"},"content":"        dateField.setText(\"Date\");","lastModifiedDate":"2023-03-28"},{"lineNumber":270,"author":{"gitId":"tricixg"},"content":"        studentsField.setText(\"Students\");","lastModifiedDate":"2023-03-28"},{"lineNumber":271,"author":{"gitId":"tricixg"},"content":"        earningsField.setText(\"Session Earnings\");","lastModifiedDate":"2023-03-30"},{"lineNumber":272,"author":{"gitId":"tricixg"},"content":"        for (Label field: fields) {","lastModifiedDate":"2023-03-28"},{"lineNumber":273,"author":{"gitId":"tricixg"},"content":"            field.setBackground(new Background(new BackgroundFill(Color.WHITE, new CornerRadii(4),","lastModifiedDate":"2023-03-28"},{"lineNumber":274,"author":{"gitId":"tricixg"},"content":"                    new Insets(-3, -10, -3, -10))));","lastModifiedDate":"2023-03-28"},{"lineNumber":275,"author":{"gitId":"tricixg"},"content":"            VBox parent \u003d (VBox) field.getParent();","lastModifiedDate":"2023-03-28"},{"lineNumber":276,"author":{"gitId":"tricixg"},"content":"            parent.setMargin(field, new Insets(0, 0, 10, 0));","lastModifiedDate":"2023-03-28"},{"lineNumber":277,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":278,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":279,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":280,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":281,"author":{"gitId":"tricixg"},"content":"     * Update the detail information to be displayed inside {@code sessionDetailDisplay}","lastModifiedDate":"2023-03-28"},{"lineNumber":282,"author":{"gitId":"tricixg"},"content":"     * @param selectedSession the Session whose information is to be displayed","lastModifiedDate":"2023-03-28"},{"lineNumber":283,"author":{"gitId":"tricixg"},"content":"     * @param details the Labels to hold the information of the selected Session","lastModifiedDate":"2023-03-28"},{"lineNumber":284,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":285,"author":{"gitId":"tricixg"},"content":"    private void updateDisplayedSessionDetail(Session selectedSession, Label[] details) {","lastModifiedDate":"2023-03-28"},{"lineNumber":286,"author":{"gitId":"tricixg"},"content":"        selectedName.setText(selectedSession.getName());","lastModifiedDate":"2023-03-28"},{"lineNumber":287,"author":{"gitId":"tricixg"},"content":"        selectedName.setPadding(new Insets(0, -10, 0, -10));","lastModifiedDate":"2023-03-28"},{"lineNumber":288,"author":{"gitId":"tricixg"},"content":"        selectedDate.setText(selectedSession.getStartDateTime());","lastModifiedDate":"2023-03-28"},{"lineNumber":289,"author":{"gitId":"jengoc415"},"content":"        selectedLocation.setText(selectedSession.getLocation().toString());","lastModifiedDate":"2023-03-30"},{"lineNumber":290,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":291,"author":{"gitId":"tricixg"},"content":"        attendanceChart.setData(SessionPieChart.generateAttendancePieChart(selectedSession.getAttendanceMap()));","lastModifiedDate":"2023-03-28"},{"lineNumber":292,"author":{"gitId":"tricixg"},"content":"        attendanceChart.setLabelsVisible(false);","lastModifiedDate":"2023-03-28"},{"lineNumber":293,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":294,"author":{"gitId":"tricixg"},"content":"        float sessionEarnings \u003d selectedSession.getTotalPay();","lastModifiedDate":"2023-03-30"},{"lineNumber":295,"author":{"gitId":"tricixg"},"content":"        selectedEarnings.setText(\"$\" + String.format(\"%.2f\", sessionEarnings));","lastModifiedDate":"2023-03-30"},{"lineNumber":296,"author":{"gitId":"tricixg"},"content":"        selectedEarnings.setPadding(new Insets(5, -10, 5, -10));","lastModifiedDate":"2023-03-30"},{"lineNumber":297,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":298,"author":{"gitId":"Tempura-Person"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":299,"author":{"gitId":"tricixg"},"content":"            for (Label detail : details) {","lastModifiedDate":"2023-03-28"},{"lineNumber":300,"author":{"gitId":"tricixg"},"content":"                detail.setWrapText(true);","lastModifiedDate":"2023-03-28"},{"lineNumber":301,"author":{"gitId":"tricixg"},"content":"                detail.setMinWidth(0);","lastModifiedDate":"2023-03-28"},{"lineNumber":302,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":303,"author":{"gitId":"Tempura-Person"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":304,"author":{"gitId":"Tempura-Person"},"content":"            logger.info(selectedSession.getName() + \" session is empty!\");","lastModifiedDate":"2023-03-28"},{"lineNumber":305,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":306,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":307,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":308,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":309,"author":{"gitId":"tricixg"},"content":"     * Set up the styling and spacing of {@code sessionDetailDisplay} region","lastModifiedDate":"2023-03-28"},{"lineNumber":310,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":311,"author":{"gitId":"tricixg"},"content":"    private void setupStyle() {","lastModifiedDate":"2023-03-28"},{"lineNumber":312,"author":{"gitId":"tricixg"},"content":"        sessionDetailContainer.setSpacing(10);","lastModifiedDate":"2023-03-28"},{"lineNumber":313,"author":{"gitId":"tricixg"},"content":"        sessionDetailContainer.setPadding(new Insets(10, 0, 0, 20));","lastModifiedDate":"2023-03-28"},{"lineNumber":314,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":315,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":316,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":317,"author":{"gitId":"Oliverloo0909"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2023-03-27"},{"lineNumber":318,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":319,"author":{"gitId":"Oliverloo0909"},"content":"    class SessionListViewCell extends ListCell\u003cSession\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":320,"author":{"gitId":"Oliverloo0909"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":321,"author":{"gitId":"Oliverloo0909"},"content":"        protected void updateItem(Session session, boolean empty) {","lastModifiedDate":"2023-03-27"},{"lineNumber":322,"author":{"gitId":"Oliverloo0909"},"content":"            super.updateItem(session, empty);","lastModifiedDate":"2023-03-27"},{"lineNumber":323,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":324,"author":{"gitId":"Oliverloo0909"},"content":"            if (empty || session \u003d\u003d null) {","lastModifiedDate":"2023-03-27"},{"lineNumber":325,"author":{"gitId":"Oliverloo0909"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-27"},{"lineNumber":326,"author":{"gitId":"Oliverloo0909"},"content":"                setText(null);","lastModifiedDate":"2023-03-27"},{"lineNumber":327,"author":{"gitId":"Oliverloo0909"},"content":"            } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":328,"author":{"gitId":"Oliverloo0909"},"content":"                setGraphic(new SessionCard(session, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-27"},{"lineNumber":329,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":330,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":331,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":332,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":333,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":334,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"tricixg":273,"jengoc415":1,"Tempura-Person":11,"Oliverloo0909":49}},{"path":"src/main/java/seedu/address/ui/SessionPieChart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"import javafx.scene.chart.PieChart;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":" * Creates a Session Pie chart","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"public class SessionPieChart {","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"     * Generates a pie chart based on the attendance map of a session.","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"     * @param attendanceMap The attendance map of a session.","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"     * @return A PieChart object representing the attendance of a session.","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"    public static ObservableList\u003cPieChart.Data\u003e generateAttendancePieChart(HashMap\u003cString, Boolean\u003e attendanceMap) {","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"        ObservableList\u003cPieChart.Data\u003e pieChartData \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"        // Count the number of students who are present and absent.","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"        int presentCount \u003d 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"        int absentCount \u003d 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"        for (Map.Entry\u003cString, Boolean\u003e entry : attendanceMap.entrySet()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"            if (entry.getValue()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"                presentCount++;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"            } else {","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"                absentCount++;","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"        // Add the attendance data to the pie chart.","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"        if (presentCount \u003e 0) {","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"            pieChartData.add(new PieChart.Data(\"Present (\" + presentCount + \")\", presentCount));","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"        if (absentCount \u003e 0) {","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"            pieChartData.add(new PieChart.Data(\"Absent (\" + absentCount + \")\", absentCount));","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"        return pieChartData;","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"tricixg":47}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"Tempura-Person"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/sportsync_logo.png\";","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Tempura-Person":1,"-":87}},{"path":"src/main/java/seedu/address/ui/calendar/CalendarButton.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package seedu.address.ui.calendar;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import javafx.beans.Observable;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":" * Represents a Button used in the Calendar with hidden internal logic.","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"public abstract class CalendarButton extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"    public static final String CALENDAR_BUTTON_STYLE \u003d \"-fx-border-radius: 5; -fx-border-width: 2;\"","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"             + \"-fx-background-color: #1d1d1d; -fx-text-fill: white; -fx-font-size: 13;\";","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"    public static final String GREY_BORDER \u003d \"-fx-border-color: grey;\";","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"    public static final String ORANGE_BORDER \u003d \"-fx-border-color: orange;\";","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"    protected CalendarButton(String fxml) {","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"        super(fxml);","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"    protected abstract void handleOnAction(ActionEvent event);","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"    protected abstract void handleFocusedEvent(Observable observable);","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"tricixg":22}},{"path":"src/main/java/seedu/address/ui/calendar/CalendarDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"package seedu.address.ui.calendar;","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"import seedu.address.logic.CalendarLogic;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":" * A UI component that displays information of a Calendar.","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":" * Allows for toggling between months and displays a grid layout of the calendar.","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":" * Uses a {@link CalendarLogic} object to manage the underlying logic.","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"public class CalendarDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"    private static final String FXML \u003d \"CalendarDisplay.fxml\";","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"    private static final Insets MARGIN \u003d new Insets(0, 50, 0, 0);","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"    private Stage primaryStage;","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"    private Logic logic;","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"    private CalendarLogic calendarLogic;","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"    private GridPane calendarGrid \u003d new CalendarGrid().getRoot();","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"    private FlowPane topCalendar \u003d new TopCalendar().getRoot();","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"    private AnchorPane calendarAnchorPane;","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"    private VBox calendarDisplay;","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"    private ScrollPane calendarScrollPane;","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"    private PreviousButton prevButton;","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"    private NextButton nextButton;","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"     * Creates a CalendarDisplay object with the given {@link Logic} object and {@link Stage} object.","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"     * @param logic the Logic object to be used.","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"     * @param primaryStage the Stage object to be used.","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"    public CalendarDisplay(Logic logic, Stage primaryStage) {","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"        super(FXML);","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"        calendarDisplay.getChildren().setAll(topCalendar, calendarScrollPane);","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"        calendarAnchorPane.getChildren().add(calendarGrid);","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"        this.calendarLogic \u003d new CalendarLogic(logic, primaryStage, this);","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"        prevButton \u003d new PreviousButton(\"Prev\", calendarLogic);","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"        nextButton \u003d new NextButton(\"Next\", calendarLogic);","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"        calendarLogic.initialiseLogic();","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"        drawCalendar();","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"     * Draws the Ui for the Calendar.","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"tricixg"},"content":"    public void drawCalendar() {","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"tricixg"},"content":"        drawHeader();","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"tricixg"},"content":"        calendarLogic.drawBody();","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"tricixg"},"content":"     * Resets the margin for the given node.","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"tricixg"},"content":"     * @param node the node to have its margin reset.","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":81,"author":{"gitId":"tricixg"},"content":"    public void resetMargin(Node node) {","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"tricixg"},"content":"        topCalendar.setMargin(node, MARGIN);","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"tricixg"},"content":"     * Resets the calendarGrid.","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":90,"author":{"gitId":"tricixg"},"content":"    public void resetGridPane() {","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"tricixg"},"content":"        topCalendar.getChildren().clear();","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"tricixg"},"content":"        Node node \u003d calendarGrid.getChildren().get(0);","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"tricixg"},"content":"        calendarGrid.getChildren().clear();","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"tricixg"},"content":"        calendarGrid.getChildren().add(0, node);","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"tricixg"},"content":"     * Resets the calendarGrid\u0027s body.","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":102,"author":{"gitId":"tricixg"},"content":"    public void resetCalendarBody() {","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"tricixg"},"content":"        Node node \u003d calendarGrid.getChildren().get(0);","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"tricixg"},"content":"        calendarGrid.getChildren().clear();","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"tricixg"},"content":"        calendarGrid.getChildren().add(0, node);","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":107,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":108,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"tricixg"},"content":"    private void drawHeader() {","lastModifiedDate":"2023-03-21"},{"lineNumber":110,"author":{"gitId":"tricixg"},"content":"        Text textHeader \u003d calendarLogic.getTextHeader();","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"tricixg"},"content":"        topCalendar.getChildren().addAll(textHeader, prevButton.getRoot(), nextButton.getRoot());","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"tricixg"},"content":"        topCalendar.setMargin(textHeader, MARGIN);","lastModifiedDate":"2023-03-21"},{"lineNumber":113,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":114,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":115,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":117,"author":{"gitId":"tricixg"},"content":"     * Adds the node to be contained within the calendarGrid at the given column and row index.","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"tricixg"},"content":"     * @param node the node to be added.","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"tricixg"},"content":"     * @param columnIndex the column index for the node.","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"tricixg"},"content":"     * @param rowIndex the row index for the node.","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":123,"author":{"gitId":"tricixg"},"content":"    public void addToCalendarGrid(Node node, int columnIndex, int rowIndex) {","lastModifiedDate":"2023-03-21"},{"lineNumber":124,"author":{"gitId":"tricixg"},"content":"        calendarGrid.add(node, columnIndex, rowIndex);","lastModifiedDate":"2023-03-21"},{"lineNumber":125,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":126,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":127,"author":{"gitId":"tricixg"},"content":"    public void setTopCalendarHeader(int index, Node node) {","lastModifiedDate":"2023-03-21"},{"lineNumber":128,"author":{"gitId":"tricixg"},"content":"        topCalendar.getChildren().set(index, node);","lastModifiedDate":"2023-03-21"},{"lineNumber":129,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":130,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":131,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-03-21"},{"lineNumber":132,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"tricixg":125,"Tempura-Person":7}},{"path":"src/main/java/seedu/address/ui/calendar/CalendarEventListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"package seedu.address.ui.calendar;","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import static javafx.scene.paint.Color.WHITE;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":" * Panel containing the list of CalendarEvents for a specific day in the calendar month.","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":" * This UI component displays the events in a vertical list, where each event is represented by an {@code EventButton}.","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":" * It takes in an {@code ObservableList} of {@code CalendarEvent} objects and a {@code Stage} object as input.","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":" * @see EventButton","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"public class CalendarEventListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"    private static final String FXML \u003d \"CalendarEventListPanel.fxml\";","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"    private ObservableList\u003cSession\u003e calendarDayEvents;","lastModifiedDate":"2023-04-03"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"    private Stage primaryStage;","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"    private VBox calendarEventList;","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"     * Constructs a new {@code CalendarEventListPanel} object with the specified list of {@code CalendarEvent} objects","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"     * and primary stage of the application.","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"     * @param calendarDayEvents The list of {@code CalendarEvent} objects to be displayed in the panel.","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"     * @param primaryStage The primary stage of the application.","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"    public CalendarEventListPanel(ObservableList\u003cSession\u003e calendarDayEvents,","lastModifiedDate":"2023-04-03"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"                                  Stage primaryStage) {","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"        super(FXML);","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"        this.calendarDayEvents \u003d calendarDayEvents;","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"        this.calendarEventList \u003d new VBox();","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"     * Returns a {@code VBox} object containing the list of {@code CalendarEvent} objects for the specified day.","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"     * The list is displayed in a vertical list, where each event is represented by an {@code EventButton}.","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"     * @param currentDay The current day of the month.","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"     * @return A {@code VBox} object containing the list of {@code CalendarEvent} objects for the specified day.","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"    public VBox getCalendarEventList(int currentDay) {","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"        Text tDate \u003d getTextDate(currentDay);","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"        calendarEventList.getChildren().add(tDate);","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"        calendarDayEvents.stream().sorted()","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"                .forEach(x -\u003e calendarEventList.getChildren()","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"                        .add(new EventButton(x, primaryStage).getRoot()));","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"        return calendarEventList;","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"     * Returns a {@code Text} object displaying the current day of the month.","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"tricixg"},"content":"     * @param currentDay The current day of the month.","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"tricixg"},"content":"     * @return A {@code Text} object displaying the current day of the month.","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"tricixg"},"content":"    private Text getTextDate(int currentDay) {","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"tricixg"},"content":"        Text tDate \u003d new Text(String.valueOf(currentDay));","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"tricixg"},"content":"        tDate.setFill(WHITE);","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"tricixg"},"content":"        return tDate;","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"tricixg":75,"Tempura-Person":4}},{"path":"src/main/java/seedu/address/ui/calendar/CalendarGrid.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package seedu.address.ui.calendar;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":" * A UI component that represents the grid of the Calendar.","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"public class CalendarGrid extends UiPart\u003cGridPane\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"    private static final String FXML \u003d \"CalendarGrid.fxml\";","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"    private GridPane calendarGrid;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"    public CalendarGrid() {","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"        super(FXML);","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"tricixg":18}},{"path":"src/main/java/seedu/address/ui/calendar/CalendarPopup.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"package seedu.address.ui.calendar;","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"import javafx.stage.Popup;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"import javafx.stage.PopupWindow;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":" * The Popup that is displayed when a {@code CalendarButton} is interacted with.","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"public class CalendarPopup extends UiPart\u003cPopup\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"    private static final String FXML \u003d \"CalendarPopup.fxml\";","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"    private final Node owner;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"    private Popup popup;","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"     * Creates a {@code CalendarPopup} with the given {@code CalendarEvent} details.","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"     * @param session The {@code CalendarEvent} to display in the popup.","lastModifiedDate":"2023-04-03"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"     * @param owner The owner of the popup.","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"    public CalendarPopup(Session session, Node owner) {","lastModifiedDate":"2023-04-03"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"        super(FXML);","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"        this.owner \u003d owner;","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"        initialiseCalendarPopup(session);","lastModifiedDate":"2023-04-03"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"        popup.sizeToScene();","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"     * Initializes the content of the {@code CalendarPopup} with the given {@code CalendarEvent}.","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"     * @param session The {@code CalendarEvent} to display in the popup.","lastModifiedDate":"2023-04-03"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"    private void initialiseCalendarPopup(Session session) {","lastModifiedDate":"2023-04-03"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"        popup.getContent().add(new CalendarPopupContent(session).getRoot());","lastModifiedDate":"2023-04-03"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"        popup.setAnchorLocation(PopupWindow.AnchorLocation.WINDOW_BOTTOM_LEFT);","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"tricixg":44,"Tempura-Person":3}},{"path":"src/main/java/seedu/address/ui/calendar/CalendarPopupContent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"package seedu.address.ui.calendar;","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":" * The content that is displayed within the {@code CalendarPopup}","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"public class CalendarPopupContent extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"    private static final String FXML \u003d \"CalendarPopupContent.fxml\";","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"    private ScrollPane popupContent;","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"    private Label studentLabel;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"    private FlowPane datePane;","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"    private FlowPane timePane;","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"    private FlowPane locationPane;","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"    private Label dateLabel;","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"    private Label durationLabel;","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"    private Label locationLabel;","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"    private VBox popupVBox;","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"     * Creates a {@code CalendarPopupContent} with the given CalendarEvent details.","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"     * @param session","lastModifiedDate":"2023-04-03"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"    public CalendarPopupContent(Session session) {","lastModifiedDate":"2023-04-03"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"        super(FXML);","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"        studentLabel.setText(session.getSessionName().toString());","lastModifiedDate":"2023-04-03"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"        dateLabel.setText(session.getStartDateTime());","lastModifiedDate":"2023-04-03"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"        durationLabel.setText(session.getSessionDuration().toString());","lastModifiedDate":"2023-04-03"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"        locationLabel.setText(session.getLocation().toString());","lastModifiedDate":"2023-04-03"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"tricixg":51,"Tempura-Person":2}},{"path":"src/main/java/seedu/address/ui/calendar/EventButton.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"package seedu.address.ui.calendar;","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import javafx.beans.Observable;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"import javafx.geometry.Point2D;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":" * A UI component that represents a button that contains a {@code CalendarEvent}.","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":" * When clicked, a {@code CalendarPopup} displaying the event\u0027s details will appear.","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"public class EventButton extends CalendarButton {","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"    private static final String FXML \u003d \"EventButton.fxml\";","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"    private static final String EVENT_BUTTON_STYLE \u003d \"-fx-font-size: 8pt; -fx-border-radius: 5; -fx-min-width: 100;\";","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"    private static final double ORIGIN \u003d 0.0;","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"    private static final int HALF_CONTENT_WIDTH \u003d 150;","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"    private Stage primaryStage;","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"    private Session session;","lastModifiedDate":"2023-04-03"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"    private CalendarPopup calendarPopup;","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"    private Button eventButton;","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"     * Constructs an {@code EventButton} with the given {@code CalendarEvent} and {@code Stage}.","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"     * @param session The {@code CalendarEvent} to be displayed on the button.","lastModifiedDate":"2023-04-03"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"     * @param primaryStage The primary {@code Stage} of the application.","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"    public EventButton(Session session, Stage primaryStage) {","lastModifiedDate":"2023-04-03"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"        super(FXML);","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"        this.session \u003d session;","lastModifiedDate":"2023-04-03"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"        this.calendarPopup \u003d new CalendarPopup(session, eventButton);","lastModifiedDate":"2023-04-03"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"        initialiseEventButton();","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"     * Initializes the UI components of the {@code EventButton}.","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"    private void initialiseEventButton() {","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"        eventButton.setText(session.getTimeFormat() + \" \" + session.getSessionName().toString());","lastModifiedDate":"2023-04-03"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"        eventButton.focusedProperty().addListener(this::handleFocusedEvent);","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"        ChangeListener\u003cNumber\u003e stageSizeListener \u003d (observable, oldValue, newValue) -\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"            if (calendarPopup.getRoot().isShowing()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"                calendarPopup.getRoot().hide();","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"        };","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"        primaryStage.heightProperty().addListener(stageSizeListener);","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"        primaryStage.widthProperty().addListener(stageSizeListener);","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"        primaryStage.xProperty().addListener(stageSizeListener);","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"        primaryStage.yProperty().addListener(stageSizeListener);","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"     * Handles the event where the {@code EventButton} is clicked.","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"tricixg"},"content":"     * Displays the {@code CalendarPopup} for the {@code CalendarEvent}.","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"tricixg"},"content":"     * @param event The {@code ActionEvent} that triggered the method call.","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"tricixg"},"content":"    @FXML @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"tricixg"},"content":"    protected void handleOnAction(ActionEvent event) {","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"tricixg"},"content":"        if (!calendarPopup.getRoot().isShowing()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"tricixg"},"content":"            displayPopup();","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"tricixg"},"content":"     * Handles the event where the {@code EventButton} is focused.","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"tricixg"},"content":"     * Displays the {@code CalendarPopup} for the {@code CalendarEvent} and changes the border of the button.","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"tricixg"},"content":"     * @param observable The {@code Observable} object that triggered the method call.","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":86,"author":{"gitId":"tricixg"},"content":"    @FXML @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"tricixg"},"content":"    protected void handleFocusedEvent(Observable observable) {","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"tricixg"},"content":"        if (!calendarPopup.getRoot().isShowing() \u0026\u0026 eventButton.isFocused()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"tricixg"},"content":"            eventButton.setStyle(EVENT_BUTTON_STYLE + ORANGE_BORDER);","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"tricixg"},"content":"            displayPopup();","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"tricixg"},"content":"        if (!eventButton.isFocused()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"tricixg"},"content":"            eventButton.setStyle(EVENT_BUTTON_STYLE + GREY_BORDER);","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"tricixg"},"content":"            calendarPopup.getRoot().hide();","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"tricixg"},"content":"     * Displays the {@code CalendarPopup} for the {@code CalendarEvent}.","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"tricixg"},"content":"     * Places the popup on the {@code EventButton} and aligns it to the center of the screen.","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":104,"author":{"gitId":"tricixg"},"content":"    private void displayPopup() {","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"tricixg"},"content":"        Point2D p \u003d eventButton.localToScene(ORIGIN, ORIGIN);","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"tricixg"},"content":"        calendarPopup.getRoot().show(eventButton,","lastModifiedDate":"2023-03-21"},{"lineNumber":107,"author":{"gitId":"tricixg"},"content":"                eventButton.getScene().getWindow().getWidth() / 2 - HALF_CONTENT_WIDTH","lastModifiedDate":"2023-03-21"},{"lineNumber":108,"author":{"gitId":"tricixg"},"content":"                        + eventButton.getScene().getWindow().getX(), p.getY()","lastModifiedDate":"2023-03-21"},{"lineNumber":109,"author":{"gitId":"tricixg"},"content":"                        + eventButton.getScene().getY() + eventButton.getScene().getWindow().getY());","lastModifiedDate":"2023-03-21"},{"lineNumber":110,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"tricixg":106,"Tempura-Person":6}},{"path":"src/main/java/seedu/address/ui/calendar/NextButton.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"package seedu.address.ui.calendar;","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import javafx.beans.Observable;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"import seedu.address.logic.CalendarLogic;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":" * A button that displays the next month\u0027s CalendarEvents when interacted with.","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":" * The button extends {@code CalendarButton} which contains the common behaviour","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":" * of all buttons in the calendar.","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"public class NextButton extends CalendarButton {","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"    private static final String FXML \u003d \"NextButton.fxml\";","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"    private CalendarLogic calendarLogic;","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"    private Button nextButton;","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"     * Constructs a new {@code NextButton} with the given content and {@code CalendarLogic}.","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"     * @param content the text displayed on the button","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"     * @param calendarLogic the logic that manages the calendar","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"    public NextButton(String content, CalendarLogic calendarLogic) {","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"        super(FXML);","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"        this.calendarLogic \u003d calendarLogic;","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"        nextButton.setText(content);","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"        nextButton.focusedProperty().addListener(this::handleFocusedEvent);","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"     * Handles the button\u0027s focused event.","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"     * When the button is focused, it changes its border color to orange,","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"     * otherwise to grey.","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"     * @param observable an object representing the button\u0027s focus state","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"    protected void handleFocusedEvent(Observable observable) {","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"        if (nextButton.isFocused()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"            nextButton.setStyle(CALENDAR_BUTTON_STYLE + ORANGE_BORDER);","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"        } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"            nextButton.setStyle(CALENDAR_BUTTON_STYLE + GREY_BORDER);","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"     * Handles the button\u0027s onAction event.","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"     * When the button is clicked, it moves the calendar to the next month.","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"     * @param event the event that triggered the method call","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"tricixg"},"content":"    protected void handleOnAction(ActionEvent event) {","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"tricixg"},"content":"        calendarLogic.next();","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"tricixg":63,"Tempura-Person":4}},{"path":"src/main/java/seedu/address/ui/calendar/PreviousButton.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"package seedu.address.ui.calendar;","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import javafx.beans.Observable;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"import seedu.address.logic.CalendarLogic;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":" * A button that displays the previous month\u0027s CalendarEvents","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":" * when interacted with.","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"public class PreviousButton extends CalendarButton {","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"    private static final String FXML \u003d \"PreviousButton.fxml\";","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"    private CalendarLogic calendarLogic;","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"    private Button previousButton;","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"     * Creates a {@code PreviousButton} with the given {@code String} and {@code CalendarLogic}.","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"    public PreviousButton(String content, CalendarLogic calendarLogic) {","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"        super(FXML);","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"        this.calendarLogic \u003d calendarLogic;","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"        previousButton.setText(content);","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"        previousButton.focusedProperty().addListener(this::handleFocusedEvent);","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"    protected void handleFocusedEvent(Observable observable) {","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"        if (previousButton.isFocused()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"            previousButton.setStyle(CALENDAR_BUTTON_STYLE + ORANGE_BORDER);","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"        } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"            previousButton.setStyle(CALENDAR_BUTTON_STYLE + GREY_BORDER);","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"    protected void handleOnAction(ActionEvent event) {","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"        calendarLogic.previous();","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"tricixg":47,"Tempura-Person":2}},{"path":"src/main/java/seedu/address/ui/calendar/TopCalendar.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package seedu.address.ui.calendar;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":" * A UI component that represents the header of the Calendar.","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"public class TopCalendar extends UiPart\u003cFlowPane\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"    private static final String FXML \u003d \"TopCalendar.fxml\";","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"    private FlowPane topCalendar;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"    public TopCalendar() {","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"        super(FXML);","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"tricixg":18}},{"path":"src/main/resources/view/CalendarDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"\u003cVBox fx:id\u003d\"calendarDisplay\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"        \u003cScrollPane fx:id\u003d\"calendarScrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"                \u003cAnchorPane fx:id\u003d\"calendarAnchorPane\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"                \u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"tricixg":15,"Tempura-Person":1}},{"path":"src/main/resources/view/CalendarEventListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"\u003cVBox fx:id\u003d\"calendarEventList\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" /\u003e","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"tricixg":5,"Tempura-Person":1}},{"path":"src/main/resources/view/CalendarGrid.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"\u003cGridPane fx:id\u003d\"calendarGrid\" alignment\u003d\"TOP_CENTER\" gridLinesVisible\u003d\"true\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"        \u003cColumnConstraints hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"        \u003cColumnConstraints hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"        \u003cColumnConstraints hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"        \u003cColumnConstraints hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"        \u003cColumnConstraints hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"        \u003cColumnConstraints hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"        \u003cColumnConstraints hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"    \u003crowConstraints\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"        \u003cRowConstraints vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"        \u003cRowConstraints vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"        \u003cRowConstraints vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"        \u003cRowConstraints vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"        \u003cRowConstraints vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"        \u003cRowConstraints vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"    \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"    \u003copaqueInsets\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"        \u003cInsets /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"    \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"    \u003cstyleClass\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"        \u003cString fx:value\u003d\"gridStyle\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"        \u003cString fx:value\u003d\"pane-with-border\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"    \u003c/styleClass\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"tricixg":31,"Tempura-Person":1}},{"path":"src/main/resources/view/CalendarPopup.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"\u003c?import javafx.stage.Popup?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"\u003cPopup fx:id\u003d\"popup\" forceIntegerRenderScale\u003d\"true\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" /\u003e","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"tricixg":5,"Tempura-Person":1}},{"path":"src/main/resources/view/CalendarPopupContent.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":"\u003cScrollPane fx:id\u003d\"popupContent\" style\u003d\"-fx-background-color: #5B5D88;\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"   \u003ccontent\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"      \u003cVBox prefHeight\u003d\"100.0\" prefWidth\u003d\"300.0\" style\u003d\"-fx-background-color: #5B5D88;\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"            \u003cFlowPane fx:id\u003d\"namePane\" style\u003d\"-fx-background-color: #5B5D88; -fx-background-radius: 10;\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"                  \u003cLabel fx:id\u003d\"studentLabel\" style\u003d\"-fx-text-fill: white;\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"            \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"            \u003cFlowPane fx:id\u003d\"datePanel\" style\u003d\"-fx-background-color: #5B5D88; -fx-background-radius: 10;\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"                  \u003cLabel fx:id\u003d\"dateLabel\" style\u003d\"-fx-text-fill: white;\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"                     \u003cgraphic\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"                        \u003cImageView pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"                           \u003cimage\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"                              \u003cImage url\u003d\"@../images/23Date.png\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"                           \u003c/image\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"                        \u003c/ImageView\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"                     \u003c/graphic\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"            \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"            \u003cFlowPane fx:id\u003d\"timePane\" style\u003d\"-fx-background-color: #5B5D88; -fx-background-radius: 10;\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"                  \u003cLabel fx:id\u003d\"durationLabel\" style\u003d\"-fx-text-fill: white;\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"                     \u003cgraphic\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"                        \u003cImageView pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"                           \u003cimage\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"                              \u003cImage url\u003d\"@../images/23timer.png\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"                           \u003c/image\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"                        \u003c/ImageView\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"                     \u003c/graphic\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"            \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"            \u003cFlowPane fx:id\u003d\"locationPane\" style\u003d\"-fx-background-color: #5B5D88; -fx-background-radius: 10;\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"                  \u003cLabel fx:id\u003d\"locationLabel\" style\u003d\"-fx-text-fill: white;\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"                     \u003cgraphic\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"                        \u003cImageView pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"                           \u003cimage\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"                              \u003cImage url\u003d\"@../images/23address.png\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"                           \u003c/image\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"                        \u003c/ImageView\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"                     \u003c/graphic\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"            \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"   \u003c/content\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"\u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"tricixg":61,"Tempura-Person":1}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\" style\u003d\"-fx-background-color: #1C1D34;\" /\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"Tempura-Person":2,"-":6}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"Tempura-Person"},"content":"    -fx-background-color: derive(#1C1D34, 20%);","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"    background-color: #252745; /* Used in the default.html file */","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"    -fx-font-family: \"Lucida Sans Unicode\";","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"    -fx-font-family: \"Lucida Sans Unicode\";","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"    -fx-font-family: \"Lucida Sans Unicode\";","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"    -fx-font-family: \"Lucida Sans Unicode\";","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"    -fx-background-color: #252745;","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"    -fx-effect: null;","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":".tab-pane .tab-header-area .tab-header-background {","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"    -fx-opacity: 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"Tempura-Person"},"content":"    -fx-base: #1C1D34;","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"Tempura-Person"},"content":"    -fx-control-inner-background: #1C1D34;","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"Tempura-Person"},"content":"    -fx-background-color: #1C1D34;","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"Tempura-Person"},"content":"    -fx-background-color: derive(#1C1D34, 20%);","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":93,"author":{"gitId":"Tempura-Person"},"content":"    -fx-background-color: derive(#1C1D34, 20%);","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"Tempura-Person"},"content":"    -fx-background-color: derive(#1C1D34, 20%);","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"Tempura-Person"},"content":"    -fx-background-color: #1C1D34;","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"Tempura-Person"},"content":"    -fx-background-color: #2D2F55;","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":142,"author":{"gitId":"Tempura-Person"},"content":"     -fx-background-color: derive(#1C1D34, 20%);","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":146,"author":{"gitId":"Tempura-Person"},"content":"     -fx-background-color: derive(#1C1D34, 20%);","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"Tempura-Person"},"content":"     -fx-border-color: derive(#1C1D34, 10%);","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"Tempura-Person"},"content":"    -fx-background-color: derive(#1C1D34, 30%);","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"Tempura-Person"},"content":"    -fx-background-color: derive(#1C1D34, 30%);","lastModifiedDate":"2023-03-28"},{"lineNumber":175,"author":{"gitId":"Tempura-Person"},"content":"    -fx-border-color: derive(#1C1D34, 25%);","lastModifiedDate":"2023-03-28"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"Tempura-Person"},"content":"    -fx-background-color: derive(#1C1D34, 30%);","lastModifiedDate":"2023-03-28"},{"lineNumber":185,"author":{"gitId":"Tempura-Person"},"content":"    -fx-border-color: derive(#1C1D34, 30%);","lastModifiedDate":"2023-03-28"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":190,"author":{"gitId":"Tempura-Person"},"content":"    -fx-background-color: derive(#1C1D34, 30%);","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"Tempura-Person"},"content":"    -fx-background-color: #5B5D88;","lastModifiedDate":"2023-03-17"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"Tempura-Person"},"content":"    -fx-background-color: #2D2F55;","lastModifiedDate":"2023-03-17"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"Tempura-Person"},"content":"    -fx-background-color: #1C1D34;","lastModifiedDate":"2023-03-28"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"Tempura-Person"},"content":"  -fx-text-fill: #1C1D34;","lastModifiedDate":"2023-03-28"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"Tempura-Person"},"content":"    -fx-background-color: #1C1D34;","lastModifiedDate":"2023-03-28"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"Tempura-Person"},"content":"    -fx-background-color: #1C1D34;","lastModifiedDate":"2023-03-28"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"Tempura-Person"},"content":"    -fx-background-color: #1C1D34;","lastModifiedDate":"2023-03-28"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"Tempura-Person"},"content":"    -fx-background-color: derive(#1C1D34, 25%);","lastModifiedDate":"2023-03-28"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":291,"author":{"gitId":"Tempura-Person"},"content":"    -fx-background-color: derive(#1C1D34, 20%);","lastModifiedDate":"2023-03-17"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":294,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"Tempura-Person"},"content":"    -fx-background-color: derive(#2D2F55, 50%);","lastModifiedDate":"2023-03-17"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"Tempura-Person"},"content":"    -fx-background-color: transparent #1C1D34 transparent #1C1D34;","lastModifiedDate":"2023-03-17"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"Tempura-Person"},"content":"    -fx-border-color: #1C1D34 #1C1D34 #ffffff #1C1D34;","lastModifiedDate":"2023-03-17"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"Tempura-Person"},"content":"    -fx-background-color: transparent, #1C1D34, transparent, #1C1D34;","lastModifiedDate":"2023-03-17"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":360,"author":{"gitId":"Oliverloo0909"},"content":"#attendanceList {","lastModifiedDate":"2023-03-28"},{"lineNumber":361,"author":{"gitId":"Oliverloo0909"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-03-28"},{"lineNumber":362,"author":{"gitId":"Oliverloo0909"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-03-28"},{"lineNumber":363,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":364,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":365,"author":{"gitId":"Oliverloo0909"},"content":"#attendanceList .label {","lastModifiedDate":"2023-03-28"},{"lineNumber":366,"author":{"gitId":"Oliverloo0909"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-28"},{"lineNumber":367,"author":{"gitId":"Oliverloo0909"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2023-03-28"},{"lineNumber":368,"author":{"gitId":"Oliverloo0909"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-03-28"},{"lineNumber":369,"author":{"gitId":"Oliverloo0909"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-03-28"},{"lineNumber":370,"author":{"gitId":"Oliverloo0909"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-03-28"},{"lineNumber":371,"author":{"gitId":"Oliverloo0909"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-03-28"},{"lineNumber":372,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":373,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"tricixg":12,"Tempura-Person":31,"Oliverloo0909":14,"-":316}},{"path":"src/main/resources/view/EventButton.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"\u003cButton id\u003d\"eventButton\" fx:id\u003d\"eventButton\" maxWidth\u003d\"200.0\" onAction\u003d\"#handleOnAction\" style\u003d\"-fx-font-size: 8pt; -fx-border-color: grey; -fx-border-radius: 5; -fx-min-width: 100;\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"\u003c/Button\u003e","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"tricixg":6,"Tempura-Person":1}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"Tempura-Person"},"content":"    -fx-background: #1C1D34;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tempura-Person":1,"-":19}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"    -fx-background-color: #1C1D34;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":"    -fx-background-color: #2D2F55;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"Tempura-Person"},"content":"    -fx-background-color: #5B5D88;","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-01-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Tempura-Person":3,"-":16}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"Tempura-Person"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Tempura-Person"},"content":"      \u003cHBox fx:id\u003d\"helpMessageContainer\" alignment\u003d\"CENTER\" style\u003d\"-fx-background-color: #252745;\"\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"Tempura-Person":2,"-":42}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"\u003c?import javafx.scene.control.Tab?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"\u003c?import javafx.scene.control.TabPane?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"Tempura-Person"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"Tempura-Person"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"SportSync\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"Tempura-Person"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" style\u003d\"-fx-background-color: #252745;\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"Tempura-Person"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" style\u003d\"-fx-background-color: #252745;\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"Tempura-Person"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"180.0\" minHeight\u003d\"100\" prefHeight\u003d\"144.0\" prefWidth\u003d\"340.0\" style\u003d\"-fx-background-color: #252745;\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"Tempura-Person"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"        \u003cTabPane fx:id\u003d\"tabPane\" focusTraversable\u003d\"false\" minWidth\u003d\"340\" prefWidth\u003d\"340.0\" style\u003d\"-fx-background-color: #252745;\" tabClosingPolicy\u003d\"UNAVAILABLE\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"          \u003ctabs\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"            \u003cTab fx:id\u003d\"sessionTab\" text\u003d\"Sessions\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"              \u003ccontent\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"                \u003cAnchorPane\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"                    \u003cVBox style\u003d\"-fx-background-color: #252745;\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"                      \u003cpadding\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"                        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"                      \u003c/padding\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"                      \u003cchildren\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"                        \u003cStackPane fx:id\u003d\"sessionListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"                      \u003c/children\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"tricixg"},"content":"                  \u003c/children\u003e\u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"tricixg"},"content":"              \u003c/content\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"tricixg"},"content":"            \u003c/Tab\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"            \u003cTab fx:id\u003d\"contactsTab\" text\u003d\"Contacts\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"              \u003ccontent\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"tricixg"},"content":"                \u003cAnchorPane\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"tricixg"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"tricixg"},"content":"                    \u003cVBox fx:id\u003d\"personList\" layoutX\u003d\"-208.0\" layoutY\u003d\"-79.0\" style\u003d\"-fx-background-color: #252745;\" styleClass\u003d\"pane-with-border\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                      \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":72,"author":{"gitId":"tricixg"},"content":"                        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                      \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":74,"author":{"gitId":"tricixg"},"content":"                      \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" style\u003d\"-fx-background-color: #252745;\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":76,"author":{"gitId":"tricixg"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"tricixg"},"content":"                \u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"tricixg"},"content":"              \u003c/content\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"tricixg"},"content":"            \u003c/Tab\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"tricixg"},"content":"            \u003cTab fx:id\u003d\"calendarTab\" text\u003d\"Calendar\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"Oliverloo0909"},"content":"              \u003ccontent\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"Oliverloo0909"},"content":"                \u003cAnchorPane\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"Oliverloo0909"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"Oliverloo0909"},"content":"                    \u003cVBox style\u003d\"-fx-background-color: #252745;\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"Oliverloo0909"},"content":"                      \u003cpadding\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"Oliverloo0909"},"content":"                        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"Oliverloo0909"},"content":"                      \u003c/padding\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"Oliverloo0909"},"content":"                      \u003cchildren\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"tricixg"},"content":"                        \u003cStackPane fx:id\u003d\"calendarDisplayPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"Oliverloo0909"},"content":"                      \u003c/children\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"Oliverloo0909"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"Oliverloo0909"},"content":"                  \u003c/children\u003e\u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"Oliverloo0909"},"content":"              \u003c/content\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"Oliverloo0909"},"content":"            \u003c/Tab\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"tricixg"},"content":"          \u003c/tabs\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"tricixg"},"content":"        \u003c/TabPane\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"tricixg":36,"Tempura-Person":6,"Oliverloo0909":13,"-":47}},{"path":"src/main/resources/view/NextButton.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"\u003cButton fx:id\u003d\"nextButton\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" onAction\u003d\"#handleOnAction\" style\u003d\"-fx-border-color: grey; -fx-border-radius: 5;\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" /\u003e","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"tricixg":5,"Tempura-Person":1}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"Tempura-Person"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"Tempura-Person"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"Tempura-Person"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"jengoc415"},"content":"      \u003cLabel fx:id\u003d\"payRate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$payRate\" /\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"Tempura-Person"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"Tempura-Person"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"Tempura-Person"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jengoc415":1,"Tempura-Person":8,"-":31}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tempura-Person":1,"-":7}},{"path":"src/main/resources/view/PreviousButton.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"\u003cButton fx:id\u003d\"previousButton\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" onAction\u003d\"#handleOnAction\" style\u003d\"-fx-border-color: grey; -fx-border-radius: 5;\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" /\u003e","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"tricixg":5,"Tempura-Person":1}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" /\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"Tempura-Person":1,"-":7}},{"path":"src/main/resources/view/SessionListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"                \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"            \u003cFlowPane fx:id\u003d\"attendanceList\" /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"            \u003cLabel fx:id\u003d\"locationField\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"            \u003cLabel fx:id\u003d\"startDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$startDate\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"            \u003cLabel fx:id\u003d\"endDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$endDate\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"            \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"Oliverloo0909":42}},{"path":"src/main/resources/view/SessionListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"\u003c?import javafx.scene.chart.PieChart?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"\u003c?import javafx.scene.control.Separator?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"\u003c?import javafx.scene.control.TitledPane?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"\u003c?import javafx.scene.layout.Pane?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"Tempura-Person"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"      \u003cHBox prefHeight\u003d\"457.0\" prefWidth\u003d\"485.0\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"          \u003cListView fx:id\u003d\"sessionListView\" editable\u003d\"true\" prefHeight\u003d\"457.0\" prefWidth\u003d\"275.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"         \u003cVBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"                \u003cScrollPane fx:id\u003d\"sessionDetailDisplay\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" style\u003d\"-fx-background-color: #252745;\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"                        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"                  \u003cHBox style\u003d\"-fx-background-color: #252745;\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"Tempura-Person"},"content":"                          \u003cVBox fx:id\u003d\"sessionDetailContainer\" maxHeight\u003d\"1.7976931348623157E308\" style\u003d\"-fx-background-color: #252745;\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"Tempura-Person"},"content":"                              \u003cVBox maxWidth\u003d\"120.0\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"Tempura-Person"},"content":"                                  \u003cLabel fx:id\u003d\"selectedName\" maxHeight\u003d\"Infinity\" style\u003d\"-fx-text-fill: white;\" /\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":29,"author":{"gitId":"Tempura-Person"},"content":"                              \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"Tempura-Person"},"content":"                                 \u003cInsets /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"Tempura-Person"},"content":"                              \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"                              \u003c/VBox\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"                              \u003cVBox\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"                                  \u003cLabel fx:id\u003d\"dateField\" styleClass\u003d\"field_label\" /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"                                  \u003cLabel fx:id\u003d\"selectedDate\" maxHeight\u003d\"Infinity\" style\u003d\"-fx-text-fill: white;\" /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"Tempura-Person"},"content":"                              \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"Tempura-Person"},"content":"                                 \u003cInsets /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"Tempura-Person"},"content":"                              \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"                              \u003c/VBox\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"Tempura-Person"},"content":"                              \u003cVBox maxWidth\u003d\"120.0\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"                                  \u003cLabel fx:id\u003d\"locationField\" styleClass\u003d\"field_label\" /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"Tempura-Person"},"content":"                                  \u003cLabel fx:id\u003d\"selectedLocation\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"-Infinity\" style\u003d\"-fx-text-fill: white;\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"Tempura-Person"},"content":"                              \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"Tempura-Person"},"content":"                                 \u003cInsets /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"Tempura-Person"},"content":"                              \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"Tempura-Person"},"content":"                              \u003c/VBox\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"Tempura-Person"},"content":"                           \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"Tempura-Person"},"content":"                              \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"Tempura-Person"},"content":"                           \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"Tempura-Person"},"content":"                          \u003c/VBox\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"Tempura-Person"},"content":"                        \u003cSeparator opacity\u003d\"0.0\" orientation\u003d\"VERTICAL\" prefHeight\u003d\"200.0\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"Tempura-Person"},"content":"                           \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"Tempura-Person"},"content":"                              \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"Tempura-Person"},"content":"                           \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"Tempura-Person"},"content":"                        \u003c/Separator\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"Tempura-Person"},"content":"                        \u003cVBox style\u003d\"-fx-background-color: #252745;\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"                           \u003cchildren\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"                                 \u003cVBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"                                     \u003cLabel fx:id\u003d\"earningsField\" styleClass\u003d\"field_label\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"                                     \u003cLabel fx:id\u003d\"selectedEarnings\" maxHeight\u003d\"Infinity\" style\u003d\"-fx-text-fill: white;\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"Tempura-Person"},"content":"                                 \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"Tempura-Person"},"content":"                                    \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"Tempura-Person"},"content":"                                 \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"tricixg"},"content":"                                 \u003c/VBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"Tempura-Person"},"content":"                           \u003c/children\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"Tempura-Person"},"content":"                        \u003cSeparator opacity\u003d\"0.0\" orientation\u003d\"VERTICAL\" prefHeight\u003d\"200.0\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":68,"author":{"gitId":"Tempura-Person"},"content":"                           \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":69,"author":{"gitId":"Tempura-Person"},"content":"                              \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":70,"author":{"gitId":"Tempura-Person"},"content":"                           \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":71,"author":{"gitId":"Tempura-Person"},"content":"                        \u003c/Separator\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":72,"author":{"gitId":"Tempura-Person"},"content":"                           \u003cVBox HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":73,"author":{"gitId":"Tempura-Person"},"content":"                           \u003cVBox minHeight\u003d\"300.0\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":74,"author":{"gitId":"Tempura-Person"},"content":"                              \u003cchildren\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":75,"author":{"gitId":"Tempura-Person"},"content":"                                     \u003cLabel fx:id\u003d\"studentsField\" styleClass\u003d\"field_label\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":76,"author":{"gitId":"Tempura-Person"},"content":"                                    \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":77,"author":{"gitId":"Tempura-Person"},"content":"                                       \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":78,"author":{"gitId":"Tempura-Person"},"content":"                                    \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":79,"author":{"gitId":"Tempura-Person"},"content":"                                 \u003c/Label\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":80,"author":{"gitId":"Tempura-Person"},"content":"                                     \u003cPieChart fx:id\u003d\"attendanceChart\" prefHeight\u003d\"230.0\" prefWidth\u003d\"200.0\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":81,"author":{"gitId":"Tempura-Person"},"content":"                                    \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":82,"author":{"gitId":"Tempura-Person"},"content":"                                       \u003cInsets /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":83,"author":{"gitId":"Tempura-Person"},"content":"                                    \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":84,"author":{"gitId":"Tempura-Person"},"content":"                                 \u003c/PieChart\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":85,"author":{"gitId":"tricixg"},"content":"                              \u003c/children\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"tricixg"},"content":"                           \u003c/VBox\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"Tempura-Person"},"content":"                           \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":88,"author":{"gitId":"Tempura-Person"},"content":"                              \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":89,"author":{"gitId":"Tempura-Person"},"content":"                           \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":90,"author":{"gitId":"Tempura-Person"},"content":"                           \u003c/VBox\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":91,"author":{"gitId":"tricixg"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"tricixg"},"content":"                  \u003c/HBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"tricixg"},"content":"                \u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"tricixg"},"content":"               \u003cPane /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"tricixg"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"tricixg"},"content":"         \u003c/VBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"tricixg"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"tricixg"},"content":"      \u003cTitledPane animated\u003d\"false\" prefHeight\u003d\"311.0\" prefWidth\u003d\"548.0\" style\u003d\"-fx-background-color: #252745;\" text\u003d\"Income Analytics\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"tricixg"},"content":"        \u003ccontent\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"Tempura-Person"},"content":"            \u003cHBox prefHeight\u003d\"214.0\" prefWidth\u003d\"546.0\" style\u003d\"-fx-background-color: #252745;\" stylesheets\u003d\"@DarkTheme.css\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":101,"author":{"gitId":"tricixg"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"Tempura-Person"},"content":"                  \u003cVBox style\u003d\"-fx-background-color: #252745;\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":103,"author":{"gitId":"tricixg"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"tricixg"},"content":"                        \u003cVBox prefHeight\u003d\"176.0\" prefWidth\u003d\"140.0\" style\u003d\"-fx-background-color: #5B5D88;\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"Tempura-Person"},"content":"                            \u003cLabel fx:id\u003d\"todayField\" styleClass\u003d\"field_label\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":106,"author":{"gitId":"Tempura-Person"},"content":"                              \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":107,"author":{"gitId":"Tempura-Person"},"content":"                                 \u003cInsets /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":108,"author":{"gitId":"Tempura-Person"},"content":"                              \u003c/VBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":109,"author":{"gitId":"Tempura-Person"},"content":"                            \u003cLabel fx:id\u003d\"today\" maxHeight\u003d\"Infinity\" style\u003d\"-fx-text-fill: white;\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":110,"author":{"gitId":"Tempura-Person"},"content":"                              \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":111,"author":{"gitId":"Tempura-Person"},"content":"                                 \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":112,"author":{"gitId":"Tempura-Person"},"content":"                              \u003c/VBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":113,"author":{"gitId":"Tempura-Person"},"content":"                           \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":114,"author":{"gitId":"Tempura-Person"},"content":"                              \u003cInsets /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":115,"author":{"gitId":"Tempura-Person"},"content":"                           \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":116,"author":{"gitId":"Tempura-Person"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":117,"author":{"gitId":"Tempura-Person"},"content":"                        \u003cSeparator opacity\u003d\"0.0\" prefHeight\u003d\"0.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":118,"author":{"gitId":"tricixg"},"content":"                         \u003cVBox prefHeight\u003d\"176.0\" prefWidth\u003d\"140.0\" style\u003d\"-fx-background-color: #5B5D88;\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"tricixg"},"content":"                             \u003cLabel fx:id\u003d\"thisMonthField\" styleClass\u003d\"field_label\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"Tempura-Person"},"content":"                             \u003cLabel fx:id\u003d\"thisMonth\" maxHeight\u003d\"Infinity\" style\u003d\"-fx-text-fill: white;\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":121,"author":{"gitId":"Tempura-Person"},"content":"                              \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":122,"author":{"gitId":"Tempura-Person"},"content":"                                 \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":123,"author":{"gitId":"Tempura-Person"},"content":"                              \u003c/VBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":124,"author":{"gitId":"tricixg"},"content":"                         \u003c/VBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"tricixg"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"Tempura-Person"},"content":"                     \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":127,"author":{"gitId":"Tempura-Person"},"content":"                        \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":128,"author":{"gitId":"Tempura-Person"},"content":"                     \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":129,"author":{"gitId":"tricixg"},"content":"                  \u003c/VBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"Tempura-Person"},"content":"                  \u003cSeparator opacity\u003d\"0.0\" orientation\u003d\"VERTICAL\" prefHeight\u003d\"200.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":131,"author":{"gitId":"Tempura-Person"},"content":"                  \u003cVBox prefHeight\u003d\"263.0\" prefWidth\u003d\"150.0\" style\u003d\"-fx-background-color: #252745;\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":132,"author":{"gitId":"tricixg"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"tricixg"},"content":"                         \u003cVBox prefHeight\u003d\"176.0\" prefWidth\u003d\"140.0\" style\u003d\"-fx-background-color: #5B5D88;\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"tricixg"},"content":"                             \u003cLabel fx:id\u003d\"thisWeekField\" styleClass\u003d\"field_label\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"Tempura-Person"},"content":"                             \u003cLabel fx:id\u003d\"thisWeek\" maxHeight\u003d\"Infinity\" style\u003d\"-fx-text-fill: white;\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":136,"author":{"gitId":"Tempura-Person"},"content":"                              \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":137,"author":{"gitId":"Tempura-Person"},"content":"                                 \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":138,"author":{"gitId":"Tempura-Person"},"content":"                              \u003c/VBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":139,"author":{"gitId":"tricixg"},"content":"                         \u003c/VBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"Tempura-Person"},"content":"                         \u003cSeparator opacity\u003d\"0.0\" prefHeight\u003d\"0.0\" prefWidth\u003d\"87.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":141,"author":{"gitId":"tricixg"},"content":"                         \u003cVBox prefHeight\u003d\"176.0\" prefWidth\u003d\"140.0\" style\u003d\"-fx-background-color: #5B5D88;\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":142,"author":{"gitId":"tricixg"},"content":"                             \u003cLabel fx:id\u003d\"lifetimeField\" styleClass\u003d\"field_label\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"Tempura-Person"},"content":"                             \u003cLabel fx:id\u003d\"lifetime\" maxHeight\u003d\"Infinity\" style\u003d\"-fx-text-fill: white;\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":144,"author":{"gitId":"Tempura-Person"},"content":"                              \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":145,"author":{"gitId":"Tempura-Person"},"content":"                                 \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":146,"author":{"gitId":"Tempura-Person"},"content":"                              \u003c/VBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":147,"author":{"gitId":"tricixg"},"content":"                         \u003c/VBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"tricixg"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"Tempura-Person"},"content":"                     \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":150,"author":{"gitId":"Tempura-Person"},"content":"                        \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":151,"author":{"gitId":"Tempura-Person"},"content":"                     \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":152,"author":{"gitId":"tricixg"},"content":"                  \u003c/VBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":153,"author":{"gitId":"Tempura-Person"},"content":"                  \u003cSeparator opacity\u003d\"0.0\" orientation\u003d\"VERTICAL\" prefHeight\u003d\"263.0\" prefWidth\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":154,"author":{"gitId":"tricixg"},"content":"                  \u003cPane prefHeight\u003d\"197.0\" prefWidth\u003d\"282.0\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":155,"author":{"gitId":"tricixg"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":156,"author":{"gitId":"Tempura-Person"},"content":"                         \u003cVBox fx:id\u003d\"earningsChart\" prefHeight\u003d\"200.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: white;\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":157,"author":{"gitId":"Tempura-Person"},"content":"                           \u003cpadding\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":158,"author":{"gitId":"Tempura-Person"},"content":"                              \u003cInsets bottom\u003d\"20.0\" right\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":159,"author":{"gitId":"Tempura-Person"},"content":"                           \u003c/padding\u003e\u003c/VBox\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":160,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":161,"author":{"gitId":"tricixg"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":162,"author":{"gitId":"tricixg"},"content":"                  \u003c/Pane\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":163,"author":{"gitId":"tricixg"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":164,"author":{"gitId":"tricixg"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":165,"author":{"gitId":"tricixg"},"content":"        \u003c/content\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":166,"author":{"gitId":"tricixg"},"content":"      \u003c/TitledPane\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":167,"author":{"gitId":"tricixg"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":168,"author":{"gitId":"tricixg"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"tricixg":72,"Tempura-Person":93,"Oliverloo0909":3}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"Tempura-Person"},"content":"\u003cGridPane style\u003d\"-fx-background-color: #1C1D34;\" styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"   \u003crowConstraints\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"Tempura-Person"},"content":"      \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"Tempura-Person"},"content":"   \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"Tempura-Person":5,"-":11}},{"path":"src/main/resources/view/TopCalendar.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"Tempura-Person"},"content":"\u003cFlowPane fx:id\u003d\"topCalendar\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"/\u003e","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"tricixg":4,"Tempura-Person":1}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PAY_RATE_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"    private static final GuiSettings DEFAULT_GUI_SETTINGS \u003d new GuiSettings();","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"jengoc415"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"Tempura-Person"},"content":"                + PAY_RATE_DESC_AMY;","lastModifiedDate":"2023-03-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"tricixg":3,"jengoc415":1,"Tempura-Person":1,"-":159}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"import seedu.address.model.session.SessionName;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"tricixg"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"tricixg"},"content":"        public ObservableList\u003cSession\u003e getFilteredSessionList() {","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"tricixg"},"content":"            return null;","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":158,"author":{"gitId":"Tempura-Person"},"content":"        @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":159,"author":{"gitId":"jengoc415"},"content":"        public void sortAddressBook(int attribute) {","lastModifiedDate":"2023-03-24"},{"lineNumber":160,"author":{"gitId":"Tempura-Person"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-04"},{"lineNumber":161,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":162,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"tricixg"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"tricixg"},"content":"        public void setSession(Session target, Session editedPerson) {","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"tricixg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"Tempura-Person"},"content":"        @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":169,"author":{"gitId":"Tempura-Person"},"content":"        public void commitAddressBook() {","lastModifiedDate":"2023-03-22"},{"lineNumber":170,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":171,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":172,"author":{"gitId":"Tempura-Person"},"content":"        @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":173,"author":{"gitId":"Tempura-Person"},"content":"        public void undoAddressBook() {","lastModifiedDate":"2023-03-22"},{"lineNumber":174,"author":{"gitId":"Tempura-Person"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-22"},{"lineNumber":175,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":176,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":177,"author":{"gitId":"Tempura-Person"},"content":"        @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":178,"author":{"gitId":"Tempura-Person"},"content":"        public void redoAddressBook() {","lastModifiedDate":"2023-03-22"},{"lineNumber":179,"author":{"gitId":"Tempura-Person"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-22"},{"lineNumber":180,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":181,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":182,"author":{"gitId":"tricixg"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":183,"author":{"gitId":"tricixg"},"content":"        public void updateFilteredSessionList(Predicate\u003cSession\u003e predicate) {","lastModifiedDate":"2023-03-28"},{"lineNumber":184,"author":{"gitId":"tricixg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":185,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":186,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":187,"author":{"gitId":"tricixg"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":188,"author":{"gitId":"tricixg"},"content":"        public boolean hasSession(Session toAdd) {","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"tricixg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":190,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":192,"author":{"gitId":"tricixg"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":193,"author":{"gitId":"tricixg"},"content":"        public void addSession(Session toAdd) {","lastModifiedDate":"2023-03-28"},{"lineNumber":194,"author":{"gitId":"tricixg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":195,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":196,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":197,"author":{"gitId":"tricixg"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":198,"author":{"gitId":"tricixg"},"content":"        public void removeSession(Session toRemove) {","lastModifiedDate":"2023-03-28"},{"lineNumber":199,"author":{"gitId":"tricixg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":200,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":201,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":202,"author":{"gitId":"tricixg"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":203,"author":{"gitId":"tricixg"},"content":"        public void addPersonToSession(Person person, Session session) {","lastModifiedDate":"2023-03-28"},{"lineNumber":204,"author":{"gitId":"tricixg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":205,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":206,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":207,"author":{"gitId":"tricixg"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":208,"author":{"gitId":"tricixg"},"content":"        public void removePersonFromSession(Person person, Session session) {","lastModifiedDate":"2023-03-28"},{"lineNumber":209,"author":{"gitId":"tricixg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":210,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":211,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":212,"author":{"gitId":"tricixg"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":213,"author":{"gitId":"tricixg"},"content":"        public Session getSessionFromName(SessionName name) {","lastModifiedDate":"2023-03-28"},{"lineNumber":214,"author":{"gitId":"tricixg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":215,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":216,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":217,"author":{"gitId":"tricixg"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":218,"author":{"gitId":"tricixg"},"content":"        public boolean hasSessionName(SessionName sessionName) {","lastModifiedDate":"2023-03-28"},{"lineNumber":219,"author":{"gitId":"tricixg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":220,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":221,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"tricixg":52,"jengoc415":1,"Tempura-Person":18,"Oliverloo0909":1,"-":194}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"    private static final String FEEDBACK \u003d \"Feedback message\";","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"    private static final boolean SHOW_HELP \u003d true;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"    private static final boolean EXIT \u003d true;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"    public void constructor_feedbackOnly() {","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"        CommandResult commandResult \u003d new CommandResult(FEEDBACK);","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"        assertEquals(FEEDBACK, commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"        assertFalse(commandResult.isShowHelp());","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"        assertFalse(commandResult.isExit());","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"    public void constructor_allFields() {","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"        CommandResult commandResult \u003d new CommandResult(FEEDBACK, SHOW_HELP, EXIT);","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"        assertEquals(FEEDBACK, commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"        assertTrue(commandResult.isShowHelp());","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"        assertTrue(commandResult.isExit());","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"    public void equals_differentTypes() {","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"        CommandResult commandResult \u003d new CommandResult(FEEDBACK);","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"        assertFalse(commandResult.equals(new Object()));","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"    public void equals_sameInstance() {","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"        CommandResult commandResult \u003d new CommandResult(FEEDBACK);","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"    public void equals_differentValues() {","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"        CommandResult commandResult \u003d new CommandResult(FEEDBACK, SHOW_HELP, EXIT);","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"        // Different feedbackToUser value","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"Different feedback\", SHOW_HELP, EXIT)));","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"        // Different showHelp value","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"        assertFalse(commandResult.equals(new CommandResult(FEEDBACK, false, EXIT)));","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"        // Different exit value","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"        assertFalse(commandResult.equals(new CommandResult(FEEDBACK, SHOW_HELP, false)));","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"    public void hashCode_equalObjects() {","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"        CommandResult commandResult1 \u003d new CommandResult(FEEDBACK, SHOW_HELP, EXIT);","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"        CommandResult commandResult2 \u003d new CommandResult(FEEDBACK, SHOW_HELP, EXIT);","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"tricixg"},"content":"        assertEquals(commandResult1.hashCode(), commandResult2.hashCode());","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"    public void hashCode_differentObjects() {","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"tricixg"},"content":"        CommandResult commandResult1 \u003d new CommandResult(FEEDBACK, SHOW_HELP, EXIT);","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"tricixg"},"content":"        // Different feedbackToUser value","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"tricixg"},"content":"        CommandResult commandResult2 \u003d new CommandResult(\"Different feedback\", SHOW_HELP, EXIT);","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"tricixg"},"content":"        assertNotEquals(commandResult1.hashCode(), commandResult2.hashCode());","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"tricixg"},"content":"        // Different showHelp value","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"tricixg"},"content":"        CommandResult commandResult3 \u003d new CommandResult(FEEDBACK, false, EXIT);","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"tricixg"},"content":"        assertNotEquals(commandResult1.hashCode(), commandResult3.hashCode());","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"tricixg"},"content":"        // Different exit value","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"tricixg"},"content":"        CommandResult commandResult4 \u003d new CommandResult(FEEDBACK, SHOW_HELP, false);","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"tricixg"},"content":"        assertNotEquals(commandResult1.hashCode(), commandResult4.hashCode());","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"tricixg":56,"-":27}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PAY_RATE;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"jengoc415"},"content":"    public static final String VALID_PAY_RATE_AMY \u003d \"15\";","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"jengoc415"},"content":"    public static final String VALID_PAY_RATE_BOB \u003d \"50\";","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"    public static final String VALID_SESSION_START_BOB \u003d \"01-01-2022 10:00\";","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"    public static final String VALID_SESSION_START_AMY \u003d \"01-01-2022 12:00\";","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"    public static final String VALID_SESSION_END_BOB \u003d \"01-01-2022 11:00\";","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"    public static final String VALID_SESSION_END_AMY \u003d \"01-01-2022 13:00\";","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"jengoc415"},"content":"    public static final String PAY_RATE_DESC_AMY \u003d \" \" + PREFIX_PAY_RATE + VALID_PAY_RATE_AMY;","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"jengoc415"},"content":"    public static final String PAY_RATE_DESC_BOB \u003d \" \" + PREFIX_PAY_RATE + VALID_PAY_RATE_BOB;","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"jengoc415"},"content":"    public static final String INVALID_PAY_RATE_DESC \u003d \" \" + PREFIX_PAY_RATE + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"jengoc415"},"content":"                .withPhone(VALID_PHONE_AMY).withAddress(VALID_ADDRESS_AMY).withPayRate(VALID_PAY_RATE_AMY)","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"tricixg"},"content":"                .withPhone(VALID_PHONE_BOB).withAddress(VALID_ADDRESS_BOB).withPayRate(VALID_PAY_RATE_BOB)","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"tricixg"},"content":"                        .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"jengoc415"},"content":"        final String[] splitName \u003d person.getName().formattedName.split(\"\\\\s+\");","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"tricixg":7,"jengoc415":7,"-":118}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"jengoc415"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PAY_RATE_BOB;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"jengoc415"},"content":"        // different pay rate -\u003e returns false","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"jengoc415"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPayRate(VALID_PAY_RATE_BOB).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"jengoc415":3,"-":55}},{"path":"src/test/java/seedu/address/logic/commands/RedoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"Tempura-Person"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"Tempura-Person"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"Tempura-Person"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RedoCommand.","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"Tempura-Person"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":"public class RedoCommandTest {","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"Tempura-Person"},"content":"    private final RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"Tempura-Person"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"Tempura-Person"},"content":"    public void execute_takesNoNull() {","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"Tempura-Person"},"content":"        assertThrows(NullPointerException.class, () -\u003e redoCommand.execute(null));","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"Tempura-Person"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"Tempura-Person":18}},{"path":"src/test/java/seedu/address/logic/commands/ShowCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.person.TagContainsGroupsPredicate;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":" * Contains integration tests (interaction with the Model) for {@code ShowCommand}.","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"public class ShowCommandTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"    public void equals() {","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"        TagContainsGroupsPredicate firstPredicate \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"                new TagContainsGroupsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"        TagContainsGroupsPredicate secondPredicate \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"                new TagContainsGroupsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"        ShowCommand showFirstCommand \u003d new ShowCommand(firstPredicate);","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"        ShowCommand showSecondCommand \u003d new ShowCommand(secondPredicate);","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"        assertTrue(showFirstCommand.equals(showFirstCommand));","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"Oliverloo0909"},"content":"        ShowCommand showFirstCommandCopy \u003d new ShowCommand(firstPredicate);","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"Oliverloo0909"},"content":"        assertTrue(showFirstCommand.equals(showFirstCommandCopy));","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"Oliverloo0909"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"Oliverloo0909"},"content":"        assertFalse(showFirstCommand.equals(1));","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"Oliverloo0909"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"Oliverloo0909"},"content":"        assertFalse(showFirstCommand.equals(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"Oliverloo0909"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"Oliverloo0909"},"content":"        assertFalse(showFirstCommand.equals(showSecondCommand));","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"Oliverloo0909"},"content":"    public void execute_singleGroup_multiplePersonsFound() {","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"Oliverloo0909"},"content":"        String expectedMessage \u003d String.format(ShowCommand.MESSAGE_SHOW_GROUP_SUCCESS, \"friends\");","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"Oliverloo0909"},"content":"        TagContainsGroupsPredicate predicate \u003d preparePredicate(\"friends\");","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"Oliverloo0909"},"content":"        ShowCommand command \u003d new ShowCommand(predicate);","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"Oliverloo0909"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"Oliverloo0909"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"Oliverloo0909"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"Oliverloo0909"},"content":"    private TagContainsGroupsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"Oliverloo0909"},"content":"        return new TagContainsGroupsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Oliverloo0909":76}},{"path":"src/test/java/seedu/address/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"Tempura-Person"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"Tempura-Person"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"Tempura-Person"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"Tempura-Person"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"Tempura-Person"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"Tempura-Person"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"Tempura-Person"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"Tempura-Person"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":" * Contains integration tests (interaction with the Model) and unit tests for SortCommand.","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Tempura-Person"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"Tempura-Person"},"content":"public class SortCommandTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"Tempura-Person"},"content":"    private Model model;","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"Tempura-Person"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"Tempura-Person"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"Tempura-Person"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"Tempura-Person"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"Tempura-Person"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"Tempura-Person"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"Tempura-Person"},"content":"    public void execute_listIsNotSorted_showsSameList() {","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"jengoc415"},"content":"        assertCommandSuccess(new SortCommand(1), model, SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"Tempura-Person"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"Tempura-Person"},"content":"    public void execute_listIsSorted_showsEverything() {","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"Tempura-Person"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"jengoc415"},"content":"        assertCommandSuccess(new SortCommand(1), model, SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"Tempura-Person"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"jengoc415":2,"Tempura-Person":36,"Oliverloo0909":1}},{"path":"src/test/java/seedu/address/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"Tempura-Person"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"Tempura-Person"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"Tempura-Person"},"content":" * Contains integration tests (interaction with the Model) and unit tests for UndoCommand.","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"Tempura-Person"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":"public class UndoCommandTest {","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"Tempura-Person"},"content":"    private final UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"Tempura-Person"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"Tempura-Person"},"content":"    public void execute_takesNoNull() {","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"Tempura-Person"},"content":"        assertThrows(NullPointerException.class, () -\u003e undoCommand.execute(null));","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"Tempura-Person"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"Tempura-Person":18}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PAY_RATE_DESC;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PAY_RATE_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PAY_RATE_DESC_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PAY_RATE_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"import seedu.address.model.person.PayRate;","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"jengoc415"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"Tempura-Person"},"content":"                + PAY_RATE_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"jengoc415"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"Tempura-Person"},"content":"                + PAY_RATE_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"jengoc415"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"Tempura-Person"},"content":"                + PAY_RATE_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"jengoc415"},"content":"        // multiple emails - last pay rate accepted","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"jengoc415"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB + PAY_RATE_DESC_AMY","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"Tempura-Person"},"content":"                + PAY_RATE_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"jengoc415"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_AMY + ADDRESS_DESC_BOB","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"Tempura-Person"},"content":"                + PAY_RATE_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"tricixg"},"content":"        // multiple sessions - last session accepted","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"tricixg"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_AMY + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"Tempura-Person"},"content":"                + PAY_RATE_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":77,"author":{"gitId":"jengoc415"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB + PAY_RATE_DESC_BOB","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-03-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":85,"author":{"gitId":"tricixg"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"Tempura-Person"},"content":"                        + PHONE_DESC_AMY + ADDRESS_DESC_AMY + PAY_RATE_DESC_AMY,","lastModifiedDate":"2023-03-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"jengoc415"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB + PAY_RATE_DESC_BOB,","lastModifiedDate":"2023-02-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"jengoc415"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + ADDRESS_DESC_BOB + PAY_RATE_DESC_BOB,","lastModifiedDate":"2023-02-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"jengoc415"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB + VALID_PAY_RATE_BOB,","lastModifiedDate":"2023-02-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"jengoc415"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_ADDRESS_BOB + PAY_RATE_DESC_BOB ,","lastModifiedDate":"2023-02-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"tricixg"},"content":"        assertParseFailure(parser, VALID_NAME_BOB","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"Tempura-Person"},"content":"                        + VALID_PHONE_BOB + VALID_ADDRESS_BOB + VALID_PAY_RATE_BOB,","lastModifiedDate":"2023-03-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"jengoc415"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + ADDRESS_DESC_BOB + PAY_RATE_DESC_BOB","lastModifiedDate":"2023-02-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"jengoc415"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB + PAY_RATE_DESC_BOB","lastModifiedDate":"2023-02-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"jengoc415"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB + INVALID_PAY_RATE_DESC","lastModifiedDate":"2023-02-24"},{"lineNumber":128,"author":{"gitId":"Tempura-Person"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, PayRate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"jengoc415"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_ADDRESS_DESC + PAY_RATE_DESC_BOB","lastModifiedDate":"2023-02-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"jengoc415"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB + PAY_RATE_DESC_BOB","lastModifiedDate":"2023-02-24"},{"lineNumber":136,"author":{"gitId":"Oliverloo0909"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_ALPHANUMERIC_CONSTRAINTS);","lastModifiedDate":"2023-04-03"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"tricixg"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC","lastModifiedDate":"2023-03-16"},{"lineNumber":140,"author":{"gitId":"Tempura-Person"},"content":"                        + PHONE_DESC_BOB + INVALID_ADDRESS_DESC + PAY_RATE_DESC_BOB,","lastModifiedDate":"2023-03-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":144,"author":{"gitId":"jengoc415"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-02-24"},{"lineNumber":145,"author":{"gitId":"Tempura-Person"},"content":"                + PAY_RATE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"tricixg":11,"jengoc415":17,"Tempura-Person":11,"Oliverloo0909":1,"-":108}},{"path":"src/test/java/seedu/address/logic/parser/AddTagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.logic.commands.AddTagCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":" * Contains integration tests (interaction with the Model)","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":" * and unit tests for AddTagCommandParser.","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"public class AddTagCommandParserTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"                    AddTagCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"    private static final String TAG_FIELD_NOT_PRESENT \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"            String.format(RemoveTagCommandParser.MESSAGE_TAG_DOES_NOT_EXIST_PARSE_FAILURE,","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"                    AddTagCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"    private AddTagCommandParser parser \u003d new AddTagCommandParser();","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"        String test1 \u003d \"t/Hall\";","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"        String test2 \u003d \"1 \";","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"        String test3 \u003d \" \";","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"        // no index specified","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"        assertParseFailure(parser, test1, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"        // no field specified","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"        assertParseFailure(parser, test2, TAG_FIELD_NOT_PRESENT);","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"        // no index and no field specified","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"Oliverloo0909"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"Oliverloo0909"},"content":"        // negative index","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"Oliverloo0909"},"content":"        assertParseFailure(parser, \"-5\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"Oliverloo0909"},"content":"        // zero index","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"Oliverloo0909"},"content":"        assertParseFailure(parser, \"0\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"Oliverloo0909"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"Oliverloo0909"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"Oliverloo0909"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"Oliverloo0909"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"Oliverloo0909"},"content":"    public void parse_groupAddSingleGroup_success() throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"Oliverloo0909"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"Oliverloo0909"},"content":"        String input \u003d targetIndex.getOneBased() + \" t/Hall\";","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"Oliverloo0909"},"content":"        // One group","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"Oliverloo0909"},"content":"        Set\u003cTag\u003e expectedTagList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"Oliverloo0909"},"content":"        expectedTagList.add(new Tag(\"Hall\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"Oliverloo0909"},"content":"        AddTagCommand expectedCommand \u003d new AddTagCommand(targetIndex, expectedTagList);","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"Oliverloo0909"},"content":"        assertParseSuccess(parser, input, expectedCommand);","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"Oliverloo0909":72}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Tempura-Person"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.logic.commands.ShowCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Tempura-Person"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.person.TagContainsGroupsPredicate;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"Oliverloo0909"},"content":"    public void parseCommand_show() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"Oliverloo0909"},"content":"        List\u003cString\u003e groups \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"Oliverloo0909"},"content":"        ShowCommand command \u003d (ShowCommand) parser.parseCommand(","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"Oliverloo0909"},"content":"                ShowCommand.COMMAND_WORD + \" \" + groups.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(new ShowCommand(new TagContainsGroupsPredicate(groups)), command);","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"Tempura-Person"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"Tempura-Person"},"content":"    public void parseCommand_sort() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":110,"author":{"gitId":"jengoc415"},"content":"        assertTrue(parser.parseCommand(SortCommand.COMMAND_WORD + \" 1\") instanceof SortCommand);","lastModifiedDate":"2023-03-24"},{"lineNumber":111,"author":{"gitId":"Tempura-Person"},"content":"        assertTrue(parser.parseCommand(SortCommand.COMMAND_WORD + \" 3\") instanceof SortCommand);","lastModifiedDate":"2023-03-04"},{"lineNumber":112,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":113,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":114,"author":{"gitId":"Tempura-Person"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"Tempura-Person"},"content":"    public void parseCommand_undo() throws Exception {","lastModifiedDate":"2023-03-22"},{"lineNumber":116,"author":{"gitId":"Tempura-Person"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_WORD) instanceof UndoCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"Tempura-Person"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_WORD + \" 3\") instanceof UndoCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"Tempura-Person"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":121,"author":{"gitId":"Tempura-Person"},"content":"    public void parseCommand_redo() throws Exception {","lastModifiedDate":"2023-03-22"},{"lineNumber":122,"author":{"gitId":"Tempura-Person"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_WORD) instanceof RedoCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":123,"author":{"gitId":"Tempura-Person"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_WORD + \" 3\") instanceof RedoCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":124,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":125,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"jengoc415":1,"Tempura-Person":19,"Oliverloo0909":15,"-":101}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"jengoc415"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PAY_RATE_DESC;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"jengoc415"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PAY_RATE_DESC_AMY;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"jengoc415"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PAY_RATE_DESC_BOB;","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"jengoc415"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PAY_RATE_AMY;","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"jengoc415"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PAY_RATE_BOB;","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"jengoc415"},"content":"import seedu.address.model.person.PayRate;","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"jengoc415"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PAY_RATE_DESC, PayRate.MESSAGE_CONSTRAINTS); // invalid pay rate","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"Oliverloo0909"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_ALPHANUMERIC_CONSTRAINTS); // invalid tag","lastModifiedDate":"2023-04-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"jengoc415"},"content":"        // invalid phone followed by valid pay rate","lastModifiedDate":"2023-02-24"},{"lineNumber":91,"author":{"gitId":"jengoc415"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + PAY_RATE_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"Oliverloo0909"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND","lastModifiedDate":"2023-04-03"},{"lineNumber":100,"author":{"gitId":"Oliverloo0909"},"content":"                + TAG_EMPTY, Tag.MESSAGE_ALPHANUMERIC_CONSTRAINTS);","lastModifiedDate":"2023-04-03"},{"lineNumber":101,"author":{"gitId":"Oliverloo0909"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND","lastModifiedDate":"2023-04-03"},{"lineNumber":102,"author":{"gitId":"Oliverloo0909"},"content":"                + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_ALPHANUMERIC_CONSTRAINTS);","lastModifiedDate":"2023-04-03"},{"lineNumber":103,"author":{"gitId":"Oliverloo0909"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2023-04-03"},{"lineNumber":104,"author":{"gitId":"Oliverloo0909"},"content":"                + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_ALPHANUMERIC_CONSTRAINTS);","lastModifiedDate":"2023-04-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"jengoc415"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_PAY_RATE_DESC + VALID_ADDRESS_AMY","lastModifiedDate":"2023-02-24"},{"lineNumber":108,"author":{"gitId":"jengoc415"},"content":"                + VALID_PHONE_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":115,"author":{"gitId":"jengoc415"},"content":"                + PAY_RATE_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2023-02-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"jengoc415"},"content":"                .withPhone(VALID_PHONE_BOB).withPayRate(VALID_PAY_RATE_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-02-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":128,"author":{"gitId":"jengoc415"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + PAY_RATE_DESC_AMY;","lastModifiedDate":"2023-02-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"jengoc415"},"content":"                .withPayRate(VALID_PAY_RATE_AMY).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"jengoc415"},"content":"        // pay rate","lastModifiedDate":"2023-02-24"},{"lineNumber":153,"author":{"gitId":"jengoc415"},"content":"        userInput \u003d targetIndex.getOneBased() + PAY_RATE_DESC_AMY;","lastModifiedDate":"2023-02-24"},{"lineNumber":154,"author":{"gitId":"jengoc415"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPayRate(VALID_PAY_RATE_AMY).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"jengoc415"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + PAY_RATE_DESC_AMY","lastModifiedDate":"2023-02-24"},{"lineNumber":175,"author":{"gitId":"jengoc415"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + PAY_RATE_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2023-02-24"},{"lineNumber":176,"author":{"gitId":"jengoc415"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + PAY_RATE_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2023-02-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"jengoc415"},"content":"                .withPayRate(VALID_PAY_RATE_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND,","lastModifiedDate":"2023-02-24"},{"lineNumber":180,"author":{"gitId":"jengoc415"},"content":"                    VALID_TAG_HUSBAND)","lastModifiedDate":"2023-02-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"jengoc415"},"content":"        userInput \u003d targetIndex.getOneBased() + PAY_RATE_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2023-02-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":199,"author":{"gitId":"jengoc415"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withPayRate(VALID_PAY_RATE_BOB)","lastModifiedDate":"2023-02-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"jengoc415":25,"Oliverloo0909":7,"-":183}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.logic.parser.ParserUtil.toTitleCase;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"import seedu.address.model.person.PayRate;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"jengoc415"},"content":"    private static final String INVALID_PAY_RATE \u003d \"-23\";","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"jengoc415"},"content":"    private static final String VALID_PAY_RATE \u003d \"0\";","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"jengoc415"},"content":"    public void parsePayRate_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":131,"author":{"gitId":"jengoc415"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePayRate((String) null));","lastModifiedDate":"2023-02-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"jengoc415"},"content":"    public void parsePayRate_invalidValue_throwsParseException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":136,"author":{"gitId":"jengoc415"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePayRate(INVALID_PAY_RATE));","lastModifiedDate":"2023-02-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"jengoc415"},"content":"    public void parsePayRate_validValueWithoutWhitespace_returnsPayRate() throws Exception {","lastModifiedDate":"2023-02-25"},{"lineNumber":141,"author":{"gitId":"jengoc415"},"content":"        PayRate expectedPayRate \u003d new PayRate(VALID_PAY_RATE);","lastModifiedDate":"2023-02-24"},{"lineNumber":142,"author":{"gitId":"jengoc415"},"content":"        assertEquals(expectedPayRate, ParserUtil.parsePayRate(VALID_PAY_RATE));","lastModifiedDate":"2023-02-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"jengoc415"},"content":"    public void parsePayRate_validValueWithWhitespace_returnsTrimmedPayRate() throws Exception {","lastModifiedDate":"2023-02-25"},{"lineNumber":147,"author":{"gitId":"jengoc415"},"content":"        String payRateWithWhitespace \u003d WHITESPACE + VALID_PAY_RATE + WHITESPACE;","lastModifiedDate":"2023-02-25"},{"lineNumber":148,"author":{"gitId":"jengoc415"},"content":"        PayRate expectedPayRate \u003d new PayRate(VALID_PAY_RATE);","lastModifiedDate":"2023-02-24"},{"lineNumber":149,"author":{"gitId":"jengoc415"},"content":"        assertEquals(expectedPayRate, ParserUtil.parsePayRate(payRateWithWhitespace));","lastModifiedDate":"2023-02-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":198,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":199,"author":{"gitId":"Oliverloo0909"},"content":"    public void toTitleNameTest() {","lastModifiedDate":"2023-03-29"},{"lineNumber":200,"author":{"gitId":"Oliverloo0909"},"content":"        String unformattedName \u003d \"john doe\";","lastModifiedDate":"2023-03-29"},{"lineNumber":201,"author":{"gitId":"Oliverloo0909"},"content":"        String formattedName \u003d \"John Doe\";","lastModifiedDate":"2023-03-29"},{"lineNumber":202,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(toTitleCase(unformattedName),","lastModifiedDate":"2023-03-29"},{"lineNumber":203,"author":{"gitId":"Oliverloo0909"},"content":"                formattedName);","lastModifiedDate":"2023-03-29"},{"lineNumber":204,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":205,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"tricixg":2,"jengoc415":13,"Oliverloo0909":9,"-":182}},{"path":"src/test/java/seedu/address/logic/parser/ShowCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.logic.commands.ShowCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.person.TagContainsGroupsPredicate;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"public class ShowCommandParserTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"    private ShowCommandParser parser \u003d new ShowCommandParser();","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, ShowCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"    public void parse_validArgs_returnsShowCommand() {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"        ShowCommand expectedShowCommand \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"                new ShowCommand(new TagContainsGroupsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedShowCommand);","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedShowCommand);","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Oliverloo0909":36}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"    private final Tag test \u003d new Tag(\"bob\");","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"    private final Set\u003cTag\u003e testList \u003d new HashSet\u003c\u003e(Arrays.asList(test, new Tag(\"ben\")));","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"Oliverloo0909"},"content":"        private final ObservableList\u003cTag\u003e tags \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"tricixg"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"tricixg"},"content":"        public ObservableList\u003cSession\u003e getSessionList() {","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"tricixg"},"content":"            return null;","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"tricixg":5,"Oliverloo0909":7,"-":102}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"Tempura-Person"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"Tempura-Person"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"Tempura-Person"},"content":"    public void undo_throwsCommandException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"Tempura-Person"},"content":"        assertThrows(CommandException.class, () -\u003e modelManager.undoAddressBook());","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"Tempura-Person"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"Tempura-Person"},"content":"    public void redo_throwsCommandException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"Tempura-Person"},"content":"        assertThrows(CommandException.class, () -\u003e modelManager.redoAddressBook());","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"jengoc415"},"content":"        String[] keywords \u003d ALICE.getName().formattedName.split(\"\\\\s+\");","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":146,"author":{"gitId":"tricixg"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":147,"author":{"gitId":"tricixg"},"content":"    public void deletePerson_personExists_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":148,"author":{"gitId":"tricixg"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":149,"author":{"gitId":"tricixg"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2023-03-23"},{"lineNumber":150,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":151,"author":{"gitId":"tricixg"},"content":"        modelManager.deletePerson(ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":152,"author":{"gitId":"tricixg"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2023-03-23"},{"lineNumber":153,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":154,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":155,"author":{"gitId":"tricixg"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":156,"author":{"gitId":"tricixg"},"content":"    public void setPerson_personExists_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":157,"author":{"gitId":"tricixg"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":158,"author":{"gitId":"tricixg"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2023-03-23"},{"lineNumber":159,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":160,"author":{"gitId":"tricixg"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(\"Edited Alice\").build();","lastModifiedDate":"2023-03-23"},{"lineNumber":161,"author":{"gitId":"tricixg"},"content":"        modelManager.setPerson(ALICE, editedAlice);","lastModifiedDate":"2023-03-23"},{"lineNumber":162,"author":{"gitId":"tricixg"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"tricixg"},"content":"        assertTrue(modelManager.hasPerson(editedAlice));","lastModifiedDate":"2023-03-23"},{"lineNumber":164,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":165,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"tricixg"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":167,"author":{"gitId":"tricixg"},"content":"    public void updateFilteredPersonList_predicate_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":168,"author":{"gitId":"tricixg"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":169,"author":{"gitId":"tricixg"},"content":"        modelManager.addPerson(BENSON);","lastModifiedDate":"2023-03-23"},{"lineNumber":170,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":171,"author":{"gitId":"jengoc415"},"content":"        modelManager.updateFilteredPersonList(p -\u003e p.getName().formattedName.contains(\"Ben\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":172,"author":{"gitId":"tricixg"},"content":"        assertEquals(1, modelManager.getFilteredPersonList().size());","lastModifiedDate":"2023-03-23"},{"lineNumber":173,"author":{"gitId":"tricixg"},"content":"        assertTrue(modelManager.getFilteredPersonList().contains(BENSON));","lastModifiedDate":"2023-03-23"},{"lineNumber":174,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":175,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":176,"author":{"gitId":"Tempura-Person"},"content":"    /*// Test for getFilteredCalendarEventList() method","lastModifiedDate":"2023-03-26"},{"lineNumber":177,"author":{"gitId":"tricixg"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":178,"author":{"gitId":"tricixg"},"content":"    public void getFilteredCalendarEventList_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":179,"author":{"gitId":"tricixg"},"content":"        // Set up a list of persons with calendar events","lastModifiedDate":"2023-03-23"},{"lineNumber":180,"author":{"gitId":"tricixg"},"content":"        Person person1 \u003d new PersonBuilder().withName(\"Amy Bee\")","lastModifiedDate":"2023-03-23"},{"lineNumber":181,"author":{"gitId":"tricixg"},"content":"                .withSession(\"01-01-2022 12:00\", \"01-01-2022 13:00\").build();","lastModifiedDate":"2023-03-23"},{"lineNumber":182,"author":{"gitId":"tricixg"},"content":"        Person person2 \u003d new PersonBuilder().withName(\"Bob Choo\")","lastModifiedDate":"2023-03-23"},{"lineNumber":183,"author":{"gitId":"tricixg"},"content":"                .withSession(\"01-01-2022 10:00\", \"01-01-2022 11:00\").build();","lastModifiedDate":"2023-03-23"},{"lineNumber":184,"author":{"gitId":"tricixg"},"content":"        modelManager.addPerson(person1);","lastModifiedDate":"2023-03-23"},{"lineNumber":185,"author":{"gitId":"tricixg"},"content":"        modelManager.addPerson(person2);","lastModifiedDate":"2023-03-23"},{"lineNumber":186,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":187,"author":{"gitId":"tricixg"},"content":"        // Check that the filtered list contains only persons with calendar events","lastModifiedDate":"2023-03-23"},{"lineNumber":188,"author":{"gitId":"tricixg"},"content":"        ObservableList\u003cCalendarEvent\u003e expectedCalendarEvents \u003d getTypicalCalendarEvents();","lastModifiedDate":"2023-03-23"},{"lineNumber":189,"author":{"gitId":"tricixg"},"content":"        ObservableList\u003cCalendarEvent\u003e actualCalendarEvents \u003d modelManager.getFilteredCalendarEventList();","lastModifiedDate":"2023-03-23"},{"lineNumber":190,"author":{"gitId":"tricixg"},"content":"        assertEquals(expectedCalendarEvents, actualCalendarEvents);","lastModifiedDate":"2023-03-23"},{"lineNumber":191,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":192,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":193,"author":{"gitId":"tricixg"},"content":"    // Test for updateCalendarEventList() method","lastModifiedDate":"2023-03-23"},{"lineNumber":194,"author":{"gitId":"tricixg"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":195,"author":{"gitId":"tricixg"},"content":"    public void updateCalendarEventList_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":196,"author":{"gitId":"tricixg"},"content":"        // Set up a list of persons with calendar events","lastModifiedDate":"2023-03-23"},{"lineNumber":197,"author":{"gitId":"tricixg"},"content":"        Person person1 \u003d new PersonBuilder().withName(\"Amy Bee\")","lastModifiedDate":"2023-03-23"},{"lineNumber":198,"author":{"gitId":"tricixg"},"content":"                .withSession(\"01-01-2022 12:00\", \"01-01-2022 13:00\").build();","lastModifiedDate":"2023-03-23"},{"lineNumber":199,"author":{"gitId":"tricixg"},"content":"        Person person2 \u003d new PersonBuilder().withName(\"Bob Choo\")","lastModifiedDate":"2023-03-23"},{"lineNumber":200,"author":{"gitId":"tricixg"},"content":"                .withSession(\"01-01-2022 10:00\", \"01-01-2022 11:00\").build();","lastModifiedDate":"2023-03-23"},{"lineNumber":201,"author":{"gitId":"tricixg"},"content":"        modelManager.addPerson(person1);","lastModifiedDate":"2023-03-23"},{"lineNumber":202,"author":{"gitId":"tricixg"},"content":"        modelManager.addPerson(person2);","lastModifiedDate":"2023-03-23"},{"lineNumber":203,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":204,"author":{"gitId":"tricixg"},"content":"        // Filter the list to show only persons with calendar events","lastModifiedDate":"2023-03-23"},{"lineNumber":205,"author":{"gitId":"tricixg"},"content":"        modelManager.updateFilteredPersonList(x -\u003e !x.getCalendarEvents().isEmpty());","lastModifiedDate":"2023-03-23"},{"lineNumber":206,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":207,"author":{"gitId":"tricixg"},"content":"        // Update the calendar event list","lastModifiedDate":"2023-03-23"},{"lineNumber":208,"author":{"gitId":"tricixg"},"content":"        modelManager.updateCalendarEventList();","lastModifiedDate":"2023-03-23"},{"lineNumber":209,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":210,"author":{"gitId":"tricixg"},"content":"        // Check that the filtered list contains only persons with calendar events","lastModifiedDate":"2023-03-23"},{"lineNumber":211,"author":{"gitId":"tricixg"},"content":"        ObservableList\u003cCalendarEvent\u003e expectedCalendarEvents \u003d getTypicalCalendarEvents();","lastModifiedDate":"2023-03-23"},{"lineNumber":212,"author":{"gitId":"tricixg"},"content":"        ObservableList\u003cCalendarEvent\u003e actualCalendarEvents \u003d modelManager.getFilteredCalendarEventList();","lastModifiedDate":"2023-03-23"},{"lineNumber":213,"author":{"gitId":"tricixg"},"content":"        assertEquals(expectedCalendarEvents, actualCalendarEvents);","lastModifiedDate":"2023-03-23"},{"lineNumber":214,"author":{"gitId":"Tempura-Person"},"content":"    }*/","lastModifiedDate":"2023-03-26"},{"lineNumber":215,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"tricixg":70,"jengoc415":2,"Tempura-Person":13,"-":131}},{"path":"src/test/java/seedu/address/model/VersionedAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"Tempura-Person"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"Tempura-Person"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"Tempura-Person"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"Tempura-Person"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"Tempura-Person"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"Tempura-Person"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"Tempura-Person"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"Tempura-Person"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"Tempura-Person"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"Tempura-Person"},"content":"import java.util.List;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"Tempura-Person"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"Tempura-Person"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"Tempura-Person"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"Tempura-Person"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"Tempura-Person"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"Tempura-Person"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"Tempura-Person"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Tempura-Person"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"Tempura-Person"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"Tempura-Person"},"content":"public class VersionedAddressBookTest {","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"Tempura-Person"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"Tempura-Person"},"content":"    private final VersionedAddressBook versionedAddressBook \u003d new VersionedAddressBook(addressBook);","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"Tempura-Person"},"content":"    private final Tag test \u003d new Tag(\"bob\");","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"Tempura-Person"},"content":"    private final Set\u003cTag\u003e testList \u003d new HashSet\u003c\u003e(Arrays.asList(test, new Tag(\"ben\")));","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"Tempura-Person"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"Tempura-Person"},"content":"    public void constructor() {","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"Tempura-Person"},"content":"        assertEquals(Collections.emptyList(), versionedAddressBook.getPersonList());","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"Tempura-Person"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"Tempura-Person"},"content":"    public void commitWipesRedundantStates() throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"Tempura-Person"},"content":"        AddressBook addressBookTest \u003d getTypicalAddressBook();","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"Tempura-Person"},"content":"        VersionedAddressBook versionedAddressBookTest \u003d new VersionedAddressBook(addressBookTest);","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"Tempura-Person"},"content":"        int initialLength \u003d versionedAddressBookTest.getStateList().size();","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"Tempura-Person"},"content":"        versionedAddressBookTest.removePerson(ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"Tempura-Person"},"content":"        versionedAddressBookTest.commit();","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"Tempura-Person"},"content":"        versionedAddressBookTest.undo();","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"Tempura-Person"},"content":"        versionedAddressBookTest.commit();","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"Tempura-Person"},"content":"        int finalLength \u003d versionedAddressBookTest.getStateList().size();","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"Tempura-Person"},"content":"        assertNotEquals(initialLength, finalLength);","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"Tempura-Person"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"Tempura-Person"},"content":"    public void redoWorks() throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"Tempura-Person"},"content":"        AddressBook addressBookTest \u003d new AddressBook();","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"Tempura-Person"},"content":"        VersionedAddressBook versionedAddressBookTest \u003d new VersionedAddressBook(addressBookTest);","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"Tempura-Person"},"content":"        versionedAddressBookTest.addPerson(ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"Tempura-Person"},"content":"        versionedAddressBookTest.commit();","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"Tempura-Person"},"content":"        int initialLength \u003d versionedAddressBookTest.getStateList().size();","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"Tempura-Person"},"content":"        versionedAddressBookTest.undo();","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"Tempura-Person"},"content":"        versionedAddressBookTest.redo();","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"Tempura-Person"},"content":"        int finalLength \u003d versionedAddressBookTest.getStateList().size();","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"Tempura-Person"},"content":"        assertEquals(initialLength, finalLength);","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"Tempura-Person"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"Tempura-Person"},"content":"    public void statePointerMovesCorrectly() throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"Tempura-Person"},"content":"        AddressBook addressBookTest \u003d new AddressBook();","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"Tempura-Person"},"content":"        VersionedAddressBook versionedAddressBookTest \u003d new VersionedAddressBook(addressBookTest);","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"Tempura-Person"},"content":"        int initialLength \u003d versionedAddressBookTest.getStateList().size();","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"Tempura-Person"},"content":"        assertEquals(initialLength, 1);","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"Tempura-Person"},"content":"        assertEquals(versionedAddressBookTest.getCurrentStatePointer(), 0);","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"Tempura-Person"},"content":"        versionedAddressBookTest.addPerson(ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"Tempura-Person"},"content":"        versionedAddressBookTest.commit();","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"Tempura-Person"},"content":"        int finalLength \u003d versionedAddressBookTest.getStateList().size();","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"Tempura-Person"},"content":"        assertEquals(finalLength, 2);","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"Tempura-Person"},"content":"        assertEquals(versionedAddressBookTest.getCurrentStatePointer(), 1);","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"Tempura-Person"},"content":"        assertTrue(versionedAddressBookTest.getStateList().contains(versionedAddressBookTest.getCurrentState()));","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"Tempura-Person"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"Tempura-Person"},"content":"    public void cannotUndoOrRedoInitially() {","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"Tempura-Person"},"content":"        AddressBook addressBookTest \u003d getTypicalAddressBook();","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"Tempura-Person"},"content":"        VersionedAddressBook versionedAddressBookTest \u003d new VersionedAddressBook(addressBookTest);","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"Tempura-Person"},"content":"        assertFalse(versionedAddressBookTest.canUndo());","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"Tempura-Person"},"content":"        assertFalse(versionedAddressBookTest.canRedo());","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"Tempura-Person"},"content":"        assertThrows(CommandException.class, versionedAddressBookTest::undo);","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"Tempura-Person"},"content":"        assertThrows(CommandException.class, versionedAddressBookTest::redo);","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":93,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"Tempura-Person"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":95,"author":{"gitId":"Tempura-Person"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"Tempura-Person"},"content":"        assertThrows(NullPointerException.class, () -\u003e versionedAddressBook.resetData(null));","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"Tempura-Person"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"Tempura-Person"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"Tempura-Person"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2023-03-22"},{"lineNumber":102,"author":{"gitId":"Tempura-Person"},"content":"        versionedAddressBook.resetData(newData);","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"Tempura-Person"},"content":"        assertEquals(newData, versionedAddressBook);","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":105,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":106,"author":{"gitId":"Tempura-Person"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":107,"author":{"gitId":"Tempura-Person"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-22"},{"lineNumber":108,"author":{"gitId":"Tempura-Person"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"Tempura-Person"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-22"},{"lineNumber":110,"author":{"gitId":"Tempura-Person"},"content":"                .build();","lastModifiedDate":"2023-03-22"},{"lineNumber":111,"author":{"gitId":"Tempura-Person"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-03-22"},{"lineNumber":112,"author":{"gitId":"Tempura-Person"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"Tempura-Person"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e versionedAddressBook.resetData(newData));","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":116,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"Tempura-Person"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"Tempura-Person"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"Tempura-Person"},"content":"        assertThrows(NullPointerException.class, () -\u003e versionedAddressBook.hasPerson(null));","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":121,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":122,"author":{"gitId":"Tempura-Person"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":123,"author":{"gitId":"Tempura-Person"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-22"},{"lineNumber":124,"author":{"gitId":"Tempura-Person"},"content":"        assertFalse(versionedAddressBook.hasPerson(ALICE));","lastModifiedDate":"2023-03-22"},{"lineNumber":125,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":126,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":127,"author":{"gitId":"Tempura-Person"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":128,"author":{"gitId":"Tempura-Person"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-22"},{"lineNumber":129,"author":{"gitId":"Tempura-Person"},"content":"        versionedAddressBook.addPerson(ALICE);","lastModifiedDate":"2023-03-22"},{"lineNumber":130,"author":{"gitId":"Tempura-Person"},"content":"        assertTrue(versionedAddressBook.hasPerson(ALICE));","lastModifiedDate":"2023-03-22"},{"lineNumber":131,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":132,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":133,"author":{"gitId":"Tempura-Person"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":134,"author":{"gitId":"Tempura-Person"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-22"},{"lineNumber":135,"author":{"gitId":"Tempura-Person"},"content":"        versionedAddressBook.addPerson(ALICE);","lastModifiedDate":"2023-03-22"},{"lineNumber":136,"author":{"gitId":"Tempura-Person"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-22"},{"lineNumber":137,"author":{"gitId":"Tempura-Person"},"content":"                .build();","lastModifiedDate":"2023-03-22"},{"lineNumber":138,"author":{"gitId":"Tempura-Person"},"content":"        assertTrue(versionedAddressBook.hasPerson(editedAlice));","lastModifiedDate":"2023-03-22"},{"lineNumber":139,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":140,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":141,"author":{"gitId":"Tempura-Person"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":142,"author":{"gitId":"Tempura-Person"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-22"},{"lineNumber":143,"author":{"gitId":"Tempura-Person"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e versionedAddressBook.getPersonList().remove(0));","lastModifiedDate":"2023-03-22"},{"lineNumber":144,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":145,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":146,"author":{"gitId":"Tempura-Person"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":147,"author":{"gitId":"Tempura-Person"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2023-03-22"},{"lineNumber":148,"author":{"gitId":"Tempura-Person"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":149,"author":{"gitId":"Tempura-Person"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2023-03-22"},{"lineNumber":150,"author":{"gitId":"Tempura-Person"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-22"},{"lineNumber":151,"author":{"gitId":"Tempura-Person"},"content":"        private final ObservableList\u003cTag\u003e tags \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-22"},{"lineNumber":152,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":153,"author":{"gitId":"Tempura-Person"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2023-03-22"},{"lineNumber":154,"author":{"gitId":"Tempura-Person"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2023-03-22"},{"lineNumber":155,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":156,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":157,"author":{"gitId":"Tempura-Person"},"content":"        @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":158,"author":{"gitId":"Tempura-Person"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2023-03-22"},{"lineNumber":159,"author":{"gitId":"Tempura-Person"},"content":"            return persons;","lastModifiedDate":"2023-03-22"},{"lineNumber":160,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":161,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":162,"author":{"gitId":"tricixg"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"tricixg"},"content":"        public ObservableList\u003cSession\u003e getSessionList() {","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"tricixg"},"content":"            return null;","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":167,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":168,"author":{"gitId":"Tempura-Person"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"tricixg":5,"Tempura-Person":163}},{"path":"src/test/java/seedu/address/model/person/HasPaidTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"public class HasPaidTest {","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"    private HasPaid hasPaidFalse \u003d new HasPaid();","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"    private HasPaid hasPaidTrue \u003d new HasPaid(true);","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"    private HasPaid hasPaidFalse1 \u003d new HasPaid(false);","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"    public void equals() {","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(hasPaidFalse, hasPaidFalse1);","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"        assertFalse(hasPaidFalse.equals(hasPaidTrue));","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"    public void markPaidTest() {","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"        hasPaidFalse.markPaid();","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(hasPaidTrue, hasPaidFalse);","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"        hasPaidTrue.markPaid();","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(hasPaidTrue, hasPaidFalse);","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"    public void markUnpaidTest() {","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"        hasPaidTrue.markUnpaid();","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(hasPaidFalse, hasPaidTrue);","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(hasPaidTrue.toString(), \"[has paid]\");","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(hasPaidFalse.toString(), \"[not yet paid]\");","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"    public void getBool() {","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(hasPaidFalse.getBool(), false);","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(hasPaidTrue.getBool(), true);","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"Oliverloo0909":44}},{"path":"src/test/java/seedu/address/model/person/IsPresentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"public class IsPresentTest {","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"    private IsPresent isPresentFalse \u003d new IsPresent();","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"    private IsPresent isPresentTrue \u003d new IsPresent(true);","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"    private IsPresent isPresentFalse1 \u003d new IsPresent(false);","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"    public void equals() {","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(isPresentFalse, isPresentFalse1);","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"        assertFalse(isPresentFalse.equals(isPresentTrue));","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"    public void markPresentTest() {","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"        isPresentFalse.markPresent();","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(isPresentTrue, isPresentFalse);","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"        isPresentTrue.markPresent();","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(isPresentTrue, isPresentFalse);","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"    public void markAbsentTest() {","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"        isPresentTrue.markAbsent();","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(isPresentFalse, isPresentTrue);","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(isPresentTrue.toString(), \"[present]\");","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(isPresentFalse.toString(), \"[absent]\");","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"    public void getBool() {","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(isPresentFalse.getBool(), false);","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(isPresentTrue.getBool(), true);","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"Oliverloo0909":44}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"        // different keywords -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Ali\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Al\", \"Bo\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"rol\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Cerol\").build()));","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"lice\", \"BOB\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"        // Fuzzy search","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"vid\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"David Li\").build()));","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"tricixg"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Ol\", \"Ro\", \"DRI\", \"IGO\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"tricixg"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Olivia Rodrigo\").build()));","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"tricixg"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Cerol\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"tricixg"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Boa\").build()));","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"jengoc415"},"content":"        // Keywords match phone, address and pay rate, but does not match name","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"jengoc415"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"Main\", \"Street\", \"10\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"jengoc415"},"content":"                .withAddress(\"Main Street\").withPayRate(\"10\").build()));","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"tricixg":16,"jengoc415":3,"-":64}},{"path":"src/test/java/seedu/address/model/person/PayRateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jengoc415"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"jengoc415"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"jengoc415"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"jengoc415"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"jengoc415"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"jengoc415"},"content":"public class PayRateTest {","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"jengoc415"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"jengoc415"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"jengoc415"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PayRate(null));","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"jengoc415"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"jengoc415"},"content":"    public void constructor_invalidPayRate_throwsIllegalArgumentException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"jengoc415"},"content":"        String invalidPayRate \u003d \"\";","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"jengoc415"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new PayRate(invalidPayRate));","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"jengoc415"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"jengoc415"},"content":"    public void isValidPayRate() {","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"jengoc415"},"content":"        // null pay rate","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"jengoc415"},"content":"        assertThrows(NullPointerException.class, () -\u003e PayRate.isValidPayRate(null));","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"jengoc415"},"content":"        // blank pay rate","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"jengoc415"},"content":"        assertFalse(PayRate.isValidPayRate(\"\")); // empty string","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"jengoc415"},"content":"        assertFalse(PayRate.isValidPayRate(\" \")); // spaces only","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"jengoc415"},"content":"        // invalid parts","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"jengoc415"},"content":"        assertFalse(PayRate.isValidPayRate(\"-1\")); // negative pay","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"jengoc415"},"content":"        assertFalse(PayRate.isValidPayRate(\"4.5\")); //  decimal pay","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"jengoc415"},"content":"        // valid email","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"jengoc415"},"content":"        assertTrue(PayRate.isValidPayRate(\"0\")); // underscore in local part","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"jengoc415"},"content":"        assertTrue(PayRate.isValidPayRate(\"45\")); // period in local part","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"jengoc415"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"jengoc415"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"jengoc415":39}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PAY_RATE_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"jengoc415"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Tempura-Person"},"content":"                .withPayRate(VALID_PAY_RATE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"jengoc415"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"tricixg"},"content":"        // different pay rate -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"jengoc415"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPayRate(VALID_PAY_RATE_BOB).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"tricixg":3,"jengoc415":3,"Tempura-Person":1,"-":85}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2017-12-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.Locale;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-04-03"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"    public void isValidLengthTagName() {","lastModifiedDate":"2023-04-03"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"        // null tag name","lastModifiedDate":"2023-04-03"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"        String tooLongTagName \u003d \"oooooooooooooooooooooooooooooooooooooooo\";","lastModifiedDate":"2023-04-03"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"        String acceptableTagName \u003d \"hello\";","lastModifiedDate":"2023-04-03"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(false, Tag.isValidLengthTagName(tooLongTagName));","lastModifiedDate":"2023-04-03"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(true, Tag.isValidLengthTagName(acceptableTagName));","lastModifiedDate":"2023-04-03"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"    public void getTagTest() {","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"        String tagName \u003d \"Hi\";","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"        Tag tag \u003d new Tag(tagName);","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(tagName.toLowerCase(Locale.ROOT), tag.getTag());","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"    public void isSameTagTest() {","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"Oliverloo0909"},"content":"        String tagName \u003d \"Hi\";","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Oliverloo0909"},"content":"        Tag tag1 \u003d new Tag(tagName);","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Oliverloo0909"},"content":"        Tag tag2 \u003d new Tag(tagName);","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(tag1, tag2);","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"Oliverloo0909":26,"-":26}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"jengoc415"},"content":"import seedu.address.model.person.PayRate;","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"jengoc415"},"content":"    private static final String INVALID_PAY_RATE \u003d \"-2\";","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"jengoc415"},"content":"    private static final String VALID_PAY_RATE \u003d BENSON.getPayRate().toString();","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_ADDRESS,","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"Tempura-Person"},"content":"                        VALID_PAY_RATE, VALID_TAGS);","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_ADDRESS,","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"Tempura-Person"},"content":"                VALID_PAY_RATE, VALID_TAGS);","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_ADDRESS,","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"Tempura-Person"},"content":"                        VALID_PAY_RATE, VALID_TAGS);","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"tricixg"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null,","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"Tempura-Person"},"content":"                VALID_ADDRESS, VALID_PAY_RATE, VALID_TAGS);","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"jengoc415"},"content":"    public void toModelType_invalidPayRate_throwsIllegalValueException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"tricixg"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"Tempura-Person"},"content":"                        VALID_ADDRESS, INVALID_PAY_RATE, VALID_TAGS);","lastModifiedDate":"2023-03-26"},{"lineNumber":80,"author":{"gitId":"jengoc415"},"content":"        String expectedMessage \u003d PayRate.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"jengoc415"},"content":"    public void toModelType_nullPayRate_throwsIllegalValueException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"tricixg"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_ADDRESS,","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"Tempura-Person"},"content":"                null, VALID_TAGS);","lastModifiedDate":"2023-03-26"},{"lineNumber":88,"author":{"gitId":"jengoc415"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, PayRate.class.getSimpleName());","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"tricixg"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"Tempura-Person"},"content":"                        INVALID_ADDRESS, VALID_PAY_RATE, VALID_TAGS);","lastModifiedDate":"2023-03-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"tricixg"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME,","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"Tempura-Person"},"content":"                VALID_PHONE, null, VALID_PAY_RATE, VALID_TAGS);","lastModifiedDate":"2023-03-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"tricixg"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-03-16"},{"lineNumber":115,"author":{"gitId":"Tempura-Person"},"content":"                        VALID_ADDRESS, VALID_PAY_RATE, invalidTags);","lastModifiedDate":"2023-03-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tricixg":9,"jengoc415":7,"Tempura-Person":9,"-":93}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"    //    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"    //    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"    //        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"    //                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"    //        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"    //        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"    //        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"    //","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"    //    }","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"    //    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"    //    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"    //        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"    //                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"    //        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"    //    }","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"    //    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"    //    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"    //        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"    //                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"    //        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"    //                dataFromFile::toModelType);","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"    //    }","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tricixg":22,"-":13}},{"path":"src/test/java/seedu/address/testutil/CalendarEventBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"/*","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import seedu.address.model.calendar.CalendarEvent;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"*/","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":" * Create CalendarEvents with Persons","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":" *//*","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"public class CalendarEventBuilder {","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"    private Person person;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Tempura-Person"},"content":"    */","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"     * @param person to be added to CalendarEvent","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"     * @return","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"Tempura-Person"},"content":"     *//*","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"    public CalendarEventBuilder withPerson(Person person) {","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"        this.person \u003d person;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"        return this;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"    public CalendarEvent build() {","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"        return new CalendarEvent(person);","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"Tempura-Person"},"content":"*/","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"tricixg":22,"Tempura-Person":8}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"import seedu.address.model.person.PayRate;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"jengoc415"},"content":"        descriptor.setPayRate(person.getPayRate());","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"jengoc415"},"content":"    public EditPersonDescriptorBuilder withPayRate(String payRate) {","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"jengoc415"},"content":"        descriptor.setPayRate(new PayRate(payRate));","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"jengoc415"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"tricixg":1,"jengoc415":4,"-":83}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"import seedu.address.model.person.PayRate;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"jengoc415"},"content":"    public static final String DEFAULT_PAY_RATE \u003d \"15\";","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"jengoc415"},"content":"    private PayRate payRate;","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"jengoc415"},"content":"        payRate \u003d new PayRate(DEFAULT_PAY_RATE);","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"jengoc415"},"content":"        payRate \u003d personToCopy.getPayRate();","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"jengoc415"},"content":"     * Sets the {@code Pay Rate} of the {@code Person} that we are building.","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"jengoc415"},"content":"    public PersonBuilder withPayRate(String payRate) {","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"jengoc415"},"content":"        this.payRate \u003d new PayRate(payRate);","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":93,"author":{"gitId":"Tempura-Person"},"content":"        return new Person(name, phone, address, payRate, tags);","lastModifiedDate":"2023-03-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"tricixg":2,"jengoc415":7,"Tempura-Person":1,"-":87}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PAY_RATE;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"jengoc415"},"content":"        sb.append(PREFIX_NAME + person.getName().formattedName + \" \");","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"jengoc415"},"content":"        sb.append(PREFIX_PAY_RATE + person.getPayRate().value + \" \");","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"jengoc415"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.formattedName).append(\" \"));","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"jengoc415"},"content":"        descriptor.getPayRate().ifPresent(payRate -\u003e sb.append(PREFIX_PAY_RATE).append(payRate.value).append(\" \"));","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"tricixg":2,"jengoc415":4,"-":57}},{"path":"src/test/java/seedu/address/testutil/TypicalCalendarEvents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"/*","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"import seedu.address.model.calendar.CalendarEvent;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":"*/","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":" * Create CalendarEvents based on Typical Persons","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":" *//*","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"public class TypicalCalendarEvents {","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"    public static final CalendarEvent MEETING_AMY \u003d new CalendarEventBuilder()","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"            .withPerson(TypicalPersons.AMY).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"    public static final CalendarEvent TUTORIAL_BOB \u003d new CalendarEventBuilder()","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"            .withPerson(TypicalPersons.BOB)","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"            .build();","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"    public static final CalendarEvent[] CALENDAR_EVENTS \u003d {MEETING_AMY, TUTORIAL_BOB};","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"    private TypicalCalendarEvents() {} // prevents instantiation","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"Tempura-Person"},"content":"    */","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"     * Returns an {@code ObservableList\u003cCalendarEvent\u003e} with all the typical calendar events.","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"Tempura-Person"},"content":"     *//*","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"    public static ObservableList\u003cCalendarEvent\u003e getTypicalCalendarEvents() {","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"        return Arrays.stream(CALENDAR_EVENTS)","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"                .collect(Collectors.toCollection(javafx.collections.FXCollections::observableArrayList));","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"Tempura-Person"},"content":"*/","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"tricixg":30,"Tempura-Person":8}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PAY_RATE_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PAY_RATE_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"jengoc415"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withPayRate(\"10\")","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Tempura-Person"},"content":"            .withPhone(\"94351253\").withTags(\"friends\").build();","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":35,"author":{"gitId":"Tempura-Person"},"content":"            .withPayRate(\"11\").withPhone(\"98765432\").withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"Tempura-Person"},"content":"            .withPayRate(\"12\").withAddress(\"wall street\").build();","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"Tempura-Person"},"content":"            .withPayRate(\"13\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"Tempura-Person"},"content":"            .withPayRate(\"14\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"Tempura-Person"},"content":"            .withPayRate(\"15\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"Tempura-Person"},"content":"            .withPayRate(\"16\").withAddress(\"4th street\").build();","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"            .withPayRate(\"17\").withAddress(\"little india\")","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"            .build();","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"            .withPayRate(\"18\").withAddress(\"chicago ave\")","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"            .build();","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"            .withPayRate(VALID_PAY_RATE_AMY)","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"Tempura-Person"},"content":"            .withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"            .withPayRate(VALID_PAY_RATE_BOB)","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"Tempura-Person"},"content":"            .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND,","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"jengoc415"},"content":"                VALID_TAG_FRIEND)","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"tricixg":13,"jengoc415":2,"Tempura-Person":9,"-":60}}]
