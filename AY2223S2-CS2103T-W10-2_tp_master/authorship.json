[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vaidyanaath"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-W10-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-W10-2/tp/actions/)","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"# Calidr","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":"Calidr is a **time-management and scheduling calendar application** that offers integrated support for university students to manage their classes, assignments, deadlines, and tasks from one place.","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"vaidyanaath"},"content":"## Target User","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"vaidyanaath"},"content":"Calidr is targeted towards NUS students who prefer using a _command-line interface (CLI)_ to manage their schedule and tasks.","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"vaidyanaath"},"content":"## Value Proposition","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"vaidyanaath"},"content":"Calidr is designed to help students manage their time and tasks more effectively. With Calidr, students can:","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"vaidyanaath"},"content":"* Add, edit, and delete tasks such as assignments, exams, and other important events.","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"vaidyanaath"},"content":"* Keep track of their tasks in a flexible calendar view, making it easy to see what needs to be done and when.","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"vaidyanaath"},"content":"* Tag their classes as lectures, tutorials, and assignments, helping them stay organized by course.","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"vaidyanaath"},"content":"* Set priority levels for tasks, helping them focus on what\u0027s most important.","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"vaidyanaath"},"content":"* Search for tasks quickly and easily, by name, description, date, priority, or other criteria.","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"vaidyanaath"},"content":"## Resources","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"vaidyanaath"},"content":"To learn more about Calidr, please visit our [Project Website](https://ay2223s2-cs2103t-w10-2.github.io/tp/), where you can find comprehensive information on the application and its features. Check out the [About Us](https://github.com/AY2223S2-CS2103T-W10-2/tp/blob/master/docs/AboutUs.md) page to get to know about our team.","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"vaidyanaath"},"content":"We have also provided user and developer guides to help you get started:","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"vaidyanaath"},"content":"* [User Guide](https://github.com/AY2223S2-CS2103T-W10-2/tp/blob/master/docs/UserGuide.md)","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"vaidyanaath"},"content":"* [Developer Guide](https://github.com/AY2223S2-CS2103T-W10-2/tp/blob/master/docs/DeveloperGuide.md)","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"vaidyanaath"},"content":"## Acknowledgements:  ","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"vaidyanaath"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"vaidyanaath":28,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"mainClassName \u003d \u0027seedu.calidr.Main\u0027","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"run {","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.12.7.1\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.9.8\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"Nafeij"},"content":"    implementation group: \u0027com.calendarfx\u0027, name: \u0027view\u0027, version: \u002711.12.5\u0027","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":74,"author":{"gitId":"Nafeij"},"content":"jar {","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"Nafeij"},"content":"    manifest {","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"Nafeij"},"content":"        attributes \u0027Main-Class\u0027: \u0027seedu.calidr.Main\u0027","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":81,"author":{"gitId":"Flash161203"},"content":"    archiveFileName \u003d \u0027calidr.jar\u0027","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Nafeij":11,"Flash161203":2,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"## Project Team","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"### Srinivasan Aarnav","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"\u003cimg src\u003d\"images/flash161203.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"[[GitHub](https://github.com/Flash161203)]","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"[[Portfolio](team/flash161203.md)]","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"* Role: Developer","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"* Responsibilities: Model Design","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"### Chandrasekaran Akash","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"\u003cimg src\u003d\"images/enigmatrix.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"[[GitHub](https://github.com/Enigmatrix)]","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"[[Portfolio](team/enigmatrix.md)]","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"* Responsibilities: Data \u0026 Storage","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"### Wang Jiefan","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"\u003cimg src\u003d\"images/nafeij.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"[[GitHub](https://github.com/Nafeij)]","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"[[Portfolio](team/nafeij.md)]","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"* Responsibilities: UI","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"Flash161203"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"Flash161203"},"content":"### Suresh Vaidyanaath","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"Flash161203"},"content":"\u003cimg src\u003d\"images/vaidyanaath.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"[[GitHub](https://github.com/vaidyanaath)]","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"Flash161203"},"content":"[[Portfolio](team/vaidyanaath.md)]","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"* Responsibilities: Command Design","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"Nafeij":5,"Flash161203":22,"-":31}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"Calidr is a **time-management and scheduling calendar application**, optimized for use via a Command Line Interface (","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"CLI) while still having the benefits of a Graphical User Interface (GUI). This application uses the AddressBook-Level3","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"project created by the [SE-EDU initiative](https://se-education.org/) as its framework.","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"## Implementation","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"This section describes how certain components and features are implemented.","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"### Calendar Panel","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"The `CalendarPanel` is the component that displays the calendar graphically, featuring several calendar formats. It is","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"read-only,","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"extends AB3\u0027s `UIPart`, replaces `PersonListPanel` and is implemented using the","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"open-source [CalendarFX](https://github.com/dlsc-software-consulting-gmbh/CalendarFX) framework.","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"The `CalendarPanel` is instantiated in `MainWindow` with a `DateControl` object. The `TaskEntry` class encapsulates all","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"the information of a task, including its description, date, time and tags; by extending the `Entry` class of CalendarFX,","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"it is able to be displayed on the `DateControl` object.","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"`CalendarPanel` implements the following operations:","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"- `updateCalendar(taskList)`— Updates the `CalendarView` object with a `ReadOnlyTaskList `.","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"- `showInformationDialog(entry)`— Spawns a dialog box with additional information of a `TaskEntry`.","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"- `setDate(date)`, `goToToday()`, `goToNext()`, `goToPrevious()`— Operations which change the date (or month) shown by","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"  the `CalendaraPanel`. The default date on startup is the current date.","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"- `setPage(view)`, `nextPage()`, — Changes the page (layout) of the `CalendarPanel` to a `DAY_VIEW`, `WEEK_VIEW`","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"  or `MONTH_VIEW`. The default view on startup is `MONTH_VIEW`.","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"\u003cimg src\u003d\"./images/CalendarPanelClassDiagram.png\" width\u003d\"100%\"/\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"The `CalendarPanel` holds three `DateControl` objects, each representing a different view of the calendar. Only one is","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"visible and managed by the `CalendarPanel` at any given time, and it is possible to switch between the three views.","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"`Event` and `ToDo`-derived `TaskEntry`s are each held in two different `Calendar` objects, so that they can be styled","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"differently.","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"The `CalendarPanel` is updated by calling `updateCalendar(taskList)` with a `ReadOnlyTaskList` object. This method is","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"invoked by `MainWindow` after a command is executed.","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"Below is a sequence diagram of the `updateCalendar(taskList)` operation:","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"\u003cimg src\u003d\"./images/CalendarViewSequenceDiagram.png\" width\u003d\"100%\"/\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"### Add ToDo Feature","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"This feature enables the user to add a to-do to the list of tasks. It is implemented in a way that mirrors the","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"_**Add Person**_ feature in AB3.","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"Flash161203"},"content":"The following class diagram shows the classes that help achieve this functionality.","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"Flash161203"},"content":"\u003cimg src\u003d\"./images/AddTodoClassDiagram.png\" width\u003d\"100%\"/\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"Nafeij"},"content":"The `AddTodoCommandParser` parses the required details, to create the `ToDo` to be added, and returns","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"Nafeij"},"content":"an `AddTodoCommand`, that is executed.","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"Flash161203"},"content":"The execution of an `AddTodoCommand` makes use of the following functions provided by the `Model`:","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"Flash161203"},"content":"- `Model#hasTask` - to prevent duplication of a to-do","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"Flash161203"},"content":"- `Model#addTask` - to add the `ToDo` to the `UniqueTaskList`","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"Flash161203"},"content":"The following sequence diagram shows how the _**Add ToDo**_ feature works.","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"Flash161203"},"content":"\u003cimg src\u003d\"./images/AddTodoSequenceDiagram.png\" width\u003d\"100%\"/\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"Flash161203"},"content":"#### Design Considerations","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"Nafeij"},"content":"The _**Add ToDo**_ feature is implemented in this way so as to make it similar to the analogous _**Add Person**_ feature","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"Nafeij"},"content":"of AB3. Since Calidr uses the same overall architecture as AB3, such an implementation was chosen.","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"Flash161203"},"content":"### Add Event Feature","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"Nafeij"},"content":"This feature enables the user to add an event to the list of tasks. It is implemented in a way that mirrors the","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"Nafeij"},"content":"_**Add Person**_ feature in AB3.","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"Flash161203"},"content":"The following class diagram shows the classes that help achieve this functionality.","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"Flash161203"},"content":"\u003cimg src\u003d\"./images/AddEventClassDiagram.png\" width\u003d\"100%\"/\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"Nafeij"},"content":"The `AddEventCommandParser` parses the required details, to create the `Event` to be added, and returns","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"Nafeij"},"content":"an `AddEventCommand`, that is executed.","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"Flash161203"},"content":"The execution of an `AddEventCommand` makes use of the following functions provided by the `Model`:","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"Flash161203"},"content":"- `Model#hasTask` - to prevent duplication of an event","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"Flash161203"},"content":"- `Model#addTask` - to add the `Event` to the `UniqueTaskList`","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"Flash161203"},"content":"The following sequence diagram shows how the _**Add Event**_ feature works.","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"Flash161203"},"content":"\u003cimg src\u003d\"./images/AddEventSequenceDiagram.png\" width\u003d\"100%\"/\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":100,"author":{"gitId":"Flash161203"},"content":"#### Design Considerations","lastModifiedDate":"2023-03-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"Nafeij"},"content":"The _**Add Event**_ feature is implemented in this way so as to make it similar to the analogous _**Add Person**_","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"Nafeij"},"content":"feature of AB3. Since Calidr uses the same overall architecture as AB3, such an implementation was chosen.","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"Flash161203"},"content":"### Delete Task Feature","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"Nafeij"},"content":"This feature enables the user to delete a task from the list of tasks. It is implemented in a way that mirrors the","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"Nafeij"},"content":"_**Delete Person**_ feature in AB3.","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"Flash161203"},"content":"The following class diagram shows the classes that help achieve this functionality.","lastModifiedDate":"2023-03-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":112,"author":{"gitId":"Flash161203"},"content":"\u003cimg src\u003d\"./images/DeleteTaskClassDiagram.png\" width\u003d\"100%\"/\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":114,"author":{"gitId":"Nafeij"},"content":"The `DeleteTaskCommandParser` parses the required details, to find the `Task` to be deleted, and returns","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"Nafeij"},"content":"a `DeleteTaskCommand`, that is executed.","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":117,"author":{"gitId":"Flash161203"},"content":"The execution of an `DeleteTaskCommand` makes use of the following functions provided by the `Model`:","lastModifiedDate":"2023-03-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"Flash161203"},"content":"- `Model#getFilteredTaskList` - to access the list of tasks, to find the task to be deleted","lastModifiedDate":"2023-03-24"},{"lineNumber":120,"author":{"gitId":"Flash161203"},"content":"- `Model#deleteTask` - to delete the `Task` from the `UniqueTaskList`","lastModifiedDate":"2023-03-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"Flash161203"},"content":"The following sequence diagram shows how the _**Delete Task**_ feature works.","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":124,"author":{"gitId":"Flash161203"},"content":"\u003cimg src\u003d\"./images/DeleteTaskSequenceDiagram.png\" width\u003d\"100%\"/\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":126,"author":{"gitId":"Flash161203"},"content":"#### Design Considerations","lastModifiedDate":"2023-03-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"Nafeij"},"content":"The _**Delete Task**_ feature is implemented in this way so as to make it similar to the analogous _**Delete Person**_","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"Nafeij"},"content":"feature of AB3. Since Calidr uses the same overall architecture as AB3, such an implementation was chosen.","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":131,"author":{"gitId":"vaidyanaath"},"content":"### Edit task feature","lastModifiedDate":"2023-03-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":133,"author":{"gitId":"vaidyanaath"},"content":"\u003cimg src\u003d\"./images/EditTaskClassDiagram.png\" width\u003d\"100%\"\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":135,"author":{"gitId":"Nafeij"},"content":"The `EditTaskCommand` class represents a command that edits an **existing** task. It takes in the index of the task in","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"Nafeij"},"content":"the task list to be edited and an `EditTaskDescriptor` object. The `EditTaskDescriptor` class is a helper class that","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"Nafeij"},"content":"stores the new details of the task to be updated. The `execute` method updates the task in the model with the new","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"Nafeij"},"content":"details and returns a `CommandResult`.","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":140,"author":{"gitId":"vaidyanaath"},"content":"#### Sequence diagram here","lastModifiedDate":"2023-03-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":142,"author":{"gitId":"Nafeij"},"content":"`EditTaskCommand` is facilitated by `EditTaskCommandParser` which parses and provides the fields entered by the user in","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"Nafeij"},"content":"the required format.","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":145,"author":{"gitId":"Nafeij"},"content":"Internally, the `EditTaskDescriptor` is casted to either a `EditTodoDescriptor` or `EditEventDescriptor` based on the","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"Nafeij"},"content":"type of task to be edited. The relevant information is used to create a new `Todo` or `Event` object with the updated","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"Nafeij"},"content":"fields.","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":149,"author":{"gitId":"Nafeij"},"content":"The newly created object replaces the task to be edited in the `TaskList`. Finally, an output is displayed with the","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"Nafeij"},"content":"status of the edit operation and the updated task details.","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":152,"author":{"gitId":"vaidyanaath"},"content":"\u003c!-- ","lastModifiedDate":"2023-03-24"},{"lineNumber":153,"author":{"gitId":"vaidyanaath"},"content":"To provide an example of how this feature works, consider the following usage scenario. --\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2023-03-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"vaidyanaath"},"content":"**Aspect: How edit command executes**","lastModifiedDate":"2023-03-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":159,"author":{"gitId":"vaidyanaath"},"content":"* **Alternative 1 (current choice):** Overwrite all existing task fields if any of them is modified.","lastModifiedDate":"2023-03-24"},{"lineNumber":160,"author":{"gitId":"vaidyanaath"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2023-03-24"},{"lineNumber":161,"author":{"gitId":"vaidyanaath"},"content":"    * Cons: Might be inefficient in terms of resource usage and possibly cause delays","lastModifiedDate":"2023-03-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":163,"author":{"gitId":"vaidyanaath"},"content":"* **Alternative 2:** Only update the task fields that were changed.","lastModifiedDate":"2023-03-24"},{"lineNumber":164,"author":{"gitId":"vaidyanaath"},"content":"    * Pros: Will use less resources and time, thus improving system performance.","lastModifiedDate":"2023-03-24"},{"lineNumber":165,"author":{"gitId":"vaidyanaath"},"content":"    * Cons: Requires more complex implementation logic to track and update the modified fields.","lastModifiedDate":"2023-03-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":167,"author":{"gitId":"Nafeij"},"content":"## Appendix","lastModifiedDate":"2023-02-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":169,"author":{"gitId":"Nafeij"},"content":"### Requirements","lastModifiedDate":"2023-02-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":171,"author":{"gitId":"Nafeij"},"content":"#### Target User Profile","lastModifiedDate":"2023-02-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"Nafeij"},"content":"* NUS staff or student","lastModifiedDate":"2023-02-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"Nafeij"},"content":"#### Value Proposition","lastModifiedDate":"2023-02-25"},{"lineNumber":180,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":181,"author":{"gitId":"Nafeij"},"content":"* Text-based timetable management","lastModifiedDate":"2023-02-25"},{"lineNumber":182,"author":{"gitId":"Nafeij"},"content":"    * Add todos and events","lastModifiedDate":"2023-02-25"},{"lineNumber":183,"author":{"gitId":"Nafeij"},"content":"    * Add reminders to todo/event","lastModifiedDate":"2023-02-25"},{"lineNumber":184,"author":{"gitId":"Nafeij"},"content":"    * Search","lastModifiedDate":"2023-02-25"},{"lineNumber":185,"author":{"gitId":"Nafeij"},"content":"    * /view day","lastModifiedDate":"2023-02-25"},{"lineNumber":186,"author":{"gitId":"Nafeij"},"content":"    * /view month","lastModifiedDate":"2023-02-25"},{"lineNumber":187,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":188,"author":{"gitId":"Nafeij"},"content":"#### User Stories","lastModifiedDate":"2023-02-25"},{"lineNumber":189,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":190,"author":{"gitId":"Nafeij"},"content":"| As a ...                         | I want to ...                                                                                         | So that I can ...                                                                                                                                                     | Priority |","lastModifiedDate":"2023-02-25"},{"lineNumber":191,"author":{"gitId":"Nafeij"},"content":"|----------------------------------|-------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------|","lastModifiedDate":"2023-03-19"},{"lineNumber":192,"author":{"gitId":"Nafeij"},"content":"| NUS staff/student                | add my classes and todos to my calendar                                                               | keep track of my daily schedule.                                                                                                                                      | *High*   |","lastModifiedDate":"2023-03-19"},{"lineNumber":193,"author":{"gitId":"Nafeij"},"content":"| NUS staff/student                | add a title to an event/todo during it\u0027s creation                                                     | distinguish events/todos                                                                                                                                              | *High*   |","lastModifiedDate":"2023-03-19"},{"lineNumber":194,"author":{"gitId":"Nafeij"},"content":"| NUS staff/student                | import/export my calendar as an iCalendar (`.ics`) file                                               | save it as an offline copy                                                                                                                                            | *High*   |","lastModifiedDate":"2023-03-19"},{"lineNumber":195,"author":{"gitId":"Nafeij"},"content":"| NUS student                      | set notifications for upcoming exams and assignments                                                  | not forget to complete them on time.                                                                                                                                  | *High*   |","lastModifiedDate":"2023-03-19"},{"lineNumber":196,"author":{"gitId":"Nafeij"},"content":"| NUS student with a busy schedule | view my calendar in different views (daily, weekly, monthly)                                          | get a comprehensive view of my schedule.                                                                                                                              | *Mid*    |","lastModifiedDate":"2023-03-19"},{"lineNumber":197,"author":{"gitId":"Nafeij"},"content":"| NUS staff/student                | search/sort for todos \u003cul\u003e\u003cli\u003eby description\u003c/li\u003e\u003cli\u003eby a range of dates\u003c/li\u003e\u003cli\u003eby recency\u003c/li\u003e\u003c/ul\u003e | \u003cul\u003e\u003cli\u003elook for specific or related todos for editing\u003c/li\u003e\u003cli\u003echeck my availability during holidays/exam weeks\u003c/li\u003e\u003cli\u003eidentify todos with higher priority\u003c/li\u003e\u003c/ul\u003e | *High*   |","lastModifiedDate":"2023-03-19"},{"lineNumber":198,"author":{"gitId":"Nafeij"},"content":"| NUS staff/student                | set (during creation) the duration for a certain event                                                | manage todos that occur over a span of time.                                                                                                                          | *High*   |","lastModifiedDate":"2023-03-19"},{"lineNumber":199,"author":{"gitId":"Nafeij"},"content":"| NUS staff/student                | change the duration of a event after its creation                                                     | make changes if I make mistakes                                                                                                                                       | *Mid*    |","lastModifiedDate":"2023-03-19"},{"lineNumber":200,"author":{"gitId":"Nafeij"},"content":"| NUS staff/student                | set tags on events and todos                                                                          | easily find them again                                                                                                                                                | *Mid*    |","lastModifiedDate":"2023-03-19"},{"lineNumber":201,"author":{"gitId":"Nafeij"},"content":"| NUS staff/student                | add a priority to todo                                                                                | keep track of them easily                                                                                                                                             | *Mid*    |","lastModifiedDate":"2023-03-19"},{"lineNumber":202,"author":{"gitId":"Nafeij"},"content":"| NUS staff/student                | be able to change the name of a event/todo after its creation                                         | -                                                                                                                                                                     | *Low*    |","lastModifiedDate":"2023-03-19"},{"lineNumber":203,"author":{"gitId":"Nafeij"},"content":"| NUS staff/student                | set a recurrence for a todo/event                                                                     | save time on repeating todos                                                                                                                                          | *Low*    |","lastModifiedDate":"2023-03-19"},{"lineNumber":204,"author":{"gitId":"Nafeij"},"content":"| NUS staff/student                | keep track of my todos in a list                                                                      | refer to them in a convenient fashion                                                                                                                                 | *High*   |","lastModifiedDate":"2023-03-19"},{"lineNumber":205,"author":{"gitId":"Nafeij"},"content":"| NUS staff/student                | add notes or comments to each event in my calendar                                                    | note down non-critical but useful information.                                                                                                                        | *Low*    |","lastModifiedDate":"2023-03-19"},{"lineNumber":206,"author":{"gitId":"Nafeij"},"content":"| NUS staff/student                | be able to add a description to a todo/event                                                          | keep track of additional details                                                                                                                                      | *High*   |","lastModifiedDate":"2023-03-19"},{"lineNumber":207,"author":{"gitId":"Nafeij"},"content":"| NUS staff/student                | add an optional location to my todos                                                                  | record specific addresses if it is a place I need to be.                                                                                                              | *Low*    |","lastModifiedDate":"2023-03-19"},{"lineNumber":208,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":209,"author":{"gitId":"Nafeij"},"content":"### Use Cases","lastModifiedDate":"2023-02-25"},{"lineNumber":210,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":211,"author":{"gitId":"Nafeij"},"content":"(For all use cases below, the System is Calidr and the Actor is the user, unless specified otherwise)","lastModifiedDate":"2023-02-25"},{"lineNumber":212,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":213,"author":{"gitId":"Nafeij"},"content":"#### Change the duration of an event","lastModifiedDate":"2023-02-25"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"Nafeij"},"content":"1. User requests to list events","lastModifiedDate":"2023-02-25"},{"lineNumber":218,"author":{"gitId":"Nafeij"},"content":"1. Calidr shows a list of events","lastModifiedDate":"2023-02-25"},{"lineNumber":219,"author":{"gitId":"Nafeij"},"content":"1. User requests to query a specific event in the list by index and overwrite the date fields with a new value","lastModifiedDate":"2023-02-25"},{"lineNumber":220,"author":{"gitId":"Nafeij"},"content":"1. Calidr modifies and saves the new dates for the event.","lastModifiedDate":"2023-02-25"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"Nafeij"},"content":"- 2a. The list is empty.","lastModifiedDate":"2023-02-25"},{"lineNumber":226,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"Nafeij"},"content":"- 3a. The given index is invalid.","lastModifiedDate":"2023-02-25"},{"lineNumber":228,"author":{"gitId":"Nafeij"},"content":"- 3a1. Calidr shows an error message.","lastModifiedDate":"2023-02-25"},{"lineNumber":229,"author":{"gitId":"-"},"content":"  Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"Nafeij"},"content":"### Non-functional requirements","lastModifiedDate":"2023-02-25"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"Nafeij"},"content":"1. Should work on any mainstream OS (in particular file I/O) with Java 11 installed.","lastModifiedDate":"2023-02-25"},{"lineNumber":234,"author":{"gitId":"Nafeij"},"content":"2. Should be able to manage 1000 items without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-02-25"},{"lineNumber":235,"author":{"gitId":"Nafeij"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2023-03-28"},{"lineNumber":236,"author":{"gitId":"Nafeij"},"content":"   able to accomplish most of the todos faster using commands than using the mouse.","lastModifiedDate":"2023-03-28"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"Nafeij"},"content":"1. **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2023-02-25"},{"lineNumber":241,"author":{"gitId":"Flash161203"},"content":"1. **Tasks**: Elements on a calendar.","lastModifiedDate":"2023-03-24"},{"lineNumber":242,"author":{"gitId":"Nafeij"},"content":"   a. **ToDos**: Items with a single associated date-time (e.g. a due date) and status (done or not done).","lastModifiedDate":"2023-02-25"},{"lineNumber":243,"author":{"gitId":"Nafeij"},"content":"   b. **Events**: Items with two associated date-times.","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"Nafeij":113,"Flash161203":28,"-":90,"vaidyanaath":12}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"   1. Run the `seedu.calidr.Main` and try a few commands.","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"Flash161203":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"   e.g. `seedu.calidr.commons.StringUtilTest`","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"   e.g. `seedu.calidr.storage.StorageManagerTest`","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"   e.g. `seedu.calidr.logic.LogicManagerTest`","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Flash161203":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"Calidr is a **time-management and scheduling calendar application** for university students, optimized for use via a","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). Calidr helps you","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"manage your time and tasks more effectively.","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"1. Download the latest `calidr.jar`, available [here](https://github.com/AY2223S2-CS2103T-W10-2/tp/releases).","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"1. Copy the file to the folder you want to use as the _home directory_ for your Calidr.","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"1. Double click the `calidr.jar` file.\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"   A GUI similar to the below should appear in a few seconds.\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"1. Type the command in the command box at the top and press `Enter` to execute it.","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"   E.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"1. Refer to the [Features](#paperclip-features) below for details of each command.","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"Enigmatrix"},"content":"## :mag: Definitions","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"Enigmatrix"},"content":"### Command definitions","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Enigmatrix"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"Enigmatrix"},"content":"🕮 This user guide uses a modifided version of the \u003ca href\u003d\"http://docopt.org/\"\u003edocopt\u003c/a\u003e command description language.","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"Enigmatrix"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"Enigmatrix"},"content":"1. We will use the word \"**string**\" to describe any general sequence of characters.","lastModifiedDate":"2023-02-21"},{"lineNumber":44,"author":{"gitId":"Enigmatrix"},"content":"1. We will use the word \"**word**\" to describe a sequence of characters terminated by a whitespace.","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"1. Words ending with a backslash `/` are interpreted as _compulsory_, _position-independent_ **options**.","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"   `t/`,`by/`,`from/`,`to/`","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"1. Uppercase words denote the position of **arguments**.","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"Enigmatrix"},"content":"1. All other words that do not follow the above conventions are interpreted as **commands** and **subcommands**.","lastModifiedDate":"2023-02-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"   `help`","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"Enigmatrix"},"content":"3. Options can have arguments specified after a whitespace. Together they are refered to as a **field**.","lastModifiedDate":"2023-02-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"   `todo t/ \u003ctitle\u003e by/ \u003cdate-time\u003e`","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"1. An option\u0027s arguments, when bracketed by \"\u003c\" and \"\u003e\", can be **whitespace-containing** strings. They are terminated","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"   by a newline or a different option, matching *leftmost-first*","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"   `event t/ \u003ctitle\u003e from/ \u003cstart-date-time\u003e to/ \u003cend-date-time\u003e`","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"1. Else, if the arguments are in uppercase, they must be **strictly words** terminated by whitespace","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"Enigmatrix"},"content":"   `delete TASK_INDEX`","lastModifiedDate":"2023-02-21"},{"lineNumber":62,"author":{"gitId":"Nafeij"},"content":"1. Some commands may accept a single *positional* argument string, known as a **main argument**, beginning after a","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"Nafeij"},"content":"   whitespace following the command itself and terminating at a newline or the first option, matching *leftmost-first*.","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"Nafeij"},"content":"   `edit TASK_INDEX t/ \u003ctitle\u003e`","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"Enigmatrix"},"content":"1. Options (and arguments) bracketed with \"\\[\" and  \"\\]\" are **optional**.","lastModifiedDate":"2023-02-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"Nafeij"},"content":"   `[d/ \u003cdescription\u003e] [p/ \u003cpriority\u003e]`","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"Nafeij"},"content":"1. Ellipsis \"...\" specify that the argument (or field) to the left could be **repeated** multiple times:","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"Nafeij"},"content":"   `[tag/ \u003ctag\u003e]...`","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"Nafeij"},"content":"1. *All elements are required by default*, if not included in brackets \"\\[ \\]\". However, sometimes it is necessary to","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"Nafeij"},"content":"   mark elements as **required** explicitly with parentheses \"( )\". For example, when you need to group","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"Nafeij"},"content":"   mutually-inclusive elements (if *one* element is present, then *another* one is required):","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"Enigmatrix"},"content":"   `edit TASK_INDEX (OPTION \u003cargument\u003e)...`","lastModifiedDate":"2023-02-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"Enigmatrix"},"content":"### Data terminology","lastModifiedDate":"2023-02-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"Nafeij"},"content":"1. Elements on a calendar are refered to as **Tasks**.","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"Nafeij"},"content":"1. Tasks must have a **title**.","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"Nafeij"},"content":"1. A task can have an optional **description**, **location**, and **comment**.","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"Nafeij"},"content":"1. Tasks have an associated **priority**.","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"Nafeij"},"content":"    1. Priority is one of `HIGH`, `MEDIUM` or `LOW`.","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"Nafeij"},"content":"    3. Tasks have a default priority of `MEDIUM`.","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"Nafeij"},"content":"1. Tasks must either be **ToDos** or **Events**.","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"Nafeij"},"content":"    1. ToDos have a single associated **date-time** (e.g. a due date).","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"Nafeij"},"content":"        1. ToDos also have an associated **status**.","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"Nafeij"},"content":"            1. Status is one of `DONE` or `NOT DONE`.","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"Nafeij"},"content":"            1. ToDos have a default status of `NOT DONE`.","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"Nafeij"},"content":"    1. Events have *two* associated date-times (e.g a start and end-date).","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"Nafeij"},"content":"1. Dates are specified in the format `DD-MM-YYYY`. Date-times are specified in the format `DD-MM-YYYY HHMM`. Calidr also","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"Nafeij"},"content":"   accepts and automatically parser the following keywords as date-times:","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"Nafeij"},"content":"   `today`, `tomorrow`, `next week`, `next month`, `next year`","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"Nafeij"},"content":"1. Tasks are uniquely identified by their **task index**. This is given in the list panel, and is also used to refer to","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"Nafeij"},"content":"   tasks in commands.","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"Nafeij"},"content":"### UI terminology","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"Nafeij"},"content":"![Ui](images/Ui_annotated.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"Nafeij"},"content":"a. **Calendar panel**: The calendar panel is where you can view your tasks graphically. Tasks are displayed as coloured","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"Nafeij"},"content":"blocks, with green being **ToDos** and blue being **Events**. The calendar panel also displays the _focused_ date and","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"Nafeij"},"content":"time, which [may not be the current time](#viewing-a-different-date-view).","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":107,"author":{"gitId":"Nafeij"},"content":"b. **Command box**: The command box is where you can type in commands to Calidr. Pressing `Enter` will execute the","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"Nafeij"},"content":"command.","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"Nafeij"},"content":"c. **List panel**: The list panel is where Calidr will display the list of tasks that match your command. This usually","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"Nafeij"},"content":"just shows all the tasks in the calendar, but can","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"Nafeij"},"content":"be [filtered by title, date, or other criteria](#searching-and-filtering-for-tasks-search).","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"Nafeij"},"content":"d. **Result panel**: The result panel is where Calidr will display the result of your command, including any errors.","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":116,"author":{"gitId":"Enigmatrix"},"content":"## :paperclip: Features","lastModifiedDate":"2023-02-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"Enigmatrix"},"content":"#### View help: `help`","lastModifiedDate":"2023-02-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"Enigmatrix"},"content":"The help page provides information about how to use the application and its features.","lastModifiedDate":"2023-02-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"Nafeij"},"content":"#### Adding tasks","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"Nafeij"},"content":"Please refer to the terminology [specified above](#data-terminology) if you are unfamiliar with the terms used.","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"Enigmatrix"},"content":"\u003c!-- end of the list --\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"Enigmatrix"},"content":"- #### Adding a ToDo: `todo`","lastModifiedDate":"2023-02-21"},{"lineNumber":130,"author":{"gitId":"Nafeij"},"content":"  Adds a new ToDo with the given title, date-time, description, location and tags to the list of tasks.","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"Nafeij"},"content":"  Format: `todo t/ \u003ctitle\u003e by/ \u003cdate-time\u003e [d/ \u003cdescription\u003e] [l/ \u003clocation\u003e] [p/ \u003cpriority\u003e] [tag/ \u003ctag\u003e]...`","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"Nafeij"},"content":"  Examples:","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"Nafeij"},"content":"    - `todo t/ CS2103T tP by/ 31-03-2023 2359`","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"Nafeij"},"content":"    - `todo t/ CS2103T tP by/ today d/ Complete the tP l/ Online p/ HIGH tag/ CS2103T tag/ tP`","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"Enigmatrix"},"content":"- #### Adding an Event: `event`","lastModifiedDate":"2023-02-21"},{"lineNumber":139,"author":{"gitId":"Nafeij"},"content":"  Adds a new event with the given title, starting date-time, ending date-time, description, location and tags to the","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"Nafeij"},"content":"  list of tasks.","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"Nafeij"},"content":"  Format: `event t/ \u003ctitle\u003e from/ \u003cstart-date-time\u003e to/ \u003cend-date-time\u003e [d/ \u003cdescription\u003e] [l/ \u003clocation\u003e] [p/ \u003cpriority\u003e] [tag/ \u003ctag\u003e]...`","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"Nafeij"},"content":"  Examples:","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"Nafeij"},"content":"    - `event t/ CS2103T Lecture from/ 31-03-2023 1400 to/ 31-03-2023 1600`","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"Nafeij"},"content":"    - `event t/ CS2103T Lecture from/ today to/ 31-03-2023 1600 d/ Lecture on UML l/ Online p/ HIGH tag/ CS2103T tag/ Lecture`","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"Nafeij"},"content":"#### Searching and filtering for tasks: `search`","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"Nafeij"},"content":"Searches for tasks with matching keywords in their fields. Filtered tasks are displayed in a list to the side.","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"Nafeij"},"content":"\u003c!--- TODO --\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"Nafeij"},"content":"#### Deleting a task: `delete`","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"Nafeij"},"content":"Deletes one or more tasks from the calendar.","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"Nafeij"},"content":"Format: `delete TASK_INDEX`","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"Nafeij"},"content":"Example: `delete 2`","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"Nafeij"},"content":"#### Editing task details: `edit`","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"Nafeij"},"content":"Edits information pertaining to a particular task given by the index.","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"Enigmatrix"},"content":"Format: `edit TASK_INDEX (OPTION \u003cargument\u003e)...`","lastModifiedDate":"2023-02-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"Nafeij"},"content":"Example: for a task which is an event of index 4,","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"Nafeij"},"content":"`edit 4 from/ 05-03-2023 2000 to/ 06-03-2023 2000`","lastModifiedDate":"2023-03-28"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":171,"author":{"gitId":"Nafeij"},"content":"#### Switching to a different layout: `page`","lastModifiedDate":"2023-03-28"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":173,"author":{"gitId":"Nafeij"},"content":"By default, the calendar panel is displayed in a monthly-layout. A weekly or daily-layout is supported if you wish to","lastModifiedDate":"2023-03-28"},{"lineNumber":174,"author":{"gitId":"Nafeij"},"content":"view more or less tasks.","lastModifiedDate":"2023-03-28"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":176,"author":{"gitId":"Nafeij"},"content":"Format: `page LAYOUT`, where `LAYOUT` is one of `month`, `week`, or `day`.","lastModifiedDate":"2023-03-28"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":178,"author":{"gitId":"Nafeij"},"content":"Example: `page week`","lastModifiedDate":"2023-03-28"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":180,"author":{"gitId":"Nafeij"},"content":"![A comparison of the three layouts](images/Ui_pages.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":182,"author":{"gitId":"Nafeij"},"content":"#### Viewing a different date: `view`","lastModifiedDate":"2023-03-28"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":184,"author":{"gitId":"Nafeij"},"content":"By default, the calendar panel is focused on the current date. When you wish to view a different month, week or day, you","lastModifiedDate":"2023-03-28"},{"lineNumber":185,"author":{"gitId":"Nafeij"},"content":"can use the `view` command.","lastModifiedDate":"2023-03-28"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":187,"author":{"gitId":"Nafeij"},"content":"Format: `view \u003cdate-time\u003e`.","lastModifiedDate":"2023-03-28"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"Nafeij"},"content":"Example:","lastModifiedDate":"2023-03-28"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"Nafeij"},"content":"- `view 01-03-2023`","lastModifiedDate":"2023-03-28"},{"lineNumber":192,"author":{"gitId":"Nafeij"},"content":"- `view next week`","lastModifiedDate":"2023-03-28"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":194,"author":{"gitId":"Nafeij"},"content":"#### Showing all the details of a task: `show`","lastModifiedDate":"2023-03-28"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":196,"author":{"gitId":"Nafeij"},"content":"The GUI displays a condensed representation of tasks in both the calendar and list panels. This commmand shows all the","lastModifiedDate":"2023-03-28"},{"lineNumber":197,"author":{"gitId":"Nafeij"},"content":"details of a particular task, including its description, location and tags, in a pop-up dialog.","lastModifiedDate":"2023-03-28"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":199,"author":{"gitId":"Nafeij"},"content":"Format: `show TASK_INDEX`","lastModifiedDate":"2023-03-28"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":201,"author":{"gitId":"Nafeij"},"content":"Example: `show 2`","lastModifiedDate":"2023-03-28"},{"lineNumber":202,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":203,"author":{"gitId":"Nafeij"},"content":"![A pop-up dialog showing the details of a task](images/Ui_popup.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"Enigmatrix"},"content":"## Command summary","lastModifiedDate":"2023-02-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"Nafeij"},"content":"| Action          | Format, Examples                                                                                                                                                                                                                                                     |","lastModifiedDate":"2023-02-27"},{"lineNumber":208,"author":{"gitId":"Nafeij"},"content":"|-----------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-28"},{"lineNumber":209,"author":{"gitId":"Nafeij"},"content":"| **Add Todo**    | `todo t/ \u003ctitle\u003e by/ \u003cdate-time\u003e [d/ \u003cdescription\u003e] [l/ \u003clocation\u003e] [p/ \u003cpriority\u003e] [tag/ \u003ctag\u003e]...` \u003cbr\u003e e.g., `event t/ CS2103T Lecture from/ today to/ 31-03-2023 1600 d/ Lecture on UML l/ Online p/ HIGH tag/ CS2103T tag/ Lecture`                             |","lastModifiedDate":"2023-03-28"},{"lineNumber":210,"author":{"gitId":"Nafeij"},"content":"| **Add Event**   | `event t/ \u003ctitle\u003e from/ \u003cstart-date-time\u003e to/ \u003cend-date-time\u003e [d/ \u003cdescription\u003e] [l/ \u003clocation\u003e] [p/ \u003cpriority\u003e] [tag/ \u003ctag\u003e]...` \u003cbr\u003e e.g. `event t/ CS2103T Lecture from/ today to/ 31-03-2023 1600 d/ Lecture on UML l/ Online p/ HIGH tag/ CS2103T tag/ Lecture` |","lastModifiedDate":"2023-03-28"},{"lineNumber":211,"author":{"gitId":"Nafeij"},"content":"| **Delete**      | `delete TASK_INDEX`\u003cbr\u003e e.g., `delete 2`                                                                                                                                                                                                                             |","lastModifiedDate":"2023-03-28"},{"lineNumber":212,"author":{"gitId":"Nafeij"},"content":"| **Edit**        | `edit TASK_INDEX (OPTION \u003cargument\u003e) ...`\u003cbr\u003e e.g.,`edit 4 from/ 05-03-2023 2000 to/ 06-03-2023 2000`                                                                                                                                                                |","lastModifiedDate":"2023-03-28"},{"lineNumber":213,"author":{"gitId":"Nafeij"},"content":"| **Help**        | `help`                                                                                                                                                                                                                                                               |","lastModifiedDate":"2023-02-27"},{"lineNumber":214,"author":{"gitId":"Nafeij"},"content":"| **Switch Page** | `page LAYOUT`\u003cbr\u003e e.g., `page day`                                                                                                                                                                                                                                   |","lastModifiedDate":"2023-03-28"},{"lineNumber":215,"author":{"gitId":"Nafeij"},"content":"| **View Date**   | `view \u003cdate-time\u003e`\u003cbr\u003e e.g., `view next week`                                                                                                                                                                                                                        |","lastModifiedDate":"2023-03-28"},{"lineNumber":216,"author":{"gitId":"Nafeij"},"content":"| **Show Task**   | `show TASK_INDEX`\u003cbr\u003e e.g., `show 1`                                                                                                                                                                                                                                 |","lastModifiedDate":"2023-03-28"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"Enigmatrix"},"content":"### Other","lastModifiedDate":"2023-02-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"Nafeij"},"content":"#### Saving your data","lastModifiedDate":"2023-03-28"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"Nafeij"},"content":"Calidr calendar information is saved in the hard disk automatically after any modification command. The data is stored","lastModifiedDate":"2023-03-28"},{"lineNumber":223,"author":{"gitId":"Nafeij"},"content":"as an [ics file](https://www.ical4j.org/).","lastModifiedDate":"2023-03-28"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":225,"author":{"gitId":"Enigmatrix"},"content":"#### Editing the data file","lastModifiedDate":"2023-02-21"},{"lineNumber":226,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":227,"author":{"gitId":"Nafeij"},"content":"The `cal.ics` save file is located in the directory the program resides in (i.e. `[root_directory]/cal.ics`). Advanced","lastModifiedDate":"2023-03-28"},{"lineNumber":228,"author":{"gitId":"Nafeij"},"content":"users are welcome to manipulate data directly by editing the save file.","lastModifiedDate":"2023-03-28"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":231,"author":{"gitId":"Enigmatrix"},"content":"    If your changes to the save file makes its format invalid, Calidr will discard all data and start with an empty data file the next time it\u0027s run.","lastModifiedDate":"2023-02-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"Nafeij"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains","lastModifiedDate":"2023-03-28"},{"lineNumber":241,"author":{"gitId":"Nafeij"},"content":"the data of your previous Calidr home directory.","lastModifiedDate":"2023-03-28"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Enigmatrix":24,"Nafeij":124,"-":96}},{"path":"docs/assets/css/style.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"# Only the main Sass file needs front matter (the dashes are enough)","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"@import \"minima/skins/{{ site.minima.skin | default: \u0027classic\u0027 }}\",","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\"minima/initialize\";","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-01"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":".post-content h1, .post-content h2, .post-content h3 {","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"  margin-top: 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":".icon {","lastModifiedDate":"2020-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  height: 21px;","lastModifiedDate":"2020-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  width: 21px","lastModifiedDate":"2020-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-01"}],"authorContributionMap":{"Nafeij":4,"-":11}},{"path":"docs/diagrams/AddEventClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"!include style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"package logic {","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"package commands {","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"Class \"{abstract}\\nCommand\" as Command #9AEA54","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"Class AddEventCommand #61B417 extends Command","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"package parser {","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser #18F2D8","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"Class AddEventCommandParser #15B4A1 implements Parser","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Flash161203":18}},{"path":"docs/diagrams/AddEventSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"!include style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"participant \":CalidrParser\" as CalidrParser LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"participant \":AddEventCommandParser\" as AddEventCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"participant \":AddEventCommand\" as AddEventCommand LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"participant \":Model\" as Model MODEL_COLOR_T2","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"[-\u003e LogicManager : execute(\"\u003ccommand to add an event\u003e\")","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"activate LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"LogicManager -\u003e CalidrParser : parseCommand(\"\u003ccommand to add an event\u003e\")","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"activate CalidrParser","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"create AddEventCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"CalidrParser -\u003e AddEventCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"activate AddEventCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"AddEventCommandParser --\u003e CalidrParser","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"deactivate AddEventCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"CalidrParser -\u003e AddEventCommandParser : parse(\"\u003ccommand to add an event\u003e\")","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"activate AddEventCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"create AddEventCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"AddEventCommandParser -\u003e AddEventCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"activate AddEventCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"AddEventCommand --\u003e AddEventCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"deactivate AddEventCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"AddEventCommandParser --\u003e CalidrParser : command to add the event","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"deactivate AddEventCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"CalidrParser --\u003e LogicManager : command to add the event","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"deactivate CalidrParser","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"Flash161203"},"content":"LogicManager -\u003e AddEventCommand : execute()","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"Flash161203"},"content":"activate AddEventCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"Flash161203"},"content":"AddEventCommand -\u003e Model : hasTask()","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"Flash161203"},"content":"activate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"Flash161203"},"content":"Model --\u003e AddEventCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"Flash161203"},"content":"deactivate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"Flash161203"},"content":"AddEventCommand -\u003e Model : addTask()","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"Flash161203"},"content":"activate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"deactivate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"Flash161203"},"content":"create CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"Flash161203"},"content":"AddEventCommand -\u003e CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"Flash161203"},"content":"activate CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"Flash161203"},"content":"CommandResult --\u003e AddEventCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"Flash161203"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"Flash161203"},"content":"AddEventCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"Flash161203"},"content":"deactivate AddEventCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"Flash161203"},"content":"[\u003c-- LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"Flash161203"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"Flash161203"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Flash161203":68}},{"path":"docs/diagrams/AddTodoClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"!include style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"package logic {","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"package commands {","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"Class \"{abstract}\\nCommand\" as Command #9AEA54","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"Class AddTodoCommand #61B417 extends Command","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"package parser {","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser #18F2D8","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"Class AddTodoCommandParser #15B4A1 implements Parser","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Flash161203":18}},{"path":"docs/diagrams/AddTodoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"!include style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"participant \":CalidrParser\" as CalidrParser LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"participant \":AddTodoCommandParser\" as AddTodoCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"participant \":AddTodoCommand\" as AddTodoCommand LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"participant \":Model\" as Model MODEL_COLOR_T2","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"[-\u003e LogicManager : execute(\"command to add a to-do\")","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"activate LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"LogicManager -\u003e CalidrParser : parseCommand(\"command to add a to-do\")","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"activate CalidrParser","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"create AddTodoCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"CalidrParser -\u003e AddTodoCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"activate AddTodoCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"AddTodoCommandParser --\u003e CalidrParser","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"deactivate AddTodoCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"CalidrParser -\u003e AddTodoCommandParser : parse(\"command to add a to-do\")","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"activate AddTodoCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"create AddTodoCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"AddTodoCommandParser -\u003e AddTodoCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"activate AddTodoCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"AddTodoCommand --\u003e AddTodoCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"deactivate AddTodoCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"AddTodoCommandParser --\u003e CalidrParser : command to add the to-do","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"deactivate AddTodoCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"CalidrParser --\u003e LogicManager : command to add the to-do","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"deactivate CalidrParser","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"Flash161203"},"content":"LogicManager -\u003e AddTodoCommand : execute()","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"Flash161203"},"content":"activate AddTodoCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"Flash161203"},"content":"AddTodoCommand -\u003e Model : hasTask()","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"Flash161203"},"content":"activate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"Flash161203"},"content":"Model --\u003e AddTodoCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"Flash161203"},"content":"deactivate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"Flash161203"},"content":"AddTodoCommand -\u003e Model : addTask()","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"Flash161203"},"content":"activate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"deactivate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"Flash161203"},"content":"create CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"Flash161203"},"content":"AddTodoCommand -\u003e CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"Flash161203"},"content":"activate CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"Flash161203"},"content":"CommandResult --\u003e AddTodoCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"Flash161203"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"Flash161203"},"content":"AddTodoCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"Flash161203"},"content":"deactivate AddTodoCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"Flash161203"},"content":"[\u003c-- LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"Flash161203"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"Flash161203"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Flash161203":68}},{"path":"docs/diagrams/CalendarPanelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"@startuml","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"!include style.puml","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"Class MainWindow","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"Class CalendarPanel {","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"  ViewType currentView","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"Class CalendarSource","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"Class DayPage","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"Class WeekPage","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"Class MonthPage","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"Class Calendar","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"Class TaskEntry","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"Class DateControl","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"Class \"\u003c\u003cenumeration\u003e\u003e\\nViewType\" as ViewType {","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"  DAY","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"  WEEK","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"  MONTH","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"MainWindow --\u003e \"1\" CalendarPanel","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"CalendarPanel --\u003e \"1\" DayPage","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"CalendarPanel --\u003e \"1\" WeekPage","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"CalendarPanel --\u003e \"1\" MonthPage","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"CalendarPanel --\u003e \"2\" Calendar","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"CalendarPanel -up-|\u003e UiPart","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"DayPage -right-|\u003e DateControl","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"WeekPage --|\u003e DateControl","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"MonthPage --|\u003e DateControl","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"DateControl -right-\u003e \"*\" CalendarSource","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"CalendarSource *-up-\u003e \"*\" Calendar","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"Calendar *-up-\u003e \"*\" TaskEntry","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"TaskEntry ..\u003e Model","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"Nafeij"},"content":"@enduml","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"Nafeij":60}},{"path":"docs/diagrams/CalendarViewSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"@startuml","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"!include style.puml","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"end box","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"box Ui UI_COLOR_T1","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"participant \":CalendarPanel\" as CalendarPanel UI_COLOR","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"end box","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"box CalendarFX MODEL_COLOR_T1","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"participant \":Calendar\" as Calendar MODEL_COLOR","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"end box","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"[-\u003e MainWindow : executeCommand()","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"activate MainWindow","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"MainWindow -\u003e LogicManager : getTaskList()","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"activate LogicManager","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"LogicManager --\u003e MainWindow : taskList","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"MainWindow -\u003e CalendarPanel : updateCalendar(taskList)","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"activate CalendarPanel","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"loop for each Calendar","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"    CalendarPanel -\u003e Calendar : clear()","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"    activate Calendar","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"    Calendar --\u003e CalendarPanel","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"    deactivate Calendar","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"end","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"loop for each task in taskList","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"    CalendarPanel -\u003e Calendar : addEntry(taskEntry)","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"    activate Calendar","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"    Calendar --\u003e CalendarPanel","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"    deactivate Calendar","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"end","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"CalendarPanel --\u003e MainWindow","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"deactivate CalendarPanel","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"MainWindow --\u003e[","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"deactivate MainWindow","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"@enduml","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"Nafeij":44}},{"path":"docs/diagrams/DeleteTaskClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"!include style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"package logic {","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"package commands {","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"Class \"{abstract}\\nCommand\" as Command #9AEA54","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"Class DeleteTaskCommand #61B417 extends Command","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"package parser {","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser #18F2D8","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"Class DeleteTaskCommandParser #15B4A1 implements Parser","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Flash161203":18}},{"path":"docs/diagrams/DeleteTaskSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"!include style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"participant \":CalidrParser\" as CalidrParser LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"participant \":DeleteTaskCommandParser\" as DeleteTaskCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"participant \":DeleteTaskCommand\" as DeleteTaskCommand LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"participant \":Model\" as Model MODEL_COLOR_T2","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"[-\u003e LogicManager : execute(\"\u003ccommand to delete a task\u003e\")","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"activate LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"LogicManager -\u003e CalidrParser : parseCommand(\"\u003ccommand to delete a task\u003e\")","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"activate CalidrParser","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"create DeleteTaskCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"CalidrParser -\u003e DeleteTaskCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"activate DeleteTaskCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"DeleteTaskCommandParser --\u003e CalidrParser","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"deactivate DeleteTaskCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"CalidrParser -\u003e DeleteTaskCommandParser : parse(\"\u003ccommand to delete a task\u003e\")","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"activate DeleteTaskCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"create DeleteTaskCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"DeleteTaskCommandParser -\u003e DeleteTaskCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"activate DeleteTaskCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"DeleteTaskCommand --\u003e DeleteTaskCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"deactivate DeleteTaskCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"DeleteTaskCommandParser --\u003e CalidrParser : command to delete the task","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"deactivate DeleteTaskCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"CalidrParser --\u003e LogicManager : command to delete the task","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"deactivate CalidrParser","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"Flash161203"},"content":"LogicManager -\u003e DeleteTaskCommand : execute()","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"Flash161203"},"content":"activate DeleteTaskCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"Flash161203"},"content":"DeleteTaskCommand -\u003e Model : getFilteredTaskList()","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"Flash161203"},"content":"activate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"Flash161203"},"content":"Model --\u003e DeleteTaskCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"Flash161203"},"content":"deactivate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"Flash161203"},"content":"DeleteTaskCommand -\u003e Model : deleteTask()","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"Flash161203"},"content":"activate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"deactivate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"Flash161203"},"content":"create CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"Flash161203"},"content":"DeleteTaskCommand -\u003e CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"Flash161203"},"content":"activate CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"Flash161203"},"content":"CommandResult --\u003e DeleteTaskCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"Flash161203"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"Flash161203"},"content":"DeleteTaskCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"Flash161203"},"content":"deactivate DeleteTaskCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"Flash161203"},"content":"[\u003c-- LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"Flash161203"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"Flash161203"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Flash161203":68}},{"path":"docs/diagrams/EditTaskClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vaidyanaath"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"vaidyanaath"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"package Logic{","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"    package commands{","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"        abstract class \"{abstract}\\nCommand\" {","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":"            {abstract} execute(model: Model): CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"vaidyanaath"},"content":"        class EditTaskCommand {","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"vaidyanaath"},"content":"            EditTaskCommand(i: Index, e: EditTaskDescriptor)","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"vaidyanaath"},"content":"        class EditTodoDescriptor","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"vaidyanaath"},"content":"        class EditTaskDescriptor","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"vaidyanaath"},"content":"        class EditEventDescriptor","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"vaidyanaath"},"content":"        \"{abstract}\\nCommand\" \u003c|-- EditTaskCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"vaidyanaath"},"content":"        EditTaskCommand +-- EditTodoDescriptor","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"vaidyanaath"},"content":"        EditTaskCommand +-- EditTaskDescriptor","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"vaidyanaath"},"content":"        EditTaskCommand +-- EditEventDescriptor","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"vaidyanaath"},"content":"        EditTodoDescriptor ..\u003e EditTaskDescriptor","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"vaidyanaath"},"content":"        EditEventDescriptor ..\u003e EditTaskDescriptor","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"vaidyanaath"},"content":"    package parser {","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"vaidyanaath"},"content":"      class Parser\u003cEditTaskCommand\u003e \u003c\u003cinterface\u003e\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"vaidyanaath"},"content":"        parse(input: string): EditTaskCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"vaidyanaath"},"content":"      }","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"vaidyanaath"},"content":"      class EditTaskCommandParser {","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"vaidyanaath"},"content":"      }","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"vaidyanaath"},"content":"      Parser \u003c|.. EditTaskCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"vaidyanaath"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"vaidyanaath"},"content":"hide circle","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"vaidyanaath"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"vaidyanaath":41}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/\u0027","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" \u0027/","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"skinparam BackgroundColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"skinparam Class {","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"skinparam Actor {","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    Color USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"skinparam Sequence {","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    MessageAlign center","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    BoxFontSize 15","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    BoxPadding 0","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"skinparam Participant {","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    Padding 20","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"hide footbox","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"Nafeij"},"content":"hide empty members","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Nafeij":1,"-":74}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"title: Calidr","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-W10-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-W10-2/tp/actions/)","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-W10-2/tp/branch/master/graph/badge.svg?token\u003dA61SI2GE0L)](https://codecov.io/gh/AY2223S2-CS2103T-W10-2/tp)","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"Calidr is a **time-management and scheduling calendar application** that offers integrated support for university","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"students to manage their classes, assignments, deadlines, and tasks from one place.","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"* If you are interested in using Calidr, head over to the [_Quick Start_ section of the **User Guide","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"  **](UserGuide.html#quick-start).","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"* If you are interested about developing Calidr, the [**Developer Guide**](DeveloperGuide.html) is a good place to","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"  start.","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"## Credits","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"Check out the [About Us](https://github.com/AY2223S2-CS2103T-W10-2/tp/blob/master/docs/AboutUs.md) page to get to know","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"about our team.","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"## Acknowledgements:","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"* Libraries used:","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"  *","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"  AB3: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"  *","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"  Calidr: [CalendarFX](https://github.com/dlsc-software-consulting-gmbh/CalendarFX), [ical4j](https://github.com/ical4j/ical4j)","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"Nafeij":21,"-":13}},{"path":"docs/team/flash161203.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"layout: page","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"title: Srinivasan Aarnav\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"# Project: Calidr","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"Calidr is a time-management and scheduling calendar application, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"## My Contributions","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dflash161203\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"* **Project management**:","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"  `to be added soon`","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"  `to be added soon`","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"  * User Guide:","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"    `to be added soon`","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"    `to be added soon`","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"* **Community**:","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"  `to be added soon`","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"* **Tools**:","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"  `to be added soon`","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"Flash161203":38}},{"path":"docs/team/nafeij.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"layout: page","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"title: Nafeij\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"# Project: Calidr","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"Calidr is a **time-management and scheduling calendar application**, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"## Contributions","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dnafeij\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"* **Project management**:","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"  * User Guide:","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"* **Community**:","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"* **Tools**:","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"Nafeij":46}},{"path":"docs/team/vaidyanaath.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vaidyanaath"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"vaidyanaath"},"content":"layout: page","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"title: Suresh Vaidyanaath\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"# Project: Calidr","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"vaidyanaath"},"content":"### Overview","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"vaidyanaath"},"content":"Calidr is a time-management and scheduling calendar application, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"vaidyanaath"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"vaidyanaath"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"vaidyanaath"},"content":"* **Code Contributed**: [RepoSense Link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dvaidyanaath\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"vaidyanaath"},"content":"* **Enhancements implemented**: `to be added soon`","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"vaidyanaath"},"content":"* **Documentation**","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"vaidyanaath"},"content":"  * Contributions to the UG: `to be added soon`","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"vaidyanaath"},"content":"  * Contributions to the DG: `to be added soon`","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"vaidyanaath"},"content":"* **Community**","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"vaidyanaath"},"content":"  * Contributions to team-based tasks: `to be added soon`","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"vaidyanaath"},"content":"  * Review/mentoring contributions: `to be added soon`","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"vaidyanaath"},"content":"  * Contributions beyond the project team: `to be added soon`","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"vaidyanaath":22}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"Flash161203"},"content":"Create a `RemarkCommandParser` class in the `seedu.calidr.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"Flash161203"},"content":"Create a new `Remark` in `seedu.calidr.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-03-03"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"Flash161203"},"content":"Simply add the following to [`seedu.calidr.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-03-03"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"Flash161203":6,"-":395}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"The `address` field in `Person` is actually an instance of the `seedu.calidr.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Flash161203":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.calidr.logic.Logic`.","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"Flash161203"},"content":"A quick look at the `seedu.calidr.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Flash161203":2,"-":299}},{"path":"src/main/java/seedu/calidr/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.LogsCenter;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.util.FileUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"Flash161203":3,"-":61}},{"path":"src/main/java/seedu/calidr/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"Flash161203":1,"-":24}},{"path":"src/main/java/seedu/calidr/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.Config;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.LogsCenter;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.Version;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.util.ConfigUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.util.StringUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.Logic;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.LogicManager;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.AddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.ModelManager;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.UserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.storage.AddressBookStorage;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.storage.JsonAddressBookStorage;","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.storage.Storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.storage.StorageManager;","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.storage.UserPrefsStorage;","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.ui.Ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.ui.UiManager;","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"Nafeij"},"content":"            if (addressBookOptional.isEmpty()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Nafeij":1,"Flash161203":24,"-":158}},{"path":"src/main/java/seedu/calidr/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.commons.core;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath.toAbsolutePath(), o.userPrefsFilePath.toAbsolutePath());","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return \"Current log level : \" + logLevel + \"\\nPreference file Location : \" + userPrefsFilePath;","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Flash161203":1,"-":59}},{"path":"src/main/java/seedu/calidr/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.commons.core;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Flash161203":1,"-":78}},{"path":"src/main/java/seedu/calidr/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.commons.core;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Flash161203":1,"-":111}},{"path":"src/main/java/seedu/calidr/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.commons.core;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dFor Calidr\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"    public static final String MESSAGE_TASKS_LISTED_OVERVIEW \u003d \"%1$d tasks listed!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Flash161203":5,"-":12}},{"path":"src/main/java/seedu/calidr/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.commons.core;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Flash161203":1,"-":115}},{"path":"src/main/java/seedu/calidr/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.commons.core.index;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Flash161203":1,"-":53}},{"path":"src/main/java/seedu/calidr/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.commons.exceptions;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Flash161203":1,"-":10}},{"path":"src/main/java/seedu/calidr/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.commons.exceptions;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Flash161203":1,"-":20}},{"path":"src/main/java/seedu/calidr/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.commons.util;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.MainApp;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Flash161203":2,"-":40}},{"path":"src/main/java/seedu/calidr/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.commons.util;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Flash161203":1,"-":34}},{"path":"src/main/java/seedu/calidr/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.commons.util;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.Config;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Flash161203":3,"-":20}},{"path":"src/main/java/seedu/calidr/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.commons.util;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Flash161203":1,"-":82}},{"path":"src/main/java/seedu/calidr/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.commons.util;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.LogsCenter;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Flash161203":3,"-":140}},{"path":"src/main/java/seedu/calidr/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.commons.util;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"     * Capitalizes the first letter of the given string.","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"     * @param str the string to capitalize","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"     * @return the capitalized string","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"    public static String capitalize(String str) {","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"        return str.substring(0, 1).toUpperCase() + str.substring(1).toLowerCase();","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"        String[] wordsInPreppedSentence \u003d sentence.split(\"\\\\s+\");","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"        return t.getMessage() + \"\\n\" + sw;","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Nafeij":12,"Flash161203":2,"-":63}},{"path":"src/main/java/seedu/calidr/commons/util/TaskEntryUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package seedu.calidr.commons.util;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"import com.calendarfx.model.Interval;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.TaskEntry;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.task.Event;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.task.Task;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.ToDo;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.params.Priority;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":" * Task to TaskEntry converter.","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"public final class TaskEntryUtil {","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"    private static final Map\u003cPriority, String\u003e PRIORITY_SHORT \u003d Map.of(","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"            Priority.LOW, \"L\",","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"            Priority.MEDIUM, \"M\",","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"            Priority.HIGH, \"H\"","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"    );","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"     * Converts the Calidr Task object to a CalendarFX TaskEntry object.","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"     * @param task the task","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"     * @return the task entry","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"    public static TaskEntry convert(Task task) {","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"        Objects.requireNonNull(task);","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"        TaskEntry taskEntry \u003d new TaskEntry();","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"        Interval interval;","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"        if (task instanceof Event) {","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"            interval \u003d new Interval(event.getEventDateTimes().from, event.getEventDateTimes().to);","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"        } else if (task instanceof ToDo) {","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"            ToDo toDo \u003d (ToDo) task;","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"            LocalDateTime startDt \u003d toDo.getBy().value;","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"            LocalDateTime endDt \u003d startDt.withHour(23).withMinute(59).withSecond(59);","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"            if (endDt.isAfter(startDt.plusHours(1))) {","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"                endDt \u003d startDt.plusHours(1);","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"            interval \u003d new Interval(startDt, endDt);","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"        } else {","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"            throw new IllegalArgumentException(\"Unknown task type\");","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"            // TODO: Custom Exception","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"        taskEntry.setTitle(toCustomString(task));","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"        taskEntry.setInterval(interval);","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"        taskEntry.setPriority(task.getPriority());","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"        taskEntry.setIsDone(task.isDone());","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"        taskEntry.setUserObject(task);","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"        return taskEntry;","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"Nafeij"},"content":"    private static String toCustomString(Task task) {","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"Nafeij"},"content":"        String tick \u003d task.isDone() ? \"✓\" : \"  \";","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"Nafeij"},"content":"        return String.format(\"%s\\t[%s] {%s}\",","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"Flash161203"},"content":"                task.getTitle(),","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"Nafeij"},"content":"                tick,","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"Nafeij"},"content":"                PRIORITY_SHORT.getOrDefault(task.getPriority(), \"M\")","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"Nafeij"},"content":"        );","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Nafeij":63,"Flash161203":6}},{"path":"src/main/java/seedu/calidr/exception/CalidrException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.exception;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":" * Represents an exception that can be thrown while interacting with the chatbot.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"public class CalidrException extends Exception {","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"    public CalidrException(String message) {","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"        super(message);","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Flash161203":12}},{"path":"src/main/java/seedu/calidr/exception/CalidrInvalidArgumentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.exception;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":" * Represents an exception that is thrown when the arguments given for a command are invalid.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"public class CalidrInvalidArgumentException extends CalidrException {","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"    public CalidrInvalidArgumentException(String message) {","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"        super(message);","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Flash161203":12}},{"path":"src/main/java/seedu/calidr/exception/CalidrInvalidCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.exception;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":" * Represents an exception that is thrown when an invalid command is entered.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"public class CalidrInvalidCommandException extends CalidrException {","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"    public CalidrInvalidCommandException(String message) {","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"        super(message);","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Flash161203":12}},{"path":"src/main/java/seedu/calidr/exception/CalidrInvalidDataFileException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.exception;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":" * Represents an exception that is thrown when the arguments given for a command are invalid.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"public class CalidrInvalidDataFileException extends CalidrException {","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"    public CalidrInvalidDataFileException(String message) {","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"        super(message);","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Flash161203":12}},{"path":"src/main/java/seedu/calidr/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.GuiSettings;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.CommandResult;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.model.ReadOnlyTaskList;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Person;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.task.Task;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"     * @see seedu.calidr.model.Model#getAddressBook()","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"     * Returns an unmodifiable view of the filtered list of persons","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"Flash161203"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dFor Calidr\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"vaidyanaath"},"content":"    ReadOnlyTaskList getTaskList();","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Nafeij":8,"Flash161203":9,"-":41,"vaidyanaath":2}},{"path":"src/main/java/seedu/calidr/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.GuiSettings;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.LogsCenter;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.Command;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.CommandResult;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.parser.CalidrParser;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.model.ReadOnlyTaskList;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Person;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.task.Task;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.storage.Storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"    // private final AddressBookParser addressBookParser;","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"    private final CalidrParser calidrParser;","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"        // addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"        calidrParser \u003d new CalidrParser();","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"Flash161203"},"content":"        Command command \u003d calidrParser.parseCommand(commandText);","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"Flash161203"},"content":"        // TODO Storage integration","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"Flash161203"},"content":"        /*","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"Flash161203"},"content":"         */","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"Flash161203"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dFor Calidr\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"Nafeij"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"vaidyanaath"},"content":"    public ReadOnlyTaskList getTaskList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"Nafeij"},"content":"        return model.getTaskList();","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"Nafeij"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"Nafeij"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"Nafeij"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Nafeij":10,"Flash161203":23,"-":65,"vaidyanaath":2}},{"path":"src/main/java/seedu/calidr/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Person;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"            + PREFIX_REMARK + \"He likes pizza.\"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Flash161203":11,"-":58}},{"path":"src/main/java/seedu/calidr/logic/commands/AddEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_FROM;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_TO;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.Event;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":" * Adds an event to the task list.","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"vaidyanaath"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an event to the task list. \"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"            + PREFIX_TITLE + \" TITLE \"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"            + PREFIX_FROM + \" START DATE-TIME \"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"            + PREFIX_TO + \" END DATE-TIME \"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"vaidyanaath"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"vaidyanaath"},"content":"            + \"[\" + PREFIX_LOCATION + \"LOCATION]\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"vaidyanaath"},"content":"            + PREFIX_TITLE + \" CS3230 Lecture \"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"vaidyanaath"},"content":"            + PREFIX_FROM + \" 05-04-2023 1400 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"vaidyanaath"},"content":"            + PREFIX_TO + \" 05-04-2023 1600 \"","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"vaidyanaath"},"content":"            + PREFIX_DESCRIPTION + \" Dynamic Programming \"","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"vaidyanaath"},"content":"            + PREFIX_LOCATION + \" i3 Aud\";","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New event added: %1$s\";","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in the task list.\";","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"    private final Event toAdd;","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"     * Creates an AddEventCommand to add the specified {@code Event}","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"    public AddEventCommand(Event event) {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"Flash161203"},"content":"        requireNonNull(event);","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"Flash161203"},"content":"        toAdd \u003d event;","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"Flash161203"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"Flash161203"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"Flash161203"},"content":"        if (model.hasTask(toAdd)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"Flash161203"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"Flash161203"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"Flash161203"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"Flash161203"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"Flash161203"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"Flash161203"},"content":"                || (other instanceof AddEventCommand // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"Flash161203"},"content":"                \u0026\u0026 toAdd.equals(((AddEventCommand) other).toAdd));","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Flash161203":56,"vaidyanaath":10}},{"path":"src/main/java/seedu/calidr/logic/commands/AddTodoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_BY;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.ToDo;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":" * Adds a to-do to the task list.","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a to-do to the task list. \"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"            + PREFIX_TITLE + \" TITLE \"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"            + PREFIX_BY + \" BY DATE-TIME \"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"vaidyanaath"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"vaidyanaath"},"content":"            + \"[\" + PREFIX_LOCATION + \"LOCATION]\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"            + PREFIX_TITLE + \" Assignment \"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"vaidyanaath"},"content":"            + PREFIX_BY + \" 05-04-2023 2359 \"","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"vaidyanaath"},"content":"            + PREFIX_DESCRIPTION + \" Exercise 5 \"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"vaidyanaath"},"content":"            + PREFIX_LOCATION + \" NUS\";","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New to-do added: %1$s\";","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"    public static final String MESSAGE_DUPLICATE_TODO \u003d \"This to-do already exists in the task list.\";","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"    private final ToDo toAdd;","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"     * Creates an AddTodoCommand to add the specified {@code ToDo}","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"    public AddTodoCommand(ToDo todo) {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"        requireNonNull(todo);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"        toAdd \u003d todo;","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"Flash161203"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"Flash161203"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"Flash161203"},"content":"        if (model.hasTask(toAdd)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"Flash161203"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TODO);","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"Flash161203"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"Flash161203"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"Flash161203"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"Flash161203"},"content":"                || (other instanceof AddTodoCommand // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"Flash161203"},"content":"                \u0026\u0026 toAdd.equals(((AddTodoCommand) other).toAdd));","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Flash161203":56,"vaidyanaath":7}},{"path":"src/main/java/seedu/calidr/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.AddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Flash161203":3,"-":20}},{"path":"src/main/java/seedu/calidr/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Flash161203":3,"-":17}},{"path":"src/main/java/seedu/calidr/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.PageType;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.task.Task;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"     * Help information should be shown to the user.","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"     * The application should exit.","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"     * The view type of the calendar panel.","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"    private final Optional\u003cPageType\u003e pageType;","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"     * The date of the calendar panel.","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"    private final Optional\u003cLocalDate\u003e date;","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"     * The task to be shown in the popup.","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"    private final Optional\u003cTask\u003e popupTask;","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"    public CommandResult(String feedbackToUser,","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"                         boolean showHelp,","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"                         boolean exit,","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"                         PageType pageType,","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"                         LocalDate date,","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"                         Task popupTask","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"    ) {","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"        this.pageType \u003d Optional.ofNullable(pageType);","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"        this.date \u003d Optional.ofNullable(date);","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"        this.popupTask \u003d Optional.ofNullable(popupTask);","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"Nafeij"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"Nafeij"},"content":"        this(feedbackToUser, showHelp, exit, null, null, null);","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"Nafeij"},"content":"    public Optional\u003cPageType\u003e getPageType() {","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"Nafeij"},"content":"        return pageType;","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"Nafeij"},"content":"    public Optional\u003cLocalDate\u003e getDate() {","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"Nafeij"},"content":"        return date;","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"Nafeij"},"content":"    public Optional\u003cTask\u003e getPopupTask() {","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"Nafeij"},"content":"        return popupTask;","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"Nafeij"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"Nafeij"},"content":"                \u0026\u0026 pageType.equals(otherCommandResult.pageType)","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"Nafeij"},"content":"                \u0026\u0026 date.equals(otherCommandResult.date)","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"Nafeij"},"content":"                \u0026\u0026 popupTask.equals(otherCommandResult.popupTask);","lastModifiedDate":"2023-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"Nafeij"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, pageType, date, popupTask);","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Nafeij":58,"Flash161203":1,"-":65}},{"path":"src/main/java/seedu/calidr/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.Messages;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.index.Index;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Person;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Flash161203":6,"-":47}},{"path":"src/main/java/seedu/calidr/logic/commands/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.Task;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":" * Deletes a Task from a task list.","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"            + \": Deletes the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"     * Creates an DeleteTaskCommand to delete the specified {@code Task}","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"    public DeleteTaskCommand(Index targetIndex) {","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"Flash161203"},"content":"        Task taskToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"vaidyanaath"},"content":"        model.deleteTask(taskToDelete);","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"Flash161203"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete));","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"Flash161203"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"Flash161203"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"Flash161203"},"content":"                || (other instanceof DeleteTaskCommand // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Flash161203":55,"vaidyanaath":1}},{"path":"src/main/java/seedu/calidr/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.Messages;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.index.Index;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Address;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Email;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Person;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Remark;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.tag.Tag;","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"Nafeij"},"content":"        Remark updatedRemark \u003d editPersonDescriptor.getRemark().orElse(personToEdit.getRemark());","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"Flash161203"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedRemark, updatedTags);","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"Nafeij"},"content":"        private Remark remark;","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"Nafeij"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":150,"author":{"gitId":"Nafeij"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"Nafeij"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags, remark);","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"Nafeij"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2023-03-13"},{"lineNumber":194,"author":{"gitId":"Nafeij"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2023-03-13"},{"lineNumber":195,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":196,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":197,"author":{"gitId":"Nafeij"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2023-03-13"},{"lineNumber":198,"author":{"gitId":"Nafeij"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2023-03-13"},{"lineNumber":199,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":200,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":237,"author":{"gitId":"Flash161203"},"content":"                    \u0026\u0026 getRemark().equals(e.getRemark())","lastModifiedDate":"2023-03-13"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Nafeij":15,"Flash161203":21,"-":205}},{"path":"src/main/java/seedu/calidr/logic/commands/EditTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vaidyanaath"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_BY;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_FROM;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"vaidyanaath"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"vaidyanaath"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_TO;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"vaidyanaath"},"content":"import static seedu.calidr.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"vaidyanaath"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"vaidyanaath"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"vaidyanaath"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"vaidyanaath"},"content":"import net.fortuna.ical4j.filter.FilterExpression;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.commons.core.Messages;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.commons.core.index.Index;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.model.task.Event;","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.model.task.Task;","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.model.task.ToDo;","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.model.task.params.Description;","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.model.task.params.EventDateTimes;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.model.task.params.Location;","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.params.Priority;","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.model.task.params.Title;","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.model.task.params.TodoDateTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"vaidyanaath"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"vaidyanaath"},"content":" * Edits the details of an existing task in the task list.","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"vaidyanaath"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"vaidyanaath"},"content":"public class EditTaskCommand extends Command {","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"vaidyanaath"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"vaidyanaath"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the task identified \"","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"vaidyanaath"},"content":"            + \"by the index number used in the displayed task list. \\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"vaidyanaath"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"vaidyanaath"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"vaidyanaath"},"content":"            + \"[\" + PREFIX_TITLE + \"TITLE] \"","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"vaidyanaath"},"content":"            + \"[\" + PREFIX_FROM + \"FROM] (only for events) \"","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"vaidyanaath"},"content":"            + \"[\" + PREFIX_TO + \"TO] (only for events)\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"vaidyanaath"},"content":"            + \"[\" + PREFIX_BY + \"BY] (only for todos) \"","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"vaidyanaath"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"vaidyanaath"},"content":"            + \"[\" + PREFIX_LOCATION + \"LOCATION]\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"vaidyanaath"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"vaidyanaath"},"content":"            + PREFIX_TITLE + \"Science Homework \"","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"vaidyanaath"},"content":"            + PREFIX_BY + \"03-11-2024 2359 \"","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"vaidyanaath"},"content":"            + PREFIX_DESCRIPTION + \"Finish Lab Report \"","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"vaidyanaath"},"content":"            + PREFIX_LOCATION + \"S17\";","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"vaidyanaath"},"content":"    public static final String MESSAGE_EDIT_TASK_SUCCESS \u003d \"Edited Task: %1$s\";","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"vaidyanaath"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"vaidyanaath"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the task list.\";","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"vaidyanaath"},"content":"    private final Index index;","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"vaidyanaath"},"content":"    private final EditTaskDescriptor editTaskDescriptor;","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"vaidyanaath"},"content":"     * @param index of the task in the read-only task-list to edit","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"vaidyanaath"},"content":"     * @param editTaskDescriptor details to edit the task with","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"vaidyanaath"},"content":"    public EditTaskCommand(Index index, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"vaidyanaath"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"vaidyanaath"},"content":"        requireNonNull(editTaskDescriptor);","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"vaidyanaath"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"vaidyanaath"},"content":"        this.editTaskDescriptor \u003d new EditTaskDescriptor(editTaskDescriptor);","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"vaidyanaath"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"vaidyanaath"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"vaidyanaath"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"vaidyanaath"},"content":"        List\u003cTask\u003e readOnlyTaskList \u003d model.getFilteredTaskList();","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"vaidyanaath"},"content":"        if (index.getZeroBased() \u003e\u003d readOnlyTaskList.size()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"vaidyanaath"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"vaidyanaath"},"content":"        Task taskToEdit \u003d readOnlyTaskList.get(index.getZeroBased());","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"vaidyanaath"},"content":"        Task editedTask \u003d createEditedTask(taskToEdit, editTaskDescriptor);","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"vaidyanaath"},"content":"        if (!taskToEdit.equals(editedTask) \u0026\u0026 model.hasTask(editedTask)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"vaidyanaath"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"vaidyanaath"},"content":"        model.setTask(taskToEdit, editedTask);","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"vaidyanaath"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"vaidyanaath"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TASK_SUCCESS, editedTask));","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"vaidyanaath"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"vaidyanaath"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"vaidyanaath"},"content":"    private static Task createEditedTask(Task taskToEdit, EditTaskDescriptor editTaskDescriptor)","lastModifiedDate":"2023-03-25"},{"lineNumber":100,"author":{"gitId":"vaidyanaath"},"content":"            throws CommandException {","lastModifiedDate":"2023-03-25"},{"lineNumber":101,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":102,"author":{"gitId":"vaidyanaath"},"content":"        assert taskToEdit !\u003d null;","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"vaidyanaath"},"content":"        if (taskToEdit instanceof ToDo) {","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"vaidyanaath"},"content":"            ToDo todoToEdit \u003d (ToDo) taskToEdit;","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"vaidyanaath"},"content":"            Title updatedTitle \u003d editTaskDescriptor.getTitle().orElse(todoToEdit.getTitle());","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"vaidyanaath"},"content":"            Description oldDescription \u003d todoToEdit.getDescription().orElse(null);","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"vaidyanaath"},"content":"            Description updatedDescription \u003d editTaskDescriptor.getDescription().orElse(oldDescription);","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"vaidyanaath"},"content":"            Location oldLocation \u003d todoToEdit.getLocation().orElse(null);","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"vaidyanaath"},"content":"            Location updatedLocation \u003d editTaskDescriptor.getLocation().orElse(oldLocation);","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"vaidyanaath"},"content":"            Priority updatedPriority \u003d editTaskDescriptor.getPriority().orElse(todoToEdit.getPriority());","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"vaidyanaath"},"content":"            TodoDateTime updatedBy \u003d editTaskDescriptor.getByDateTime().orElse(todoToEdit.getBy());","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"Flash161203"},"content":"            ToDo updatedTodo \u003d new ToDo(updatedTitle, updatedBy);","lastModifiedDate":"2023-03-25"},{"lineNumber":116,"author":{"gitId":"Flash161203"},"content":"            updatedTodo.setDescription(updatedDescription);","lastModifiedDate":"2023-03-25"},{"lineNumber":117,"author":{"gitId":"vaidyanaath"},"content":"            updatedTodo.setLocation(updatedLocation);","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"Flash161203"},"content":"            updatedTodo.setPriority(updatedPriority);","lastModifiedDate":"2023-03-25"},{"lineNumber":119,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":120,"author":{"gitId":"Flash161203"},"content":"            return updatedTodo;","lastModifiedDate":"2023-03-25"},{"lineNumber":121,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"vaidyanaath"},"content":"        } else if (taskToEdit instanceof Event) {","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"vaidyanaath"},"content":"            Event eventToEdit \u003d (Event) taskToEdit;","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":125,"author":{"gitId":"vaidyanaath"},"content":"            Title updatedTitle \u003d editTaskDescriptor.getTitle().orElse(eventToEdit.getTitle());","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"vaidyanaath"},"content":"            Description oldDescription \u003d eventToEdit.getDescription().orElse(null);","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"vaidyanaath"},"content":"            Description updatedDescription \u003d editTaskDescriptor.getDescription().orElse(oldDescription);","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"vaidyanaath"},"content":"            Location oldLocation \u003d eventToEdit.getLocation().orElse(null);","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"vaidyanaath"},"content":"            Location updatedLocation \u003d editTaskDescriptor.getLocation().orElse(oldLocation);","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"vaidyanaath"},"content":"            Priority updatedPriority \u003d editTaskDescriptor.getPriority().orElse(eventToEdit.getPriority());","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":132,"author":{"gitId":"vaidyanaath"},"content":"            LocalDateTime updatedFromDateTime \u003d editTaskDescriptor.getFromDateTime()","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"vaidyanaath"},"content":"                    .orElse(eventToEdit.getEventDateTimes().from);","lastModifiedDate":"2023-03-15"},{"lineNumber":134,"author":{"gitId":"vaidyanaath"},"content":"            LocalDateTime updatedToDateTime \u003d editTaskDescriptor.getToDateTime()","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"vaidyanaath"},"content":"                    .orElse(eventToEdit.getEventDateTimes().to);","lastModifiedDate":"2023-03-15"},{"lineNumber":136,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":137,"author":{"gitId":"Flash161203"},"content":"            if (!EventDateTimes.isValidEventDateTimes(updatedFromDateTime, updatedToDateTime)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":138,"author":{"gitId":"Flash161203"},"content":"                throw new CommandException(EventDateTimes.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":139,"author":{"gitId":"Flash161203"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":140,"author":{"gitId":"vaidyanaath"},"content":"            EventDateTimes updatedEventTimes \u003d new EventDateTimes(updatedFromDateTime, updatedToDateTime);","lastModifiedDate":"2023-03-15"},{"lineNumber":141,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":142,"author":{"gitId":"Flash161203"},"content":"            Event updatedEvent \u003d new Event(updatedTitle, updatedEventTimes);","lastModifiedDate":"2023-03-25"},{"lineNumber":143,"author":{"gitId":"Flash161203"},"content":"            updatedEvent.setDescription(updatedDescription);","lastModifiedDate":"2023-03-25"},{"lineNumber":144,"author":{"gitId":"vaidyanaath"},"content":"            updatedEvent.setLocation(updatedLocation);","lastModifiedDate":"2023-03-29"},{"lineNumber":145,"author":{"gitId":"Flash161203"},"content":"            updatedEvent.setPriority(updatedPriority);","lastModifiedDate":"2023-03-25"},{"lineNumber":146,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":147,"author":{"gitId":"Flash161203"},"content":"            return updatedEvent;","lastModifiedDate":"2023-03-25"},{"lineNumber":148,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":149,"author":{"gitId":"vaidyanaath"},"content":"        } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":150,"author":{"gitId":"vaidyanaath"},"content":"            // error","lastModifiedDate":"2023-03-15"},{"lineNumber":151,"author":{"gitId":"vaidyanaath"},"content":"            // todo store messages as constant in messages","lastModifiedDate":"2023-03-24"},{"lineNumber":152,"author":{"gitId":"vaidyanaath"},"content":"            throw new CommandException(\"Invalid task type!\");","lastModifiedDate":"2023-03-24"},{"lineNumber":153,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":154,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":155,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":156,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":157,"author":{"gitId":"vaidyanaath"},"content":"     * Stores the details to edit the task with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-15"},{"lineNumber":158,"author":{"gitId":"vaidyanaath"},"content":"     * corresponding field value of the task.","lastModifiedDate":"2023-03-15"},{"lineNumber":159,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":160,"author":{"gitId":"vaidyanaath"},"content":"    public static class EditTaskDescriptor {","lastModifiedDate":"2023-03-15"},{"lineNumber":161,"author":{"gitId":"vaidyanaath"},"content":"        private Title title;","lastModifiedDate":"2023-03-15"},{"lineNumber":162,"author":{"gitId":"vaidyanaath"},"content":"        private Description description;","lastModifiedDate":"2023-03-22"},{"lineNumber":163,"author":{"gitId":"vaidyanaath"},"content":"        private Location location;","lastModifiedDate":"2023-03-29"},{"lineNumber":164,"author":{"gitId":"vaidyanaath"},"content":"        private TodoDateTime byDateTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":165,"author":{"gitId":"vaidyanaath"},"content":"        private LocalDateTime fromDateTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":166,"author":{"gitId":"vaidyanaath"},"content":"        private LocalDateTime toDateTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":167,"author":{"gitId":"Flash161203"},"content":"        private Priority priority;","lastModifiedDate":"2023-03-25"},{"lineNumber":168,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":169,"author":{"gitId":"vaidyanaath"},"content":"        public EditTaskDescriptor() {}","lastModifiedDate":"2023-03-15"},{"lineNumber":170,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":171,"author":{"gitId":"vaidyanaath"},"content":"        /**","lastModifiedDate":"2023-03-15"},{"lineNumber":172,"author":{"gitId":"vaidyanaath"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-15"},{"lineNumber":173,"author":{"gitId":"vaidyanaath"},"content":"         */","lastModifiedDate":"2023-03-15"},{"lineNumber":174,"author":{"gitId":"vaidyanaath"},"content":"        public EditTaskDescriptor(EditTaskDescriptor toCopy) {","lastModifiedDate":"2023-03-15"},{"lineNumber":175,"author":{"gitId":"vaidyanaath"},"content":"            setTitle(toCopy.title);","lastModifiedDate":"2023-03-15"},{"lineNumber":176,"author":{"gitId":"vaidyanaath"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2023-03-22"},{"lineNumber":177,"author":{"gitId":"vaidyanaath"},"content":"            setLocation(toCopy.location);","lastModifiedDate":"2023-03-29"},{"lineNumber":178,"author":{"gitId":"vaidyanaath"},"content":"            setByDateTime(toCopy.byDateTime);","lastModifiedDate":"2023-03-29"},{"lineNumber":179,"author":{"gitId":"vaidyanaath"},"content":"            setFromDateTime(toCopy.fromDateTime);","lastModifiedDate":"2023-03-29"},{"lineNumber":180,"author":{"gitId":"vaidyanaath"},"content":"            setToDateTime(toCopy.toDateTime);","lastModifiedDate":"2023-03-29"},{"lineNumber":181,"author":{"gitId":"Flash161203"},"content":"            setPriority(toCopy.priority);","lastModifiedDate":"2023-03-25"},{"lineNumber":182,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":183,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":184,"author":{"gitId":"vaidyanaath"},"content":"        /**","lastModifiedDate":"2023-03-15"},{"lineNumber":185,"author":{"gitId":"vaidyanaath"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-15"},{"lineNumber":186,"author":{"gitId":"vaidyanaath"},"content":"         */","lastModifiedDate":"2023-03-15"},{"lineNumber":187,"author":{"gitId":"vaidyanaath"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-15"},{"lineNumber":188,"author":{"gitId":"vaidyanaath"},"content":"            return CollectionUtil.isAnyNonNull(title, description, location, byDateTime,","lastModifiedDate":"2023-03-29"},{"lineNumber":189,"author":{"gitId":"Flash161203"},"content":"                    fromDateTime, toDateTime, priority);","lastModifiedDate":"2023-03-25"},{"lineNumber":190,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":191,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":192,"author":{"gitId":"vaidyanaath"},"content":"        public void setTitle(Title title) {","lastModifiedDate":"2023-03-15"},{"lineNumber":193,"author":{"gitId":"vaidyanaath"},"content":"            this.title \u003d title;","lastModifiedDate":"2023-03-15"},{"lineNumber":194,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":195,"author":{"gitId":"vaidyanaath"},"content":"        public Optional\u003cTitle\u003e getTitle() {","lastModifiedDate":"2023-03-15"},{"lineNumber":196,"author":{"gitId":"vaidyanaath"},"content":"            return Optional.ofNullable(title);","lastModifiedDate":"2023-03-15"},{"lineNumber":197,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":198,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":199,"author":{"gitId":"vaidyanaath"},"content":"        public void setDescription(Description description) {","lastModifiedDate":"2023-03-22"},{"lineNumber":200,"author":{"gitId":"vaidyanaath"},"content":"            this.description \u003d description;","lastModifiedDate":"2023-03-22"},{"lineNumber":201,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":202,"author":{"gitId":"vaidyanaath"},"content":"        public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2023-03-22"},{"lineNumber":203,"author":{"gitId":"vaidyanaath"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2023-03-22"},{"lineNumber":204,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":205,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":206,"author":{"gitId":"vaidyanaath"},"content":"        public Optional\u003cLocation\u003e getLocation() {","lastModifiedDate":"2023-03-29"},{"lineNumber":207,"author":{"gitId":"vaidyanaath"},"content":"            return Optional.ofNullable(location);","lastModifiedDate":"2023-03-29"},{"lineNumber":208,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":209,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":210,"author":{"gitId":"vaidyanaath"},"content":"        public void setLocation(Location location) {","lastModifiedDate":"2023-03-29"},{"lineNumber":211,"author":{"gitId":"vaidyanaath"},"content":"            this.location \u003d location;","lastModifiedDate":"2023-03-29"},{"lineNumber":212,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":213,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":214,"author":{"gitId":"vaidyanaath"},"content":"        public void setByDateTime(TodoDateTime todoDateTime) {","lastModifiedDate":"2023-03-29"},{"lineNumber":215,"author":{"gitId":"vaidyanaath"},"content":"            this.byDateTime \u003d todoDateTime;","lastModifiedDate":"2023-03-29"},{"lineNumber":216,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":217,"author":{"gitId":"vaidyanaath"},"content":"        public Optional\u003cTodoDateTime\u003e getByDateTime() {","lastModifiedDate":"2023-03-29"},{"lineNumber":218,"author":{"gitId":"vaidyanaath"},"content":"            return Optional.ofNullable(byDateTime);","lastModifiedDate":"2023-03-29"},{"lineNumber":219,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":220,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":221,"author":{"gitId":"vaidyanaath"},"content":"        public void setFromDateTime(LocalDateTime localDateTime) {","lastModifiedDate":"2023-03-29"},{"lineNumber":222,"author":{"gitId":"vaidyanaath"},"content":"            this.fromDateTime \u003d localDateTime;","lastModifiedDate":"2023-03-29"},{"lineNumber":223,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":224,"author":{"gitId":"vaidyanaath"},"content":"        public Optional\u003cLocalDateTime\u003e getFromDateTime() {","lastModifiedDate":"2023-03-15"},{"lineNumber":225,"author":{"gitId":"vaidyanaath"},"content":"            return Optional.ofNullable(fromDateTime);","lastModifiedDate":"2023-03-15"},{"lineNumber":226,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":227,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":228,"author":{"gitId":"vaidyanaath"},"content":"        public void setToDateTime(LocalDateTime localDateTime) {","lastModifiedDate":"2023-03-29"},{"lineNumber":229,"author":{"gitId":"vaidyanaath"},"content":"            this.toDateTime \u003d localDateTime;","lastModifiedDate":"2023-03-29"},{"lineNumber":230,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":231,"author":{"gitId":"vaidyanaath"},"content":"        public Optional\u003cLocalDateTime\u003e getToDateTime() {","lastModifiedDate":"2023-03-15"},{"lineNumber":232,"author":{"gitId":"vaidyanaath"},"content":"            return Optional.ofNullable(toDateTime);","lastModifiedDate":"2023-03-15"},{"lineNumber":233,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":234,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":235,"author":{"gitId":"Flash161203"},"content":"        public void setPriority(Priority priority) {","lastModifiedDate":"2023-03-25"},{"lineNumber":236,"author":{"gitId":"Flash161203"},"content":"            this.priority \u003d priority;","lastModifiedDate":"2023-03-25"},{"lineNumber":237,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":238,"author":{"gitId":"Flash161203"},"content":"        public Optional\u003cPriority\u003e getPriority() {","lastModifiedDate":"2023-03-25"},{"lineNumber":239,"author":{"gitId":"Flash161203"},"content":"            return Optional.ofNullable(priority);","lastModifiedDate":"2023-03-25"},{"lineNumber":240,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":241,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":242,"author":{"gitId":"vaidyanaath"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":243,"author":{"gitId":"vaidyanaath"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":244,"author":{"gitId":"vaidyanaath"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":245,"author":{"gitId":"vaidyanaath"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-15"},{"lineNumber":246,"author":{"gitId":"vaidyanaath"},"content":"                return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":247,"author":{"gitId":"vaidyanaath"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":248,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":249,"author":{"gitId":"vaidyanaath"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":250,"author":{"gitId":"vaidyanaath"},"content":"            if (!(other instanceof EditTaskDescriptor)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":251,"author":{"gitId":"vaidyanaath"},"content":"                return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":252,"author":{"gitId":"vaidyanaath"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":253,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":254,"author":{"gitId":"vaidyanaath"},"content":"            // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":255,"author":{"gitId":"vaidyanaath"},"content":"            EditTaskDescriptor e \u003d (EditTaskDescriptor) other;","lastModifiedDate":"2023-03-29"},{"lineNumber":256,"author":{"gitId":"vaidyanaath"},"content":"            return getTitle().equals(e.getTitle())","lastModifiedDate":"2023-03-15"},{"lineNumber":257,"author":{"gitId":"vaidyanaath"},"content":"                    \u0026\u0026 getDescription().equals(e.getDescription())","lastModifiedDate":"2023-03-22"},{"lineNumber":258,"author":{"gitId":"vaidyanaath"},"content":"                    \u0026\u0026 getLocation().equals(e.getLocation())","lastModifiedDate":"2023-03-29"},{"lineNumber":259,"author":{"gitId":"vaidyanaath"},"content":"                    \u0026\u0026 getByDateTime().equals(e.getByDateTime())","lastModifiedDate":"2023-03-29"},{"lineNumber":260,"author":{"gitId":"vaidyanaath"},"content":"                    \u0026\u0026 getFromDateTime().equals(e.getFromDateTime())","lastModifiedDate":"2023-03-15"},{"lineNumber":261,"author":{"gitId":"Flash161203"},"content":"                    \u0026\u0026 getToDateTime().equals(e.getToDateTime())","lastModifiedDate":"2023-03-25"},{"lineNumber":262,"author":{"gitId":"Flash161203"},"content":"                    \u0026\u0026 getPriority().equals(e.getPriority());","lastModifiedDate":"2023-03-25"},{"lineNumber":263,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":264,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":265,"author":{"gitId":"vaidyanaath"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"Flash161203":32,"vaidyanaath":233}},{"path":"src/main/java/seedu/calidr/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Flash161203":2,"-":17}},{"path":"src/main/java/seedu/calidr/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.Messages;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Flash161203":4,"-":38}},{"path":"src/main/java/seedu/calidr/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Flash161203":2,"-":19}},{"path":"src/main/java/seedu/calidr/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Flash161203":3,"-":21}},{"path":"src/main/java/seedu/calidr/logic/commands/MarkTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vaidyanaath"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"import java.util.List;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.commons.core.Messages;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.commons.core.index.Index;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.model.task.Task;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":" * Marks a task in the task list as \u0027done\u0027.","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"vaidyanaath"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"vaidyanaath"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"vaidyanaath"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"vaidyanaath"},"content":"            COMMAND_WORD + \": Marks a task in your task list as \u0027done\u0027\\n\"","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"vaidyanaath"},"content":"                    + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"vaidyanaath"},"content":"                    + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"vaidyanaath"},"content":"    public static final String MESSAGE_MARK_TASK_SUCCESS \u003d \"Task marked as done: %1$s\";","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"vaidyanaath"},"content":"    private final Index index;","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"     * Creates a MarkTaskCommand to mark the specified {@code Task}","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"     * @param index of the task in the filtered task list to mark","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"vaidyanaath"},"content":"    public MarkTaskCommand(Index index) {","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"vaidyanaath"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"vaidyanaath"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"vaidyanaath"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"vaidyanaath"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"vaidyanaath"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"vaidyanaath"},"content":"        List\u003cTask\u003e readOnlyTaskList \u003d model.getFilteredTaskList();","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"vaidyanaath"},"content":"        if (index.getZeroBased() \u003e\u003d readOnlyTaskList.size()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"vaidyanaath"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"vaidyanaath"},"content":"        Task taskToMark \u003d readOnlyTaskList.get(index.getZeroBased());","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"vaidyanaath"},"content":"        model.markTask(taskToMark);","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"vaidyanaath"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_TASK_SUCCESS, taskToMark));","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"vaidyanaath"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Nafeij":8,"vaidyanaath":45}},{"path":"src/main/java/seedu/calidr/logic/commands/PageCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.PageType;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":" * Changes the calendar page / layout.","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"public class PageCommand extends Command {","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"    public static final String COMMAND_WORD \u003d \"page\";","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"            + \": Change the calendar layout;\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"            + \"One of \u0027day\u0027, \u0027week\u0027 or \u0027month\u0027.\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"            + \"Example: \" + COMMAND_WORD + \" week\\n\";","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Switched to %1$s view.\";","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"    private final PageType pageType;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"     * Creates a PageCommand to change the calendar page / layout.","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"    public PageCommand(PageType pt) {","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"        requireNonNull(pt);","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"        pageType \u003d pt;","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, pageType),","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"                false, false, pageType, null, null);","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"Nafeij":37}},{"path":"src/main/java/seedu/calidr/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.Messages;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.index.Index;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Person;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Remark;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"    private final Index index;","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"    private final Remark remark;","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Flash161203"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Flash161203"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Flash161203"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Flash161203"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Flash161203"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Flash161203"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Flash161203"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Flash161203"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Flash161203"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Flash161203"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Flash161203"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Flash161203"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Flash161203"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Flash161203"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Flash161203"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Flash161203"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Flash161203"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Flash161203"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Flash161203"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Flash161203"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"Flash161203"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"Flash161203"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Flash161203"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"Flash161203"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Flash161203"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"Flash161203"},"content":"            return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"Flash161203"},"content":"        // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"Flash161203"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"Flash161203"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"Flash161203"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Flash161203":95}},{"path":"src/main/java/seedu/calidr/logic/commands/SearchTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.Messages;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.predicates.TitleContainsKeywordsPredicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":" * Finds and lists all tasks whose title contains any of the","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":" * keywords given. Keyword matching is case-insensitive.","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"public class SearchTaskCommand extends Command {","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"    public static final String COMMAND_WORD \u003d \"search\";","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all tasks whose titles contain any of \"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"            + \"Example: \" + COMMAND_WORD + \" assignment homework\";","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"    private final TitleContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"    public SearchTaskCommand(TitleContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"        model.updateFilteredTaskList(predicate);","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"                String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW,","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"                        model.getFilteredTaskList().size()));","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"                || (other instanceof SearchTaskCommand // instanceof handles nulls","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"                \u0026\u0026 predicate.equals(((SearchTaskCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Flash161203":43}},{"path":"src/main/java/seedu/calidr/logic/commands/ShowCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"import static seedu.calidr.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.commons.core.Messages;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.commons.core.index.Index;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.task.Task;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":" * Shows a task\u0027s details in a popup dialog.","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"public class ShowCommand extends Command {","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"    public static final String COMMAND_WORD \u003d \"show\";","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Display a task\u0027s details in a popup dialog.\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"            + \"Provide an index from the task list on the right.\";","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Showing task: %1$s\";","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"    private final Index index;","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"     * Creates a ShowCommand to show the details of the specified {@code Task}.","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"     * @param index Index of the task in the filtered task list to show.","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"    public ShowCommand(Index index) {","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"        List\u003cTask\u003e readOnlyTaskList \u003d model.getFilteredTaskList();","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"        if (index.getZeroBased() \u003e\u003d readOnlyTaskList.size() || index.getZeroBased() \u003c 0) {","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"        Task taskToShow \u003d readOnlyTaskList.get(index.getZeroBased());","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, taskToShow.getTitle()),","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"                false, false, null, null, taskToShow);","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"Nafeij":54}},{"path":"src/main/java/seedu/calidr/logic/commands/TestCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":" * Test command please ignore","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"public class TestCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"    public static final String COMMAND_WORD \u003d \"test\";","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"test command please ignore\";","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"Nafeij":15,"Flash161203":3}},{"path":"src/main/java/seedu/calidr/logic/commands/UnmarkTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vaidyanaath"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"import java.util.List;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.commons.core.Messages;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.commons.core.index.Index;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.model.task.Task;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":" * Marks a task in the task list as \u0027not done\u0027.","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"vaidyanaath"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"vaidyanaath"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"vaidyanaath"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"vaidyanaath"},"content":"            COMMAND_WORD + \": Marks a task in your task list as \u0027not done\u0027\\n\"","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"vaidyanaath"},"content":"                    + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"vaidyanaath"},"content":"                    + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"vaidyanaath"},"content":"    public static final String MESSAGE_UNMARK_TASK_SUCCESS \u003d \"Task marked as not done: %1$s\";","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"vaidyanaath"},"content":"    private final Index index;","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"     * Creates a UnmarkTaskCommand to mark the specified {@code Task}","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"     * @param index of the task in the filtered task list to mark","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"vaidyanaath"},"content":"    public UnmarkTaskCommand(Index index) {","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"vaidyanaath"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"vaidyanaath"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"vaidyanaath"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"vaidyanaath"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"vaidyanaath"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"vaidyanaath"},"content":"        List\u003cTask\u003e readOnlyTaskList \u003d model.getFilteredTaskList();","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"vaidyanaath"},"content":"        if (index.getZeroBased() \u003e\u003d readOnlyTaskList.size()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"vaidyanaath"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"vaidyanaath"},"content":"        Task taskToUnmark \u003d readOnlyTaskList.get(index.getZeroBased());","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"vaidyanaath"},"content":"        model.unmarkTask(taskToUnmark);","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"vaidyanaath"},"content":"        return new CommandResult(String.format(MESSAGE_UNMARK_TASK_SUCCESS, taskToUnmark));","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"vaidyanaath"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Nafeij":8,"vaidyanaath":45}},{"path":"src/main/java/seedu/calidr/logic/commands/ViewDateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":" * Changes the current focused date.","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"public class ViewDateCommand extends Command {","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Change the current focused date.\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"            + \"Example: \" + COMMAND_WORD + \" 29-12-2023\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"            + \"Enter without arguments to view today\u0027s date\";","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Viewing date: %1$s\";","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"    private final LocalDate toDate;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"     * Creates a ViewDateCommand to change the current focused date.","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"     * @param date the date to view","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"    public ViewDateCommand(LocalDate date) {","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"        toDate \u003d date;","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toDate),","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"                false, false, null, toDate, null);","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"Nafeij":39}},{"path":"src/main/java/seedu/calidr/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.commands.exceptions;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.Command;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Flash161203":2,"-":17}},{"path":"src/main/java/seedu/calidr/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.AddCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Address;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Email;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Person;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Remark;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.tag.Tag;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"                        PREFIX_ADDRESS, PREFIX_REMARK, PREFIX_TAG);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS,","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"                PREFIX_REMARK, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"Flash161203"},"content":"        Remark remark \u003d ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get());","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"Flash161203"},"content":"        Person person \u003d new Person(name, phone, email, address, remark, tagList);","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Flash161203":23,"-":42}},{"path":"src/main/java/seedu/calidr/logic/parser/AddEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_FROM;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_TO;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"vaidyanaath"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.AddEventCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.Event;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.model.task.params.Description;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.params.EventDateTimes;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.model.task.params.Location;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.params.Priority;","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.params.Title;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":" * Parses input arguments and creates a new AddEventCommand object","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"public class AddEventCommandParser implements Parser\u003cAddEventCommand\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"     * Parses the given {@code String} of arguments in the context of the AddEventCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"     * and returns an AddEventCommand object for execution.","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"    public AddEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"vaidyanaath"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TITLE, PREFIX_DESCRIPTION, PREFIX_LOCATION,","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"                        PREFIX_FROM, PREFIX_TO, PREFIX_PRIORITY);","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TITLE, PREFIX_FROM, PREFIX_TO)","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"        Title title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_TITLE).get());","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"Flash161203"},"content":"        String fromDateTimeString \u003d argMultimap.getValue(PREFIX_FROM).get();","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"Flash161203"},"content":"        String toDateTimeString \u003d argMultimap.getValue(PREFIX_TO).get();","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"Flash161203"},"content":"        EventDateTimes eventDateTimes \u003d ParserUtil.parseEventDateTimes(fromDateTimeString, toDateTimeString);","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"vaidyanaath"},"content":"        Event event \u003d new Event(title, eventDateTimes);","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"vaidyanaath"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"vaidyanaath"},"content":"            Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"vaidyanaath"},"content":"            event.setDescription(description);","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"vaidyanaath"},"content":"        if (argMultimap.getValue(PREFIX_LOCATION).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"vaidyanaath"},"content":"            Location location \u003d ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get());","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"vaidyanaath"},"content":"            event.setLocation(location);","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"vaidyanaath"},"content":"        Priority priority \u003d Priority.MEDIUM;","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"vaidyanaath"},"content":"        Optional\u003cString\u003e priorityValue \u003d argMultimap.getValue(PREFIX_PRIORITY);","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"vaidyanaath"},"content":"        if (priorityValue.isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"vaidyanaath"},"content":"            priority \u003d ParserUtil.parsePriority(priorityValue.get());","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"Flash161203"},"content":"        event.setPriority(priority);","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"Flash161203"},"content":"        return new AddEventCommand(event);","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"Flash161203"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"Flash161203"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"Flash161203"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"Flash161203"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Flash161203":56,"vaidyanaath":21}},{"path":"src/main/java/seedu/calidr/logic/parser/AddTodoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_BY;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"vaidyanaath"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.AddTodoCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.ToDo;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.model.task.params.Description;","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.model.task.params.Location;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.params.Priority;","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.params.Title;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.params.TodoDateTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":" * Parses input arguments and creates a new AddTodoCommand object","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"public class AddTodoCommandParser implements Parser\u003cAddTodoCommand\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTodoCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"     * and returns an AddTodoCommand object for execution.","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"    public AddTodoCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"vaidyanaath"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TITLE, PREFIX_DESCRIPTION, PREFIX_LOCATION, PREFIX_BY, PREFIX_PRIORITY);","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TITLE, PREFIX_BY)","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTodoCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"        Title title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_TITLE).get());","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"        TodoDateTime byDateTime \u003d ParserUtil.parseTodoDateTime(argMultimap.getValue(PREFIX_BY).get());","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"vaidyanaath"},"content":"        ToDo todo \u003d new ToDo(title, byDateTime);","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"vaidyanaath"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"vaidyanaath"},"content":"            Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"vaidyanaath"},"content":"            todo.setDescription(description);","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"vaidyanaath"},"content":"        if (argMultimap.getValue(PREFIX_LOCATION).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"vaidyanaath"},"content":"            Location location \u003d ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get());","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"vaidyanaath"},"content":"            todo.setLocation(location);","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"vaidyanaath"},"content":"        Priority priority \u003d Priority.MEDIUM;","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"vaidyanaath"},"content":"        Optional\u003cString\u003e priorityValue \u003d argMultimap.getValue(PREFIX_PRIORITY);","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"vaidyanaath"},"content":"        if (priorityValue.isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"vaidyanaath"},"content":"            priority \u003d ParserUtil.parsePriority(priorityValue.get());","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"Flash161203"},"content":"        todo.setPriority(priority);","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"Flash161203"},"content":"        return new AddTodoCommand(todo);","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"Flash161203"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"Flash161203"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"Flash161203"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"Flash161203"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Flash161203":52,"vaidyanaath":21}},{"path":"src/main/java/seedu/calidr/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.AddCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.Command;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.EditCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.FindCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.ListCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.RemarkCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.TestCommand;","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"Flash161203"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Flash161203"},"content":"            return new RemarkCommandParser().parse(arguments);","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":76,"author":{"gitId":"Nafeij"},"content":"        case TestCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"Nafeij"},"content":"            return new TestCommand();","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Nafeij":3,"Flash161203":18,"-":63}},{"path":"src/main/java/seedu/calidr/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"Flash161203":1,"-":59}},{"path":"src/main/java/seedu/calidr/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"Flash161203":1,"-":147}},{"path":"src/main/java/seedu/calidr/logic/parser/CalidrParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.AddEventCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.AddTodoCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.Command;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.logic.commands.EditTaskCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.logic.commands.MarkTaskCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.logic.commands.PageCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.SearchTaskCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.logic.commands.ShowCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.logic.commands.UnmarkTaskCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.logic.commands.ViewDateCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":" * Parses user input.","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"public class CalidrParser {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"     * @return the command based on the user input","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"Flash161203"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"Flash161203"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"Flash161203"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"Flash161203"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"Flash161203"},"content":"        case AddTodoCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"Flash161203"},"content":"            return new AddTodoCommandParser().parse(arguments);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"        case AddEventCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"Flash161203"},"content":"            return new AddEventCommandParser().parse(arguments);","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"vaidyanaath"},"content":"        case EditTaskCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"vaidyanaath"},"content":"            return new EditTaskCommandParser().parse(arguments);","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"vaidyanaath"},"content":"        case MarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"vaidyanaath"},"content":"            return new MarkTaskCommandParser().parse(arguments);","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"vaidyanaath"},"content":"        case UnmarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"vaidyanaath"},"content":"            return new UnmarkTaskCommandParser().parse(arguments);","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"Flash161203"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"Flash161203"},"content":"            return new DeleteTaskCommandParser().parse(arguments);","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"Nafeij"},"content":"        case ViewDateCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"Nafeij"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"Nafeij"},"content":"        case PageCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"Nafeij"},"content":"            return new PageCommandParser().parse(arguments);","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"Nafeij"},"content":"        case ShowCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"Nafeij"},"content":"            return new ShowCommandParser().parse(arguments);","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"Flash161203"},"content":"        case SearchTaskCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"Flash161203"},"content":"            return new SearchTaskCommandParser().parse(arguments);","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"Flash161203"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"Flash161203"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"Flash161203"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"Flash161203"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"Flash161203"},"content":"        default:","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"Flash161203"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Nafeij":14,"Flash161203":68,"vaidyanaath":11}},{"path":"src/main/java/seedu/calidr/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dFor Calidr\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"    public static final Prefix PREFIX_TITLE \u003d new Prefix(\"t/\");","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"vaidyanaath"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"vaidyanaath"},"content":"    public static final Prefix PREFIX_LOCATION \u003d new Prefix(\"l/\");","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"    public static final Prefix PREFIX_PRIORITY \u003d new Prefix(\"p/\");","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"    public static final Prefix PREFIX_BY \u003d new Prefix(\"by/\");","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"    public static final Prefix PREFIX_FROM \u003d new Prefix(\"from/\");","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"    public static final Prefix PREFIX_TO \u003d new Prefix(\"to/\");","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Flash161203":10,"-":14,"vaidyanaath":2}},{"path":"src/main/java/seedu/calidr/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.index.Index;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Flash161203":5,"-":24}},{"path":"src/main/java/seedu/calidr/logic/parser/DeleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":" * Parses input arguments and creates a new DeleteTaskCommand object","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"public class DeleteTaskCommandParser implements Parser\u003cDeleteTaskCommand\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTaskCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"     * and returns a DeleteTaskCommand object for execution.","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"    public DeleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"            return new DeleteTaskCommand(index);","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Flash161203":28}},{"path":"src/main/java/seedu/calidr/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.index.Index;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.EditCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.tag.Tag;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"                        PREFIX_ADDRESS, PREFIX_REMARK, PREFIX_TAG);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"Flash161203"},"content":"        if (argMultimap.getValue(PREFIX_REMARK).isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"Flash161203"},"content":"            editPersonDescriptor.setRemark(ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get()));","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Flash161203":18,"-":69}},{"path":"src/main/java/seedu/calidr/logic/parser/EditTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vaidyanaath"},"content":"package seedu.calidr.logic.parser;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"import static seedu.calidr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_BY;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_FROM;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"vaidyanaath"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"vaidyanaath"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"vaidyanaath"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_TO;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.commons.core.index.Index;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.logic.commands.EditCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.logic.commands.EditTaskCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.logic.commands.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"vaidyanaath"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"vaidyanaath"},"content":" * Parses input arguments and creates a new EditTaskCommand object","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"vaidyanaath"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"vaidyanaath"},"content":"public class EditTaskCommandParser implements Parser\u003cEditTaskCommand\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"vaidyanaath"},"content":"     * Parses the given {@code String} of arguments in the context of the EditTaskCommand","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"vaidyanaath"},"content":"     * and returns an EditTaskCommand object for execution.","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"vaidyanaath"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"vaidyanaath"},"content":"    public EditTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"vaidyanaath"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"vaidyanaath"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"vaidyanaath"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TITLE, PREFIX_DESCRIPTION, PREFIX_LOCATION,","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"                        PREFIX_BY, PREFIX_FROM, PREFIX_TO, PREFIX_PRIORITY);","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"vaidyanaath"},"content":"        Index index;","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"vaidyanaath"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"vaidyanaath"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"vaidyanaath"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"vaidyanaath"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"vaidyanaath"},"content":"        EditTaskDescriptor editTaskDescriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"vaidyanaath"},"content":"        if (argMultimap.getValue(PREFIX_TITLE).isPresent()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"vaidyanaath"},"content":"            editTaskDescriptor.setTitle(ParserUtil.parseTitle(argMultimap.getValue(PREFIX_TITLE).get()));","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"vaidyanaath"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"vaidyanaath"},"content":"            editTaskDescriptor.setDescription(ParserUtil.parseDescription(","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"vaidyanaath"},"content":"                    argMultimap.getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"vaidyanaath"},"content":"        if (argMultimap.getValue(PREFIX_LOCATION).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"vaidyanaath"},"content":"            editTaskDescriptor.setLocation(ParserUtil.parseLocation(","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"vaidyanaath"},"content":"                    argMultimap.getValue(PREFIX_LOCATION).get()));","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"vaidyanaath"},"content":"        if (argMultimap.getValue(PREFIX_BY).isPresent()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"vaidyanaath"},"content":"            editTaskDescriptor.setByDateTime(ParserUtil.parseTodoDateTime(argMultimap.getValue(PREFIX_BY).get()));","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"vaidyanaath"},"content":"        if (argMultimap.getValue(PREFIX_FROM).isPresent()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"vaidyanaath"},"content":"            editTaskDescriptor.setFromDateTime(ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_FROM).get()));","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"vaidyanaath"},"content":"        if (argMultimap.getValue(PREFIX_TO).isPresent()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"vaidyanaath"},"content":"            editTaskDescriptor.setToDateTime(ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_TO).get()));","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"Flash161203"},"content":"        if (argMultimap.getValue(PREFIX_PRIORITY).isPresent()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"Flash161203"},"content":"            editTaskDescriptor.setPriority(ParserUtil.parsePriority(","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"Flash161203"},"content":"                    argMultimap.getValue(PREFIX_PRIORITY).get()));","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"vaidyanaath"},"content":"        if (!editTaskDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"vaidyanaath"},"content":"            throw new ParseException(EditTaskCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"vaidyanaath"},"content":"        return new EditTaskCommand(index, editTaskDescriptor);","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"vaidyanaath"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"Flash161203":6,"vaidyanaath":68}},{"path":"src/main/java/seedu/calidr/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.FindCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Flash161203":5,"-":28}},{"path":"src/main/java/seedu/calidr/logic/parser/MarkTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vaidyanaath"},"content":"package seedu.calidr.logic.parser;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"import static seedu.calidr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.commons.core.index.Index;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.logic.commands.MarkTaskCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":" * Parses input arguments and creates a new MarkTaskCommand object","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"vaidyanaath"},"content":"public class MarkTaskCommandParser implements Parser\u003cMarkTaskCommand\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkTaskCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"     * @param args the arguments to be parsed","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"     * @return a MarkTaskCommand object for execution","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"vaidyanaath"},"content":"    public MarkTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"vaidyanaath"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"vaidyanaath"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"vaidyanaath"},"content":"                ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"vaidyanaath"},"content":"        Index index;","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"vaidyanaath"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"vaidyanaath"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"vaidyanaath"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"vaidyanaath"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"vaidyanaath"},"content":"        return new MarkTaskCommand(index);","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"vaidyanaath"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Nafeij":11,"vaidyanaath":26}},{"path":"src/main/java/seedu/calidr/logic/parser/PageCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package seedu.calidr.logic.parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import static seedu.calidr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.logic.commands.PageCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.PageType;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":" * Parses input arguments and creates a new PageCommand object","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"public class PageCommandParser implements Parser\u003cPageCommand\u003e {","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"    public PageCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"        PageType pageType;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"            pageType \u003d ParserUtil.parsePageType(args);","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, PageCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"        return new PageCommand(pageType);","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"Nafeij":23}},{"path":"src/main/java/seedu/calidr/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.Command;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"Flash161203":3,"-":13}},{"path":"src/main/java/seedu/calidr/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.index.Index;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.util.StringUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.PageType;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Address;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Email;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Remark;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.tag.Tag;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.model.task.params.Description;","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.params.EventDateTimes;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.model.task.params.Location;","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.params.Priority;","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.params.Title;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.params.TodoDateTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"    private static final Map\u003cString, LocalDateTime\u003e KEY_DATE_MAP \u003d Map.of(","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"            \"today\", LocalDateTime.now(),","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"            \"tomorrow\", LocalDateTime.now().plusDays(1),","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"            \"next week\", LocalDateTime.now().plusWeeks(1),","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"            \"next month\", LocalDateTime.now().plusMonths(1),","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"            \"next year\", LocalDateTime.now().plusYears(1),","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"            \"heat death of universe\", LocalDateTime.MAX","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"    );","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it.","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"Flash161203"},"content":"     * Parses a {@code String remark} into an {@code Remark}.","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"Flash161203"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"Flash161203"},"content":"    public static Remark parseRemark(String remark) {","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"Flash161203"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"Flash161203"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"Flash161203"},"content":"        return new Remark(trimmedRemark);","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":160,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":161,"author":{"gitId":"Flash161203"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dFor Calidr\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":163,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":164,"author":{"gitId":"Flash161203"},"content":"     * Parses a {@code String title} into a {@code Title}.","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"Flash161203"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-14"},{"lineNumber":166,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":167,"author":{"gitId":"Flash161203"},"content":"     * @throws ParseException if the given {@code title} is invalid.","lastModifiedDate":"2023-03-14"},{"lineNumber":168,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":169,"author":{"gitId":"Flash161203"},"content":"    public static Title parseTitle(String title) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":170,"author":{"gitId":"Flash161203"},"content":"        requireNonNull(title);","lastModifiedDate":"2023-03-14"},{"lineNumber":171,"author":{"gitId":"Flash161203"},"content":"        String trimmedTitle \u003d title.trim();","lastModifiedDate":"2023-03-14"},{"lineNumber":172,"author":{"gitId":"Flash161203"},"content":"        if (!Title.isValidTitle(trimmedTitle)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":173,"author":{"gitId":"Flash161203"},"content":"            throw new ParseException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":174,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":175,"author":{"gitId":"Flash161203"},"content":"        return new Title(trimmedTitle);","lastModifiedDate":"2023-03-14"},{"lineNumber":176,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":179,"author":{"gitId":"vaidyanaath"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2023-03-25"},{"lineNumber":180,"author":{"gitId":"vaidyanaath"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-25"},{"lineNumber":181,"author":{"gitId":"vaidyanaath"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":182,"author":{"gitId":"vaidyanaath"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2023-03-25"},{"lineNumber":183,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":184,"author":{"gitId":"vaidyanaath"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2023-03-22"},{"lineNumber":185,"author":{"gitId":"vaidyanaath"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-03-22"},{"lineNumber":186,"author":{"gitId":"vaidyanaath"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2023-03-22"},{"lineNumber":187,"author":{"gitId":"vaidyanaath"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":188,"author":{"gitId":"vaidyanaath"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-22"},{"lineNumber":189,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":190,"author":{"gitId":"vaidyanaath"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2023-03-22"},{"lineNumber":191,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":192,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":193,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":194,"author":{"gitId":"vaidyanaath"},"content":"     * Parses a {@code String location} into a {@code Location}.","lastModifiedDate":"2023-03-29"},{"lineNumber":195,"author":{"gitId":"vaidyanaath"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-29"},{"lineNumber":196,"author":{"gitId":"vaidyanaath"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":197,"author":{"gitId":"vaidyanaath"},"content":"     * @throws ParseException if the given {@code location} is invalid.","lastModifiedDate":"2023-03-29"},{"lineNumber":198,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":199,"author":{"gitId":"vaidyanaath"},"content":"    public static Location parseLocation(String location) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":200,"author":{"gitId":"vaidyanaath"},"content":"        requireNonNull(location);","lastModifiedDate":"2023-03-29"},{"lineNumber":201,"author":{"gitId":"vaidyanaath"},"content":"        String trimmedLocation \u003d location.trim();","lastModifiedDate":"2023-03-29"},{"lineNumber":202,"author":{"gitId":"vaidyanaath"},"content":"        if (!Description.isValidDescription(trimmedLocation)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":203,"author":{"gitId":"vaidyanaath"},"content":"            throw new ParseException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":204,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":205,"author":{"gitId":"vaidyanaath"},"content":"        return new Location(trimmedLocation);","lastModifiedDate":"2023-03-29"},{"lineNumber":206,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":207,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":208,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":209,"author":{"gitId":"Nafeij"},"content":"     * Parses a {@code String dateText} into a {@code LocalDate} object.","lastModifiedDate":"2023-03-19"},{"lineNumber":210,"author":{"gitId":"Nafeij"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-19"},{"lineNumber":211,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":212,"author":{"gitId":"Nafeij"},"content":"     * @param dateText The string containing the date.","lastModifiedDate":"2023-03-19"},{"lineNumber":213,"author":{"gitId":"Nafeij"},"content":"     * @return A {@code LocalDate} object representing the given date .","lastModifiedDate":"2023-03-19"},{"lineNumber":214,"author":{"gitId":"Nafeij"},"content":"     * @throws ParseException if the given {@code dateText} is invalid.","lastModifiedDate":"2023-03-19"},{"lineNumber":215,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":216,"author":{"gitId":"Nafeij"},"content":"    public static LocalDate parseDate(String dateText) throws ParseException {","lastModifiedDate":"2023-03-19"},{"lineNumber":217,"author":{"gitId":"Nafeij"},"content":"        dateText \u003d dateText.trim();","lastModifiedDate":"2023-03-19"},{"lineNumber":218,"author":{"gitId":"Nafeij"},"content":"        Optional\u003cLocalDateTime\u003e keyDateTime \u003d parseDateKeyword(dateText);","lastModifiedDate":"2023-03-19"},{"lineNumber":219,"author":{"gitId":"Nafeij"},"content":"        if (keyDateTime.isPresent()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":220,"author":{"gitId":"Nafeij"},"content":"            return keyDateTime.get().toLocalDate();","lastModifiedDate":"2023-03-19"},{"lineNumber":221,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":222,"author":{"gitId":"Nafeij"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2023-03-19"},{"lineNumber":223,"author":{"gitId":"Nafeij"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":224,"author":{"gitId":"Nafeij"},"content":"            return LocalDate.parse(dateText, dateTimeFormatter);","lastModifiedDate":"2023-03-19"},{"lineNumber":225,"author":{"gitId":"Nafeij"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-19"},{"lineNumber":226,"author":{"gitId":"Nafeij"},"content":"            throw new ParseException(\"Date-times should be of the format DD-MM-YYYY\");","lastModifiedDate":"2023-03-19"},{"lineNumber":227,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":228,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":229,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":230,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":231,"author":{"gitId":"vaidyanaath"},"content":"     * Parses a {@code String dateTimeText} into a {@code LocalDateTime} object.","lastModifiedDate":"2023-03-15"},{"lineNumber":232,"author":{"gitId":"vaidyanaath"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-15"},{"lineNumber":233,"author":{"gitId":"vaidyanaath"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":234,"author":{"gitId":"vaidyanaath"},"content":"     * @param dateTimeText The string containing the date and time.","lastModifiedDate":"2023-03-15"},{"lineNumber":235,"author":{"gitId":"vaidyanaath"},"content":"     * @return A {@code LocalDateTime} object representing the given date and time.","lastModifiedDate":"2023-03-15"},{"lineNumber":236,"author":{"gitId":"vaidyanaath"},"content":"     * @throws ParseException if the given {@code dateTimeText} is invalid.","lastModifiedDate":"2023-03-15"},{"lineNumber":237,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":238,"author":{"gitId":"vaidyanaath"},"content":"    public static LocalDateTime parseDateTime(String dateTimeText) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":239,"author":{"gitId":"Nafeij"},"content":"        dateTimeText \u003d dateTimeText.trim();","lastModifiedDate":"2023-03-19"},{"lineNumber":240,"author":{"gitId":"Nafeij"},"content":"        Optional\u003cLocalDateTime\u003e keyDateTime \u003d parseDateKeyword(dateTimeText);","lastModifiedDate":"2023-03-19"},{"lineNumber":241,"author":{"gitId":"Nafeij"},"content":"        if (keyDateTime.isPresent()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":242,"author":{"gitId":"Nafeij"},"content":"            return keyDateTime.get();","lastModifiedDate":"2023-03-19"},{"lineNumber":243,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":244,"author":{"gitId":"vaidyanaath"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-03-15"},{"lineNumber":245,"author":{"gitId":"Flash161203"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":246,"author":{"gitId":"Nafeij"},"content":"            return LocalDateTime.parse(dateTimeText, dateTimeFormatter);","lastModifiedDate":"2023-03-19"},{"lineNumber":247,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":248,"author":{"gitId":"Flash161203"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":249,"author":{"gitId":"vaidyanaath"},"content":"            throw new ParseException(\"Date-times should be of the format DD-MM-YYYY hhmm\");","lastModifiedDate":"2023-03-15"},{"lineNumber":250,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":251,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":252,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":253,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":254,"author":{"gitId":"Flash161203"},"content":"     * Parses a {@code String todoDateTime} into a {@code TodoDateTime}.","lastModifiedDate":"2023-03-14"},{"lineNumber":255,"author":{"gitId":"Flash161203"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-14"},{"lineNumber":256,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":257,"author":{"gitId":"Flash161203"},"content":"     * @throws ParseException if the given {@code todoDateTime} is invalid.","lastModifiedDate":"2023-03-14"},{"lineNumber":258,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":259,"author":{"gitId":"Flash161203"},"content":"    public static TodoDateTime parseTodoDateTime(String todoDateTime) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":260,"author":{"gitId":"Flash161203"},"content":"        requireNonNull(todoDateTime);","lastModifiedDate":"2023-03-14"},{"lineNumber":261,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":262,"author":{"gitId":"Nafeij"},"content":"        LocalDateTime byDateTime \u003d parseDateTime(todoDateTime);","lastModifiedDate":"2023-03-19"},{"lineNumber":263,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":264,"author":{"gitId":"Flash161203"},"content":"        return new TodoDateTime(byDateTime);","lastModifiedDate":"2023-03-14"},{"lineNumber":265,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":266,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":267,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":268,"author":{"gitId":"Flash161203"},"content":"     * Parses a {@code String fromDateTime} and {@code String toDateTime}","lastModifiedDate":"2023-03-14"},{"lineNumber":269,"author":{"gitId":"Flash161203"},"content":"     * into a {@code EventDateTimes}. Leading and trailing whitespaces will","lastModifiedDate":"2023-03-14"},{"lineNumber":270,"author":{"gitId":"Flash161203"},"content":"     * be trimmed.","lastModifiedDate":"2023-03-14"},{"lineNumber":271,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":272,"author":{"gitId":"Flash161203"},"content":"     * @throws ParseException if the given {@code String fromDateTime} and","lastModifiedDate":"2023-03-14"},{"lineNumber":273,"author":{"gitId":"Flash161203"},"content":"     *                        {@code String toDateTime} are invalid.","lastModifiedDate":"2023-03-14"},{"lineNumber":274,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":275,"author":{"gitId":"Flash161203"},"content":"    public static EventDateTimes parseEventDateTimes(String fromDateTime, String toDateTime)","lastModifiedDate":"2023-03-14"},{"lineNumber":276,"author":{"gitId":"Flash161203"},"content":"            throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":277,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":278,"author":{"gitId":"Flash161203"},"content":"        requireAllNonNull(fromDateTime, toDateTime);","lastModifiedDate":"2023-03-14"},{"lineNumber":279,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":280,"author":{"gitId":"Nafeij"},"content":"        LocalDateTime from \u003d parseDateTime(fromDateTime);","lastModifiedDate":"2023-03-19"},{"lineNumber":281,"author":{"gitId":"Nafeij"},"content":"        LocalDateTime to \u003d parseDateTime(toDateTime);","lastModifiedDate":"2023-03-19"},{"lineNumber":282,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":283,"author":{"gitId":"Flash161203"},"content":"        if (!EventDateTimes.isValidEventDateTimes(from, to)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":284,"author":{"gitId":"Flash161203"},"content":"            throw new ParseException(EventDateTimes.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":285,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":286,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":287,"author":{"gitId":"Flash161203"},"content":"        return new EventDateTimes(from, to);","lastModifiedDate":"2023-03-14"},{"lineNumber":288,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":289,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":290,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":291,"author":{"gitId":"Nafeij"},"content":"     * Parses a shorthand into a {@code LocalDateTime} object.","lastModifiedDate":"2023-03-19"},{"lineNumber":292,"author":{"gitId":"Nafeij"},"content":"     * {@code dateTimeText} can be one of the following:","lastModifiedDate":"2023-03-19"},{"lineNumber":293,"author":{"gitId":"Nafeij"},"content":"     * - \"today\"","lastModifiedDate":"2023-03-19"},{"lineNumber":294,"author":{"gitId":"Nafeij"},"content":"     * - \"tomorrow\"","lastModifiedDate":"2023-03-19"},{"lineNumber":295,"author":{"gitId":"Nafeij"},"content":"     * - \"next week\"","lastModifiedDate":"2023-03-19"},{"lineNumber":296,"author":{"gitId":"Nafeij"},"content":"     * - \"next month\"","lastModifiedDate":"2023-03-19"},{"lineNumber":297,"author":{"gitId":"Nafeij"},"content":"     * - \"next year\"","lastModifiedDate":"2023-03-19"},{"lineNumber":298,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":299,"author":{"gitId":"Nafeij"},"content":"     * @param dateTimeText The shorthand.","lastModifiedDate":"2023-03-19"},{"lineNumber":300,"author":{"gitId":"Nafeij"},"content":"     * @return A {@code LocalDateTime} object representing the given date and time.","lastModifiedDate":"2023-03-19"},{"lineNumber":301,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":302,"author":{"gitId":"Nafeij"},"content":"    public static Optional\u003cLocalDateTime\u003e parseDateKeyword(String dateTimeText) {","lastModifiedDate":"2023-03-19"},{"lineNumber":303,"author":{"gitId":"Nafeij"},"content":"        return Optional.of(dateTimeText).map(KEY_DATE_MAP::get);","lastModifiedDate":"2023-03-19"},{"lineNumber":304,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":305,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":306,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":307,"author":{"gitId":"Nafeij"},"content":"     * Parses a {@code String pageType} into a {@code PageType}.","lastModifiedDate":"2023-03-19"},{"lineNumber":308,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":309,"author":{"gitId":"Nafeij"},"content":"     * @param args The string containing the page type.","lastModifiedDate":"2023-03-19"},{"lineNumber":310,"author":{"gitId":"Nafeij"},"content":"     * @return A {@code PageType} object representing the given page type.","lastModifiedDate":"2023-03-19"},{"lineNumber":311,"author":{"gitId":"Nafeij"},"content":"     * @throws ParseException if the given {@code pageType} is invalid.","lastModifiedDate":"2023-03-19"},{"lineNumber":312,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":313,"author":{"gitId":"Nafeij"},"content":"    public static PageType parsePageType(String args) throws ParseException {","lastModifiedDate":"2023-03-19"},{"lineNumber":314,"author":{"gitId":"Nafeij"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-19"},{"lineNumber":315,"author":{"gitId":"Nafeij"},"content":"        PageType pageType;","lastModifiedDate":"2023-03-19"},{"lineNumber":316,"author":{"gitId":"Nafeij"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":317,"author":{"gitId":"Nafeij"},"content":"            pageType \u003d PageType.valueOf(args.trim().toUpperCase());","lastModifiedDate":"2023-03-19"},{"lineNumber":318,"author":{"gitId":"Nafeij"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-19"},{"lineNumber":319,"author":{"gitId":"Nafeij"},"content":"            throw new ParseException(\"Invalid page type.\");","lastModifiedDate":"2023-03-19"},{"lineNumber":320,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":321,"author":{"gitId":"Nafeij"},"content":"        return pageType;","lastModifiedDate":"2023-03-19"},{"lineNumber":322,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":323,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":324,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":325,"author":{"gitId":"Flash161203"},"content":"     * Parses a {@code String priority} into a {@code Priority}.","lastModifiedDate":"2023-03-25"},{"lineNumber":326,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":327,"author":{"gitId":"Flash161203"},"content":"     * @param priorityString The string containing the priority.","lastModifiedDate":"2023-03-25"},{"lineNumber":328,"author":{"gitId":"Flash161203"},"content":"     * @return A {@code Priority} object representing the given priority.","lastModifiedDate":"2023-03-25"},{"lineNumber":329,"author":{"gitId":"Flash161203"},"content":"     * @throws ParseException if the given {@code priority} is invalid.","lastModifiedDate":"2023-03-25"},{"lineNumber":330,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":331,"author":{"gitId":"Flash161203"},"content":"    public static Priority parsePriority(String priorityString) throws ParseException {","lastModifiedDate":"2023-03-25"},{"lineNumber":332,"author":{"gitId":"Flash161203"},"content":"        requireNonNull(priorityString);","lastModifiedDate":"2023-03-25"},{"lineNumber":333,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":334,"author":{"gitId":"Flash161203"},"content":"        Priority priority;","lastModifiedDate":"2023-03-25"},{"lineNumber":335,"author":{"gitId":"Flash161203"},"content":"        try {","lastModifiedDate":"2023-03-25"},{"lineNumber":336,"author":{"gitId":"Flash161203"},"content":"            priority \u003d Priority.valueOf(priorityString.trim().toUpperCase());","lastModifiedDate":"2023-03-25"},{"lineNumber":337,"author":{"gitId":"Flash161203"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-25"},{"lineNumber":338,"author":{"gitId":"Flash161203"},"content":"            throw new ParseException(Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-25"},{"lineNumber":339,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":340,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":341,"author":{"gitId":"Flash161203"},"content":"        return priority;","lastModifiedDate":"2023-03-25"},{"lineNumber":342,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Nafeij":82,"Flash161203":105,"-":113,"vaidyanaath":43}},{"path":"src/main/java/seedu/calidr/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"Flash161203":1,"-":38}},{"path":"src/main/java/seedu/calidr/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.parser;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.index.Index;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.RemarkCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Remark;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":" * Parses input arguments and creates a new RemarkCommand object","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"     * Parses the given {@code String} of arguments in the context of the RemarkCommand","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"     * and returns a RemarkCommand object for execution.","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"                PREFIX_REMARK);","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"        Index index;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"        try {","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"                    RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"        String remarkString \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"        Remark remark \u003d new Remark(remarkString);","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"        return new RemarkCommand(index, remark);","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Flash161203":42}},{"path":"src/main/java/seedu/calidr/logic/parser/SearchTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.parser;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.SearchTaskCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.predicates.TitleContainsKeywordsPredicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":" * Parses input arguments and creates a new SearchTaskCommand object","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"public class SearchTaskCommandParser implements Parser\u003cSearchTaskCommand\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"     * Parses the given {@code String} of arguments in the context of the SearchTaskCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"     * and returns a SearchTaskCommand object for execution.","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"    public SearchTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SearchTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"        return new SearchTaskCommand(new TitleContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Flash161203":32}},{"path":"src/main/java/seedu/calidr/logic/parser/ShowCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package seedu.calidr.logic.parser;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import static seedu.calidr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.commons.core.index.Index;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.logic.commands.ShowCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":" * Parses input arguments and creates a new ShowCommand object","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"public class ShowCommandParser implements Parser\u003cShowCommand\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"     * Parses the given {@code String} of arguments in the context of the ShowCommand","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"     * and returns a ShowCommand object for execution.","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"    public ShowCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"        Index index;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"            index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ShowCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"        return new ShowCommand(index);","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"Nafeij":31}},{"path":"src/main/java/seedu/calidr/logic/parser/UnmarkTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vaidyanaath"},"content":"package seedu.calidr.logic.parser;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"import static seedu.calidr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.commons.core.index.Index;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.logic.commands.UnmarkTaskCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":" * Parses input arguments and creates a new UnmarkTaskCommand object","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"vaidyanaath"},"content":"public class UnmarkTaskCommandParser implements Parser\u003cUnmarkTaskCommand\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"     * Parses the given {@code String} of arguments in the context of the UnmarkTaskCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"     * @param args the arguments to be parsed","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"     * @return a UnmarkTaskCommand object for execution","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"vaidyanaath"},"content":"    public UnmarkTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"vaidyanaath"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"vaidyanaath"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"vaidyanaath"},"content":"                ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"vaidyanaath"},"content":"        Index index;","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"vaidyanaath"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"vaidyanaath"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"vaidyanaath"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"vaidyanaath"},"content":"        return new UnmarkTaskCommand(index);","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"vaidyanaath"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Nafeij":13,"vaidyanaath":25}},{"path":"src/main/java/seedu/calidr/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package seedu.calidr.logic.parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import static seedu.calidr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.logic.commands.ViewDateCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":" * Parses input arguments and creates a new ViewCommand object","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"public class ViewCommandParser implements Parser\u003cViewDateCommand\u003e {","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"     * and returns a ViewCommand object for execution.","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"    public ViewDateCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"        args \u003d args.trim();","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"            return new ViewDateCommand(LocalDate.now());","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"        LocalDate date;","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"            date \u003d ParserUtil.parseDate(args);","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewDateCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"        return new ViewDateCommand(date);","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"Nafeij":34}},{"path":"src/main/java/seedu/calidr/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.parser.exceptions;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"Flash161203":2,"-":15}},{"path":"src/main/java/seedu/calidr/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Person;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.UniquePersonList;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Flash161203":3,"-":117}},{"path":"src/main/java/seedu/calidr/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.GuiSettings;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Person;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.task.Task;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"     * Returns the AddressBook","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"Nafeij"},"content":"     * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"vaidyanaath"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"Nafeij"},"content":"     * Returns the task list","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"Nafeij"},"content":"    ReadOnlyTaskList getTaskList();","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"vaidyanaath"},"content":"     * Replaces task list data with the data in {@code taskList}.","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"vaidyanaath"},"content":"    void setTaskList(ReadOnlyTaskList taskList);","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"vaidyanaath"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the task list.","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"vaidyanaath"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"vaidyanaath"},"content":"     * Deletes the given task.","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"vaidyanaath"},"content":"     * The task must exist in the task list.","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"vaidyanaath"},"content":"    void deleteTask(Task task);","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"vaidyanaath"},"content":"     * Adds the given task.","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"vaidyanaath"},"content":"     * {@code task} must not already exist in the task list.","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"vaidyanaath"},"content":"    void addTask(Task task);","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"vaidyanaath"},"content":"     * Replaces the given task {@code target} with {@code editedTask}.","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"vaidyanaath"},"content":"     * {@code target} must exist in the task list.","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"vaidyanaath"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the task list.","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"vaidyanaath"},"content":"    void setTask(Task target, Task editedTask);","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"vaidyanaath"},"content":"    void markTask(Task task);","lastModifiedDate":"2023-03-24"},{"lineNumber":138,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":139,"author":{"gitId":"vaidyanaath"},"content":"    void unmarkTask(Task task);","lastModifiedDate":"2023-03-24"},{"lineNumber":140,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":141,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"vaidyanaath"},"content":"     * Returns an unmodifiable view of the filtered task list","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"vaidyanaath"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"vaidyanaath"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"vaidyanaath"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"vaidyanaath"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"vaidyanaath"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Nafeij":28,"Flash161203":3,"-":77,"vaidyanaath":44}},{"path":"src/main/java/seedu/calidr/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.GuiSettings;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.LogsCenter;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Person;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.task.Task;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.model.tasklist.TaskList;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"vaidyanaath"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"vaidyanaath"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"vaidyanaath"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"vaidyanaath"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.taskList.getTaskList());","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"        return userPrefs;","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"Nafeij"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"Nafeij"},"content":"        return addressBook;","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"Nafeij"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"Nafeij"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"vaidyanaath"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"vaidyanaath"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"Nafeij"},"content":"    public ReadOnlyTaskList getTaskList() {","lastModifiedDate":"2023-03-19"},{"lineNumber":160,"author":{"gitId":"Nafeij"},"content":"        return taskList;","lastModifiedDate":"2023-03-19"},{"lineNumber":161,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"vaidyanaath"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"Nafeij"},"content":"    public void setTaskList(ReadOnlyTaskList taskList) {","lastModifiedDate":"2023-03-19"},{"lineNumber":165,"author":{"gitId":"Nafeij"},"content":"        this.taskList.resetData(taskList);","lastModifiedDate":"2023-03-19"},{"lineNumber":166,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"vaidyanaath"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"vaidyanaath"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-13"},{"lineNumber":170,"author":{"gitId":"vaidyanaath"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"vaidyanaath"},"content":"        return taskList.hasTask(task);","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"vaidyanaath"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"vaidyanaath"},"content":"    public void deleteTask(Task task) {","lastModifiedDate":"2023-03-18"},{"lineNumber":176,"author":{"gitId":"vaidyanaath"},"content":"        taskList.deleteTask(task);","lastModifiedDate":"2023-03-18"},{"lineNumber":177,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"vaidyanaath"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"vaidyanaath"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"vaidyanaath"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"vaidyanaath"},"content":"        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-03-13"},{"lineNumber":183,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"vaidyanaath"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"vaidyanaath"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-03-18"},{"lineNumber":187,"author":{"gitId":"vaidyanaath"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2023-03-18"},{"lineNumber":188,"author":{"gitId":"vaidyanaath"},"content":"        taskList.setTask(target, editedTask);","lastModifiedDate":"2023-03-18"},{"lineNumber":189,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"vaidyanaath"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":192,"author":{"gitId":"vaidyanaath"},"content":"    public void markTask(Task task) {","lastModifiedDate":"2023-03-24"},{"lineNumber":193,"author":{"gitId":"vaidyanaath"},"content":"        taskList.markTask(task);","lastModifiedDate":"2023-03-24"},{"lineNumber":194,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":195,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":196,"author":{"gitId":"vaidyanaath"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":197,"author":{"gitId":"vaidyanaath"},"content":"    public void unmarkTask(Task task) {","lastModifiedDate":"2023-03-24"},{"lineNumber":198,"author":{"gitId":"vaidyanaath"},"content":"        taskList.unmarkTask(task);","lastModifiedDate":"2023-03-24"},{"lineNumber":199,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":200,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":201,"author":{"gitId":"vaidyanaath"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Task List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":202,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":203,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":204,"author":{"gitId":"vaidyanaath"},"content":"     * Returns an unmodifiable view of the list of {@code Task} backed by the internal list of","lastModifiedDate":"2023-03-13"},{"lineNumber":205,"author":{"gitId":"vaidyanaath"},"content":"     * {@code versionedTaskList}","lastModifiedDate":"2023-03-13"},{"lineNumber":206,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":207,"author":{"gitId":"vaidyanaath"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":208,"author":{"gitId":"vaidyanaath"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":209,"author":{"gitId":"vaidyanaath"},"content":"        return filteredTasks;","lastModifiedDate":"2023-03-13"},{"lineNumber":210,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":211,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":212,"author":{"gitId":"vaidyanaath"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":213,"author":{"gitId":"vaidyanaath"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2023-03-13"},{"lineNumber":214,"author":{"gitId":"vaidyanaath"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":215,"author":{"gitId":"vaidyanaath"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":216,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":217,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Nafeij":14,"Flash161203":5,"-":136,"vaidyanaath":63}},{"path":"src/main/java/seedu/calidr/model/PageType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package seedu.calidr.model;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":" * Represents the type of page to be displayed by the calendar panel.","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"public enum PageType {","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"    DAY(\"day\") {","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"        @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"        public PageType next(PageType pt) {","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"            return WEEK;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"    },","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"    WEEK(\"week\") {","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"        @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"        public PageType next(PageType pt) {","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"            return MONTH;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"    },","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"    MONTH(\"month\") {","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"        @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"        public PageType next(PageType pt) {","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"            return DAY;","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"    },","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"    NEXT(\"next\") {","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"        @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"        public PageType next(PageType pt) {","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"            if (pt \u003d\u003d NEXT) {","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"                return DAY;","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"            return pt.next(pt);","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"    };","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"    private final String string;","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"    PageType(String string) {","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"        this.string \u003d string;","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"    public abstract PageType next(PageType pt);","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"    public String toString() {","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"        return string;","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"Nafeij":51}},{"path":"src/main/java/seedu/calidr/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Person;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Flash161203":2,"-":15}},{"path":"src/main/java/seedu/calidr/model/ReadOnlyTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vaidyanaath"},"content":"package seedu.calidr.model;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.model.task.Task;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":" * Unmodifiable view of a task list.","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"vaidyanaath"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"vaidyanaath"},"content":"public interface ReadOnlyTaskList {","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"vaidyanaath"},"content":"     * Returns an unmodifiable view of the task list.","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"vaidyanaath"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"vaidyanaath"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"vaidyanaath":15}},{"path":"src/main/java/seedu/calidr/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.GuiSettings;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"Flash161203":2,"-":14}},{"path":"src/main/java/seedu/calidr/model/TaskEntry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package seedu.calidr.model;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import com.calendarfx.model.Entry;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"import javafx.beans.property.BooleanProperty;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"import javafx.beans.property.ObjectProperty;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"import javafx.beans.property.SimpleBooleanProperty;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"import javafx.beans.property.SimpleObjectProperty;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.task.Task;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.params.Priority;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":" * Custom CalendarFX entry representing a Calidr Task. This contains all the required","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":" * information for a single Task to interface with CalendarfX.","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"public class TaskEntry extends Entry\u003cTask\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"    private final ObjectProperty\u003cPriority\u003e priority \u003d new SimpleObjectProperty\u003c\u003e(this, \"priority\");","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"    private final BooleanProperty isDone \u003d new SimpleBooleanProperty(this, \"isDone\");","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"    public final ObjectProperty\u003cPriority\u003e priorityProperty() {","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"        return priority;","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"    public final Priority getPriority() {","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"        return priority.get();","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"    public final void setPriority(Priority priority) {","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"        this.priority.set(priority);","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"    public final BooleanProperty isDoneProperty() {","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"        return isDone;","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"    public final boolean getIsDone() {","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"        return isDone.get();","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"    public final void setIsDone(boolean isDone) {","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"        this.isDone.set(isDone);","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"     * Creates a new TaskEntry object to support recurrence.","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"    public TaskEntry createRecurrence() {","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"        TaskEntry recurrence \u003d new TaskEntry();","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"        recurrence.setPriority(getPriority());","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"        recurrence.setIsDone(getIsDone());","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"        return recurrence;","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"    public String toString() {","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"        return \"Task Entry: \" + getTitle() + \" \" + getPriority() + \" \" + getIsDone();","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Nafeij":59,"Flash161203":1}},{"path":"src/main/java/seedu/calidr/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.GuiSettings;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.toAbsolutePath().equals(o.addressBookFilePath.toAbsolutePath());","lastModifiedDate":"2023-02-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return \"Gui Settings : \" + guiSettings + \"\\nLocal data file location : \" + addressBookFilePath;","lastModifiedDate":"2023-02-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Flash161203":2,"-":82}},{"path":"src/main/java/seedu/calidr/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model.person;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Flash161203":2,"-":55}},{"path":"src/main/java/seedu/calidr/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model.person;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Flash161203":2,"-":69}},{"path":"src/main/java/seedu/calidr/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model.person;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Flash161203":2,"-":57}},{"path":"src/main/java/seedu/calidr/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model.person;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.util.StringUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Flash161203":2,"-":29}},{"path":"src/main/java/seedu/calidr/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model.person;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.tag.Tag;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"    private final Remark remark;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Remark remark, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"        requireAllNonNull(name, phone, email, address, remark, tags);","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"Flash161203"},"content":"    public Remark getRemark() {","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Flash161203"},"content":"        return remark;","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":102,"author":{"gitId":"Flash161203"},"content":"                \u0026\u0026 otherPerson.getRemark().equals(getRemark())","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"Flash161203"},"content":"        return Objects.hash(name, phone, email, address, remark, tags);","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":121,"author":{"gitId":"Flash161203"},"content":"                .append(getAddress())","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"Flash161203"},"content":"                .append(\"; Remark: \")","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"Flash161203"},"content":"                .append(getRemark());","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Flash161203":17,"-":116}},{"path":"src/main/java/seedu/calidr/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model.person;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Flash161203":2,"-":51}},{"path":"src/main/java/seedu/calidr/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model.person;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"public class Remark {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"    public final String value;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"     * Creates a Remark object with a particular String value.","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"     * @param remark The String value of the Remark.","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"    public Remark(String remark) {","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"        value \u003d remark;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"        return value;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Flash161203":38}},{"path":"src/main/java/seedu/calidr/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model.person;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Flash161203":4,"-":133}},{"path":"src/main/java/seedu/calidr/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model.person.exceptions;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Flash161203":1,"-":10}},{"path":"src/main/java/seedu/calidr/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model.person.exceptions;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"Flash161203":1,"-":5}},{"path":"src/main/java/seedu/calidr/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model.tag;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Flash161203":2,"-":52}},{"path":"src/main/java/seedu/calidr/model/task/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package seedu.calidr.model.task;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.params.EventDateTimes;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.params.Title;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":" * Represents an event - a task with specific start and end","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":" * dates and times.","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"public class Event extends Task {","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"    private final EventDateTimes eventDateTimes;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"     * Creates an Event with the given details.","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"     * @param title The title of the Event.","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"     * @param eventDateTimes The date-times associated with the Event.","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"    public Event(Title title, EventDateTimes eventDateTimes) {","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"        super(title);","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"        assert eventDateTimes !\u003d null;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"        this.eventDateTimes \u003d eventDateTimes;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"    public EventDateTimes getEventDateTimes() {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"        return eventDateTimes;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"    public String toString() {","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"vaidyanaath"},"content":"        StringBuilder sb \u003d new StringBuilder(\"[E]\");","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"vaidyanaath"},"content":"        String mark \u003d isDone() ? \"X\" : \" \";","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"vaidyanaath"},"content":"        sb.append(\"{\")","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"vaidyanaath"},"content":"                .append(getPriority().toString().toUpperCase())","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"vaidyanaath"},"content":"                .append(\"}[\").append(mark).append(\"] \")","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"vaidyanaath"},"content":"                .append(getTitle())","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"vaidyanaath"},"content":"                .append(\"(\")","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"vaidyanaath"},"content":"                .append(eventDateTimes.toString())","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"vaidyanaath"},"content":"                .append(\")\");","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"vaidyanaath"},"content":"        if (getDescription().isPresent()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"vaidyanaath"},"content":"            sb.append(\": \\n\").append(getDescription().get());","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"vaidyanaath"},"content":"        if (getLocation().isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"vaidyanaath"},"content":"            sb.append(\"\\n@ \").append(getLocation().get());","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"vaidyanaath"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"Flash161203"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"Flash161203"},"content":"        return super.equals(other)","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"Flash161203"},"content":"                \u0026\u0026 eventDateTimes.equals(((Event) other).eventDateTimes);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Nafeij":1,"Flash161203":39,"vaidyanaath":20}},{"path":"src/main/java/seedu/calidr/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package seedu.calidr.model.task;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"import net.fortuna.ical4j.filter.FilterExpression;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.model.task.params.Description;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.model.task.params.Location;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.params.Priority;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.params.Title;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"vaidyanaath"},"content":" * Represents a task.","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"public abstract class Task {","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"    private final Title title;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"    private Description description;","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"vaidyanaath"},"content":"    private Location location;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"    private boolean isDone;","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"    private Priority priority;","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"     * Creates a Task object with the given title and MEDIUM priority.","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"     * @param title The title of the Task.","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"    public Task(Title title) {","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"        assert title !\u003d null;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"vaidyanaath"},"content":"        this.priority \u003d Priority.MEDIUM;","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"    public Title getTitle() {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"        return this.title;","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"vaidyanaath"},"content":"    public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"vaidyanaath"},"content":"        return Optional.ofNullable(this.description);","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"vaidyanaath"},"content":"    public Optional\u003cLocation\u003e getLocation() {","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"vaidyanaath"},"content":"        return Optional.ofNullable(this.location);","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"Flash161203"},"content":"    public void setDescription(Description description) {","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"Flash161203"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"vaidyanaath"},"content":"    public void setLocation(Location location) {","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"vaidyanaath"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"Flash161203"},"content":"    public void mark() {","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"Flash161203"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"Flash161203"},"content":"    public void unmark() {","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"Flash161203"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"Flash161203"},"content":"    public void setPriority(Priority p) {","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"vaidyanaath"},"content":"        assert p !\u003d null;","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"Flash161203"},"content":"        this.priority \u003d p;","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"Nafeij"},"content":"    public Priority getPriority() {","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"Nafeij"},"content":"        return this.priority;","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"Nafeij"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"Nafeij"},"content":"        return this.isDone;","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"Nafeij"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"Nafeij"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"Flash161203"},"content":"     * Returns true if both Tasks have the same details.","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"Flash161203"},"content":"    public boolean isSameTask(Task otherTask) {","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"Flash161203"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"Flash161203"},"content":"            return true;","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"Flash161203"},"content":"        return equals(otherTask);","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"Flash161203"},"content":"    public String toString() {","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"vaidyanaath"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"Flash161203"},"content":"        String mark \u003d this.isDone ? \"X\" : \" \";","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"vaidyanaath"},"content":"        sb.append(\"{\")","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"vaidyanaath"},"content":"                .append(this.priority.toString().toUpperCase())","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"vaidyanaath"},"content":"                .append(\"}[\").append(mark)","lastModifiedDate":"2023-03-24"},{"lineNumber":100,"author":{"gitId":"vaidyanaath"},"content":"                .append(\"] \").append(this.title);","lastModifiedDate":"2023-03-24"},{"lineNumber":101,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":102,"author":{"gitId":"vaidyanaath"},"content":"        if (getDescription().isPresent()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"vaidyanaath"},"content":"            sb.append(\": \").append(getDescription().get());","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"vaidyanaath"},"content":"        if (getLocation().isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"vaidyanaath"},"content":"            sb.append(\" @ \").append(getLocation().get());","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"vaidyanaath"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-24"},{"lineNumber":111,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"Flash161203"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"Flash161203"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"Flash161203"},"content":"                || (other instanceof Task // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"Flash161203"},"content":"                \u0026\u0026 title.equals(((Task) other).title));","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Nafeij":19,"Flash161203":62,"vaidyanaath":39}},{"path":"src/main/java/seedu/calidr/model/task/ToDo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package seedu.calidr.model.task;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.params.Title;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.params.TodoDateTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":" * Represents a deadline - a task that should be completed within","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":" * a particular date and time.","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"    private final TodoDateTime byDateTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"     * Creates a ToDo with the given details.","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"     * @param title The title of the ToDo.","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"     * @param by The deadline date-time of the ToDo.","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"    public ToDo(Title title, TodoDateTime by) {","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"        super(title);","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"        assert by !\u003d null;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"        this.byDateTime \u003d by;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"    public TodoDateTime getBy() {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"        return this.byDateTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"    public String toString() {","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"vaidyanaath"},"content":"        StringBuilder sb \u003d new StringBuilder(\"[T]\");","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"vaidyanaath"},"content":"        String mark \u003d isDone() ? \"X\" : \" \";","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"vaidyanaath"},"content":"        sb.append(\"{\")","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"vaidyanaath"},"content":"                .append(getPriority().toString().toUpperCase())","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"vaidyanaath"},"content":"                .append(\"}[\").append(mark).append(\"] \")","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"vaidyanaath"},"content":"                .append(getTitle())","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"vaidyanaath"},"content":"                .append(\" (\")","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"vaidyanaath"},"content":"                .append(byDateTime.toString())","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"vaidyanaath"},"content":"                .append(\")\");","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"vaidyanaath"},"content":"        if (getDescription().isPresent()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"vaidyanaath"},"content":"            sb.append(\": \\n\").append(getDescription().get());","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"vaidyanaath"},"content":"        if (getLocation().isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"vaidyanaath"},"content":"            sb.append(\"\\n@ \").append(getLocation().get());","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"vaidyanaath"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"Flash161203"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"Flash161203"},"content":"        return super.equals(other)","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"Flash161203"},"content":"                \u0026\u0026 byDateTime.equals(((ToDo) other).byDateTime);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Nafeij":1,"Flash161203":40,"vaidyanaath":19}},{"path":"src/main/java/seedu/calidr/model/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model.task.exceptions;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":" * Signals that the operation will result in duplicate Tasks (Tasks are considered duplicates if they have the same","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":" * details).","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"Flash161203":11}},{"path":"src/main/java/seedu/calidr/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model.task.exceptions;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":" * Signals that the operation is unable to find the specified task.","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"public class TaskNotFoundException extends RuntimeException {","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"Flash161203":7}},{"path":"src/main/java/seedu/calidr/model/task/params/Comment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model.task.params;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":" * Represents the comment given to a Task.","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"public class Comment {","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Comments can take any values, and it should not be blank\";","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"    /*","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"     * The first character of the comment must not be a whitespace,","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"    public final String value;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"     * Constructs a {@code Comment}.","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"     * @param comment A valid comment.","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"    public Comment(String comment) {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"        requireNonNull(comment);","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"        checkArgument(isValidComment(comment), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"        value \u003d comment;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"     * Returns true if a given string is a valid title.","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"    public static boolean isValidComment(String test) {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"    public String toString() {","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"        return value;","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Flash161203"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Flash161203"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Flash161203"},"content":"                || (other instanceof Comment // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Flash161203"},"content":"                \u0026\u0026 value.equals(((Comment) other).value)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Flash161203"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Flash161203"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Flash161203":55}},{"path":"src/main/java/seedu/calidr/model/task/params/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model.task.params;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":" * Represents the description given to a Task.","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"public class Description {","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Descriptions can take any values, and it should not be blank\";","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"    /*","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"     * The first character of the description must not be a whitespace,","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"    public final String value;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"     * Constructs a {@code Description}.","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"     * @param description A valid description.","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"    public Description(String description) {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"        value \u003d description;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"     * Returns true if a given string is a valid title.","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"    public String toString() {","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"        return value;","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Flash161203"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Flash161203"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Flash161203"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Flash161203"},"content":"                \u0026\u0026 value.equals(((Description) other).value)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Flash161203"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Flash161203"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Flash161203":55}},{"path":"src/main/java/seedu/calidr/model/task/params/EventDateTimes.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model.task.params;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":" * Represents the two date-times associated with an Event.","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"public class EventDateTimes {","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"            \"The END date-time should be after the START date-time\";","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"    public static final DateTimeFormatter PRINT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\");","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"    public final LocalDateTime from;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"    public final LocalDateTime to;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"     * Constructs an {@code EventDateTimes}","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"     * @param from A valid START date-time.","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"     * @param to A valid END date-time.","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"    public EventDateTimes(LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"        requireAllNonNull(from, to);","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"        checkArgument(isValidEventDateTimes(from, to), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"     * Returns true if a particular set of START and END date-times","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"     * is valid.","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"    public static boolean isValidEventDateTimes(LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"        return end.isAfter(start);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Flash161203"},"content":"     * Returns the string representation of the EventDateTimes object.","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Flash161203"},"content":"    public String toString() {","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"        return \"from: \" + from.format(PRINT_FORMAT)","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"                + \" ; to: \" + to.format(PRINT_FORMAT);","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Flash161203"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Flash161203"},"content":"                || (other instanceof EventDateTimes // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"Flash161203"},"content":"                \u0026\u0026 from.equals(((EventDateTimes) other).from)","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"Flash161203"},"content":"                \u0026\u0026 to.equals(((EventDateTimes) other).to)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Nafeij":3,"Flash161203":58}},{"path":"src/main/java/seedu/calidr/model/task/params/Location.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model.task.params;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":" * Represents the location associated with a Task.","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"public class Location {","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Locations can take any values, and it should not be blank\";","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"    /*","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"     * The first character of the location must not be a whitespace,","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"    public final String value;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"     * Constructs a {@code Location}.","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"     * @param location A valid location.","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"    public Location(String location) {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"        requireNonNull(location);","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"        checkArgument(isValidLocation(location), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"        value \u003d location;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"     * Returns true if a given string is a valid title.","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"    public static boolean isValidLocation(String test) {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"    public String toString() {","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"        return value;","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Flash161203"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Flash161203"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Flash161203"},"content":"                || (other instanceof Location // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Flash161203"},"content":"                \u0026\u0026 value.equals(((Location) other).value)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Flash161203"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Flash161203"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Flash161203":55}},{"path":"src/main/java/seedu/calidr/model/task/params/Priority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model.task.params;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":" * Represents the priority associated with each task.","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"public enum Priority {","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"    LOW(\"low\"),","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"    MEDIUM(\"medium\"),","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"    HIGH(\"high\");","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Priority should be low/ medium/ high\";","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"    private final String string;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"    Priority(String string) {","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"        this.string \u003d string;","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"     * Returns the string representation of the Priority.","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"    public String toString() {","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"        return string;","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Flash161203":26}},{"path":"src/main/java/seedu/calidr/model/task/params/Title.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model.task.params;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":" * Represents the title of a Task.","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"public class Title {","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Titles can take any values, and it should not be blank\";","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"    /*","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"     * The first character of the title must not be a whitespace,","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"    public final String value;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"     * Constructs a {@code Title}.","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"     * @param title A valid title.","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"    public Title(String title) {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"        requireNonNull(title);","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"        checkArgument(isValidTitle(title), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"        value \u003d title;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"     * Returns true if a given string is a valid title.","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"    public static boolean isValidTitle(String test) {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"    public String toString() {","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"        return value;","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Flash161203"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Flash161203"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Flash161203"},"content":"                || (other instanceof Title // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Flash161203"},"content":"                \u0026\u0026 value.equals(((Title) other).value)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Flash161203"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Flash161203"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Flash161203":56}},{"path":"src/main/java/seedu/calidr/model/task/params/TodoDateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model.task.params;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":" * Represents the deadline date-time for a ToDo.","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"public class TodoDateTime {","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"    public static final DateTimeFormatter PRINT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\");","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"    public final LocalDateTime value;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"     * Constructs a {@code TodoDateTime}.","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"     * @param dateTime A valid deadline date-time.","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"    public TodoDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"        value \u003d dateTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"     * Returns the String representation of the TodoDateTime object.","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"    public String toString() {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"        return \"by: \" + value.format(PRINT_FORMAT);","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"                || (other instanceof TodoDateTime // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"                \u0026\u0026 value.equals(((TodoDateTime) other).value)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Flash161203"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Flash161203"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Nafeij":3,"Flash161203":45}},{"path":"src/main/java/seedu/calidr/model/task/predicates/TitleContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model.task.predicates;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.Task;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":" * Tests that a {@code Task}\u0027s {@code Title} contains any of the keywords given.","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"public class TitleContainsKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"    public TitleContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"        String titleValue \u003d task.getTitle().value.toLowerCase();","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"                .anyMatch(keyword -\u003e titleValue.contains(keyword.toLowerCase()));","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"                || (other instanceof TitleContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"                \u0026\u0026 keywords.equals(((TitleContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Flash161203":34}},{"path":"src/main/java/seedu/calidr/model/tasklist/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package seedu.calidr.model.tasklist;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.model.ReadOnlyTaskList;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.task.Task;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.params.Priority;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":" * Represents a task list manager that aids in storing and manipulating the","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":" * list of Tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"vaidyanaath"},"content":"public class TaskList implements ReadOnlyTaskList {","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"vaidyanaath"},"content":"    private final UniqueTaskList tasks \u003d new UniqueTaskList();","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"    public TaskList() {","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"     * Creates a TaskList using the Tasks in the {@code toBeCopied}","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"vaidyanaath"},"content":"    public TaskList(ReadOnlyTaskList toBeCopied) {","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"vaidyanaath"},"content":"        this();","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"vaidyanaath"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"vaidyanaath"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"vaidyanaath"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"vaidyanaath"},"content":"     * Resets the existing data of this {@code TaskList} with {@code newData}.","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"vaidyanaath"},"content":"     * @param newData The new data to update the task list.","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"vaidyanaath"},"content":"    public void resetData(ReadOnlyTaskList newData) {","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"vaidyanaath"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"vaidyanaath"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"vaidyanaath"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the task list.","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"vaidyanaath"},"content":"     * @param task The task to check.","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"vaidyanaath"},"content":"     * @return true if task already exists in the task list and false otherwise.","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"vaidyanaath"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"vaidyanaath"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"vaidyanaath"},"content":"        return tasks.contains(task);","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"vaidyanaath"},"content":"     * Adds a given Task to the list of Tasks.","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"vaidyanaath"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"vaidyanaath"},"content":"     * @param task The Task to be added to the list of Tasks.","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"vaidyanaath"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"vaidyanaath"},"content":"        tasks.add(task);","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"vaidyanaath"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"vaidyanaath"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"vaidyanaath"},"content":"        tasks.setTask(target, editedTask);","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"Flash161203"},"content":"     * Deletes a Task from the list of Tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"Nafeij"},"content":"     * @param key The number to indicate which Task is to be deleted.","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"vaidyanaath"},"content":"    public void deleteTask(Task key) {","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"vaidyanaath"},"content":"        tasks.remove(key);","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"vaidyanaath"},"content":"    public void setTaskPriority(Task target, Priority priority) {","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"vaidyanaath"},"content":"        tasks.setTaskPriority(target, priority);","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"vaidyanaath"},"content":"     * Marks a particular Task in the list of Tasks, as done.","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"vaidyanaath"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"Nafeij"},"content":"     * @param task The number to indicate which Task is to be marked as done.","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"vaidyanaath"},"content":"    public void markTask(Task task) {","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"vaidyanaath"},"content":"        tasks.mark(task);","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"vaidyanaath"},"content":"     * Marks a particular Task in the list of Tasks, as undone.","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"vaidyanaath"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"Nafeij"},"content":"     * @param task The number to indicate which Task is to be marked as undone.","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"vaidyanaath"},"content":"    public void unmarkTask(Task task) {","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"vaidyanaath"},"content":"        tasks.unmark(task);","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"vaidyanaath"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"vaidyanaath"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"vaidyanaath"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"vaidyanaath"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"vaidyanaath"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"vaidyanaath"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"vaidyanaath"},"content":"                || (other instanceof TaskList","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"vaidyanaath"},"content":"                \u0026\u0026 tasks.equals(((TaskList) other).tasks));","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"vaidyanaath"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"vaidyanaath"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"vaidyanaath"},"content":"        return tasks.hashCode();","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Nafeij":12,"Flash161203":31,"vaidyanaath":75}},{"path":"src/main/java/seedu/calidr/model/tasklist/UniqueTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model.tasklist;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import java.util.List;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.Task;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.params.Priority;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":" * A list of tasks that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":" * A task is considered unique by comparing using {@code Task#isSameTask(Task)}. As such, adding and updating of","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":" * tasks uses Task#isSameTask(Task) for equality so as to ensure that the task being added or updated is","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":" * unique in terms of identity in the UniqueTaskList. However, the removal of a task uses Task#equals(Object) so","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":" * as to ensure that the task with exactly the same fields will be removed.","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":" *","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":" *","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":" * @see Task#isSameTask(Task)","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"public class UniqueTaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"     * The task must not already exist in the list.","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"Flash161203"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"Flash161203"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"Flash161203"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"Flash161203"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"Flash161203"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"Flash161203"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"Flash161203"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"Flash161203"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"Flash161203"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"Flash161203"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"Flash161203"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"Flash161203"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"Flash161203"},"content":"        if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"Flash161203"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"Flash161203"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"Flash161203"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"Flash161203"},"content":"     * The task must exist in the list.","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"Flash161203"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"Flash161203"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"Flash161203"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"Flash161203"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"Flash161203"},"content":"     * Marks the given task as done.","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"Flash161203"},"content":"     * The task must exist in the list.","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"Flash161203"},"content":"     * @param target The task which is to be marked as done","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"Flash161203"},"content":"    public void mark(Task target) {","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"Flash161203"},"content":"        int targetIndex \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"Flash161203"},"content":"        if (targetIndex \u003d\u003d -1) {","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"Flash161203"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"Flash161203"},"content":"        internalList.get(targetIndex).mark();","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"Flash161203"},"content":"     * Marks the given task as undone.","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"Flash161203"},"content":"     * The task must exist in the list.","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"Flash161203"},"content":"     * @param target The task which is to be marked as undone","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"Flash161203"},"content":"    public void unmark(Task target) {","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"Flash161203"},"content":"        int targetIndex \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"Flash161203"},"content":"        if (targetIndex \u003d\u003d -1) {","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"Flash161203"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"Flash161203"},"content":"        internalList.get(targetIndex).unmark();","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"Flash161203"},"content":"    public void setTaskPriority(Task target, Priority priority) {","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"Flash161203"},"content":"        int targetIndex \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"Flash161203"},"content":"        if (targetIndex \u003d\u003d -1) {","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"Flash161203"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-03-18"},{"lineNumber":122,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":124,"author":{"gitId":"Flash161203"},"content":"        internalList.get(targetIndex).setPriority(priority);","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":127,"author":{"gitId":"Flash161203"},"content":"    public void setTasks(UniqueTaskList replacement) {","lastModifiedDate":"2023-03-25"},{"lineNumber":128,"author":{"gitId":"Flash161203"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"Flash161203"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-18"},{"lineNumber":130,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":133,"author":{"gitId":"Flash161203"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2023-03-18"},{"lineNumber":134,"author":{"gitId":"Flash161203"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2023-03-18"},{"lineNumber":135,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"Flash161203"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-18"},{"lineNumber":137,"author":{"gitId":"Flash161203"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2023-03-18"},{"lineNumber":138,"author":{"gitId":"Flash161203"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":139,"author":{"gitId":"Flash161203"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"Flash161203"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":145,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":146,"author":{"gitId":"Flash161203"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":148,"author":{"gitId":"Flash161203"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":149,"author":{"gitId":"Flash161203"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-18"},{"lineNumber":150,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":151,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":152,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":153,"author":{"gitId":"Flash161203"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2023-03-18"},{"lineNumber":154,"author":{"gitId":"Flash161203"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-18"},{"lineNumber":155,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":156,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":157,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":158,"author":{"gitId":"Flash161203"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-18"},{"lineNumber":159,"author":{"gitId":"Flash161203"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-18"},{"lineNumber":160,"author":{"gitId":"Flash161203"},"content":"                || (other instanceof UniqueTaskList // instanceof handles nulls","lastModifiedDate":"2023-03-25"},{"lineNumber":161,"author":{"gitId":"Flash161203"},"content":"                \u0026\u0026 internalList.equals(((UniqueTaskList) other).internalList));","lastModifiedDate":"2023-03-25"},{"lineNumber":162,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":163,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":164,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":165,"author":{"gitId":"Flash161203"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-18"},{"lineNumber":166,"author":{"gitId":"Flash161203"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-18"},{"lineNumber":167,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":168,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":169,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":170,"author":{"gitId":"Flash161203"},"content":"     * Returns true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2023-03-18"},{"lineNumber":171,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":172,"author":{"gitId":"Flash161203"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-18"},{"lineNumber":173,"author":{"gitId":"Flash161203"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2023-03-18"},{"lineNumber":174,"author":{"gitId":"Flash161203"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2023-03-18"},{"lineNumber":175,"author":{"gitId":"Flash161203"},"content":"                if (tasks.get(i).isSameTask(tasks.get(j))) {","lastModifiedDate":"2023-03-18"},{"lineNumber":176,"author":{"gitId":"Flash161203"},"content":"                    return false;","lastModifiedDate":"2023-03-18"},{"lineNumber":177,"author":{"gitId":"Flash161203"},"content":"                }","lastModifiedDate":"2023-03-18"},{"lineNumber":178,"author":{"gitId":"Flash161203"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":179,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":180,"author":{"gitId":"Flash161203"},"content":"        return true;","lastModifiedDate":"2023-03-18"},{"lineNumber":181,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":182,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-18"},{"lineNumber":183,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"Flash161203":183}},{"path":"src/main/java/seedu/calidr/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model.util;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.AddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Address;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Email;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Person;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Remark;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.tag.Tag;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"    public static final Remark EMPTY_REMARK \u003d new Remark(\"\");","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), EMPTY_REMARK,","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), EMPTY_REMARK,","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), EMPTY_REMARK,","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), EMPTY_REMARK,","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), EMPTY_REMARK,","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), EMPTY_REMARK,","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Flash161203":19,"-":45}},{"path":"src/main/java/seedu/calidr/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":" * Represents a storage for {@link seedu.calidr.model.AddressBook}.","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Flash161203":4,"-":41}},{"path":"src/main/java/seedu/calidr/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Address;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Email;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Person;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Remark;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.tag.Tag;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"    private final String remark;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"            @JsonProperty(\"remark\") String remark, @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"Flash161203"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"Flash161203"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"Flash161203"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"Flash161203"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"Flash161203"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"Flash161203"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelRemark, modelTags);","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Flash161203":19,"-":99}},{"path":"src/main/java/seedu/calidr/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.tag.Tag;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Flash161203":3,"-":45}},{"path":"src/main/java/seedu/calidr/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.LogsCenter;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.util.FileUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.util.JsonUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Flash161203":7,"-":73}},{"path":"src/main/java/seedu/calidr/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.AddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Person;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Flash161203":5,"-":55}},{"path":"src/main/java/seedu/calidr/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.util.JsonUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.UserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Flash161203":5,"-":42}},{"path":"src/main/java/seedu/calidr/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.UserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Flash161203":5,"-":27}},{"path":"src/main/java/seedu/calidr/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.LogsCenter;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.UserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Flash161203":6,"-":72}},{"path":"src/main/java/seedu/calidr/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.UserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":" * Represents a storage for {@link seedu.calidr.model.UserPrefs}.","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"     * Saves the given {@link seedu.calidr.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Flash161203":6,"-":30}},{"path":"src/main/java/seedu/calidr/ui/CalendarPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package seedu.calidr.ui;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"import com.calendarfx.model.Calendar;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"import com.calendarfx.model.CalendarSource;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"import com.calendarfx.view.DayViewBase;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"import com.calendarfx.view.page.DayPage;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"import com.calendarfx.view.page.MonthPage;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"import com.calendarfx.view.page.PageBase;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"import com.calendarfx.view.page.WeekPage;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"import javafx.scene.input.InputEvent;","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"import javafx.scene.input.ScrollEvent;","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"import javafx.scene.paint.Paint;","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.commons.core.LogsCenter;","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.commons.util.TaskEntryUtil;","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.PageType;","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.model.ReadOnlyTaskList;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.TaskEntry;","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.task.Event;","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.task.Task;","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.task.ToDo;","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":" * Panel containing the CalendarFX DetailedWeekView.","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"public class CalendarPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"    private static final String FXML \u003d \"CalendarPanel.fxml\";","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(CalendarPanel.class);","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"    private final CalendarSource calendarSource \u003d new CalendarSource(\"My Calendars\");","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"    private final Calendar\u003cTaskEntry\u003e calendarTodos \u003d new Calendar\u003c\u003e(\"Todos\");","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"    private final Calendar\u003cTaskEntry\u003e calendarEvents \u003d new Calendar\u003c\u003e(\"Events\");","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"    private final Map\u003cClass\u003c? extends Task\u003e, Calendar\u003cTaskEntry\u003e\u003e taskEntryCalendarMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"    private VBox calendarPanel;","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"    private MonthPage monthPage;","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"    private WeekPage weekPage;","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"Nafeij"},"content":"    private DayPage dayPage;","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"Nafeij"},"content":"    private final Map\u003cPageType, PageBase\u003e calendarViews \u003d Map.of(","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"Nafeij"},"content":"            PageType.DAY, dayPage,","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"Nafeij"},"content":"            PageType.WEEK, weekPage,","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"Nafeij"},"content":"            PageType.MONTH, monthPage","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"Nafeij"},"content":"    );","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"Nafeij"},"content":"    private PageType currentPage \u003d PageType.MONTH;","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"Nafeij"},"content":"    private Thread updateTimeThread;","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"Nafeij"},"content":"     * Instantiates a new CalendarPanel.","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"Nafeij"},"content":"    public CalendarPanel() {","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"Nafeij"},"content":"        super(FXML);","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"Nafeij"},"content":"        calendarPanel.addEventFilter(InputEvent.ANY, event -\u003e {","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"Nafeij"},"content":"            if (!(event instanceof ScrollEvent)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"Nafeij"},"content":"                event.consume();","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"Nafeij"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"Nafeij"},"content":"        });","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"Nafeij"},"content":"        calendarTodos.setReadOnly(true);","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"Nafeij"},"content":"        calendarEvents.setReadOnly(true);","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"Nafeij"},"content":"        calendarTodos.setStyle(Calendar.Style.STYLE1);","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"Nafeij"},"content":"        calendarEvents.setStyle(Calendar.Style.STYLE2);","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"Nafeij"},"content":"        taskEntryCalendarMap.put(ToDo.class, calendarTodos);","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"Nafeij"},"content":"        taskEntryCalendarMap.put(Event.class, calendarEvents);","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"Nafeij"},"content":"        calendarSource.getCalendars().addAll(calendarTodos, calendarEvents);","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"Nafeij"},"content":"        dayPage.getDetailedDayView()","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"Nafeij"},"content":"                .getDayView()","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"Nafeij"},"content":"                .setEarlyLateHoursStrategy(DayViewBase","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"Nafeij"},"content":"                        .EarlyLateHoursStrategy.SHOW);","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"Nafeij"},"content":"        calendarViews.forEach((key, view) -\u003e {","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"Nafeij"},"content":"            view.setContextMenuCallback(param -\u003e null);","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"Nafeij"},"content":"            view.setShowNavigation(false);","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"Nafeij"},"content":"            view.getCalendarSources().add(calendarSource);","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"Nafeij"},"content":"            view.setBackground(Background.fill(Paint.valueOf(\"#ffffff\")));","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"Nafeij"},"content":"            view.setRequestedTime(LocalTime.now());","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"Nafeij"},"content":"            view.managedProperty().bind(view.visibleProperty());","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"Nafeij"},"content":"        });","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"Nafeij"},"content":"        setPage(currentPage);","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"Nafeij"},"content":"        goToToday();","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"Nafeij"},"content":"    public PageBase getActivePage() {","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"Nafeij"},"content":"        return calendarViews.get(currentPage);","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"Nafeij"},"content":"    public void setAllPages(Consumer\u003cPageBase\u003e consumer) {","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"Nafeij"},"content":"        calendarViews.forEach((key, view) -\u003e consumer.accept(view));","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"Nafeij"},"content":"    public void setDate(LocalDate date) {","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"Nafeij"},"content":"        setAllPages(view -\u003e view.setDate(date));","lastModifiedDate":"2023-03-19"},{"lineNumber":120,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":122,"author":{"gitId":"Nafeij"},"content":"    public void goToToday() {","lastModifiedDate":"2023-03-19"},{"lineNumber":123,"author":{"gitId":"Nafeij"},"content":"        setAllPages(PageBase::goToday);","lastModifiedDate":"2023-03-19"},{"lineNumber":124,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":125,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":126,"author":{"gitId":"Nafeij"},"content":"    public void goToNext() {","lastModifiedDate":"2023-03-19"},{"lineNumber":127,"author":{"gitId":"Nafeij"},"content":"        setAllPages(PageBase::goForward);","lastModifiedDate":"2023-03-19"},{"lineNumber":128,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":129,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":130,"author":{"gitId":"Nafeij"},"content":"    public void goToPrevious() {","lastModifiedDate":"2023-03-19"},{"lineNumber":131,"author":{"gitId":"Nafeij"},"content":"        setAllPages(PageBase::goBack);","lastModifiedDate":"2023-03-19"},{"lineNumber":132,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":133,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":134,"author":{"gitId":"Nafeij"},"content":"    public void nextPage() {","lastModifiedDate":"2023-03-19"},{"lineNumber":135,"author":{"gitId":"Nafeij"},"content":"        setPage(currentPage.next(currentPage));","lastModifiedDate":"2023-03-19"},{"lineNumber":136,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":137,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":138,"author":{"gitId":"Nafeij"},"content":"    public void setPage(PageType pageType) {","lastModifiedDate":"2023-03-19"},{"lineNumber":139,"author":{"gitId":"Nafeij"},"content":"        currentPage \u003d pageType;","lastModifiedDate":"2023-03-19"},{"lineNumber":140,"author":{"gitId":"Nafeij"},"content":"        calendarViews.forEach((key, view) -\u003e view.setVisible(key \u003d\u003d pageType));","lastModifiedDate":"2023-03-19"},{"lineNumber":141,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":142,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":143,"author":{"gitId":"Nafeij"},"content":"    private void spawnUpdateThread() {","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"Nafeij"},"content":"        updateTimeThread \u003d new Thread(() -\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"Nafeij"},"content":"            while (true) {","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"Nafeij"},"content":"                Platform.runLater(() -\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"Nafeij"},"content":"                    getActivePage().setToday(LocalDate.now());","lastModifiedDate":"2023-03-19"},{"lineNumber":148,"author":{"gitId":"Nafeij"},"content":"                    getActivePage().setTime(LocalTime.now());","lastModifiedDate":"2023-03-19"},{"lineNumber":149,"author":{"gitId":"Nafeij"},"content":"                });","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"Nafeij"},"content":"                try {","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"Nafeij"},"content":"                    // update every 10 seconds","lastModifiedDate":"2023-03-05"},{"lineNumber":153,"author":{"gitId":"Nafeij"},"content":"                    //noinspection BusyWait","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"Nafeij"},"content":"                    Thread.sleep(10000);","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"Nafeij"},"content":"                } catch (InterruptedException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"Nafeij"},"content":"                    e.printStackTrace();","lastModifiedDate":"2023-03-05"},{"lineNumber":157,"author":{"gitId":"Nafeij"},"content":"                }","lastModifiedDate":"2023-03-05"},{"lineNumber":158,"author":{"gitId":"Nafeij"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":159,"author":{"gitId":"Nafeij"},"content":"        });","lastModifiedDate":"2023-03-05"},{"lineNumber":160,"author":{"gitId":"Nafeij"},"content":"        updateTimeThread.setPriority(Thread.MIN_PRIORITY);","lastModifiedDate":"2023-03-05"},{"lineNumber":161,"author":{"gitId":"Nafeij"},"content":"        updateTimeThread.setDaemon(true);","lastModifiedDate":"2023-03-05"},{"lineNumber":162,"author":{"gitId":"Nafeij"},"content":"        updateTimeThread.start();","lastModifiedDate":"2023-03-05"},{"lineNumber":163,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":164,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":165,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":166,"author":{"gitId":"Nafeij"},"content":"     * Update the calendar entries with the given task list.","lastModifiedDate":"2023-03-05"},{"lineNumber":167,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":168,"author":{"gitId":"Nafeij"},"content":"     * @param taskList the task list","lastModifiedDate":"2023-03-05"},{"lineNumber":169,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":170,"author":{"gitId":"vaidyanaath"},"content":"    public void updateCalendar(ReadOnlyTaskList taskList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":171,"author":{"gitId":"Nafeij"},"content":"        taskEntryCalendarMap.values().forEach(Calendar::clear);","lastModifiedDate":"2023-03-12"},{"lineNumber":172,"author":{"gitId":"vaidyanaath"},"content":"        taskList.getTaskList().forEach(task -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":173,"author":{"gitId":"Nafeij"},"content":"            Class\u003c? extends Task\u003e taskClass \u003d task.getClass();","lastModifiedDate":"2023-03-12"},{"lineNumber":174,"author":{"gitId":"Nafeij"},"content":"            if (taskEntryCalendarMap.containsKey(taskClass)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":175,"author":{"gitId":"Nafeij"},"content":"                Calendar\u003cTaskEntry\u003e calendar \u003d taskEntryCalendarMap.get(taskClass);","lastModifiedDate":"2023-03-12"},{"lineNumber":176,"author":{"gitId":"Nafeij"},"content":"                calendar.addEntry(TaskEntryUtil.convert(task));","lastModifiedDate":"2023-03-12"},{"lineNumber":177,"author":{"gitId":"Nafeij"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":178,"author":{"gitId":"Nafeij"},"content":"        });","lastModifiedDate":"2023-03-12"},{"lineNumber":179,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":180,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Nafeij":177,"vaidyanaath":3}},{"path":"src/main/java/seedu/calidr/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.CommandResult;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"Flash161203"},"content":"         * @see seedu.calidr.logic.Logic#execute(String)","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"Flash161203":5,"-":80}},{"path":"src/main/java/seedu/calidr/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.LogsCenter;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103t-w10-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Nafeij":1,"Flash161203":2,"-":99}},{"path":"src/main/java/seedu/calidr/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.GuiSettings;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.LogsCenter;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.Logic;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.CommandResult;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.task.Task;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"    private final Stage primaryStage;","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"    private final Logic logic;","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"    private final HelpWindow helpWindow;","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"    private CalendarPanel calendarPanel;","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"    // private PersonListPanel personListPanel;","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"    /*","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"    */","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"    private StackPane calendarPanelPlaceholder;","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"Nafeij"},"content":"    private StackPane taskListPlaceholder;","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"Nafeij"},"content":"        /*","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"Nafeij"},"content":"        */","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"Nafeij"},"content":"        calendarPanel \u003d new CalendarPanel();","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"Nafeij"},"content":"        calendarPanel.updateCalendar(logic.getTaskList());","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"Nafeij"},"content":"        calendarPanelPlaceholder.getChildren().add(calendarPanel.getRoot());","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"Nafeij"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());","lastModifiedDate":"2023-03-20"},{"lineNumber":139,"author":{"gitId":"Nafeij"},"content":"        taskListPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2023-03-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"Nafeij"},"content":"    private void launchTaskPopup(Task task) {","lastModifiedDate":"2023-03-20"},{"lineNumber":164,"author":{"gitId":"Nafeij"},"content":"        TaskPopOver taskPopOver \u003d new TaskPopOver(task);","lastModifiedDate":"2023-03-20"},{"lineNumber":165,"author":{"gitId":"Nafeij"},"content":"        Scene scene \u003d new Scene(taskPopOver.getRoot());","lastModifiedDate":"2023-03-20"},{"lineNumber":166,"author":{"gitId":"Nafeij"},"content":"        Stage stage \u003d new Stage();","lastModifiedDate":"2023-03-20"},{"lineNumber":167,"author":{"gitId":"Nafeij"},"content":"        stage.initOwner(primaryStage.getOwner());","lastModifiedDate":"2023-03-20"},{"lineNumber":168,"author":{"gitId":"Nafeij"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-03-20"},{"lineNumber":169,"author":{"gitId":"Nafeij"},"content":"        stage.show();","lastModifiedDate":"2023-03-20"},{"lineNumber":170,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":171,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"Nafeij"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(),","lastModifiedDate":"2023-03-12"},{"lineNumber":194,"author":{"gitId":"Nafeij"},"content":"                primaryStage.getHeight(),","lastModifiedDate":"2023-03-12"},{"lineNumber":195,"author":{"gitId":"Nafeij"},"content":"                (int) primaryStage.getX(),","lastModifiedDate":"2023-03-12"},{"lineNumber":196,"author":{"gitId":"Nafeij"},"content":"                (int) primaryStage.getY());","lastModifiedDate":"2023-03-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":202,"author":{"gitId":"Nafeij"},"content":"    public CalendarPanel getCalendarPanel() {","lastModifiedDate":"2023-03-05"},{"lineNumber":203,"author":{"gitId":"Nafeij"},"content":"        return calendarPanel;","lastModifiedDate":"2023-03-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"Flash161203"},"content":"     * @see seedu.calidr.logic.Logic#execute(String)","lastModifiedDate":"2023-03-03"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"Nafeij"},"content":"            } else if (commandResult.isExit()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"Nafeij"},"content":"            } else if (commandResult.getDate().isPresent()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":222,"author":{"gitId":"Nafeij"},"content":"                calendarPanel.setDate(commandResult.getDate().get());","lastModifiedDate":"2023-03-19"},{"lineNumber":223,"author":{"gitId":"Nafeij"},"content":"            } else if (commandResult.getPageType().isPresent()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":224,"author":{"gitId":"Nafeij"},"content":"                calendarPanel.setPage(commandResult.getPageType().get());","lastModifiedDate":"2023-03-19"},{"lineNumber":225,"author":{"gitId":"Nafeij"},"content":"            } else if (commandResult.getPopupTask().isPresent()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":226,"author":{"gitId":"Nafeij"},"content":"                this.launchTaskPopup(commandResult.getPopupTask().get());","lastModifiedDate":"2023-03-20"},{"lineNumber":227,"author":{"gitId":"Nafeij"},"content":"            } else {","lastModifiedDate":"2023-03-05"},{"lineNumber":228,"author":{"gitId":"Nafeij"},"content":"                calendarPanel.updateCalendar(logic.getTaskList()); // Entry point for calendar update","lastModifiedDate":"2023-03-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Nafeij":51,"Flash161203":8,"-":179}},{"path":"src/main/java/seedu/calidr/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Person;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"    private Label remark;","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"Flash161203"},"content":"        remark.setText(person.getRemark().value);","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Flash161203":5,"-":75}},{"path":"src/main/java/seedu/calidr/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.LogsCenter;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Person;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Flash161203":3,"-":46}},{"path":"src/main/java/seedu/calidr/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Flash161203":1,"-":27}},{"path":"src/main/java/seedu/calidr/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Flash161203":1,"-":27}},{"path":"src/main/java/seedu/calidr/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package seedu.calidr.ui;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.task.Event;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.task.Task;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.task.ToDo;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.task.params.EventDateTimes;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.task.params.TodoDateTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"    public final Task task;","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"    private Label title;","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"    private Label index;","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"    private Label priority;","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"    private Label status;","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"    private Label fromDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"    private Label toDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"        super(FXML);","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"        title.setText(task.getTitle().value);","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"        index.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"        priority.setText(task.getPriority().toString().toUpperCase());","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"        if (task.isDone()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"            status.setText(\"DONE\");","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"        } else {","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"            status.setVisible(false);","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"Nafeij"},"content":"            status.setManaged(false);","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"Nafeij"},"content":"        if (task instanceof Event) {","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"Nafeij"},"content":"            EventDateTimes eventDateTimes \u003d ((Event) task).getEventDateTimes();","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"Nafeij"},"content":"            fromDate.setText(\"from \" + eventDateTimes.from.format(EventDateTimes.PRINT_FORMAT));","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"Nafeij"},"content":"            toDate.setText(\"to \" + eventDateTimes.to.format(EventDateTimes.PRINT_FORMAT));","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"Nafeij"},"content":"        } else {","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"Nafeij"},"content":"            TodoDateTime todoDateTime \u003d ((ToDo) task).getBy();","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"Nafeij"},"content":"            fromDate.setVisible(false);","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"Nafeij"},"content":"            fromDate.setManaged(false);","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"Nafeij"},"content":"            toDate.setText(\"by \" + todoDateTime.value.format(TodoDateTime.PRINT_FORMAT));","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"Nafeij"},"content":"        /*","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"Nafeij"},"content":"        task.getTags().stream()","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"Nafeij"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"Nafeij"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"Nafeij"},"content":"        */","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"Nafeij"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"Nafeij"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"Nafeij"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"Nafeij"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"Nafeij"},"content":"            return true;","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"Nafeij"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"Nafeij"},"content":"        if (!(other instanceof TaskCard)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"Nafeij"},"content":"            return false;","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"Nafeij"},"content":"        // state check","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"Nafeij"},"content":"        TaskCard card \u003d (TaskCard) other;","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"Nafeij"},"content":"        return index.getText().equals(card.index.getText()) \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"Nafeij":95}},{"path":"src/main/java/seedu/calidr/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package seedu.calidr.ui;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.commons.core.LogsCenter;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.task.Task;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"        super(FXML);","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"        taskListView.setItems(tasks);","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"    static class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"                setText(null);","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"            } else {","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"Nafeij":49}},{"path":"src/main/java/seedu/calidr/ui/TaskPopOver.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package seedu.calidr.ui;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.commons.util.StringUtil;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.task.Event;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.task.Task;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.task.ToDo;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.task.params.EventDateTimes;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.task.params.TodoDateTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":" * An UI component that displays all information of a {@code Task}.","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"public class TaskPopOver extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"    private static final String FXML \u003d \"TaskEntryPopOver.fxml\";","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"    private Label description;","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"    private Label doneTick;","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"    private Label toBy;","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"    private Label fromDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"    private Label priority;","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"    private Label task_location;","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"    private Label title;","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"    private Label toDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"    private Button closeButton;","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"     * Creates a {@code TaskPopOver} with the given {@code Task} to display.","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"     * @param task The task to display.","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"    public TaskPopOver(Task task) {","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"        super(FXML);","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"Nafeij"},"content":"        title.setText(task.getTitle().value);","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"Nafeij"},"content":"        if (task.getDescription().isPresent()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"Nafeij"},"content":"            description.setText(task.getDescription().get().value);","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"Nafeij"},"content":"        } else {","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"Nafeij"},"content":"            description.setManaged(false);","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"Nafeij"},"content":"            description.setVisible(false);","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"Nafeij"},"content":"        if (task.getLocation().isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"Nafeij"},"content":"            task_location.setText(\"@ \" + task.getLocation().get().value);","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"Nafeij"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"Nafeij"},"content":"            task_location.setManaged(false);","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"Nafeij"},"content":"            task_location.setVisible(false);","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"Nafeij"},"content":"        if (task instanceof Event) {","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"Nafeij"},"content":"            EventDateTimes eventDateTimes \u003d ((Event) task).getEventDateTimes();","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"Nafeij"},"content":"            fromDate.setText(eventDateTimes.from.format(EventDateTimes.PRINT_FORMAT));","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"Nafeij"},"content":"            toBy.setText(\"to\");","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"Nafeij"},"content":"            toDate.setText(eventDateTimes.to.format(EventDateTimes.PRINT_FORMAT));","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"Nafeij"},"content":"        } else {","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"Nafeij"},"content":"            ToDo todo \u003d (ToDo) task;","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"Nafeij"},"content":"            TodoDateTime todoDateTime \u003d todo.getBy();","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"Nafeij"},"content":"            fromDate.setVisible(false);","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"Nafeij"},"content":"            fromDate.setManaged(false);","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"Nafeij"},"content":"            toBy.setText(\"by\");","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"Nafeij"},"content":"            toDate.setText(todoDateTime.value.format(TodoDateTime.PRINT_FORMAT));","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"Nafeij"},"content":"            if (todo.isDone()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"Nafeij"},"content":"                doneTick.setText(\"✔\");","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"Nafeij"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"Nafeij"},"content":"        priority.setText(StringUtil.capitalize(task.getPriority().toString()) + \" priority\");","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"Nafeij"},"content":"        /*","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"Nafeij"},"content":"        task.getTags().stream()","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"Nafeij"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"Nafeij"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"Nafeij"},"content":"        */","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"Nafeij"},"content":"        // TODO stub","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"Nafeij"},"content":"        tags.getChildren().addAll(new Label(\"Stub 1\"), new Label(\"Stub 2\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"Nafeij"},"content":"        closeButton.setOnAction(e -\u003e this.getRoot().getScene().getWindow().hide());","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"Nafeij":106}},{"path":"src/main/java/seedu/calidr/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Flash161203":1,"-":12}},{"path":"src/main/java/seedu/calidr/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.MainApp;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.LogsCenter;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.util.StringUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.Logic;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Flash161203":5,"-":83}},{"path":"src/main/java/seedu/calidr/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.MainApp;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Flash161203":2,"-":86}},{"path":"src/main/resources/view/CalendarPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"\u003c?import com.calendarfx.view.page.DayPage?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"\u003c?import com.calendarfx.view.page.MonthPage?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"\u003c?import com.calendarfx.view.page.WeekPage?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"      fx:id\u003d\"calendarPanel\"","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"      xmlns\u003d\"http://javafx.com/javafx/19\"\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"    \u003cMonthPage fx:id\u003d\"monthPage\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"    \u003cWeekPage fx:id\u003d\"weekPage\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"    \u003cDayPage fx:id\u003d\"dayPage\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Nafeij":13}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"Nafeij"},"content":"#filterField, #personListPanel, #calendarPanel, #personWebpage {","lastModifiedDate":"2023-03-05"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"Nafeij":1,"-":351}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" resizable\u003d\"false\" title\u003d\"Help\"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"         type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/help_icon.png\"/\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@HelpWindow.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                        \u003cInsets right\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                    \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                        \u003cInsets left\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"Nafeij":9,"-":33}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" minHeight\u003d\"800.0\"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"         minWidth\u003d\"1000.0\"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"         title\u003d\"Address App\"","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"         onCloseRequest\u003d\"#handleExit\"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"         type\u003d\"javafx.stage.Stage\"","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"         xmlns\u003d\"http://javafx.com/javafx/19\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/address_book_32.png\"/\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"                \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"                        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\"/\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"                \u003cHBox prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"                    \u003cVBox prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"                        \u003cVBox fx:id\u003d\"calendar\"","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"                              minWidth\u003d\"-Infinity\"","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"                              prefWidth\u003d\"700.0\"","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"                              styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"                              VBox.vgrow\u003d\"ALWAYS\"","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"                        \u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"                                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\"/\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"                            \u003cStackPane fx:id\u003d\"calendarPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"                        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"-Infinity\"","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"Nafeij"},"content":"                                   prefHeight\u003d\"120.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":62,"author":{"gitId":"Nafeij"},"content":"                                \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\"/\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"Nafeij"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"Nafeij"},"content":"                    \u003cStackPane fx:id\u003d\"taskListPlaceholder\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"100.0\"","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"Nafeij"},"content":"                               HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"Nafeij"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Nafeij":31,"-":43}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Flash161203":1,"-":36}},{"path":"src/main/resources/view/TaskEntryPopOver.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"#tags \u003e .label {","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: #00000010;","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 2;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 10;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Nafeij":7}},{"path":"src/main/resources/view/TaskEntryPopOver.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" spacing\u003d\"10.0\"","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"      xmlns\u003d\"http://javafx.com/javafx/19\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"   \u003cstylesheets\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"      \u003cURL value\u003d\"@TaskEntryPopOver.css\"/\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"   \u003c/stylesheets\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"      \u003cInsets bottom\u003d\"20.0\" left\u003d\"20.0\" right\u003d\"20.0\" top\u003d\"20.0\"/\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"   \u003cVBox maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" spacing\u003d\"10.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"         \u003cLabel fx:id\u003d\"title\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"            \u003cfont\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"               \u003cFont size\u003d\"20.0\"/\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"            \u003c/font\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"         \u003c/Label\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"         \u003cHBox alignment\u003d\"CENTER_RIGHT\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"            \u003cLabel fx:id\u003d\"doneTick\" alignment\u003d\"CENTER_RIGHT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"                   minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"                  \u003cFont size\u003d\"20.0\"/\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"               \u003c/font\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" hgap\u003d\"5.0\" vgap\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"      \u003cLabel fx:id\u003d\"description\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" wrapText\u003d\"true\"","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"             VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"      \u003cVBox spacing\u003d\"10.0\" style\u003d\"-fx-border-color: #aaa; -fx-border-style: solid none none none;\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"            \u003cInsets top\u003d\"15.0\"/\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"         \u003copaqueInsets\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"            \u003cInsets/\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"         \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"         \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"            \u003cInsets top\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"         \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"         \u003cHBox alignment\u003d\"CENTER_LEFT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" spacing\u003d\"10.0\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"            \u003cLabel fx:id\u003d\"fromDate\" style\u003d\"-fx-background-color: #00000010; -fx-background-radius: 5px;\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"            \u003cLabel fx:id\u003d\"toBy\"/\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"            \u003cLabel fx:id\u003d\"toDate\" style\u003d\"-fx-background-color: #00000010; -fx-background-radius: 5px;\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"Nafeij"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"Nafeij"},"content":"         \u003cLabel fx:id\u003d\"priority\"/\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"Nafeij"},"content":"         \u003cLabel fx:id\u003d\"task_location\"/\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"Nafeij"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"Nafeij"},"content":"   \u003c/VBox\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"Nafeij"},"content":"   \u003cHBox alignment\u003d\"CENTER\" maxHeight\u003d\"-Infinity\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"Nafeij"},"content":"      \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"Nafeij"},"content":"         \u003cInsets top\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"Nafeij"},"content":"      \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"Nafeij"},"content":"      \u003cButton fx:id\u003d\"closeButton\" mnemonicParsing\u003d\"false\" text\u003d\"Close\"/\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"Nafeij"},"content":"   \u003c/HBox\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"Nafeij"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"Nafeij":71}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/19\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\"/\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"                \u003cLabel fx:id\u003d\"index\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$index\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"                    \u003cfont\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"                        \u003cFont name\u003d\"System Bold\" size\u003d\"12.0\"/\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"                    \u003c/font\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"                \u003cLabel fx:id\u003d\"title\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$title\"/\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"            \u003cLabel fx:id\u003d\"fromDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$fromDate\"/\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"            \u003cLabel fx:id\u003d\"toDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$toDate\"/\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"            \u003cLabel fx:id\u003d\"priority\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$priority\"/\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"            \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\"/\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"            \u003cRowConstraints/\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"Nafeij":37}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"    \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"Nafeij":7}},{"path":"src/main/resources/view/calendar.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":" *  Copyright (C) 2017 Dirk Lemmermann Software \u0026 Consulting (dlsc.com)","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":" *","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":" *  Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":" *  you may not use this file except in compliance with the License.","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":" *  You may obtain a copy of the License at","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":" *","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":" *          http://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":" *","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":" *  Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":" *  distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":" *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":" *  See the License for the specific language governing permissions and","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":" *  limitations under the License.","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":" * Base colors for the predefined styles","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"* {","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"    -style1-color: rgba(119.0, 192.0, 75.0, 0.9);","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"    -style2-color: rgba(65.0, 143.0, 203.0, 0.9);","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"    -style3-color: rgba(247.0, 209.0, 91.0, 0.9);","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"    -style4-color: rgba(157.0, 91.0, 159.0, 0.9);","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"    -style5-color: rgba(208.0, 82.0, 95.0, 0.9);","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"    -style6-color: rgba(249.0, 132.0, 75.0, 0.9);","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"    -style7-color: rgba(174.0, 102.0, 62.0, 0.9);","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"    -weekend-fill-color: rgb(245.0, 245.0, 245.0);","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"    -today-fill-color: rgb(232, 77, 62);","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"    -today-stroke-color: rgb(232, 77, 62);","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"    -usage-very-low-color: lightgreen;","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"    -usage-low-color: green;","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"    -usage-medium-color: gold;","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"    -usage-high-color: darkorange;","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"    -usage-very-high-color: red;","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"    -usage-very-low-text-color: green;","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"    -usage-low-text-color: lightgreen;","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"    -usage-medium-text-color: black;","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"    -usage-high-text-color: black;","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"    -usage-very-high-text-color: white;","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":" * A few ID-based styles.","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"#toolbar {","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 10.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0.0 0.0 0.5 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: gray;","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"Nafeij"},"content":"#switcher {","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"Nafeij"},"content":"#search-field {","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"Nafeij"},"content":"    -fx-background-radius: 100.0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"Nafeij"},"content":"    -fx-pref-width: 200.0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"Nafeij"},"content":"#search-icon {","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"Nafeij"},"content":"    -glyph-name: \"SEARCH\";","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"Nafeij"},"content":"    -glyph-size: 1.0em;","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"Nafeij"},"content":"#date-picker {","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: lightgray transparent transparent transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"Nafeij"},"content":"    -fx-border-insets: 0.0 6.0 0.0 6.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: rgb(245.0, 245.0, 245.0);","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"Nafeij"},"content":"    -fx-min-width: 200.0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"Nafeij"},"content":"    -fx-min-height: 180.0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"Nafeij"},"content":"#tray-pane {","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: null;","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"Nafeij"},"content":".date-hyperlink {","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"Nafeij"},"content":"    -fx-cursor: hand;","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"Nafeij"},"content":" * Styles for CalendarView.","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"Nafeij"},"content":".calendar-view .master-detail-pane \u003e .split-pane \u003e .split-pane-divider {","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0.0 1.0 0.0 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"Nafeij"},"content":".calendar-view .master-detail-pane \u003e .split-pane {","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"Nafeij"},"content":"    -fx-background-insets: 0.0, 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"Nafeij"},"content":".calendar-view .button-icon {","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"Nafeij"},"content":"    -fx-icon-color: rgb(100, 100, 100);","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"Nafeij"},"content":"    -fx-icon-size: 14.0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"Nafeij"},"content":".right-toolbar-container {","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"Nafeij"},"content":"    -fx-spacing: 10px;","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"Nafeij"},"content":" * Styles for the PageBase abstract superclass of the day, week, month, and year page.","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"Nafeij"},"content":" * The page base consists of a big content node in the middle and a header that displays","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"Nafeij"},"content":" * navigation buttons to go forward, back, to today and the currently shown date (range).","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"Nafeij"},"content":".calendar-page {","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"Nafeij"},"content":".calendar-page \u003e .container \u003e .content {","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 10px;","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"Nafeij"},"content":".calendar-page \u003e .container \u003e .header {","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"Nafeij"},"content":".calendar-page \u003e .container \u003e .header \u003e .date-text {","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 2.2em;","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"Nafeij"},"content":".calendar-page \u003e .container \u003e .header \u003e .navigate-date-view {","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"Nafeij"},"content":".calendar-page \u003e .container \u003e .header \u003e .navigate-date-view \u003e .container \u003e .previous-date-button {","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 3 7 3 7;","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"Nafeij"},"content":".calendar-page \u003e .container \u003e .header \u003e .navigate-date-view \u003e .container \u003e .next-date-button {","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 3 7 3 7;","lastModifiedDate":"2023-03-05"},{"lineNumber":143,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"Nafeij"},"content":" * Styles needed by the \"days\" page.","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":148,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"Nafeij"},"content":".day-page \u003e .container \u003e .content \u003e .left-side \u003e .header {","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: rgba(0, 0, 0, .1);","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"Nafeij"},"content":"    -fx-background-radius: 4px;","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0 1em 0 1em;","lastModifiedDate":"2023-03-05"},{"lineNumber":153,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"Nafeij"},"content":".day-page \u003e .container \u003e .content \u003e .left-side \u003e .header \u003e .today-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 8.0em;","lastModifiedDate":"2023-03-05"},{"lineNumber":157,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: -fx-text-background-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":158,"author":{"gitId":"Nafeij"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-03-05"},{"lineNumber":159,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":160,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":161,"author":{"gitId":"Nafeij"},"content":".day-page \u003e .container \u003e .content \u003e .left-side \u003e .agenda-view {","lastModifiedDate":"2023-03-05"},{"lineNumber":162,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 2em 0 0 0;","lastModifiedDate":"2023-03-05"},{"lineNumber":163,"author":{"gitId":"Nafeij"},"content":"    -fx-background-insets: 0.0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":164,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":165,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":166,"author":{"gitId":"Nafeij"},"content":".day-page .day-view {","lastModifiedDate":"2023-03-05"},{"lineNumber":167,"author":{"gitId":"Nafeij"},"content":"    -fx-pref-width: 350px;","lastModifiedDate":"2023-03-05"},{"lineNumber":168,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":169,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":170,"author":{"gitId":"Nafeij"},"content":".day-page \u003e .container \u003e .content \u003e .left-side \u003e .header \u003e .year-month-view \u003e .container \u003e .day-of-week-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":171,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: transparent transparent lightgray transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":172,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0.0 0.0 5.0 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":173,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":174,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":175,"author":{"gitId":"Nafeij"},"content":".day-page \u003e .container \u003e .content \u003e .left-side \u003e .header \u003e .year-month-view \u003e .container \u003e .week-label,","lastModifiedDate":"2023-03-05"},{"lineNumber":176,"author":{"gitId":"Nafeij"},"content":".day-page \u003e .container \u003e .content \u003e .left-side \u003e .header \u003e .year-month-view \u003e .container \u003e .day-of-week-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":177,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: -fx-text-background-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":178,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 10px;","lastModifiedDate":"2023-03-05"},{"lineNumber":179,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":180,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":181,"author":{"gitId":"Nafeij"},"content":".day-page \u003e .container \u003e .content \u003e .left-side \u003e .header \u003e .year-month-view \u003e .container \u003e .week-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":182,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0.0 8.0 0.0 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":183,"author":{"gitId":"Nafeij"},"content":"    -fx-min-width: 2.0em;","lastModifiedDate":"2023-03-05"},{"lineNumber":184,"author":{"gitId":"Nafeij"},"content":"    -fx-min-height: 2.0em;","lastModifiedDate":"2023-03-05"},{"lineNumber":185,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: rgba(0, 0, 0, .5);","lastModifiedDate":"2023-03-05"},{"lineNumber":186,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":187,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":188,"author":{"gitId":"Nafeij"},"content":".day-page \u003e .container \u003e .content \u003e .left-side \u003e .header \u003e .year-month-view \u003e .container \u003e .current-date-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":189,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: -today-stroke-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":190,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":191,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":192,"author":{"gitId":"Nafeij"},"content":".day-page \u003e .container \u003e .content \u003e .left-side \u003e .header \u003e .year-month-view \u003e .container \u003e .current-date-border {","lastModifiedDate":"2023-03-05"},{"lineNumber":193,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: transparent transparent -today-stroke-color transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":194,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 2.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":195,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":196,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":197,"author":{"gitId":"Nafeij"},"content":".day-page \u003e .container \u003e .content \u003e .left-side \u003e .header \u003e .year-month-view \u003e .container \u003e .month-day {","lastModifiedDate":"2023-03-05"},{"lineNumber":198,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: .2em .3em .2em .3em;","lastModifiedDate":"2023-03-05"},{"lineNumber":199,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":200,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":201,"author":{"gitId":"Nafeij"},"content":".day-page \u003e .container \u003e .content \u003e .left-side \u003e .header \u003e .year-month-view \u003e .container \u003e .day-of-month-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":202,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: -fx-text-background-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":203,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: .9em;","lastModifiedDate":"2023-03-05"},{"lineNumber":204,"author":{"gitId":"Nafeij"},"content":"    -fx-opacity: 0.8;","lastModifiedDate":"2023-03-05"},{"lineNumber":205,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":206,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":207,"author":{"gitId":"Nafeij"},"content":".day-page \u003e .container \u003e .content \u003e .left-side \u003e .header \u003e .year-month-view \u003e .container \u003e .day-not-of-month-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":208,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: -fx-text-background-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":209,"author":{"gitId":"Nafeij"},"content":"    -fx-opacity: .5;","lastModifiedDate":"2023-03-05"},{"lineNumber":210,"author":{"gitId":"Nafeij"},"content":"    -fx-text-stroke: black;","lastModifiedDate":"2023-03-05"},{"lineNumber":211,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":212,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":213,"author":{"gitId":"Nafeij"},"content":".day-page \u003e .container \u003e .content \u003e .left-side \u003e .header \u003e .year-month-view \u003e .container \u003e .weekend-day {","lastModifiedDate":"2023-03-05"},{"lineNumber":214,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":215,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":216,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":217,"author":{"gitId":"Nafeij"},"content":".toolbar-controls-box {","lastModifiedDate":"2023-03-05"},{"lineNumber":218,"author":{"gitId":"Nafeij"},"content":"    -fx-spacing: 5px;","lastModifiedDate":"2023-03-05"},{"lineNumber":219,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":220,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":221,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":222,"author":{"gitId":"Nafeij"},"content":" * Styles needed by the DatePopOver control.","lastModifiedDate":"2023-03-05"},{"lineNumber":223,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":224,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":225,"author":{"gitId":"Nafeij"},"content":".date-popover \u003e .border {","lastModifiedDate":"2023-03-05"},{"lineNumber":226,"author":{"gitId":"Nafeij"},"content":"    -fx-fill: linear-gradient(#f6f6f6 50.0%, #e6e6e6 100.0%) !important;","lastModifiedDate":"2023-03-05"},{"lineNumber":227,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":228,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":229,"author":{"gitId":"Nafeij"},"content":".date-popover \u003e .content \u003e .entries-pane {","lastModifiedDate":"2023-03-05"},{"lineNumber":230,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0.5em;","lastModifiedDate":"2023-03-05"},{"lineNumber":231,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":232,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":233,"author":{"gitId":"Nafeij"},"content":".date-popover \u003e .content \u003e .entries-pane \u003e .entry \u003e .title {","lastModifiedDate":"2023-03-05"},{"lineNumber":234,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 2.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":235,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2023-03-05"},{"lineNumber":236,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":237,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":238,"author":{"gitId":"Nafeij"},"content":".date-popover \u003e .content \u003e .no-entries-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":239,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 4.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":240,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-03-05"},{"lineNumber":241,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":242,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":243,"author":{"gitId":"Nafeij"},"content":".date-popover \u003e .content \u003e .entries-pane \u003e .entry \u003e .time {","lastModifiedDate":"2023-03-05"},{"lineNumber":244,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 2.0 2.0 2.0 40.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":245,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 10px;","lastModifiedDate":"2023-03-05"},{"lineNumber":246,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: gray;","lastModifiedDate":"2023-03-05"},{"lineNumber":247,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":248,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":249,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":250,"author":{"gitId":"Nafeij"},"content":" * Styles needed for the EntryDetailsView.","lastModifiedDate":"2023-03-05"},{"lineNumber":251,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":252,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":253,"author":{"gitId":"Nafeij"},"content":".entry-details-view \u003e .content {","lastModifiedDate":"2023-03-05"},{"lineNumber":254,"author":{"gitId":"Nafeij"},"content":"    -fx-hgap: 1.0em;","lastModifiedDate":"2023-03-05"},{"lineNumber":255,"author":{"gitId":"Nafeij"},"content":"    -fx-vgap: 1.0em;","lastModifiedDate":"2023-03-05"},{"lineNumber":256,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":257,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":258,"author":{"gitId":"Nafeij"},"content":".entry-details-view \u003e .content \u003e .recurrence-summary-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":259,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":260,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":261,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":262,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":263,"author":{"gitId":"Nafeij"},"content":" * Styles needed by the source view. This control displays the currently known","lastModifiedDate":"2023-03-05"},{"lineNumber":264,"author":{"gitId":"Nafeij"},"content":" * calendar sources and for each source the calendars inside of it.","lastModifiedDate":"2023-03-05"},{"lineNumber":265,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":266,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":267,"author":{"gitId":"Nafeij"},"content":".source-view \u003e .container \u003e .titled-pane \u003e .title \u003e .arrow-button .arrow {","lastModifiedDate":"2023-03-05"},{"lineNumber":268,"author":{"gitId":"Nafeij"},"content":"    -fx-opacity: 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":269,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":270,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":271,"author":{"gitId":"Nafeij"},"content":".source-view \u003e .container \u003e .titled-pane \u003e .title \u003e .arrow-button {","lastModifiedDate":"2023-03-05"},{"lineNumber":272,"author":{"gitId":"Nafeij"},"content":"    -fx-pref-width: 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":273,"author":{"gitId":"Nafeij"},"content":"    -fx-pref-height: 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":274,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":275,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":276,"author":{"gitId":"Nafeij"},"content":".source-view \u003e .container \u003e .titled-pane {","lastModifiedDate":"2023-03-05"},{"lineNumber":277,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":278,"author":{"gitId":"Nafeij"},"content":"    -fx-animated: true;","lastModifiedDate":"2023-03-05"},{"lineNumber":279,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":280,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":281,"author":{"gitId":"Nafeij"},"content":".source-view \u003e .container \u003e .titled-pane:expanded {","lastModifiedDate":"2023-03-05"},{"lineNumber":282,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":283,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":284,"author":{"gitId":"Nafeij"},"content":".source-view \u003e .container \u003e .titled-pane \u003e .title {","lastModifiedDate":"2023-03-05"},{"lineNumber":285,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":286,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":287,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: transparent transparent transparent transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":288,"author":{"gitId":"Nafeij"},"content":"    -fx-border-insets: 1.0 10.0 1.0 10.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":289,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":290,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":291,"author":{"gitId":"Nafeij"},"content":".source-view \u003e .container \u003e .titled-pane:collapsed \u003e .title {","lastModifiedDate":"2023-03-05"},{"lineNumber":292,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: transparent transparent lightgray transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":293,"author":{"gitId":"Nafeij"},"content":"    -fx-effect: null;","lastModifiedDate":"2023-03-05"},{"lineNumber":294,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":295,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":296,"author":{"gitId":"Nafeij"},"content":".source-view \u003e .container \u003e .titled-pane \u003e .content {","lastModifiedDate":"2023-03-05"},{"lineNumber":297,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":298,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0.0 20.0 0.0 20.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":299,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":300,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":301,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":302,"author":{"gitId":"Nafeij"},"content":".source-view \u003e .container \u003e .titled-pane \u003e .title \u003e .arrow-button \u003e .arrow {","lastModifiedDate":"2023-03-05"},{"lineNumber":303,"author":{"gitId":"Nafeij"},"content":"    -fx-pref-width: 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":304,"author":{"gitId":"Nafeij"},"content":"    -fx-pref-height: 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":305,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":306,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":307,"author":{"gitId":"Nafeij"},"content":".source-view \u003e .container \u003e .single-calendar-group {","lastModifiedDate":"2023-03-05"},{"lineNumber":308,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 1em;","lastModifiedDate":"2023-03-05"},{"lineNumber":309,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":310,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":311,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":312,"author":{"gitId":"Nafeij"},"content":" * Styles needed by the scroll pane that wraps the source view.","lastModifiedDate":"2023-03-05"},{"lineNumber":313,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":314,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":315,"author":{"gitId":"Nafeij"},"content":".source-view-scroll-pane,","lastModifiedDate":"2023-03-05"},{"lineNumber":316,"author":{"gitId":"Nafeij"},"content":".source-view-scroll-pane:focused {","lastModifiedDate":"2023-03-05"},{"lineNumber":317,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":318,"author":{"gitId":"Nafeij"},"content":"    -fx-background-radius: 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":319,"author":{"gitId":"Nafeij"},"content":"    -fx-background-insets: 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":320,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":321,"author":{"gitId":"Nafeij"},"content":"    -fx-border-radius: 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":322,"author":{"gitId":"Nafeij"},"content":"    -fx-border-insets: 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":323,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":324,"author":{"gitId":"Nafeij"},"content":"    -fx-fit-to-width: true;","lastModifiedDate":"2023-03-05"},{"lineNumber":325,"author":{"gitId":"Nafeij"},"content":"    -fx-fit-to-height: true;","lastModifiedDate":"2023-03-05"},{"lineNumber":326,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":327,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":328,"author":{"gitId":"Nafeij"},"content":".source-view-scroll-pane .corner {","lastModifiedDate":"2023-03-05"},{"lineNumber":329,"author":{"gitId":"Nafeij"},"content":"    -fx-background-insets: 0.0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":330,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":331,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":332,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":333,"author":{"gitId":"Nafeij"},"content":" * Styles needed by the year view.","lastModifiedDate":"2023-03-05"},{"lineNumber":334,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":335,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":336,"author":{"gitId":"Nafeij"},"content":".year-view .scroll-pane {","lastModifiedDate":"2023-03-05"},{"lineNumber":337,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":338,"author":{"gitId":"Nafeij"},"content":"    -fx-background-insets: 0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":339,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":340,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":341,"author":{"gitId":"Nafeij"},"content":".year-view .scroll-pane .container {","lastModifiedDate":"2023-03-05"},{"lineNumber":342,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-05"},{"lineNumber":343,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":344,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":345,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":346,"author":{"gitId":"Nafeij"},"content":" * Styles needed by the year month view.","lastModifiedDate":"2023-03-05"},{"lineNumber":347,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":348,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .header {","lastModifiedDate":"2023-03-05"},{"lineNumber":349,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0.0 0.0 10.0 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":350,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":351,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":352,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .header \u003e .month-header {","lastModifiedDate":"2023-03-05"},{"lineNumber":353,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":354,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":355,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .header \u003e .year-header {","lastModifiedDate":"2023-03-05"},{"lineNumber":356,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":357,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":358,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .header \u003e .month-header \u003e .month-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":359,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-03-05"},{"lineNumber":360,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":361,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":362,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .header \u003e .year-header \u003e .year-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":363,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-03-05"},{"lineNumber":364,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":365,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":366,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container {","lastModifiedDate":"2023-03-05"},{"lineNumber":367,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 1em;","lastModifiedDate":"2023-03-05"},{"lineNumber":368,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":369,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":370,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .header \u003e .year-header \u003e .previous-button,","lastModifiedDate":"2023-03-05"},{"lineNumber":371,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .header \u003e .year-header \u003e .next-button,","lastModifiedDate":"2023-03-05"},{"lineNumber":372,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .header \u003e .month-header \u003e .previous-button,","lastModifiedDate":"2023-03-05"},{"lineNumber":373,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .header \u003e .month-header \u003e .next-button {","lastModifiedDate":"2023-03-05"},{"lineNumber":374,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2023-03-05"},{"lineNumber":375,"author":{"gitId":"Nafeij"},"content":"    -fx-pref-width: 8.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":376,"author":{"gitId":"Nafeij"},"content":"    -fx-pref-height: 8.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":377,"author":{"gitId":"Nafeij"},"content":"    -fx-max-width: 8.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":378,"author":{"gitId":"Nafeij"},"content":"    -fx-max-height: 8.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":379,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":380,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":381,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .header \u003e .year-header \u003e .previous-button:hover,","lastModifiedDate":"2023-03-05"},{"lineNumber":382,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .header \u003e .year-header \u003e .next-button:hover,","lastModifiedDate":"2023-03-05"},{"lineNumber":383,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .header \u003e .month-header \u003e .previous-button:hover,","lastModifiedDate":"2023-03-05"},{"lineNumber":384,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .header \u003e .month-header \u003e .next-button:hover {","lastModifiedDate":"2023-03-05"},{"lineNumber":385,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: lightgray;","lastModifiedDate":"2023-03-05"},{"lineNumber":386,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":387,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":388,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .header \u003e .year-header \u003e .previous-button:pressed,","lastModifiedDate":"2023-03-05"},{"lineNumber":389,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .header \u003e .year-header \u003e .next-button:pressed,","lastModifiedDate":"2023-03-05"},{"lineNumber":390,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .header \u003e .month-header \u003e .previous-button:pressed,","lastModifiedDate":"2023-03-05"},{"lineNumber":391,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .header \u003e .month-header \u003e .next-button:pressed {","lastModifiedDate":"2023-03-05"},{"lineNumber":392,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2023-03-05"},{"lineNumber":393,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":394,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":395,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .header \u003e .year-header \u003e .previous-button,","lastModifiedDate":"2023-03-05"},{"lineNumber":396,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .header \u003e .month-header \u003e .previous-button {","lastModifiedDate":"2023-03-05"},{"lineNumber":397,"author":{"gitId":"Nafeij"},"content":"    -fx-shape: \"M3,0 V3 L0 1.5 L3,0 Z\";","lastModifiedDate":"2023-03-05"},{"lineNumber":398,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":399,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":400,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .header \u003e .year-header \u003e .next-button,","lastModifiedDate":"2023-03-05"},{"lineNumber":401,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .header \u003e .month-header \u003e .next-button {","lastModifiedDate":"2023-03-05"},{"lineNumber":402,"author":{"gitId":"Nafeij"},"content":"    -fx-shape: \"M0,0 L3 1.5 L0,3 V0 Z\";","lastModifiedDate":"2023-03-05"},{"lineNumber":403,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":404,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":405,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .day-of-week-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":406,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: transparent transparent lightgray transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":407,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0.0 0.0 5.0 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":408,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":409,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":410,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .week-label,","lastModifiedDate":"2023-03-05"},{"lineNumber":411,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .day-of-week-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":412,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: gray;","lastModifiedDate":"2023-03-05"},{"lineNumber":413,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 10px;","lastModifiedDate":"2023-03-05"},{"lineNumber":414,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":415,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":416,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .week-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":417,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0.0 2.0 0.0 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":418,"author":{"gitId":"Nafeij"},"content":"    -fx-min-width: 2.0em;","lastModifiedDate":"2023-03-05"},{"lineNumber":419,"author":{"gitId":"Nafeij"},"content":"    -fx-min-height: 2.0em;","lastModifiedDate":"2023-03-05"},{"lineNumber":420,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":421,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":422,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .current-date-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":423,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: -today-stroke-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":424,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":425,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":426,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .current-date-border {","lastModifiedDate":"2023-03-05"},{"lineNumber":427,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: transparent transparent -today-stroke-color transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":428,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 2.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":429,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":430,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":431,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .month-day {","lastModifiedDate":"2023-03-05"},{"lineNumber":432,"author":{"gitId":"Nafeij"},"content":"    -size: 2em;","lastModifiedDate":"2023-03-05"},{"lineNumber":433,"author":{"gitId":"Nafeij"},"content":"    -fx-pref-width: -size;","lastModifiedDate":"2023-03-05"},{"lineNumber":434,"author":{"gitId":"Nafeij"},"content":"    -fx-pref-height: -size;","lastModifiedDate":"2023-03-05"},{"lineNumber":435,"author":{"gitId":"Nafeij"},"content":"    -fx-min-width: -size;","lastModifiedDate":"2023-03-05"},{"lineNumber":436,"author":{"gitId":"Nafeij"},"content":"    -fx-min-height: -size;","lastModifiedDate":"2023-03-05"},{"lineNumber":437,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":438,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":439,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .day-of-month-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":440,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: rgba(0.0, 0.0, 0.0, 0.66);","lastModifiedDate":"2023-03-05"},{"lineNumber":441,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":442,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":443,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .day-not-of-month-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":444,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: lightgray;","lastModifiedDate":"2023-03-05"},{"lineNumber":445,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":446,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":447,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .weekend-day {","lastModifiedDate":"2023-03-05"},{"lineNumber":448,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: rgb(245.0, 245.0, 245.0);","lastModifiedDate":"2023-03-05"},{"lineNumber":449,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":450,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":451,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .usage-very-low {","lastModifiedDate":"2023-03-05"},{"lineNumber":452,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -usage-very-low-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":453,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: -usage-very-low-text-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":454,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":455,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":456,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .usage-low {","lastModifiedDate":"2023-03-05"},{"lineNumber":457,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -usage-low-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":458,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: -usage-low-text-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":459,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":460,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":461,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .usage-medium {","lastModifiedDate":"2023-03-05"},{"lineNumber":462,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -usage-medium-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":463,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: -usage-medium-text-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":464,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":465,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":466,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .usage-high {","lastModifiedDate":"2023-03-05"},{"lineNumber":467,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -usage-high-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":468,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: -usage-high-text-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":469,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":470,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":471,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .usage-very-high {","lastModifiedDate":"2023-03-05"},{"lineNumber":472,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -usage-very-high-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":473,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: -usage-very-high-text-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":474,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":475,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":476,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .selected-month-date {","lastModifiedDate":"2023-03-05"},{"lineNumber":477,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: lightgray;","lastModifiedDate":"2023-03-05"},{"lineNumber":478,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-05"},{"lineNumber":479,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":480,"author":{"gitId":"Nafeij"},"content":"    -fx-background-radius: 10em;","lastModifiedDate":"2023-03-05"},{"lineNumber":481,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":482,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":483,"author":{"gitId":"Nafeij"},"content":".year-month-view \u003e .container \u003e .today {","lastModifiedDate":"2023-03-05"},{"lineNumber":484,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -today-fill-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":485,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: white !important;","lastModifiedDate":"2023-03-05"},{"lineNumber":486,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":487,"author":{"gitId":"Nafeij"},"content":"    -fx-background-radius: 10em;","lastModifiedDate":"2023-03-05"},{"lineNumber":488,"author":{"gitId":"Nafeij"},"content":"    -fx-opacity: 1 !important;","lastModifiedDate":"2023-03-05"},{"lineNumber":489,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":490,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":491,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":492,"author":{"gitId":"Nafeij"},"content":" * Styles needed by the month view.","lastModifiedDate":"2023-03-05"},{"lineNumber":493,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":494,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":495,"author":{"gitId":"Nafeij"},"content":".month-view \u003e .container \u003e .day {","lastModifiedDate":"2023-03-05"},{"lineNumber":496,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0.0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":497,"author":{"gitId":"Nafeij"},"content":"    -fx-background-insets: 0.0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":498,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: lightgray transparent transparent transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":499,"author":{"gitId":"Nafeij"},"content":"    -fx-border-insets: 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":500,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 1.0 0.0 0.0 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":501,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":502,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":503,"author":{"gitId":"Nafeij"},"content":".month-view \u003e .container \u003e .day:selected {","lastModifiedDate":"2023-03-05"},{"lineNumber":504,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: aliceblue;","lastModifiedDate":"2023-03-05"},{"lineNumber":505,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":506,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":507,"author":{"gitId":"Nafeij"},"content":".month-view \u003e .container \u003e .today,","lastModifiedDate":"2023-03-05"},{"lineNumber":508,"author":{"gitId":"Nafeij"},"content":".month-view \u003e .container \u003e .current-week {","lastModifiedDate":"2023-03-05"},{"lineNumber":509,"author":{"gitId":"Nafeij"},"content":"    -fx-border-insets: 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":510,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 5.0 0.0 0.0 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":511,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":512,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":513,"author":{"gitId":"Nafeij"},"content":".month-view \u003e .container \u003e .current-week {","lastModifiedDate":"2023-03-05"},{"lineNumber":514,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: salmon transparent transparent transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":515,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":516,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":517,"author":{"gitId":"Nafeij"},"content":".month-view \u003e .container \u003e .today {","lastModifiedDate":"2023-03-05"},{"lineNumber":518,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: lavenderblush;","lastModifiedDate":"2023-03-05"},{"lineNumber":519,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: red;","lastModifiedDate":"2023-03-05"},{"lineNumber":520,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: -today-stroke-color transparent transparent transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":521,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":522,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":523,"author":{"gitId":"Nafeij"},"content":".month-view \u003e .container \u003e .day \u003e .entries-pane {","lastModifiedDate":"2023-03-05"},{"lineNumber":524,"author":{"gitId":"Nafeij"},"content":"    -fx-spacing: 1.0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":525,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":526,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":527,"author":{"gitId":"Nafeij"},"content":".month-view \u003e .container \u003e .day \u003e .header {","lastModifiedDate":"2023-03-05"},{"lineNumber":528,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 2.0 4.0 2.0 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":529,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":530,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":531,"author":{"gitId":"Nafeij"},"content":".month-view \u003e .container \u003e .day \u003e .header \u003e .day-of-month-label,","lastModifiedDate":"2023-03-05"},{"lineNumber":532,"author":{"gitId":"Nafeij"},"content":".month-view \u003e .container \u003e .day \u003e .header \u003e .day-not-of-month-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":533,"author":{"gitId":"Nafeij"},"content":"    -fx-alignment: center-right;","lastModifiedDate":"2023-03-05"},{"lineNumber":534,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":535,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":536,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":537,"author":{"gitId":"Nafeij"},"content":".month-view \u003e .container \u003e .day \u003e .header \u003e .day-of-month-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":538,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: derive(gray, -40.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":539,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":540,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":541,"author":{"gitId":"Nafeij"},"content":".month-view \u003e .container \u003e .day \u003e .header \u003e .day-not-of-month-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":542,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: lightgray;","lastModifiedDate":"2023-03-05"},{"lineNumber":543,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":544,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":545,"author":{"gitId":"Nafeij"},"content":".month-view \u003e .container \u003e .day \u003e .header \u003e .weekend-day {","lastModifiedDate":"2023-03-05"},{"lineNumber":546,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: gray;","lastModifiedDate":"2023-03-05"},{"lineNumber":547,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":548,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":549,"author":{"gitId":"Nafeij"},"content":".month-view \u003e .container \u003e .day \u003e .header \u003e .week-of-year-label,","lastModifiedDate":"2023-03-05"},{"lineNumber":550,"author":{"gitId":"Nafeij"},"content":".month-view \u003e .container \u003e .day \u003e .header \u003e .current-week-of-year-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":551,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 0.8em;","lastModifiedDate":"2023-03-05"},{"lineNumber":552,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":553,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0.25em;","lastModifiedDate":"2023-03-05"},{"lineNumber":554,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":555,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":556,"author":{"gitId":"Nafeij"},"content":".month-view \u003e .container \u003e .day \u003e .header \u003e .week-of-year-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":557,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-05"},{"lineNumber":558,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2023-03-05"},{"lineNumber":559,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":560,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":561,"author":{"gitId":"Nafeij"},"content":".month-view \u003e .container \u003e .day \u003e .header \u003e .current-week-of-year-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":562,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: lightcoral;","lastModifiedDate":"2023-03-05"},{"lineNumber":563,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: lavenderblush;","lastModifiedDate":"2023-03-05"},{"lineNumber":564,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":565,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":566,"author":{"gitId":"Nafeij"},"content":".month-view \u003e .container \u003e .day-of-week-label,","lastModifiedDate":"2023-03-05"},{"lineNumber":567,"author":{"gitId":"Nafeij"},"content":".month-view \u003e .container \u003e .day-of-weekend-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":568,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: derive(gray, -40.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":569,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0.0 0.0 5.0px 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":570,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 1.1em;","lastModifiedDate":"2023-03-05"},{"lineNumber":571,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":572,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":573,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":574,"author":{"gitId":"Nafeij"},"content":".month-view \u003e .container \u003e .day-of-weekend-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":575,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: derive(gray, 10.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":576,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":577,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":578,"author":{"gitId":"Nafeij"},"content":".month-view \u003e .container \u003e .weekend-day {","lastModifiedDate":"2023-03-05"},{"lineNumber":579,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: rgb(245.0, 245.0, 245.0);","lastModifiedDate":"2023-03-05"},{"lineNumber":580,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":581,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":582,"author":{"gitId":"Nafeij"},"content":".month-view \u003e .container \u003e .day \u003e .entries-pane \u003e .more-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":583,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: gray;","lastModifiedDate":"2023-03-05"},{"lineNumber":584,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":585,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0.0 0.0 0.0 10.0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":586,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":587,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":588,"author":{"gitId":"Nafeij"},"content":".month-view \u003e .container \u003e .day \u003e .header \u003e .today-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":589,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: -today-stroke-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":590,"author":{"gitId":"Nafeij"},"content":"    -fx-background-insets: 0.0 4.0px 0.0 4.0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":591,"author":{"gitId":"Nafeij"},"content":"    -fx-alignment: center-right;","lastModifiedDate":"2023-03-05"},{"lineNumber":592,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":593,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":594,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":595,"author":{"gitId":"Nafeij"},"content":" * Styles needed by the week day separators.","lastModifiedDate":"2023-03-05"},{"lineNumber":596,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":597,"author":{"gitId":"Nafeij"},"content":".week-view .weekday-separator,","lastModifiedDate":"2023-03-05"},{"lineNumber":598,"author":{"gitId":"Nafeij"},"content":".weekday-header-view .weekday-separator,","lastModifiedDate":"2023-03-05"},{"lineNumber":599,"author":{"gitId":"Nafeij"},"content":".all-day-view .weekday-separator {","lastModifiedDate":"2023-03-05"},{"lineNumber":600,"author":{"gitId":"Nafeij"},"content":"    -size: 0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":601,"author":{"gitId":"Nafeij"},"content":"    -fx-pref-width: -size;","lastModifiedDate":"2023-03-05"},{"lineNumber":602,"author":{"gitId":"Nafeij"},"content":"    -fx-min-width: -size;","lastModifiedDate":"2023-03-05"},{"lineNumber":603,"author":{"gitId":"Nafeij"},"content":"    -fx-max-width: -size;","lastModifiedDate":"2023-03-05"},{"lineNumber":604,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: lightgrey;","lastModifiedDate":"2023-03-05"},{"lineNumber":605,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":606,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":607,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":608,"author":{"gitId":"Nafeij"},"content":" * Styles needed by the day view.","lastModifiedDate":"2023-03-05"},{"lineNumber":609,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":610,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":611,"author":{"gitId":"Nafeij"},"content":".day-view {","lastModifiedDate":"2023-03-05"},{"lineNumber":612,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0.0 0.0 0.0 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":613,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":614,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":615,"author":{"gitId":"Nafeij"},"content":".day-view.today {","lastModifiedDate":"2023-03-05"},{"lineNumber":616,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":617,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":618,"author":{"gitId":"Nafeij"},"content":".day-view.weekend-day {","lastModifiedDate":"2023-03-05"},{"lineNumber":619,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: rgb(245.0, 245.0, 245.0);","lastModifiedDate":"2023-03-05"},{"lineNumber":620,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":621,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":622,"author":{"gitId":"Nafeij"},"content":".day-view \u003e .half-hour-line {","lastModifiedDate":"2023-03-05"},{"lineNumber":623,"author":{"gitId":"Nafeij"},"content":"    -fx-stroke: derive(lightgray, +40%);","lastModifiedDate":"2023-03-05"},{"lineNumber":624,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":625,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":626,"author":{"gitId":"Nafeij"},"content":".day-view \u003e .full-hour-line {","lastModifiedDate":"2023-03-05"},{"lineNumber":627,"author":{"gitId":"Nafeij"},"content":"    -fx-stroke: lightgray;","lastModifiedDate":"2023-03-05"},{"lineNumber":628,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":629,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":630,"author":{"gitId":"Nafeij"},"content":".day-view \u003e .midnight-line {","lastModifiedDate":"2023-03-05"},{"lineNumber":631,"author":{"gitId":"Nafeij"},"content":"    -fx-stroke-width: 2;","lastModifiedDate":"2023-03-05"},{"lineNumber":632,"author":{"gitId":"Nafeij"},"content":"    -fx-stroke: darkgrey;","lastModifiedDate":"2023-03-05"},{"lineNumber":633,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":634,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":635,"author":{"gitId":"Nafeij"},"content":".day-view \u003e .noon-line {","lastModifiedDate":"2023-03-05"},{"lineNumber":636,"author":{"gitId":"Nafeij"},"content":"    -fx-stroke-width: 2;","lastModifiedDate":"2023-03-05"},{"lineNumber":637,"author":{"gitId":"Nafeij"},"content":"    -fx-stroke: darkgrey;","lastModifiedDate":"2023-03-05"},{"lineNumber":638,"author":{"gitId":"Nafeij"},"content":"    -fx-stroke-dash-array: 6 6;","lastModifiedDate":"2023-03-05"},{"lineNumber":639,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":640,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":641,"author":{"gitId":"Nafeij"},"content":".day-view \u003e .current-time-line {","lastModifiedDate":"2023-03-05"},{"lineNumber":642,"author":{"gitId":"Nafeij"},"content":"    -fx-stroke: -today-stroke-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":643,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":644,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":645,"author":{"gitId":"Nafeij"},"content":".day-view \u003e .early-hour-line,","lastModifiedDate":"2023-03-05"},{"lineNumber":646,"author":{"gitId":"Nafeij"},"content":".day-view \u003e .late-hour-line {","lastModifiedDate":"2023-03-05"},{"lineNumber":647,"author":{"gitId":"Nafeij"},"content":"    -fx-opacity: 0.5;","lastModifiedDate":"2023-03-05"},{"lineNumber":648,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":649,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":650,"author":{"gitId":"Nafeij"},"content":".day-view \u003e .early-hours-region,","lastModifiedDate":"2023-03-05"},{"lineNumber":651,"author":{"gitId":"Nafeij"},"content":".day-view \u003e .late-hours-region {","lastModifiedDate":"2023-03-05"},{"lineNumber":652,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: rgba(200.0, 200.0, 200.0, 0.2);","lastModifiedDate":"2023-03-05"},{"lineNumber":653,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":654,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":655,"author":{"gitId":"Nafeij"},"content":".day-view \u003e .current-time-circle {","lastModifiedDate":"2023-03-05"},{"lineNumber":656,"author":{"gitId":"Nafeij"},"content":"    -fx-stroke: -today-fill-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":657,"author":{"gitId":"Nafeij"},"content":"    -fx-fill: -today-stroke-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":658,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":659,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":660,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":661,"author":{"gitId":"Nafeij"},"content":" * Styles needed by the weekday view.","lastModifiedDate":"2023-03-05"},{"lineNumber":662,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":663,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":664,"author":{"gitId":"Nafeij"},"content":".weekday-view {","lastModifiedDate":"2023-03-05"},{"lineNumber":665,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":666,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":667,"author":{"gitId":"Nafeij"},"content":".weekday-view.today {","lastModifiedDate":"2023-03-05"},{"lineNumber":668,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: lavenderblush;","lastModifiedDate":"2023-03-05"},{"lineNumber":669,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":670,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":671,"author":{"gitId":"Nafeij"},"content":".weekday-view.weekend-day {","lastModifiedDate":"2023-03-05"},{"lineNumber":672,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: rgb(245.0, 245.0, 245.0);","lastModifiedDate":"2023-03-05"},{"lineNumber":673,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":674,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":675,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":676,"author":{"gitId":"Nafeij"},"content":" * Styles needed by the time scale (01:00, 02:00, .... 24:00).","lastModifiedDate":"2023-03-05"},{"lineNumber":677,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":678,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":679,"author":{"gitId":"Nafeij"},"content":".time-scale {","lastModifiedDate":"2023-03-05"},{"lineNumber":680,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0.0 5.0 0.0 5.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":681,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":682,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":683,"author":{"gitId":"Nafeij"},"content":".time-scale \u003e .time-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":684,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 0.8em;","lastModifiedDate":"2023-03-05"},{"lineNumber":685,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: gray;","lastModifiedDate":"2023-03-05"},{"lineNumber":686,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":687,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":688,"author":{"gitId":"Nafeij"},"content":".time-scale \u003e .date-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":689,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 0.8em;","lastModifiedDate":"2023-03-05"},{"lineNumber":690,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2023-03-05"},{"lineNumber":691,"author":{"gitId":"Nafeij"},"content":"    -fx-background-radius: 2px;","lastModifiedDate":"2023-03-05"},{"lineNumber":692,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 2px 4px;","lastModifiedDate":"2023-03-05"},{"lineNumber":693,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-05"},{"lineNumber":694,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":695,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":696,"author":{"gitId":"Nafeij"},"content":".time-scale \u003e .current-time-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":697,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 0.8em;","lastModifiedDate":"2023-03-05"},{"lineNumber":698,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: -today-stroke-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":699,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":700,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":701,"author":{"gitId":"Nafeij"},"content":".time-scale \u003e .early-hour-label,","lastModifiedDate":"2023-03-05"},{"lineNumber":702,"author":{"gitId":"Nafeij"},"content":".time-scale \u003e .late-hour-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":703,"author":{"gitId":"Nafeij"},"content":"    -fx-opacity: 0.5;","lastModifiedDate":"2023-03-05"},{"lineNumber":704,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":705,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":706,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":707,"author":{"gitId":"Nafeij"},"content":" * Styles needed by the WeekDayHeaderView.","lastModifiedDate":"2023-03-05"},{"lineNumber":708,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":709,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":710,"author":{"gitId":"Nafeij"},"content":".weekday-header-view \u003e .container \u003e .cell {","lastModifiedDate":"2023-03-05"},{"lineNumber":711,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 1.1em;","lastModifiedDate":"2023-03-05"},{"lineNumber":712,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":713,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0.0 0.0 4.0 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":714,"author":{"gitId":"Nafeij"},"content":"    -fx-border-insets: 0.0 0.0 0.0 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":715,"author":{"gitId":"Nafeij"},"content":"    -fx-alignment: center;","lastModifiedDate":"2023-03-05"},{"lineNumber":716,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: transparent transparent lightgray transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":717,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":718,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":719,"author":{"gitId":"Nafeij"},"content":".weekday-header-view \u003e .container \u003e .today {","lastModifiedDate":"2023-03-05"},{"lineNumber":720,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: -today-fill-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":721,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":722,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":723,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":724,"author":{"gitId":"Nafeij"},"content":" * Styles needed by the AllDayView.","lastModifiedDate":"2023-03-05"},{"lineNumber":725,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":726,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":727,"author":{"gitId":"Nafeij"},"content":".all-day-view {","lastModifiedDate":"2023-03-05"},{"lineNumber":728,"author":{"gitId":"Nafeij"},"content":"    -fx-min-height: 2.0em;","lastModifiedDate":"2023-03-05"},{"lineNumber":729,"author":{"gitId":"Nafeij"},"content":"    -fx-row-height: 20.0px; /* custom styleable property */","lastModifiedDate":"2023-03-05"},{"lineNumber":730,"author":{"gitId":"Nafeij"},"content":"    -fx-row-spacing: 2.0px; /* custom styleable property */","lastModifiedDate":"2023-03-05"},{"lineNumber":731,"author":{"gitId":"Nafeij"},"content":"    -fx-column-spacing: 2.0px; /* custom styleable property */","lastModifiedDate":"2023-03-05"},{"lineNumber":732,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":733,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":734,"author":{"gitId":"Nafeij"},"content":".all-day-view \u003e .container \u003e .day-region {","lastModifiedDate":"2023-03-05"},{"lineNumber":735,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0.0 0.0 5.0 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":736,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: transparent transparent lightgray transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":737,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":738,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":739,"author":{"gitId":"Nafeij"},"content":".all-day-view \u003e .container \u003e .today {","lastModifiedDate":"2023-03-05"},{"lineNumber":740,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: transparent transparent -today-fill-color transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":741,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: lavenderblush;","lastModifiedDate":"2023-03-05"},{"lineNumber":742,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":743,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":744,"author":{"gitId":"Nafeij"},"content":".all-day-view \u003e .container \u003e .weekend {","lastModifiedDate":"2023-03-05"},{"lineNumber":745,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: rgb(245.0, 245.0, 245.0);","lastModifiedDate":"2023-03-05"},{"lineNumber":746,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":747,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":748,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":749,"author":{"gitId":"Nafeij"},"content":" * Styles needed by the AgendaView.","lastModifiedDate":"2023-03-05"},{"lineNumber":750,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":751,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":752,"author":{"gitId":"Nafeij"},"content":".agenda-view \u003e .container \u003e .list-view \u003e .placeholder-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":753,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: gray;","lastModifiedDate":"2023-03-05"},{"lineNumber":754,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 2.5em;","lastModifiedDate":"2023-03-05"},{"lineNumber":755,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":756,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":757,"author":{"gitId":"Nafeij"},"content":".agenda-view \u003e .container {","lastModifiedDate":"2023-03-05"},{"lineNumber":758,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":759,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":760,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":761,"author":{"gitId":"Nafeij"},"content":".agenda-view \u003e .container \u003e .list-view {","lastModifiedDate":"2023-03-05"},{"lineNumber":762,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":763,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":764,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":765,"author":{"gitId":"Nafeij"},"content":".agenda-view \u003e .container \u003e .status-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":766,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: gray;","lastModifiedDate":"2023-03-05"},{"lineNumber":767,"author":{"gitId":"Nafeij"},"content":"    -fx-alignment: center;","lastModifiedDate":"2023-03-05"},{"lineNumber":768,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":769,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":770,"author":{"gitId":"Nafeij"},"content":".agenda-view \u003e .container \u003e .list-view \u003e .virtual-flow \u003e .scroll-bar:vertical,","lastModifiedDate":"2023-03-05"},{"lineNumber":771,"author":{"gitId":"Nafeij"},"content":".agenda-view \u003e .container \u003e .list-view \u003e .virtual-flow \u003e .scroll-bar:vertical .decrement-arrow,","lastModifiedDate":"2023-03-05"},{"lineNumber":772,"author":{"gitId":"Nafeij"},"content":".agenda-view \u003e .container \u003e .list-view \u003e .virtual-flow \u003e .scroll-bar:vertical .increment-arrow {","lastModifiedDate":"2023-03-05"},{"lineNumber":773,"author":{"gitId":"Nafeij"},"content":"    -fx-pref-width: 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":774,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":775,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":776,"author":{"gitId":"Nafeij"},"content":".agenda-view-list-cell {","lastModifiedDate":"2023-03-05"},{"lineNumber":777,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":778,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":779,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":780,"author":{"gitId":"Nafeij"},"content":".agenda-view-list-cell \u003e .container \u003e .header {","lastModifiedDate":"2023-03-05"},{"lineNumber":781,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: transparent transparent lightgray transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":782,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 3.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":783,"author":{"gitId":"Nafeij"},"content":"    -fx-border-insets: 0.0 0.0 4.0 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":784,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":785,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":786,"author":{"gitId":"Nafeij"},"content":".agenda-view-list-cell \u003e .container \u003e .header.today {","lastModifiedDate":"2023-03-05"},{"lineNumber":787,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: transparent transparent -today-fill-color transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":788,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":789,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":790,"author":{"gitId":"Nafeij"},"content":".agenda-view-list-cell \u003e .container \u003e .header \u003e .date-label,","lastModifiedDate":"2023-03-05"},{"lineNumber":791,"author":{"gitId":"Nafeij"},"content":".agenda-view-list-cell \u003e .container \u003e .header \u003e .weekday-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":792,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0.0 0.0 4.0 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":793,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 0.8em;","lastModifiedDate":"2023-03-05"},{"lineNumber":794,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":795,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: gray;","lastModifiedDate":"2023-03-05"},{"lineNumber":796,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":797,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":798,"author":{"gitId":"Nafeij"},"content":".agenda-view-list-cell \u003e .container \u003e .header \u003e .today,","lastModifiedDate":"2023-03-05"},{"lineNumber":799,"author":{"gitId":"Nafeij"},"content":".agenda-view-list-cell \u003e .container \u003e .header \u003e .today {","lastModifiedDate":"2023-03-05"},{"lineNumber":800,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: -today-fill-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":801,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":802,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":803,"author":{"gitId":"Nafeij"},"content":".agenda-view-list-cell \u003e .container \u003e .body {","lastModifiedDate":"2023-03-05"},{"lineNumber":804,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0.0 0.0 20.0 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":805,"author":{"gitId":"Nafeij"},"content":"    -fx-vgap: 5.0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":806,"author":{"gitId":"Nafeij"},"content":"    -fx-hgap: 8.0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":807,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":808,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":809,"author":{"gitId":"Nafeij"},"content":".agenda-view-list-cell \u003e .container \u003e .body \u003e .title-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":810,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 4.0 4.0 4.0 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":811,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-05"},{"lineNumber":812,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":813,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":814,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":815,"author":{"gitId":"Nafeij"},"content":".agenda-view-list-cell \u003e .container \u003e .body \u003e .time-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":816,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: gray;","lastModifiedDate":"2023-03-05"},{"lineNumber":817,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":818,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":819,"author":{"gitId":"Nafeij"},"content":".agenda-view-list-cell \u003e .container \u003e .body \u003e .separator {","lastModifiedDate":"2023-03-05"},{"lineNumber":820,"author":{"gitId":"Nafeij"},"content":"    -fx-pref-height: 1.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":821,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: lightgray;","lastModifiedDate":"2023-03-05"},{"lineNumber":822,"author":{"gitId":"Nafeij"},"content":"    -fx-border-style: dashed none none none;","lastModifiedDate":"2023-03-05"},{"lineNumber":823,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":824,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":825,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":826,"author":{"gitId":"Nafeij"},"content":" * Styles needed by the SearchResultView.","lastModifiedDate":"2023-03-05"},{"lineNumber":827,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":828,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":829,"author":{"gitId":"Nafeij"},"content":".search-result-view \u003e .list-view,","lastModifiedDate":"2023-03-05"},{"lineNumber":830,"author":{"gitId":"Nafeij"},"content":".search-result-view \u003e .list-view:focused {","lastModifiedDate":"2023-03-05"},{"lineNumber":831,"author":{"gitId":"Nafeij"},"content":"    -fx-pref-width: 200.0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":832,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: rgb(245.0, 245.0, 245.0);","lastModifiedDate":"2023-03-05"},{"lineNumber":833,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":834,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":835,"author":{"gitId":"Nafeij"},"content":".search-result-view \u003e .list-view \u003e .placeholder-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":836,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: gray;","lastModifiedDate":"2023-03-05"},{"lineNumber":837,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 1.5em;","lastModifiedDate":"2023-03-05"},{"lineNumber":838,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":839,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":840,"author":{"gitId":"Nafeij"},"content":".search-result-cell:selected {","lastModifiedDate":"2023-03-05"},{"lineNumber":841,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: rgb(235.0, 235.0, 235.0);","lastModifiedDate":"2023-03-05"},{"lineNumber":842,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":843,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":844,"author":{"gitId":"Nafeij"},"content":".search-result-cell:filled:focused:selected {","lastModifiedDate":"2023-03-05"},{"lineNumber":845,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: rgb(235.0, 235.0, 235.0);","lastModifiedDate":"2023-03-05"},{"lineNumber":846,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":847,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":848,"author":{"gitId":"Nafeij"},"content":".search-result-cell {","lastModifiedDate":"2023-03-05"},{"lineNumber":849,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":850,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: transparent transparent lightgray transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":851,"author":{"gitId":"Nafeij"},"content":"    -fx-border-insets: 0.0 6.0 0.0 6.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":852,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":853,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":854,"author":{"gitId":"Nafeij"},"content":".search-result-cell \u003e .container \u003e .title-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":855,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":856,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 0.9em;","lastModifiedDate":"2023-03-05"},{"lineNumber":857,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-05"},{"lineNumber":858,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":859,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":860,"author":{"gitId":"Nafeij"},"content":".search-result-cell \u003e .container \u003e .date-time-pane \u003e .date-label,","lastModifiedDate":"2023-03-05"},{"lineNumber":861,"author":{"gitId":"Nafeij"},"content":".search-result-cell \u003e .container \u003e .date-time-pane \u003e .time-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":862,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 0.8em;","lastModifiedDate":"2023-03-05"},{"lineNumber":863,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: gray;","lastModifiedDate":"2023-03-05"},{"lineNumber":864,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":865,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":866,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":867,"author":{"gitId":"Nafeij"},"content":" * Styles needed by the MonthEntryView.","lastModifiedDate":"2023-03-05"},{"lineNumber":868,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":869,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":870,"author":{"gitId":"Nafeij"},"content":".month-entry-view {","lastModifiedDate":"2023-03-05"},{"lineNumber":871,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":872,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":873,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":874,"author":{"gitId":"Nafeij"},"content":" * Default styles for calendar entries.","lastModifiedDate":"2023-03-05"},{"lineNumber":875,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":876,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":877,"author":{"gitId":"Nafeij"},"content":".default-style-entry {","lastModifiedDate":"2023-03-05"},{"lineNumber":878,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: magenta;","lastModifiedDate":"2023-03-05"},{"lineNumber":879,"author":{"gitId":"Nafeij"},"content":"    -fx-background-radius: 0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":880,"author":{"gitId":"Nafeij"},"content":"    -fx-background-insets: 0.0 0.0 0.0 2.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":881,"author":{"gitId":"Nafeij"},"content":"    -fx-border-insets: 0.0 0.0 0.0 2.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":882,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0.0 0.0 0.0 4.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":883,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":884,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":885,"author":{"gitId":"Nafeij"},"content":".default-style-entry:dragged {","lastModifiedDate":"2023-03-05"},{"lineNumber":886,"author":{"gitId":"Nafeij"},"content":"    -fx-opacity: 0.5;","lastModifiedDate":"2023-03-05"},{"lineNumber":887,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":888,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":889,"author":{"gitId":"Nafeij"},"content":".default-style-entry:dragged-start,","lastModifiedDate":"2023-03-05"},{"lineNumber":890,"author":{"gitId":"Nafeij"},"content":".default-style-entry:dragged-end {","lastModifiedDate":"2023-03-05"},{"lineNumber":891,"author":{"gitId":"Nafeij"},"content":"    -fx-opacity: 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":892,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":893,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":894,"author":{"gitId":"Nafeij"},"content":".default-style-entry:selected {","lastModifiedDate":"2023-03-05"},{"lineNumber":895,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":896,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":897,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":898,"author":{"gitId":"Nafeij"},"content":".default-style-entry .icon-flow-pane {","lastModifiedDate":"2023-03-05"},{"lineNumber":899,"author":{"gitId":"Nafeij"},"content":"    -fx-hgap: 0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":900,"author":{"gitId":"Nafeij"},"content":"    -fx-vgap: 0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":901,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":902,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":903,"author":{"gitId":"Nafeij"},"content":".default-style-entry-time-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":904,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 0.9em;","lastModifiedDate":"2023-03-05"},{"lineNumber":905,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 4.0 4.0 2.0 4.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":906,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":907,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":908,"author":{"gitId":"Nafeij"},"content":".default-style-entry-title-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":909,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 0.9em;","lastModifiedDate":"2023-03-05"},{"lineNumber":910,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":911,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0.0 4.0 0.0 4.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":912,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":913,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":914,"author":{"gitId":"Nafeij"},"content":".default-style-entry-title-label-full-day {","lastModifiedDate":"2023-03-05"},{"lineNumber":915,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 0.9em;","lastModifiedDate":"2023-03-05"},{"lineNumber":916,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":917,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0.0 4.0 0.0 4.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":918,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":919,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":920,"author":{"gitId":"Nafeij"},"content":".default-style-entry:selected .default-style-entry-time-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":921,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-05"},{"lineNumber":922,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":923,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":924,"author":{"gitId":"Nafeij"},"content":".default-style-entry:selected .default-style-entry-title-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":925,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-05"},{"lineNumber":926,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":927,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":928,"author":{"gitId":"Nafeij"},"content":".default-style-visibility-checkbox \u003e .box {","lastModifiedDate":"2023-03-05"},{"lineNumber":929,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":930,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":931,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":932,"author":{"gitId":"Nafeij"},"content":".default-style-visibility-checkbox \u003e .box {","lastModifiedDate":"2023-03-05"},{"lineNumber":933,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -fx-shadow-highlight-color, -fx-outer-border, -fx-inner-border, -fx-body-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":934,"author":{"gitId":"Nafeij"},"content":"    -fx-background-radius: 3.0, 2.0, 1.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":935,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0.166667em 0.166667em 0.25em 0.25em; /* 2 2 3 3 */","lastModifiedDate":"2023-03-05"},{"lineNumber":936,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":937,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":938,"author":{"gitId":"Nafeij"},"content":".default-style-visibility-checkbox:focused \u003e .box {","lastModifiedDate":"2023-03-05"},{"lineNumber":939,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -fx-focus-color, -fx-inner-border, -fx-body-color, -fx-faint-focus-color, -fx-body-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":940,"author":{"gitId":"Nafeij"},"content":"    -fx-background-insets: -0.2, 1.0, 2.0, -1.4, 2.6;","lastModifiedDate":"2023-03-05"},{"lineNumber":941,"author":{"gitId":"Nafeij"},"content":"    -fx-background-radius: 3.0, 2.0, 1.0, 4.0, 1.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":942,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":943,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":944,"author":{"gitId":"Nafeij"},"content":".default-style-entry-popover-title {","lastModifiedDate":"2023-03-05"},{"lineNumber":945,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":946,"author":{"gitId":"Nafeij"},"content":"/* Small entries */","lastModifiedDate":"2023-03-05"},{"lineNumber":947,"author":{"gitId":"Nafeij"},"content":".default-style-entry-small {","lastModifiedDate":"2023-03-05"},{"lineNumber":948,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0.15em 0.5em 0.15em 0.5em;","lastModifiedDate":"2023-03-05"},{"lineNumber":949,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 0.9em;","lastModifiedDate":"2023-03-05"},{"lineNumber":950,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":951,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":952,"author":{"gitId":"Nafeij"},"content":".default-style-entry-small-only, .default-style-entry-small-last {","lastModifiedDate":"2023-03-05"},{"lineNumber":953,"author":{"gitId":"Nafeij"},"content":"    -fx-background-insets: 0.0 2.0 0.0 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":954,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":955,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":956,"author":{"gitId":"Nafeij"},"content":".default-style-entry-small \u003e .default-style-entry-small-title-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":957,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":958,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":959,"author":{"gitId":"Nafeij"},"content":".all-day-view .default-style-entry-small \u003e .default-style-entry-small-title-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":960,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":961,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":962,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":963,"author":{"gitId":"Nafeij"},"content":".default-style-entry-small \u003e .default-style-entry-small-time-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":964,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":965,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":966,"author":{"gitId":"Nafeij"},"content":".default-style-entry-small:selected \u003e .default-style-entry-small-title-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":967,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":968,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-05"},{"lineNumber":969,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":970,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":971,"author":{"gitId":"Nafeij"},"content":".default-style-entry-small:selected \u003e .default-style-entry-small-time-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":972,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-05"},{"lineNumber":973,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":974,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":975,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":976,"author":{"gitId":"Nafeij"},"content":".default-style-entry-small:selected \u003e * \u003e .default-style-icon,","lastModifiedDate":"2023-03-05"},{"lineNumber":977,"author":{"gitId":"Nafeij"},"content":".default-style-entry-small:selected \u003e * \u003e .default-style-icon-small {","lastModifiedDate":"2023-03-05"},{"lineNumber":978,"author":{"gitId":"Nafeij"},"content":"    -fx-stroke: white;","lastModifiedDate":"2023-03-05"},{"lineNumber":979,"author":{"gitId":"Nafeij"},"content":"    -fx-fill: white;","lastModifiedDate":"2023-03-05"},{"lineNumber":980,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":981,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":982,"author":{"gitId":"Nafeij"},"content":".default-style-entry-small-time-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":983,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 0.8em;","lastModifiedDate":"2023-03-05"},{"lineNumber":984,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: gray;","lastModifiedDate":"2023-03-05"},{"lineNumber":985,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":986,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":987,"author":{"gitId":"Nafeij"},"content":".default-style-entry-small-time-label-full-day {","lastModifiedDate":"2023-03-05"},{"lineNumber":988,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 0.8em;","lastModifiedDate":"2023-03-05"},{"lineNumber":989,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: derive(gray, -25.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":990,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":991,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":992,"author":{"gitId":"Nafeij"},"content":".default-style-entry-small-title-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":993,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: derive(gray, -40.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":994,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":995,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":996,"author":{"gitId":"Nafeij"},"content":".default-style-entry-small-title-label-full-day {","lastModifiedDate":"2023-03-05"},{"lineNumber":997,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: derive(gray, -40.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":998,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":999,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1000,"author":{"gitId":"Nafeij"},"content":".default-style-entry-small-full-day {","lastModifiedDate":"2023-03-05"},{"lineNumber":1001,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1002,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1003,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1004,"author":{"gitId":"Nafeij"},"content":".default-style-entry-small-full-day:selected \u003e .default-style-entry-small-time-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":1005,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-05"},{"lineNumber":1006,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":1007,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1008,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1009,"author":{"gitId":"Nafeij"},"content":".default-style-entry-small-full-day:selected \u003e .default-style-entry-small-title-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":1010,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-05"},{"lineNumber":1011,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":1012,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1013,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1014,"author":{"gitId":"Nafeij"},"content":".default-style-calendar-header {","lastModifiedDate":"2023-03-05"},{"lineNumber":1015,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":1016,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-05"},{"lineNumber":1017,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: magenta;","lastModifiedDate":"2023-03-05"},{"lineNumber":1018,"author":{"gitId":"Nafeij"},"content":"    -fx-alignment: center;","lastModifiedDate":"2023-03-05"},{"lineNumber":1019,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0.25em;","lastModifiedDate":"2023-03-05"},{"lineNumber":1020,"author":{"gitId":"Nafeij"},"content":"    -fx-text-overrun: clip;","lastModifiedDate":"2023-03-05"},{"lineNumber":1021,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1022,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1023,"author":{"gitId":"Nafeij"},"content":".default-style-calendar-header:first,","lastModifiedDate":"2023-03-05"},{"lineNumber":1024,"author":{"gitId":"Nafeij"},"content":".default-style-calendar-header:middle,","lastModifiedDate":"2023-03-05"},{"lineNumber":1025,"author":{"gitId":"Nafeij"},"content":".default-style-calendar-header:last {","lastModifiedDate":"2023-03-05"},{"lineNumber":1026,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1027,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":1028,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":1029,"author":{"gitId":"Nafeij"},"content":" * Styles needed for calendar type 1 (green).","lastModifiedDate":"2023-03-05"},{"lineNumber":1030,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":1031,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1032,"author":{"gitId":"Nafeij"},"content":".style1-icon, .style1-icon-small {","lastModifiedDate":"2023-03-05"},{"lineNumber":1033,"author":{"gitId":"Nafeij"},"content":"    -fx-fill: -style1-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1034,"author":{"gitId":"Nafeij"},"content":"    -fx-stroke: -style1-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1035,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1036,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1037,"author":{"gitId":"Nafeij"},"content":".style1-entry {","lastModifiedDate":"2023-03-05"},{"lineNumber":1038,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: derive(-style1-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1039,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: -style1-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1040,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1041,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1042,"author":{"gitId":"Nafeij"},"content":".style1-entry:selected {","lastModifiedDate":"2023-03-05"},{"lineNumber":1043,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -style1-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1044,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1045,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1046,"author":{"gitId":"Nafeij"},"content":".style1-entry-time-label, .style1-entry-title-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":1047,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: derive(-style1-color, -30.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1048,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1049,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1050,"author":{"gitId":"Nafeij"},"content":".style1-entry-small:selected {","lastModifiedDate":"2023-03-05"},{"lineNumber":1051,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -style1-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1052,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1053,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1054,"author":{"gitId":"Nafeij"},"content":".style1-entry-small-full-day {","lastModifiedDate":"2023-03-05"},{"lineNumber":1055,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: derive(-style1-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1056,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1057,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1058,"author":{"gitId":"Nafeij"},"content":".style1-entry-small-title-label-full-day {","lastModifiedDate":"2023-03-05"},{"lineNumber":1059,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: derive(-style1-color, -30.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1060,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1061,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1062,"author":{"gitId":"Nafeij"},"content":".style1-entry-small-full-day:selected {","lastModifiedDate":"2023-03-05"},{"lineNumber":1063,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -style1-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1064,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1065,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1066,"author":{"gitId":"Nafeij"},"content":".style1-visibility-checkbox \u003e .box,","lastModifiedDate":"2023-03-05"},{"lineNumber":1067,"author":{"gitId":"Nafeij"},"content":".style1-source-grid-item-box {","lastModifiedDate":"2023-03-05"},{"lineNumber":1068,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -fx-shadow-highlight-color, -fx-outer-border,","lastModifiedDate":"2023-03-05"},{"lineNumber":1069,"author":{"gitId":"Nafeij"},"content":"    -fx-inner-border, derive(-style1-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1070,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1071,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1072,"author":{"gitId":"Nafeij"},"content":".style1-visibility-checkbox:focused \u003e .box {","lastModifiedDate":"2023-03-05"},{"lineNumber":1073,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -fx-focus-color, -fx-inner-border, -fx-body-color,","lastModifiedDate":"2023-03-05"},{"lineNumber":1074,"author":{"gitId":"Nafeij"},"content":"    -fx-faint-focus-color, derive(-style1-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1075,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1076,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1077,"author":{"gitId":"Nafeij"},"content":".style1-entry-popover-title {","lastModifiedDate":"2023-03-05"},{"lineNumber":1078,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: derive(-style1-color, -50.0%) !important;","lastModifiedDate":"2023-03-05"},{"lineNumber":1079,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1080,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1081,"author":{"gitId":"Nafeij"},"content":".style1-calendar-header {","lastModifiedDate":"2023-03-05"},{"lineNumber":1082,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: derive(-style1-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1083,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1084,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":1085,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":1086,"author":{"gitId":"Nafeij"},"content":" * Styles needed for calendar type 2 (blue).","lastModifiedDate":"2023-03-05"},{"lineNumber":1087,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":1088,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1089,"author":{"gitId":"Nafeij"},"content":".style2-icon, .style2-icon-small {","lastModifiedDate":"2023-03-05"},{"lineNumber":1090,"author":{"gitId":"Nafeij"},"content":"    -fx-fill: -style2-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1091,"author":{"gitId":"Nafeij"},"content":"    -fx-stroke: -style2-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1092,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1093,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1094,"author":{"gitId":"Nafeij"},"content":".style2-entry {","lastModifiedDate":"2023-03-05"},{"lineNumber":1095,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: derive(-style2-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1096,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: -style2-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1097,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1098,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1099,"author":{"gitId":"Nafeij"},"content":".style2-entry:selected {","lastModifiedDate":"2023-03-05"},{"lineNumber":1100,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -style2-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1101,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1102,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1103,"author":{"gitId":"Nafeij"},"content":".style2-entry-time-label, .style2-entry-title-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":1104,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: derive(-style2-color, -50.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1105,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1106,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1107,"author":{"gitId":"Nafeij"},"content":".style2-entry-small:selected {","lastModifiedDate":"2023-03-05"},{"lineNumber":1108,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -style2-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1109,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1110,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1111,"author":{"gitId":"Nafeij"},"content":".style2-entry-small-full-day {","lastModifiedDate":"2023-03-05"},{"lineNumber":1112,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: derive(-style2-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1113,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1114,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1115,"author":{"gitId":"Nafeij"},"content":".style2-entry-small-title-label-full-day {","lastModifiedDate":"2023-03-05"},{"lineNumber":1116,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: derive(-style2-color, -30.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1117,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1118,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1119,"author":{"gitId":"Nafeij"},"content":".style2-entry-small-full-day:selected {","lastModifiedDate":"2023-03-05"},{"lineNumber":1120,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -style2-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1121,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1122,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1123,"author":{"gitId":"Nafeij"},"content":".style2-visibility-checkbox \u003e .box,","lastModifiedDate":"2023-03-05"},{"lineNumber":1124,"author":{"gitId":"Nafeij"},"content":".style2-source-grid-item-box {","lastModifiedDate":"2023-03-05"},{"lineNumber":1125,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -fx-shadow-highlight-color, -fx-outer-border,","lastModifiedDate":"2023-03-05"},{"lineNumber":1126,"author":{"gitId":"Nafeij"},"content":"    -fx-inner-border, derive(-style2-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1127,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1128,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1129,"author":{"gitId":"Nafeij"},"content":".style2-visibility-checkbox:focused \u003e .box {","lastModifiedDate":"2023-03-05"},{"lineNumber":1130,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -fx-focus-color, -fx-inner-border, -fx-body-color,","lastModifiedDate":"2023-03-05"},{"lineNumber":1131,"author":{"gitId":"Nafeij"},"content":"    -fx-faint-focus-color, derive(-style2-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1132,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1133,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1134,"author":{"gitId":"Nafeij"},"content":".style2-entry-popover-title {","lastModifiedDate":"2023-03-05"},{"lineNumber":1135,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: derive(-style2-color, -30.0%) !important;","lastModifiedDate":"2023-03-05"},{"lineNumber":1136,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1137,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1138,"author":{"gitId":"Nafeij"},"content":".style2-calendar-header {","lastModifiedDate":"2023-03-05"},{"lineNumber":1139,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: derive(-style2-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1140,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1141,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":1142,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":1143,"author":{"gitId":"Nafeij"},"content":" * Styles needed for calendar type 3 (yellow).","lastModifiedDate":"2023-03-05"},{"lineNumber":1144,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":1145,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1146,"author":{"gitId":"Nafeij"},"content":".style3-icon, .style3-icon-small {","lastModifiedDate":"2023-03-05"},{"lineNumber":1147,"author":{"gitId":"Nafeij"},"content":"    -fx-fill: -style3-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1148,"author":{"gitId":"Nafeij"},"content":"    -fx-stroke: -style3-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1149,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1150,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1151,"author":{"gitId":"Nafeij"},"content":".style3-entry {","lastModifiedDate":"2023-03-05"},{"lineNumber":1152,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: derive(-style3-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1153,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: -style3-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1154,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1155,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1156,"author":{"gitId":"Nafeij"},"content":".style3-entry:selected {","lastModifiedDate":"2023-03-05"},{"lineNumber":1157,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -style3-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1158,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1159,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1160,"author":{"gitId":"Nafeij"},"content":".style3-entry-time-label, .style3-entry-title-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":1161,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: derive(-style3-color, -50.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1162,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1163,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1164,"author":{"gitId":"Nafeij"},"content":".style3-entry-small:selected {","lastModifiedDate":"2023-03-05"},{"lineNumber":1165,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -style3-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1166,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1167,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1168,"author":{"gitId":"Nafeij"},"content":".style3-entry-small-full-day {","lastModifiedDate":"2023-03-05"},{"lineNumber":1169,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: derive(-style3-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1170,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1171,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1172,"author":{"gitId":"Nafeij"},"content":".style3-entry-small-title-label-full-day {","lastModifiedDate":"2023-03-05"},{"lineNumber":1173,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: derive(-style3-color, -30.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1174,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1175,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1176,"author":{"gitId":"Nafeij"},"content":".style3-entry-small-full-day:selected {","lastModifiedDate":"2023-03-05"},{"lineNumber":1177,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -style3-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1178,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1179,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1180,"author":{"gitId":"Nafeij"},"content":".style3-visibility-checkbox \u003e .box,","lastModifiedDate":"2023-03-05"},{"lineNumber":1181,"author":{"gitId":"Nafeij"},"content":".style3-source-grid-item-box {","lastModifiedDate":"2023-03-05"},{"lineNumber":1182,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -fx-shadow-highlight-color, -fx-outer-border,","lastModifiedDate":"2023-03-05"},{"lineNumber":1183,"author":{"gitId":"Nafeij"},"content":"    -fx-inner-border, derive(-style3-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1184,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1185,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1186,"author":{"gitId":"Nafeij"},"content":".style3-visibility-checkbox:focused \u003e .box {","lastModifiedDate":"2023-03-05"},{"lineNumber":1187,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -fx-focus-color, -fx-inner-border, -fx-body-color,","lastModifiedDate":"2023-03-05"},{"lineNumber":1188,"author":{"gitId":"Nafeij"},"content":"    -fx-faint-focus-color, derive(-style3-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1189,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1190,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1191,"author":{"gitId":"Nafeij"},"content":".style3-entry-popover-title {","lastModifiedDate":"2023-03-05"},{"lineNumber":1192,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: derive(-style3-color, -30.0%) !important;","lastModifiedDate":"2023-03-05"},{"lineNumber":1193,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1194,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1195,"author":{"gitId":"Nafeij"},"content":".style3-calendar-header {","lastModifiedDate":"2023-03-05"},{"lineNumber":1196,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: derive(-style3-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1197,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1198,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":1199,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":1200,"author":{"gitId":"Nafeij"},"content":" * Styles needed for calendar type 4 (purple).","lastModifiedDate":"2023-03-05"},{"lineNumber":1201,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":1202,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1203,"author":{"gitId":"Nafeij"},"content":".style4-icon, .style4-icon-small {","lastModifiedDate":"2023-03-05"},{"lineNumber":1204,"author":{"gitId":"Nafeij"},"content":"    -fx-fill: -style4-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1205,"author":{"gitId":"Nafeij"},"content":"    -fx-stroke: -style4-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1206,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1207,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1208,"author":{"gitId":"Nafeij"},"content":".style4-entry {","lastModifiedDate":"2023-03-05"},{"lineNumber":1209,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: derive(-style4-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1210,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: -style4-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1211,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1212,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1213,"author":{"gitId":"Nafeij"},"content":".style4-entry:selected {","lastModifiedDate":"2023-03-05"},{"lineNumber":1214,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -style4-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1215,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1216,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1217,"author":{"gitId":"Nafeij"},"content":".style4-entry-time-label, .style4-entry-title-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":1218,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: derive(-style4-color, -50.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1219,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1220,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1221,"author":{"gitId":"Nafeij"},"content":".style4-entry-small:selected {","lastModifiedDate":"2023-03-05"},{"lineNumber":1222,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -style4-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1223,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1224,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1225,"author":{"gitId":"Nafeij"},"content":".style4-entry-small-full-day {","lastModifiedDate":"2023-03-05"},{"lineNumber":1226,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: derive(-style4-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1227,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1228,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1229,"author":{"gitId":"Nafeij"},"content":".style4-entry-small-title-label-full-day {","lastModifiedDate":"2023-03-05"},{"lineNumber":1230,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: derive(-style4-color, -30.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1231,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1232,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1233,"author":{"gitId":"Nafeij"},"content":".style4-entry-small-full-day:selected {","lastModifiedDate":"2023-03-05"},{"lineNumber":1234,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -style4-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1235,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1236,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1237,"author":{"gitId":"Nafeij"},"content":".style4-visibility-checkbox \u003e .box,","lastModifiedDate":"2023-03-05"},{"lineNumber":1238,"author":{"gitId":"Nafeij"},"content":".style4-source-grid-item-box {","lastModifiedDate":"2023-03-05"},{"lineNumber":1239,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -fx-shadow-highlight-color, -fx-outer-border,","lastModifiedDate":"2023-03-05"},{"lineNumber":1240,"author":{"gitId":"Nafeij"},"content":"    -fx-inner-border, derive(-style4-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1241,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1242,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1243,"author":{"gitId":"Nafeij"},"content":".style4-visibility-checkbox:focused \u003e .box {","lastModifiedDate":"2023-03-05"},{"lineNumber":1244,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -fx-focus-color, -fx-inner-border, -fx-body-color,","lastModifiedDate":"2023-03-05"},{"lineNumber":1245,"author":{"gitId":"Nafeij"},"content":"    -fx-faint-focus-color, derive(-style4-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1246,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1247,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1248,"author":{"gitId":"Nafeij"},"content":".style4-entry-popover-title {","lastModifiedDate":"2023-03-05"},{"lineNumber":1249,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: derive(-style4-color, -30.0%) !important;","lastModifiedDate":"2023-03-05"},{"lineNumber":1250,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1251,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1252,"author":{"gitId":"Nafeij"},"content":".style4-calendar-header {","lastModifiedDate":"2023-03-05"},{"lineNumber":1253,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: derive(-style4-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1254,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1255,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":1256,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":1257,"author":{"gitId":"Nafeij"},"content":" * Styles needed for calendar type 5 (red).","lastModifiedDate":"2023-03-05"},{"lineNumber":1258,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":1259,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1260,"author":{"gitId":"Nafeij"},"content":".style5-icon, .style5-icon-small {","lastModifiedDate":"2023-03-05"},{"lineNumber":1261,"author":{"gitId":"Nafeij"},"content":"    -fx-fill: -style5-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1262,"author":{"gitId":"Nafeij"},"content":"    -fx-stroke: -style5-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1263,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1264,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1265,"author":{"gitId":"Nafeij"},"content":".style5-entry {","lastModifiedDate":"2023-03-05"},{"lineNumber":1266,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: derive(-style5-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1267,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: -style5-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1268,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1269,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1270,"author":{"gitId":"Nafeij"},"content":".style5-entry:selected {","lastModifiedDate":"2023-03-05"},{"lineNumber":1271,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -style5-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1272,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1273,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1274,"author":{"gitId":"Nafeij"},"content":".style5-entry-time-label, .style5-entry-title-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":1275,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: derive(-style5-color, -50.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1276,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1277,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1278,"author":{"gitId":"Nafeij"},"content":".style5-entry-small:selected {","lastModifiedDate":"2023-03-05"},{"lineNumber":1279,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -style6-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1280,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1281,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1282,"author":{"gitId":"Nafeij"},"content":".style5-entry-small-full-day {","lastModifiedDate":"2023-03-05"},{"lineNumber":1283,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: derive(-style5-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1284,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1285,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1286,"author":{"gitId":"Nafeij"},"content":".style5-entry-small-title-label-full-day {","lastModifiedDate":"2023-03-05"},{"lineNumber":1287,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: derive(-style5-color, -30.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1288,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1289,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1290,"author":{"gitId":"Nafeij"},"content":".style5-entry-small-full-day:selected {","lastModifiedDate":"2023-03-05"},{"lineNumber":1291,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -style5-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1292,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1293,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1294,"author":{"gitId":"Nafeij"},"content":".style5-visibility-checkbox \u003e .box {","lastModifiedDate":"2023-03-05"},{"lineNumber":1295,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -fx-shadow-highlight-color, -fx-outer-border,","lastModifiedDate":"2023-03-05"},{"lineNumber":1296,"author":{"gitId":"Nafeij"},"content":"    -fx-inner-border, derive(-style5-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1297,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1298,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1299,"author":{"gitId":"Nafeij"},"content":".style5-visibility-checkbox:focused \u003e .box,","lastModifiedDate":"2023-03-05"},{"lineNumber":1300,"author":{"gitId":"Nafeij"},"content":".style5-source-grid-item-box {","lastModifiedDate":"2023-03-05"},{"lineNumber":1301,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -fx-focus-color, -fx-inner-border, -fx-body-color,","lastModifiedDate":"2023-03-05"},{"lineNumber":1302,"author":{"gitId":"Nafeij"},"content":"    -fx-faint-focus-color, derive(-style5-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1303,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1304,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1305,"author":{"gitId":"Nafeij"},"content":".style5-entry-popover-title {","lastModifiedDate":"2023-03-05"},{"lineNumber":1306,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: derive(-style5-color, -30.0%) !important;","lastModifiedDate":"2023-03-05"},{"lineNumber":1307,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1308,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1309,"author":{"gitId":"Nafeij"},"content":".style5-calendar-header {","lastModifiedDate":"2023-03-05"},{"lineNumber":1310,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: derive(-style5-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1311,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1312,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":1313,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":1314,"author":{"gitId":"Nafeij"},"content":" * Styles needed for calendar type 6 (orange).","lastModifiedDate":"2023-03-05"},{"lineNumber":1315,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":1316,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1317,"author":{"gitId":"Nafeij"},"content":".style6-icon, .style6-icon-small {","lastModifiedDate":"2023-03-05"},{"lineNumber":1318,"author":{"gitId":"Nafeij"},"content":"    -fx-fill: -style6-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1319,"author":{"gitId":"Nafeij"},"content":"    -fx-stroke: -style6-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1320,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1321,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1322,"author":{"gitId":"Nafeij"},"content":".style6-entry {","lastModifiedDate":"2023-03-05"},{"lineNumber":1323,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: derive(-style6-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1324,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: -style6-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1325,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1326,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1327,"author":{"gitId":"Nafeij"},"content":".style6-entry:selected {","lastModifiedDate":"2023-03-05"},{"lineNumber":1328,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -style6-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1329,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1330,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1331,"author":{"gitId":"Nafeij"},"content":".style6-entry-time-label, .style6-entry-title-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":1332,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: derive(-style6-color, -50.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1333,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1334,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1335,"author":{"gitId":"Nafeij"},"content":".style6-entry-small:selected {","lastModifiedDate":"2023-03-05"},{"lineNumber":1336,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -style6-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1337,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1338,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1339,"author":{"gitId":"Nafeij"},"content":".style6-entry-small-full-day {","lastModifiedDate":"2023-03-05"},{"lineNumber":1340,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: derive(-style6-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1341,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1342,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1343,"author":{"gitId":"Nafeij"},"content":".style6-entry-small-title-label-full-day {","lastModifiedDate":"2023-03-05"},{"lineNumber":1344,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: derive(-style6-color, -30.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1345,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1346,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1347,"author":{"gitId":"Nafeij"},"content":".style6-entry-small-full-day:selected {","lastModifiedDate":"2023-03-05"},{"lineNumber":1348,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -style6-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1349,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1350,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1351,"author":{"gitId":"Nafeij"},"content":".style6-visibility-checkbox \u003e .box,","lastModifiedDate":"2023-03-05"},{"lineNumber":1352,"author":{"gitId":"Nafeij"},"content":".style6-source-grid-item-box {","lastModifiedDate":"2023-03-05"},{"lineNumber":1353,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -fx-shadow-highlight-color, -fx-outer-border,","lastModifiedDate":"2023-03-05"},{"lineNumber":1354,"author":{"gitId":"Nafeij"},"content":"    -fx-inner-border, derive(-style6-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1355,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1356,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1357,"author":{"gitId":"Nafeij"},"content":".style6-visibility-checkbox:focused \u003e .box {","lastModifiedDate":"2023-03-05"},{"lineNumber":1358,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -fx-focus-color, -fx-inner-border, -fx-body-color,","lastModifiedDate":"2023-03-05"},{"lineNumber":1359,"author":{"gitId":"Nafeij"},"content":"    -fx-faint-focus-color, derive(-style6-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1360,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1361,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1362,"author":{"gitId":"Nafeij"},"content":".style6-entry-popover-title {","lastModifiedDate":"2023-03-05"},{"lineNumber":1363,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: derive(-style6-color, -30.0%) !important;","lastModifiedDate":"2023-03-05"},{"lineNumber":1364,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1365,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1366,"author":{"gitId":"Nafeij"},"content":".style6-calendar-header {","lastModifiedDate":"2023-03-05"},{"lineNumber":1367,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: derive(-style6-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1368,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1369,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":1370,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":1371,"author":{"gitId":"Nafeij"},"content":" * Styles needed for calendar type 7 (brown).","lastModifiedDate":"2023-03-05"},{"lineNumber":1372,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":1373,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1374,"author":{"gitId":"Nafeij"},"content":".style7-icon, .style7-icon-small {","lastModifiedDate":"2023-03-05"},{"lineNumber":1375,"author":{"gitId":"Nafeij"},"content":"    -fx-fill: -style7-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1376,"author":{"gitId":"Nafeij"},"content":"    -fx-stroke: -style7-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1377,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1378,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1379,"author":{"gitId":"Nafeij"},"content":".style7-entry {","lastModifiedDate":"2023-03-05"},{"lineNumber":1380,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: derive(-style7-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1381,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: -style7-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1382,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1383,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1384,"author":{"gitId":"Nafeij"},"content":".style7-entry:selected {","lastModifiedDate":"2023-03-05"},{"lineNumber":1385,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -style7-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1386,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1387,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1388,"author":{"gitId":"Nafeij"},"content":".style7-entry-time-label, .style7-entry-title-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":1389,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: derive(-style7-color, -50.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1390,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1391,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1392,"author":{"gitId":"Nafeij"},"content":".style7-entry-small:selected {","lastModifiedDate":"2023-03-05"},{"lineNumber":1393,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -style7-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1394,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1395,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1396,"author":{"gitId":"Nafeij"},"content":".style7-entry-small-full-day {","lastModifiedDate":"2023-03-05"},{"lineNumber":1397,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: derive(-style7-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1398,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1399,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1400,"author":{"gitId":"Nafeij"},"content":".style7-entry-small-title-label-full-day {","lastModifiedDate":"2023-03-05"},{"lineNumber":1401,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: derive(-style7-color, -30.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1402,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1403,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1404,"author":{"gitId":"Nafeij"},"content":".style7-entry-small-full-day:selected {","lastModifiedDate":"2023-03-05"},{"lineNumber":1405,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -style7-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1406,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1407,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1408,"author":{"gitId":"Nafeij"},"content":".style7-visibility-checkbox \u003e .box,","lastModifiedDate":"2023-03-05"},{"lineNumber":1409,"author":{"gitId":"Nafeij"},"content":".style7-source-grid-item-box {","lastModifiedDate":"2023-03-05"},{"lineNumber":1410,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -fx-shadow-highlight-color, -fx-outer-border,","lastModifiedDate":"2023-03-05"},{"lineNumber":1411,"author":{"gitId":"Nafeij"},"content":"    -fx-inner-border, derive(-style7-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1412,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1413,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1414,"author":{"gitId":"Nafeij"},"content":".style7-visibility-checkbox:focused \u003e .box {","lastModifiedDate":"2023-03-05"},{"lineNumber":1415,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -fx-focus-color, -fx-inner-border, -fx-body-color,","lastModifiedDate":"2023-03-05"},{"lineNumber":1416,"author":{"gitId":"Nafeij"},"content":"    -fx-faint-focus-color, derive(-style7-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1417,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1418,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1419,"author":{"gitId":"Nafeij"},"content":".style7-entry-popover-title {","lastModifiedDate":"2023-03-05"},{"lineNumber":1420,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: derive(-style7-color, -30.0%) !important;","lastModifiedDate":"2023-03-05"},{"lineNumber":1421,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1422,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1423,"author":{"gitId":"Nafeij"},"content":".style7-calendar-header {","lastModifiedDate":"2023-03-05"},{"lineNumber":1424,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: derive(-style7-color, 70.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1425,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1426,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":1427,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":1428,"author":{"gitId":"Nafeij"},"content":" * Styles for the entry popover control.","lastModifiedDate":"2023-03-05"},{"lineNumber":1429,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":1430,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1431,"author":{"gitId":"Nafeij"},"content":".popover-header {","lastModifiedDate":"2023-03-05"},{"lineNumber":1432,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 10.0 0.0 10.0 10.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1433,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":1434,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: transparent transparent lightgray transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":1435,"author":{"gitId":"Nafeij"},"content":"    -fx-border-insets: 0.0 10.0 0.0 10.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1436,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1437,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1438,"author":{"gitId":"Nafeij"},"content":".popover-header \u003e .title {","lastModifiedDate":"2023-03-05"},{"lineNumber":1439,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1440,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: green;","lastModifiedDate":"2023-03-05"},{"lineNumber":1441,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2023-03-05"},{"lineNumber":1442,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: null;","lastModifiedDate":"2023-03-05"},{"lineNumber":1443,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: null;","lastModifiedDate":"2023-03-05"},{"lineNumber":1444,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1445,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1446,"author":{"gitId":"Nafeij"},"content":".popover-header \u003e .location {","lastModifiedDate":"2023-03-05"},{"lineNumber":1447,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1448,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: gray;","lastModifiedDate":"2023-03-05"},{"lineNumber":1449,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: null;","lastModifiedDate":"2023-03-05"},{"lineNumber":1450,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: null;","lastModifiedDate":"2023-03-05"},{"lineNumber":1451,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1452,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1453,"author":{"gitId":"Nafeij"},"content":".popover-footer {","lastModifiedDate":"2023-03-05"},{"lineNumber":1454,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 10.0 10.0 10.0 10.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1455,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1456,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1457,"author":{"gitId":"Nafeij"},"content":".popover-accordion \u003e .titled-pane \u003e .title \u003e .arrow-button .arrow {","lastModifiedDate":"2023-03-05"},{"lineNumber":1458,"author":{"gitId":"Nafeij"},"content":"    -fx-opacity: 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1459,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1460,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1461,"author":{"gitId":"Nafeij"},"content":".popover-accordion \u003e .titled-pane \u003e .title \u003e .arrow-button {","lastModifiedDate":"2023-03-05"},{"lineNumber":1462,"author":{"gitId":"Nafeij"},"content":"    -fx-pref-width: 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1463,"author":{"gitId":"Nafeij"},"content":"    -fx-pref-height: 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1464,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1465,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1466,"author":{"gitId":"Nafeij"},"content":".popover-accordion \u003e .titled-pane {","lastModifiedDate":"2023-03-05"},{"lineNumber":1467,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":1468,"author":{"gitId":"Nafeij"},"content":"    -fx-animated: true;","lastModifiedDate":"2023-03-05"},{"lineNumber":1469,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: gray;","lastModifiedDate":"2023-03-05"},{"lineNumber":1470,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1471,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1472,"author":{"gitId":"Nafeij"},"content":".popover-accordion \u003e .titled-pane:expanded {","lastModifiedDate":"2023-03-05"},{"lineNumber":1473,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: gray;","lastModifiedDate":"2023-03-05"},{"lineNumber":1474,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1475,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1476,"author":{"gitId":"Nafeij"},"content":".popover-accordion \u003e .titled-pane \u003e .title {","lastModifiedDate":"2023-03-05"},{"lineNumber":1477,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":1478,"author":{"gitId":"Nafeij"},"content":"    -fx-border-style: dashed;","lastModifiedDate":"2023-03-05"},{"lineNumber":1479,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: lightgray transparent transparent transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":1480,"author":{"gitId":"Nafeij"},"content":"    -fx-border-insets: 1.0 10.0 1.0 10.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1481,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1482,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1483,"author":{"gitId":"Nafeij"},"content":".popover-accordion \u003e .first-titled-pane \u003e .title {","lastModifiedDate":"2023-03-05"},{"lineNumber":1484,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: transparent transparent transparent transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":1485,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1486,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1487,"author":{"gitId":"Nafeij"},"content":".popover-accordion \u003e .titled-pane:collapsed \u003e .title {","lastModifiedDate":"2023-03-05"},{"lineNumber":1488,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: lightgray transparent transparent transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":1489,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1490,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1491,"author":{"gitId":"Nafeij"},"content":".popover-accordion \u003e .first-titled-pane:collapsed \u003e .title {","lastModifiedDate":"2023-03-05"},{"lineNumber":1492,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: transparent transparent transparent transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":1493,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1494,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1495,"author":{"gitId":"Nafeij"},"content":".popover-accordion \u003e .titled-pane \u003e .content {","lastModifiedDate":"2023-03-05"},{"lineNumber":1496,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: rgba(245.0, 245.0, 235.0, 0.5);","lastModifiedDate":"2023-03-05"},{"lineNumber":1497,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: linear-gradient(to bottom, rgba(0.0, 0.0, 0.0, 0.2), rgba(0.0, 0.0, 0.0, 0.0));","lastModifiedDate":"2023-03-05"},{"lineNumber":1498,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 6.0 0.0 0.0 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1499,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 20.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1500,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1501,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1502,"author":{"gitId":"Nafeij"},"content":".popover-accordion \u003e .titled-pane.no-padding \u003e .content {","lastModifiedDate":"2023-03-05"},{"lineNumber":1503,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1504,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1505,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1506,"author":{"gitId":"Nafeij"},"content":".popover-accordion \u003e .titled-pane \u003e .title \u003e .arrow-button \u003e .arrow {","lastModifiedDate":"2023-03-05"},{"lineNumber":1507,"author":{"gitId":"Nafeij"},"content":"    -fx-pref-width: 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1508,"author":{"gitId":"Nafeij"},"content":"    -fx-pref-height: 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1509,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1510,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1511,"author":{"gitId":"Nafeij"},"content":".popover-accordion \u003e .titled-pane:expanded \u003e * {","lastModifiedDate":"2023-03-05"},{"lineNumber":1512,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: rgba(240.0, 240.0, 240.0, 0.95);","lastModifiedDate":"2023-03-05"},{"lineNumber":1513,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1514,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":1515,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":1516,"author":{"gitId":"Nafeij"},"content":" * Styles needed by the RecurrenceView control.","lastModifiedDate":"2023-03-05"},{"lineNumber":1517,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":1518,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1519,"author":{"gitId":"Nafeij"},"content":".recurrence-view {","lastModifiedDate":"2023-03-05"},{"lineNumber":1520,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-05"},{"lineNumber":1521,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1522,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1523,"author":{"gitId":"Nafeij"},"content":".recurrence-view \u003e .container {","lastModifiedDate":"2023-03-05"},{"lineNumber":1524,"author":{"gitId":"Nafeij"},"content":"    -fx-hgap: 1.0em;","lastModifiedDate":"2023-03-05"},{"lineNumber":1525,"author":{"gitId":"Nafeij"},"content":"    -fx-vgap: 1.0em;","lastModifiedDate":"2023-03-05"},{"lineNumber":1526,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1527,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1528,"author":{"gitId":"Nafeij"},"content":".recurrence-view \u003e .container \u003e .ends-after-box,","lastModifiedDate":"2023-03-05"},{"lineNumber":1529,"author":{"gitId":"Nafeij"},"content":".recurrence-view \u003e .container \u003e .ends-on-box,","lastModifiedDate":"2023-03-05"},{"lineNumber":1530,"author":{"gitId":"Nafeij"},"content":".recurrence-view \u003e .container \u003e .repeat-count-box {","lastModifiedDate":"2023-03-05"},{"lineNumber":1531,"author":{"gitId":"Nafeij"},"content":"    -fx-spacing: 0.5em;","lastModifiedDate":"2023-03-05"},{"lineNumber":1532,"author":{"gitId":"Nafeij"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2023-03-05"},{"lineNumber":1533,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1534,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1535,"author":{"gitId":"Nafeij"},"content":".recurrence-view \u003e .container \u003e .label {","lastModifiedDate":"2023-03-05"},{"lineNumber":1536,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":1537,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1538,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1539,"author":{"gitId":"Nafeij"},"content":".recurrence-view \u003e .container \u003e .weekday-box {","lastModifiedDate":"2023-03-05"},{"lineNumber":1540,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1541,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1542,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1543,"author":{"gitId":"Nafeij"},"content":".recurrence-view \u003e .container \u003e .repeat-by-box {","lastModifiedDate":"2023-03-05"},{"lineNumber":1544,"author":{"gitId":"Nafeij"},"content":"    -fx-spacing: 1.0em;","lastModifiedDate":"2023-03-05"},{"lineNumber":1545,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1546,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1547,"author":{"gitId":"Nafeij"},"content":".recurrence-view \u003e .container \u003e .weekday-box \u003e .toggle-button {","lastModifiedDate":"2023-03-05"},{"lineNumber":1548,"author":{"gitId":"Nafeij"},"content":"    -fx-background-radius: 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1549,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1550,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":1551,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":1552,"author":{"gitId":"Nafeij"},"content":" * Styles used for the RecurrencePopup control.","lastModifiedDate":"2023-03-05"},{"lineNumber":1553,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":1554,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1555,"author":{"gitId":"Nafeij"},"content":".recurrence-popup {","lastModifiedDate":"2023-03-05"},{"lineNumber":1556,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 1.0em;","lastModifiedDate":"2023-03-05"},{"lineNumber":1557,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: rgba(255.0, 255.0, 255.0, 0.95);","lastModifiedDate":"2023-03-05"},{"lineNumber":1558,"author":{"gitId":"Nafeij"},"content":"    -fx-background-radius: 4.0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":1559,"author":{"gitId":"Nafeij"},"content":"    -fx-effect: dropshadow(gaussian, rgba(0.0, 0.0, 0.0, 0.2), 10.0, 0.5, 2.0, 2.0);","lastModifiedDate":"2023-03-05"},{"lineNumber":1560,"author":{"gitId":"Nafeij"},"content":"    -fx-border-radius: 4.0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":1561,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: linear-gradient(to bottom, rgba(0.0, 0.0, 0.0, 0.3), rgba(0.0, 0.0, 0.0, 0.7));","lastModifiedDate":"2023-03-05"},{"lineNumber":1562,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0.5;","lastModifiedDate":"2023-03-05"},{"lineNumber":1563,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1564,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1565,"author":{"gitId":"Nafeij"},"content":".recurrence-popup \u003e .content {","lastModifiedDate":"2023-03-05"},{"lineNumber":1566,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":1567,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1568,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1569,"author":{"gitId":"Nafeij"},"content":".recurrence-popup \u003e .content \u003e .recurrence-view {","lastModifiedDate":"2023-03-05"},{"lineNumber":1570,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":1571,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1572,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1573,"author":{"gitId":"Nafeij"},"content":".recurrence-popup \u003e .content \u003e .button-pane {","lastModifiedDate":"2023-03-05"},{"lineNumber":1574,"author":{"gitId":"Nafeij"},"content":"    -fx-spacing: 1.0em;","lastModifiedDate":"2023-03-05"},{"lineNumber":1575,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 2.0em 1.0em 0.5em 1.0em;","lastModifiedDate":"2023-03-05"},{"lineNumber":1576,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1577,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":1578,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":1579,"author":{"gitId":"Nafeij"},"content":" * Styles used for MonthSheetView control.","lastModifiedDate":"2023-03-05"},{"lineNumber":1580,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":1581,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1582,"author":{"gitId":"Nafeij"},"content":".month-sheet-view {","lastModifiedDate":"2023-03-05"},{"lineNumber":1583,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-05"},{"lineNumber":1584,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1585,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1586,"author":{"gitId":"Nafeij"},"content":".month-sheet-view .month-header {","lastModifiedDate":"2023-03-05"},{"lineNumber":1587,"author":{"gitId":"Nafeij"},"content":"    -fx-alignment: center;","lastModifiedDate":"2023-03-05"},{"lineNumber":1588,"author":{"gitId":"Nafeij"},"content":"    -fx-text-alignment: center;","lastModifiedDate":"2023-03-05"},{"lineNumber":1589,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 1.1em;","lastModifiedDate":"2023-03-05"},{"lineNumber":1590,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: -today-fill-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1591,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0.0 0.0 2.0 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1592,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1593,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1594,"author":{"gitId":"Nafeij"},"content":".month-sheet-view .date-cell {","lastModifiedDate":"2023-03-05"},{"lineNumber":1595,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 2.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1596,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: lightgray;","lastModifiedDate":"2023-03-05"},{"lineNumber":1597,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0.0 1.0 1.0 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1598,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: .8em;","lastModifiedDate":"2023-03-05"},{"lineNumber":1599,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1600,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1601,"author":{"gitId":"Nafeij"},"content":".month-sheet-view .date-cell:today {","lastModifiedDate":"2023-03-05"},{"lineNumber":1602,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -today-fill-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1603,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1604,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1605,"author":{"gitId":"Nafeij"},"content":".month-sheet-view .date-cell .week-number-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":1606,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: gray;","lastModifiedDate":"2023-03-05"},{"lineNumber":1607,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 0.7em;","lastModifiedDate":"2023-03-05"},{"lineNumber":1608,"author":{"gitId":"Nafeij"},"content":"    -fx-alignment: top-right;","lastModifiedDate":"2023-03-05"},{"lineNumber":1609,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1610,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1611,"author":{"gitId":"Nafeij"},"content":".month-sheet-view .date-cell.weekend-day {","lastModifiedDate":"2023-03-05"},{"lineNumber":1612,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -weekend-fill-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1613,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1614,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1615,"author":{"gitId":"Nafeij"},"content":".month-sheet-view \u003e .container \u003e .date-cell .day-of-month-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":1616,"author":{"gitId":"Nafeij"},"content":"    -fx-pref-width: 2.0em;","lastModifiedDate":"2023-03-05"},{"lineNumber":1617,"author":{"gitId":"Nafeij"},"content":"    -fx-alignment: center;","lastModifiedDate":"2023-03-05"},{"lineNumber":1618,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":1619,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1620,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1621,"author":{"gitId":"Nafeij"},"content":".month-sheet-view \u003e .container \u003e .date-cell.first-month {","lastModifiedDate":"2023-03-05"},{"lineNumber":1622,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0.0 1.0 1.0 1.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1623,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1624,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1625,"author":{"gitId":"Nafeij"},"content":".month-sheet-view \u003e .container \u003e .date-cell.last-month {","lastModifiedDate":"2023-03-05"},{"lineNumber":1626,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0.0 1.0 1.0 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1627,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1628,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1629,"author":{"gitId":"Nafeij"},"content":".month-sheet-view \u003e .container \u003e .date-cell.first-day-of-week {","lastModifiedDate":"2023-03-05"},{"lineNumber":1630,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1631,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1632,"author":{"gitId":"Nafeij"},"content":".month-sheet-view \u003e .container \u003e .date-cell:today \u003e .day-of-month-label,","lastModifiedDate":"2023-03-05"},{"lineNumber":1633,"author":{"gitId":"Nafeij"},"content":".month-sheet-view \u003e .container \u003e .date-cell:today \u003e .day-of-week-label,","lastModifiedDate":"2023-03-05"},{"lineNumber":1634,"author":{"gitId":"Nafeij"},"content":".month-sheet-view \u003e .container \u003e .date-cell:today \u003e .week-number-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":1635,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-05"},{"lineNumber":1636,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":1637,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1638,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1639,"author":{"gitId":"Nafeij"},"content":".month-sheet-view \u003e .container \u003e .date-cell.usage-very-low {","lastModifiedDate":"2023-03-05"},{"lineNumber":1640,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -usage-very-low-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1641,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1642,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1643,"author":{"gitId":"Nafeij"},"content":".month-sheet-view \u003e .container \u003e .date-cell.usage-low {","lastModifiedDate":"2023-03-05"},{"lineNumber":1644,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -usage-low-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1645,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1646,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1647,"author":{"gitId":"Nafeij"},"content":".month-sheet-view \u003e .container \u003e .date-cell.usage-medium {","lastModifiedDate":"2023-03-05"},{"lineNumber":1648,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -usage-medium-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1649,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1650,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1651,"author":{"gitId":"Nafeij"},"content":".month-sheet-view \u003e .container \u003e .date-cell.usage-high {","lastModifiedDate":"2023-03-05"},{"lineNumber":1652,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -usage-high-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1653,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1654,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1655,"author":{"gitId":"Nafeij"},"content":".month-sheet-view \u003e .container \u003e .date-cell.usage-very-high {","lastModifiedDate":"2023-03-05"},{"lineNumber":1656,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -usage-very-high-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1657,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1658,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1659,"author":{"gitId":"Nafeij"},"content":".month-sheet-view \u003e .container \u003e .date-cell.usage-very-low \u003e .label {","lastModifiedDate":"2023-03-05"},{"lineNumber":1660,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: -usage-very-low-text-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1661,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1662,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1663,"author":{"gitId":"Nafeij"},"content":".month-sheet-view \u003e .container \u003e .date-cell.usage-low \u003e .label {","lastModifiedDate":"2023-03-05"},{"lineNumber":1664,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: -usage-low-text-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1665,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1666,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1667,"author":{"gitId":"Nafeij"},"content":".month-sheet-view \u003e .container \u003e .date-cell.usage-medium \u003e .label {","lastModifiedDate":"2023-03-05"},{"lineNumber":1668,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: -usage-medium-text-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1669,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1670,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1671,"author":{"gitId":"Nafeij"},"content":".month-sheet-view \u003e .container \u003e .date-cell.usage-high \u003e .label {","lastModifiedDate":"2023-03-05"},{"lineNumber":1672,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: -usage-high-text-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1673,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1674,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1675,"author":{"gitId":"Nafeij"},"content":".month-sheet-view \u003e .container \u003e .date-cell.usage-very-high \u003e .label {","lastModifiedDate":"2023-03-05"},{"lineNumber":1676,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: -usage-very-high-text-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1677,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1678,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1679,"author":{"gitId":"Nafeij"},"content":".month-sheet-view \u003e .container \u003e .badge-date-cell {","lastModifiedDate":"2023-03-05"},{"lineNumber":1680,"author":{"gitId":"Nafeij"},"content":"    -fx-min-width: 100.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1681,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1682,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1683,"author":{"gitId":"Nafeij"},"content":".month-sheet-view \u003e .container \u003e .badge-date-cell \u003e .badge-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":1684,"author":{"gitId":"Nafeij"},"content":"    -fx-pref-width: 2em;","lastModifiedDate":"2023-03-05"},{"lineNumber":1685,"author":{"gitId":"Nafeij"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-03-05"},{"lineNumber":1686,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 0.8em;","lastModifiedDate":"2023-03-05"},{"lineNumber":1687,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":1688,"author":{"gitId":"Nafeij"},"content":"    -fx-text-alignment: right;","lastModifiedDate":"2023-03-05"},{"lineNumber":1689,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 1.0 4.0 1.0 4.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1690,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1691,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1692,"author":{"gitId":"Nafeij"},"content":".month-sheet-view \u003e .container \u003e .badge-date-cell \u003e .badge-label.usage-very-low {","lastModifiedDate":"2023-03-05"},{"lineNumber":1693,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -usage-very-low-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1694,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: -usage-very-low-text-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1695,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1696,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1697,"author":{"gitId":"Nafeij"},"content":".month-sheet-view \u003e .container \u003e .badge-date-cell \u003e .badge-label.usage-low {","lastModifiedDate":"2023-03-05"},{"lineNumber":1698,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -usage-low-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1699,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: -usage-low-text-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1700,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1701,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1702,"author":{"gitId":"Nafeij"},"content":".month-sheet-view \u003e .container \u003e .badge-date-cell \u003e .badge-label.usage-medium {","lastModifiedDate":"2023-03-05"},{"lineNumber":1703,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -usage-medium-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1704,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: -usage-medium-text-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1705,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1706,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1707,"author":{"gitId":"Nafeij"},"content":".month-sheet-view \u003e .container \u003e .badge-date-cell \u003e .badge-label.usage-high {","lastModifiedDate":"2023-03-05"},{"lineNumber":1708,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -usage-high-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1709,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: -usage-high-text-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1710,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1711,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1712,"author":{"gitId":"Nafeij"},"content":".month-sheet-view \u003e .container \u003e .badge-date-cell \u003e .badge-label.usage-very-high {","lastModifiedDate":"2023-03-05"},{"lineNumber":1713,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -usage-very-high-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1714,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: -usage-very-high-text-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1715,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1716,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1717,"author":{"gitId":"Nafeij"},"content":".month-sheet-view \u003e .container \u003e .extended-date-cell.weekend-day {","lastModifiedDate":"2023-03-05"},{"lineNumber":1718,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: derive(blanchedalmond, -5.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1719,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1720,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1721,"author":{"gitId":"Nafeij"},"content":".month-sheet-view \u003e .container \u003e .extended-date-cell {","lastModifiedDate":"2023-03-05"},{"lineNumber":1722,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: blanchedalmond;","lastModifiedDate":"2023-03-05"},{"lineNumber":1723,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1724,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1725,"author":{"gitId":"Nafeij"},"content":".month-sheet-view \u003e .container \u003e .date-cell:selected {","lastModifiedDate":"2023-03-05"},{"lineNumber":1726,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -fx-selection-bar;","lastModifiedDate":"2023-03-05"},{"lineNumber":1727,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: derive(-fx-selection-bar, -10.0%);","lastModifiedDate":"2023-03-05"},{"lineNumber":1728,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1729,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1730,"author":{"gitId":"Nafeij"},"content":".month-sheet-view \u003e .container \u003e .date-cell:selected \u003e .day-of-month-label,","lastModifiedDate":"2023-03-05"},{"lineNumber":1731,"author":{"gitId":"Nafeij"},"content":".month-sheet-view \u003e .container \u003e .date-cell:selected \u003e .day-of-week-label,","lastModifiedDate":"2023-03-05"},{"lineNumber":1732,"author":{"gitId":"Nafeij"},"content":".month-sheet-view \u003e .container \u003e .date-cell:selected \u003e .week-number-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":1733,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-05"},{"lineNumber":1734,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":1735,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1736,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":1737,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":1738,"author":{"gitId":"Nafeij"},"content":" * Styles for the PaperView control.","lastModifiedDate":"2023-03-05"},{"lineNumber":1739,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":1740,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1741,"author":{"gitId":"Nafeij"},"content":".paper-view {","lastModifiedDate":"2023-03-05"},{"lineNumber":1742,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1743,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1744,"author":{"gitId":"Nafeij"},"content":".paper-view \u003e .container {","lastModifiedDate":"2023-03-05"},{"lineNumber":1745,"author":{"gitId":"Nafeij"},"content":"    -fx-hgap: 10;","lastModifiedDate":"2023-03-05"},{"lineNumber":1746,"author":{"gitId":"Nafeij"},"content":"    -fx-vgap: 10;","lastModifiedDate":"2023-03-05"},{"lineNumber":1747,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1748,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1749,"author":{"gitId":"Nafeij"},"content":".paper-view \u003e .container \u003e .custom-fields {","lastModifiedDate":"2023-03-05"},{"lineNumber":1750,"author":{"gitId":"Nafeij"},"content":"    -fx-hgap: 5.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1751,"author":{"gitId":"Nafeij"},"content":"    -fx-vgap: 5.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1752,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1753,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1754,"author":{"gitId":"Nafeij"},"content":".paper-view \u003e .container \u003e .custom-fields \u003e .text-field {","lastModifiedDate":"2023-03-05"},{"lineNumber":1755,"author":{"gitId":"Nafeij"},"content":"    -fx-pref-width: 3em;","lastModifiedDate":"2023-03-05"},{"lineNumber":1756,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1757,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":1758,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":1759,"author":{"gitId":"Nafeij"},"content":" * Styles for the TimeRangeView control.","lastModifiedDate":"2023-03-05"},{"lineNumber":1760,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":1761,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1762,"author":{"gitId":"Nafeij"},"content":".time-range-view {","lastModifiedDate":"2023-03-05"},{"lineNumber":1763,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1764,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1765,"author":{"gitId":"Nafeij"},"content":".time-range-view \u003e .container {","lastModifiedDate":"2023-03-05"},{"lineNumber":1766,"author":{"gitId":"Nafeij"},"content":"    -fx-hgap: 10;","lastModifiedDate":"2023-03-05"},{"lineNumber":1767,"author":{"gitId":"Nafeij"},"content":"    -fx-vgap: 10;","lastModifiedDate":"2023-03-05"},{"lineNumber":1768,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1769,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":1770,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":1771,"author":{"gitId":"Nafeij"},"content":" * Styles for the SettingsView control.","lastModifiedDate":"2023-03-05"},{"lineNumber":1772,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":1773,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1774,"author":{"gitId":"Nafeij"},"content":".print-settings-view {","lastModifiedDate":"2023-03-05"},{"lineNumber":1775,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1776,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1777,"author":{"gitId":"Nafeij"},"content":".print-settings-view \u003e .container {","lastModifiedDate":"2023-03-05"},{"lineNumber":1778,"author":{"gitId":"Nafeij"},"content":"    -fx-spacing: 15.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1779,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1780,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1781,"author":{"gitId":"Nafeij"},"content":".print-settings-view \u003e .container \u003e .section-title \u003e .label {","lastModifiedDate":"2023-03-05"},{"lineNumber":1782,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":1783,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1784,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":1785,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":1786,"author":{"gitId":"Nafeij"},"content":" * Styles for the SourceGridView control.","lastModifiedDate":"2023-03-05"},{"lineNumber":1787,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":1788,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1789,"author":{"gitId":"Nafeij"},"content":".source-grid-view {","lastModifiedDate":"2023-03-05"},{"lineNumber":1790,"author":{"gitId":"Nafeij"},"content":"    -fx-spacing: 7.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1791,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1792,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1793,"author":{"gitId":"Nafeij"},"content":".source-grid-view .column {","lastModifiedDate":"2023-03-05"},{"lineNumber":1794,"author":{"gitId":"Nafeij"},"content":"    -fx-spacing: 5.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1795,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1796,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1797,"author":{"gitId":"Nafeij"},"content":".source-grid-view .column .item-box {","lastModifiedDate":"2023-03-05"},{"lineNumber":1798,"author":{"gitId":"Nafeij"},"content":"    -fx-pref-width: 20.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1799,"author":{"gitId":"Nafeij"},"content":"    -fx-pref-height: 10.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1800,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1801,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":1802,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":1803,"author":{"gitId":"Nafeij"},"content":" * Styles for the PrintablePage control.","lastModifiedDate":"2023-03-05"},{"lineNumber":1804,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":1805,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1806,"author":{"gitId":"Nafeij"},"content":".print-page {","lastModifiedDate":"2023-03-05"},{"lineNumber":1807,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-05"},{"lineNumber":1808,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1809,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1810,"author":{"gitId":"Nafeij"},"content":".print-page \u003e .container {","lastModifiedDate":"2023-03-05"},{"lineNumber":1811,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 10.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1812,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1813,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1814,"author":{"gitId":"Nafeij"},"content":".print-page \u003e .container \u003e .header {","lastModifiedDate":"2023-03-05"},{"lineNumber":1815,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0.0 0.0 10.0 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1816,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1817,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1818,"author":{"gitId":"Nafeij"},"content":".print-page \u003e .container \u003e .header \u003e .title-section {","lastModifiedDate":"2023-03-05"},{"lineNumber":1819,"author":{"gitId":"Nafeij"},"content":"    -fx-spacing: 20.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1820,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1821,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1822,"author":{"gitId":"Nafeij"},"content":".print-page \u003e .container \u003e .header \u003e .title-section \u003e .period-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":1823,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 28.0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":1824,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":1825,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1826,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1827,"author":{"gitId":"Nafeij"},"content":".print-page \u003e .container \u003e .header \u003e .mini-calendars {","lastModifiedDate":"2023-03-05"},{"lineNumber":1828,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0.0 0.0 0.0 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1829,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1830,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1831,"author":{"gitId":"Nafeij"},"content":".print-page .year-month-view \u003e .container {","lastModifiedDate":"2023-03-05"},{"lineNumber":1832,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 5.0 10.0 5.0 10.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1833,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1834,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":1835,"author":{"gitId":"Nafeij"},"content":" * The YearMonthView instances shown inside the PrintablePage control should be smaller than","lastModifiedDate":"2023-03-05"},{"lineNumber":1836,"author":{"gitId":"Nafeij"},"content":" * normally. Otherwise they waste too much space.","lastModifiedDate":"2023-03-05"},{"lineNumber":1837,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":1838,"author":{"gitId":"Nafeij"},"content":".print-page .year-month-view \u003e .container \u003e .day-of-week-label,","lastModifiedDate":"2023-03-05"},{"lineNumber":1839,"author":{"gitId":"Nafeij"},"content":".print-page .year-month-view \u003e .container \u003e .day-of-month-label,","lastModifiedDate":"2023-03-05"},{"lineNumber":1840,"author":{"gitId":"Nafeij"},"content":".print-page .year-month-view \u003e .container \u003e .day-not-of-month-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":1841,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 10.0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":1842,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1843,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1844,"author":{"gitId":"Nafeij"},"content":".print-page .year-month-view \u003e .container \u003e .header \u003e .month-header \u003e .month-label,","lastModifiedDate":"2023-03-05"},{"lineNumber":1845,"author":{"gitId":"Nafeij"},"content":".print-page .year-month-view \u003e .container \u003e .header \u003e .year-header \u003e .year-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":1846,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 14.0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":1847,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1848,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":1849,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":1850,"author":{"gitId":"Nafeij"},"content":" * Styles for the PreviewPane control.","lastModifiedDate":"2023-03-05"},{"lineNumber":1851,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":1852,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1853,"author":{"gitId":"Nafeij"},"content":".print-preview {","lastModifiedDate":"2023-03-05"},{"lineNumber":1854,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 10.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1855,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1856,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1857,"author":{"gitId":"Nafeij"},"content":".print-preview \u003e .container \u003e .center {","lastModifiedDate":"2023-03-05"},{"lineNumber":1858,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: lightgrey;","lastModifiedDate":"2023-03-05"},{"lineNumber":1859,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 1.0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":1860,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: black;","lastModifiedDate":"2023-03-05"},{"lineNumber":1861,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1862,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1863,"author":{"gitId":"Nafeij"},"content":".print-preview \u003e .container \u003e .footer {","lastModifiedDate":"2023-03-05"},{"lineNumber":1864,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 20.0 0.0 0.0 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1865,"author":{"gitId":"Nafeij"},"content":"    -fx-spacing: 10.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1866,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1867,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1868,"author":{"gitId":"Nafeij"},"content":".print-preview \u003e .container \u003e .center \u003e .zoom-pane \u003e .print-page {","lastModifiedDate":"2023-03-05"},{"lineNumber":1869,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: gray;","lastModifiedDate":"2023-03-05"},{"lineNumber":1870,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 1.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1871,"author":{"gitId":"Nafeij"},"content":"    -fx-effect: dropshadow(three-pass-box, gray, 10.0, 0.0, 0.0, 0.0);","lastModifiedDate":"2023-03-05"},{"lineNumber":1872,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1873,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":1874,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":1875,"author":{"gitId":"Nafeij"},"content":" * Styles for the PrintView control.","lastModifiedDate":"2023-03-05"},{"lineNumber":1876,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":1877,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1878,"author":{"gitId":"Nafeij"},"content":".print-view {","lastModifiedDate":"2023-03-05"},{"lineNumber":1879,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 15.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1880,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-05"},{"lineNumber":1881,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1882,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1883,"author":{"gitId":"Nafeij"},"content":".print-view \u003e .container \u003e .button-bar {","lastModifiedDate":"2023-03-05"},{"lineNumber":1884,"author":{"gitId":"Nafeij"},"content":"    -fx-alignment: center-right;","lastModifiedDate":"2023-03-05"},{"lineNumber":1885,"author":{"gitId":"Nafeij"},"content":"    -fx-spacing: 10;","lastModifiedDate":"2023-03-05"},{"lineNumber":1886,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1887,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1888,"author":{"gitId":"Nafeij"},"content":".print-view \u003e .container \u003e .separator {","lastModifiedDate":"2023-03-05"},{"lineNumber":1889,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0 10 0 10;","lastModifiedDate":"2023-03-05"},{"lineNumber":1890,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1891,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":1892,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":1893,"author":{"gitId":"Nafeij"},"content":" * Styles for the ButtonBar control.","lastModifiedDate":"2023-03-05"},{"lineNumber":1894,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":1895,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1896,"author":{"gitId":"Nafeij"},"content":".button-bar \u003e .container \u003e .button {","lastModifiedDate":"2023-03-05"},{"lineNumber":1897,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 3 15 3 15;","lastModifiedDate":"2023-03-05"},{"lineNumber":1898,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":1899,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -fx-shadow-highlight-color, -fx-outer-border, -fx-inner-border, -fx-body-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1900,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1901,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1902,"author":{"gitId":"Nafeij"},"content":".button-bar \u003e .container \u003e .button:focused {","lastModifiedDate":"2023-03-05"},{"lineNumber":1903,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: -fx-shadow-highlight-color, -fx-outer-border, -fx-inner-border, -fx-body-color;","lastModifiedDate":"2023-03-05"},{"lineNumber":1904,"author":{"gitId":"Nafeij"},"content":"    -fx-background-insets: 0 0 -1 0, 0, 1, 2;","lastModifiedDate":"2023-03-05"},{"lineNumber":1905,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1906,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1907,"author":{"gitId":"Nafeij"},"content":".button-bar \u003e .container \u003e .button.left-pill {","lastModifiedDate":"2023-03-05"},{"lineNumber":1908,"author":{"gitId":"Nafeij"},"content":"    -fx-background-radius: 3 0 0 3;","lastModifiedDate":"2023-03-05"},{"lineNumber":1909,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1910,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1911,"author":{"gitId":"Nafeij"},"content":".button-bar \u003e .container \u003e .button.left-pill:focused {","lastModifiedDate":"2023-03-05"},{"lineNumber":1912,"author":{"gitId":"Nafeij"},"content":"    -fx-background-radius: 3 0 0 3;","lastModifiedDate":"2023-03-05"},{"lineNumber":1913,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1914,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1915,"author":{"gitId":"Nafeij"},"content":".button-bar \u003e .container \u003e .button.right-pill {","lastModifiedDate":"2023-03-05"},{"lineNumber":1916,"author":{"gitId":"Nafeij"},"content":"    -fx-background-radius: 0 3 3 0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1917,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1918,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1919,"author":{"gitId":"Nafeij"},"content":".button-bar \u003e .container \u003e .button.right-pill:focused {","lastModifiedDate":"2023-03-05"},{"lineNumber":1920,"author":{"gitId":"Nafeij"},"content":"    -fx-background-radius: 0 3 3 0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1921,"author":{"gitId":"Nafeij"},"content":"    -fx-background-insets: -2 -2 -2 0, 0, 1 1 1 0, 2 2 2 1;","lastModifiedDate":"2023-03-05"},{"lineNumber":1922,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1923,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1924,"author":{"gitId":"Nafeij"},"content":".button-bar \u003e .container \u003e .button.center-pill {","lastModifiedDate":"2023-03-05"},{"lineNumber":1925,"author":{"gitId":"Nafeij"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1926,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1927,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1928,"author":{"gitId":"Nafeij"},"content":".button-bar \u003e .container \u003e .button.center-pill:focused {","lastModifiedDate":"2023-03-05"},{"lineNumber":1929,"author":{"gitId":"Nafeij"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1930,"author":{"gitId":"Nafeij"},"content":"    -fx-background-insets: -2 0 -2 -1, 0 0 0 -1, 1 1 1 0, 2 2 2 1;","lastModifiedDate":"2023-03-05"},{"lineNumber":1931,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1932,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":1933,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":1934,"author":{"gitId":"Nafeij"},"content":" * Styles for the DetailedDayView control.","lastModifiedDate":"2023-03-05"},{"lineNumber":1935,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":1936,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1937,"author":{"gitId":"Nafeij"},"content":".detailed-day-view {","lastModifiedDate":"2023-03-05"},{"lineNumber":1938,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0.0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1939,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1940,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1941,"author":{"gitId":"Nafeij"},"content":".detailed-day-view \u003e .container \u003e .separator {","lastModifiedDate":"2023-03-05"},{"lineNumber":1942,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 5px;","lastModifiedDate":"2023-03-05"},{"lineNumber":1943,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1944,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1945,"author":{"gitId":"Nafeij"},"content":".detailed-day-view \u003e .container \u003e .all-day-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":1946,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: normal;","lastModifiedDate":"2023-03-05"},{"lineNumber":1947,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: gray;","lastModifiedDate":"2023-03-05"},{"lineNumber":1948,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: .9em;","lastModifiedDate":"2023-03-05"},{"lineNumber":1949,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: lightgray;","lastModifiedDate":"2023-03-05"},{"lineNumber":1950,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0 0 5 0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1951,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0 2 0 0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1952,"author":{"gitId":"Nafeij"},"content":"    -fx-alignment: center-right;","lastModifiedDate":"2023-03-05"},{"lineNumber":1953,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1954,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":1955,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":1956,"author":{"gitId":"Nafeij"},"content":" * Styles for the DetailedWeekView control.","lastModifiedDate":"2023-03-05"},{"lineNumber":1957,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":1958,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1959,"author":{"gitId":"Nafeij"},"content":".detailed-week-view \u003e .container \u003e .filler-right,","lastModifiedDate":"2023-03-05"},{"lineNumber":1960,"author":{"gitId":"Nafeij"},"content":".detailed-week-view \u003e .container \u003e .filler-left {","lastModifiedDate":"2023-03-05"},{"lineNumber":1961,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: lightgray;","lastModifiedDate":"2023-03-05"},{"lineNumber":1962,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1963,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1964,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1965,"author":{"gitId":"Nafeij"},"content":".detailed-week-view \u003e .container \u003e .all-day-filler {","lastModifiedDate":"2023-03-05"},{"lineNumber":1966,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: lightgray;","lastModifiedDate":"2023-03-05"},{"lineNumber":1967,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0 0 5 0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1968,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1969,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1970,"author":{"gitId":"Nafeij"},"content":".detailed-week-view \u003e .container \u003e .all-day-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":1971,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: normal;","lastModifiedDate":"2023-03-05"},{"lineNumber":1972,"author":{"gitId":"Nafeij"},"content":"    -fx-text-fill: gray;","lastModifiedDate":"2023-03-05"},{"lineNumber":1973,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: .9em;","lastModifiedDate":"2023-03-05"},{"lineNumber":1974,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: lightgray;","lastModifiedDate":"2023-03-05"},{"lineNumber":1975,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0 0 5 0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1976,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 0 2 0 0;","lastModifiedDate":"2023-03-05"},{"lineNumber":1977,"author":{"gitId":"Nafeij"},"content":"    -fx-alignment: center-right;","lastModifiedDate":"2023-03-05"},{"lineNumber":1978,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1979,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":1980,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":1981,"author":{"gitId":"Nafeij"},"content":" * Styles for the WeekFieldsView control.","lastModifiedDate":"2023-03-05"},{"lineNumber":1982,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":1983,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1984,"author":{"gitId":"Nafeij"},"content":".week-fields {","lastModifiedDate":"2023-03-05"},{"lineNumber":1985,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1986,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1987,"author":{"gitId":"Nafeij"},"content":".week-fields \u003e .content {","lastModifiedDate":"2023-03-05"},{"lineNumber":1988,"author":{"gitId":"Nafeij"},"content":"    -fx-hgap: 10;","lastModifiedDate":"2023-03-05"},{"lineNumber":1989,"author":{"gitId":"Nafeij"},"content":"    -fx-vgap: 10;","lastModifiedDate":"2023-03-05"},{"lineNumber":1990,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1991,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":1992,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":1993,"author":{"gitId":"Nafeij"},"content":" * Styles for the ResourceCalendarView control.","lastModifiedDate":"2023-03-05"},{"lineNumber":1994,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":1995,"author":{"gitId":"Nafeij"},"content":".resource-calendar-view {","lastModifiedDate":"2023-03-05"},{"lineNumber":1996,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":1997,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":1998,"author":{"gitId":"Nafeij"},"content":".resource-calendar-view .time-scale {","lastModifiedDate":"2023-03-05"},{"lineNumber":1999,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: lightgrey;","lastModifiedDate":"2023-03-05"},{"lineNumber":2000,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0px 1px 0px 0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":2001,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2002,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2003,"author":{"gitId":"Nafeij"},"content":".resource-calendar-view .header-background {","lastModifiedDate":"2023-03-05"},{"lineNumber":2004,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: grey, white;","lastModifiedDate":"2023-03-05"},{"lineNumber":2005,"author":{"gitId":"Nafeij"},"content":"    -fx-background-insets: 0, 0 0 1 0;","lastModifiedDate":"2023-03-05"},{"lineNumber":2006,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2007,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2008,"author":{"gitId":"Nafeij"},"content":".resource-calendar-view .marker-line {","lastModifiedDate":"2023-03-05"},{"lineNumber":2009,"author":{"gitId":"Nafeij"},"content":"    -fx-pref-height: 5px;","lastModifiedDate":"2023-03-05"},{"lineNumber":2010,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: orange;","lastModifiedDate":"2023-03-05"},{"lineNumber":2011,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2012,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":2013,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":2014,"author":{"gitId":"Nafeij"},"content":" * Styles for the TimeField control.","lastModifiedDate":"2023-03-05"},{"lineNumber":2015,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":2016,"author":{"gitId":"Nafeij"},"content":".time-field \u003e .box {","lastModifiedDate":"2023-03-05"},{"lineNumber":2017,"author":{"gitId":"Nafeij"},"content":"    -fx-spacing: 2px;","lastModifiedDate":"2023-03-05"},{"lineNumber":2018,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2019,"author":{"gitId":"Nafeij"},"content":"/*","lastModifiedDate":"2023-03-05"},{"lineNumber":2020,"author":{"gitId":"Nafeij"},"content":" * --------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":2021,"author":{"gitId":"Nafeij"},"content":" * Styles for the ResourcesView.","lastModifiedDate":"2023-03-05"},{"lineNumber":2022,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":2023,"author":{"gitId":"Nafeij"},"content":".resources-view {","lastModifiedDate":"2023-03-05"},{"lineNumber":2024,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-03-05"},{"lineNumber":2025,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: lightgrey;","lastModifiedDate":"2023-03-05"},{"lineNumber":2026,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2027,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2028,"author":{"gitId":"Nafeij"},"content":".resources-view .week-number-label {","lastModifiedDate":"2023-03-05"},{"lineNumber":2029,"author":{"gitId":"Nafeij"},"content":"    -fx-font-size: 1.2em;","lastModifiedDate":"2023-03-05"},{"lineNumber":2030,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":2031,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2032,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2033,"author":{"gitId":"Nafeij"},"content":".resources-view .header-box .day-box .weekday-header-view {","lastModifiedDate":"2023-03-05"},{"lineNumber":2034,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: lightgrey;","lastModifiedDate":"2023-03-05"},{"lineNumber":2035,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2036,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2037,"author":{"gitId":"Nafeij"},"content":".resources-view .header-box .day-box .weekday-header-view {","lastModifiedDate":"2023-03-05"},{"lineNumber":2038,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0px 0px 0px 0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":2039,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2040,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2041,"author":{"gitId":"Nafeij"},"content":".resources-view .header-box .day-box .resource-header {","lastModifiedDate":"2023-03-05"},{"lineNumber":2042,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 5px;","lastModifiedDate":"2023-03-05"},{"lineNumber":2043,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: lightgrey;","lastModifiedDate":"2023-03-05"},{"lineNumber":2044,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":2045,"author":{"gitId":"Nafeij"},"content":"    -fx-alignment: center;","lastModifiedDate":"2023-03-05"},{"lineNumber":2046,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2047,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2048,"author":{"gitId":"Nafeij"},"content":".resources-view .header-box .day-box .resource-header.first {","lastModifiedDate":"2023-03-05"},{"lineNumber":2049,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0px 0px 1px 0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":2050,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2051,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2052,"author":{"gitId":"Nafeij"},"content":".resources-view .header-box .day-box .resource-header.only,","lastModifiedDate":"2023-03-05"},{"lineNumber":2053,"author":{"gitId":"Nafeij"},"content":".resources-view .header-box .day-box .resource-header.middle {","lastModifiedDate":"2023-03-05"},{"lineNumber":2054,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0px 0px 1px 0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":2055,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2056,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2057,"author":{"gitId":"Nafeij"},"content":".resources-view .header-box .day-box .resource-header.last {","lastModifiedDate":"2023-03-05"},{"lineNumber":2058,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0px 0px 1px 0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":2059,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2060,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2061,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2062,"author":{"gitId":"Nafeij"},"content":".resources-view .header-box .resource-header-view .resource-header {","lastModifiedDate":"2023-03-05"},{"lineNumber":2063,"author":{"gitId":"Nafeij"},"content":"    -fx-padding: 5px;","lastModifiedDate":"2023-03-05"},{"lineNumber":2064,"author":{"gitId":"Nafeij"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-05"},{"lineNumber":2065,"author":{"gitId":"Nafeij"},"content":"    -fx-alignment: center;","lastModifiedDate":"2023-03-05"},{"lineNumber":2066,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2067,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2068,"author":{"gitId":"Nafeij"},"content":".resources-view .header-box .resource-header-view .resource-header,","lastModifiedDate":"2023-03-05"},{"lineNumber":2069,"author":{"gitId":"Nafeij"},"content":".resources-view .header-box .resource-header-view .all-day-view,","lastModifiedDate":"2023-03-05"},{"lineNumber":2070,"author":{"gitId":"Nafeij"},"content":".resources-view .header-box .resource-header-view .weekday-header-view {","lastModifiedDate":"2023-03-05"},{"lineNumber":2071,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: lightgrey;","lastModifiedDate":"2023-03-05"},{"lineNumber":2072,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2073,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2074,"author":{"gitId":"Nafeij"},"content":".resources-view .header-box .resource-header-view.first .resource-header {","lastModifiedDate":"2023-03-05"},{"lineNumber":2075,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0px 0px 1px 0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":2076,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2077,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2078,"author":{"gitId":"Nafeij"},"content":".resources-view .header-box .resource-header-view.first .weekday-header-view {","lastModifiedDate":"2023-03-05"},{"lineNumber":2079,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0px 0px 0px 0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":2080,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2081,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2082,"author":{"gitId":"Nafeij"},"content":".resources-view .header-box .resource-header-view.first .all-day-view {","lastModifiedDate":"2023-03-05"},{"lineNumber":2083,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0px 0px 1px 0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":2084,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2085,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2086,"author":{"gitId":"Nafeij"},"content":".resources-view .header-box .resource-header-view.last .resource-header {","lastModifiedDate":"2023-03-05"},{"lineNumber":2087,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0px 0px 1px 0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":2088,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2089,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2090,"author":{"gitId":"Nafeij"},"content":".resources-view .header-box .resource-header-view.last .all-day-view {","lastModifiedDate":"2023-03-05"},{"lineNumber":2091,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0px 0px 1px 0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":2092,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2093,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2094,"author":{"gitId":"Nafeij"},"content":".resources-view .header-box .resource-header-view.last .weekday-header-view {","lastModifiedDate":"2023-03-05"},{"lineNumber":2095,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0px 0px 0px 0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":2096,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2097,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2098,"author":{"gitId":"Nafeij"},"content":".resources-view .header-box .resource-header-view.only .resource-header,","lastModifiedDate":"2023-03-05"},{"lineNumber":2099,"author":{"gitId":"Nafeij"},"content":".resources-view .header-box .resource-header-view.middle .resource-header {","lastModifiedDate":"2023-03-05"},{"lineNumber":2100,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0px 0px 1px 0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":2101,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2102,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2103,"author":{"gitId":"Nafeij"},"content":".resources-view .header-box .resource-header-view.only .weekday-header-view,","lastModifiedDate":"2023-03-05"},{"lineNumber":2104,"author":{"gitId":"Nafeij"},"content":".resources-view .header-box .resource-header-view.middle .weekday-header-view {","lastModifiedDate":"2023-03-05"},{"lineNumber":2105,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0px 0px 0px 0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":2106,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2107,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2108,"author":{"gitId":"Nafeij"},"content":".resources-view .header-box .resource-header-view.only .all-day-view,","lastModifiedDate":"2023-03-05"},{"lineNumber":2109,"author":{"gitId":"Nafeij"},"content":".resources-view .header-box .resource-header-view.middle .all-day-view {","lastModifiedDate":"2023-03-05"},{"lineNumber":2110,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0px 0px 1px 0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":2111,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2112,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2113,"author":{"gitId":"Nafeij"},"content":".resources-view .resources-view-container .week-view {","lastModifiedDate":"2023-03-05"},{"lineNumber":2114,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: lightgrey;","lastModifiedDate":"2023-03-05"},{"lineNumber":2115,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2116,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2117,"author":{"gitId":"Nafeij"},"content":".resources-view .resources-view-container .week-view.first {","lastModifiedDate":"2023-03-05"},{"lineNumber":2118,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0px 0px 1px 0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":2119,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2120,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2121,"author":{"gitId":"Nafeij"},"content":".resources-view .resources-view-container .week-view.only {","lastModifiedDate":"2023-03-05"},{"lineNumber":2122,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-03-05"},{"lineNumber":2123,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2124,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2125,"author":{"gitId":"Nafeij"},"content":".resources-view .resources-view-container .week-view.middle {","lastModifiedDate":"2023-03-05"},{"lineNumber":2126,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0px 0px 1px 0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":2127,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2128,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2129,"author":{"gitId":"Nafeij"},"content":".resources-view .resources-view-container .week-view.last {","lastModifiedDate":"2023-03-05"},{"lineNumber":2130,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0px 1px 1px 0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":2131,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2132,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2133,"author":{"gitId":"Nafeij"},"content":".resources-view .upper-left-corner {","lastModifiedDate":"2023-03-05"},{"lineNumber":2134,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: lightgrey;","lastModifiedDate":"2023-03-05"},{"lineNumber":2135,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0px 1px 1px 0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":2136,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2137,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2138,"author":{"gitId":"Nafeij"},"content":".resources-view .upper-right-corner {","lastModifiedDate":"2023-03-05"},{"lineNumber":2139,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: lightgrey;","lastModifiedDate":"2023-03-05"},{"lineNumber":2140,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0px 0px 1px 1px;","lastModifiedDate":"2023-03-05"},{"lineNumber":2141,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2142,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2143,"author":{"gitId":"Nafeij"},"content":".resources-view .time-scale {","lastModifiedDate":"2023-03-05"},{"lineNumber":2144,"author":{"gitId":"Nafeij"},"content":"    -fx-border-color: lightgrey;","lastModifiedDate":"2023-03-05"},{"lineNumber":2145,"author":{"gitId":"Nafeij"},"content":"    -fx-border-width: 0px 1px 1px 0px;","lastModifiedDate":"2023-03-05"},{"lineNumber":2146,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2147,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2148,"author":{"gitId":"Nafeij"},"content":".resources-view .weekday-separator {","lastModifiedDate":"2023-03-05"},{"lineNumber":2149,"author":{"gitId":"Nafeij"},"content":"    -size: 1px;","lastModifiedDate":"2023-03-05"},{"lineNumber":2150,"author":{"gitId":"Nafeij"},"content":"    -fx-pref-width: -size;","lastModifiedDate":"2023-03-05"},{"lineNumber":2151,"author":{"gitId":"Nafeij"},"content":"    -fx-min-width: -size;","lastModifiedDate":"2023-03-05"},{"lineNumber":2152,"author":{"gitId":"Nafeij"},"content":"    -fx-max-width: -size;","lastModifiedDate":"2023-03-05"},{"lineNumber":2153,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: lightgrey;","lastModifiedDate":"2023-03-05"},{"lineNumber":2154,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2155,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2156,"author":{"gitId":"Nafeij"},"content":".resources-view .large-separator {","lastModifiedDate":"2023-03-05"},{"lineNumber":2157,"author":{"gitId":"Nafeij"},"content":"    -size: 4px;","lastModifiedDate":"2023-03-05"},{"lineNumber":2158,"author":{"gitId":"Nafeij"},"content":"    -fx-pref-width: -size;","lastModifiedDate":"2023-03-05"},{"lineNumber":2159,"author":{"gitId":"Nafeij"},"content":"    -fx-min-width: -size;","lastModifiedDate":"2023-03-05"},{"lineNumber":2160,"author":{"gitId":"Nafeij"},"content":"    -fx-max-width: -size;","lastModifiedDate":"2023-03-05"},{"lineNumber":2161,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: lightgrey;","lastModifiedDate":"2023-03-05"},{"lineNumber":2162,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":2163,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":2164,"author":{"gitId":"Nafeij"},"content":".resources-view .small-separator {","lastModifiedDate":"2023-03-05"},{"lineNumber":2165,"author":{"gitId":"Nafeij"},"content":"    -size: 1px;","lastModifiedDate":"2023-03-05"},{"lineNumber":2166,"author":{"gitId":"Nafeij"},"content":"    -fx-pref-width: -size;","lastModifiedDate":"2023-03-05"},{"lineNumber":2167,"author":{"gitId":"Nafeij"},"content":"    -fx-min-width: -size;","lastModifiedDate":"2023-03-05"},{"lineNumber":2168,"author":{"gitId":"Nafeij"},"content":"    -fx-max-width: -size;","lastModifiedDate":"2023-03-05"},{"lineNumber":2169,"author":{"gitId":"Nafeij"},"content":"    -fx-background-color: lightgrey;","lastModifiedDate":"2023-03-05"},{"lineNumber":2170,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Nafeij":2170}},{"path":"src/test/java/seedu/calidr/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"Flash161203":1,"-":57}},{"path":"src/test/java/seedu/calidr/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.commons.core;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"Flash161203":1,"-":26}},{"path":"src/test/java/seedu/calidr/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.commons.core;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Flash161203":2,"-":133}},{"path":"src/test/java/seedu/calidr/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.commons.core.index;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Flash161203":2,"-":58}},{"path":"src/test/java/seedu/calidr/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.commons.util;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"Flash161203":2,"-":34}},{"path":"src/test/java/seedu/calidr/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.commons.util;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"Flash161203":3,"-":105}},{"path":"src/test/java/seedu/calidr/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.commons.util;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.Config;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Flash161203":4,"-":112}},{"path":"src/test/java/seedu/calidr/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.commons.util;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Flash161203":2,"-":21}},{"path":"src/test/java/seedu/calidr/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.commons.util;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.testutil.SerializableTestClass;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.testutil.TestUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Flash161203":3,"-":42}},{"path":"src/test/java/seedu/calidr/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.commons.util;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Flash161203":2,"-":141}},{"path":"src/test/java/seedu/calidr/commons/util/TaskEntryUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package seedu.calidr.commons.util;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"import static seedu.calidr.testutil.TypicalTasks.EVENT1;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"import static seedu.calidr.testutil.TypicalTasks.TODO1;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.TaskEntry;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"class TaskEntryUtilTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"    void convert() {","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"        TaskEntry todoEntry \u003d TaskEntryUtil.convert(TODO1);","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"        assertEquals(todoEntry.getTitle(), TODO1.getTitle() + \"\\t[  ] {H}\");","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"        assertEquals(todoEntry.getPriority(), TODO1.getPriority());","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"        assertEquals(todoEntry.getIsDone(), TODO1.isDone());","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"        TaskEntry eventEntry \u003d TaskEntryUtil.convert(EVENT1);","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"        assertEquals(eventEntry.getTitle(), EVENT1.getTitle() + \"\\t[  ] {M}\");","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"        assertEquals(eventEntry.getInterval().getStartDateTime(), EVENT1.getEventDateTimes().from);","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"        assertEquals(eventEntry.getInterval().getEndDateTime(), EVENT1.getEventDateTimes().to);","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"        assertEquals(eventEntry.getPriority(), EVENT1.getPriority());","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"        assertEquals(eventEntry.getIsDone(), EVENT1.isDone());","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Nafeij":24,"Flash161203":4}},{"path":"src/test/java/seedu/calidr/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"import static seedu.calidr.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.CommandResult;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.ModelManager;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.UserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.storage.JsonAddressBookStorage;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.storage.StorageManager;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":78,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":87,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":96,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Nafeij":8,"Flash161203":13,"-":111}},{"path":"src/test/java/seedu/calidr/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.ModelManager;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.UserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Person;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.testutil.PersonBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Flash161203":9,"-":36}},{"path":"src/test/java/seedu/calidr/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.GuiSettings;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.AddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"vaidyanaath"},"content":"import seedu.calidr.model.ReadOnlyTaskList;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Person;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.task.Task;","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.testutil.PersonBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"        assertEquals(Collections.singletonList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"Nafeij"},"content":"        assertEquals(addAliceCommand, addAliceCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"Nafeij"},"content":"        assertEquals(addAliceCommand, addAliceCommandCopy);","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"Nafeij"},"content":"        assertNotEquals(1, addAliceCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"Nafeij"},"content":"        assertNotEquals(null, addAliceCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"Nafeij"},"content":"        assertNotEquals(addAliceCommand, addBobCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"Nafeij"},"content":"     * A default model stub that have all the methods failing.","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"Nafeij"},"content":"    private static class ModelStub implements Model {","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"Nafeij"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"Nafeij"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"Nafeij"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"Nafeij"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"Nafeij"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"Nafeij"},"content":"        public ReadOnlyTaskList getTaskList() {","lastModifiedDate":"2023-03-19"},{"lineNumber":154,"author":{"gitId":"Nafeij"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"Nafeij"},"content":"        @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":158,"author":{"gitId":"Nafeij"},"content":"        public void setTaskList(ReadOnlyTaskList taskList) {","lastModifiedDate":"2023-03-19"},{"lineNumber":159,"author":{"gitId":"Nafeij"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":160,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":161,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"Nafeij"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":163,"author":{"gitId":"Nafeij"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-14"},{"lineNumber":164,"author":{"gitId":"Nafeij"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":166,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":167,"author":{"gitId":"Nafeij"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":168,"author":{"gitId":"Nafeij"},"content":"        public void deleteTask(Task task) {","lastModifiedDate":"2023-03-19"},{"lineNumber":169,"author":{"gitId":"Nafeij"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":170,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":171,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":172,"author":{"gitId":"Nafeij"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":173,"author":{"gitId":"Nafeij"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2023-03-14"},{"lineNumber":174,"author":{"gitId":"Nafeij"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":175,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":176,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"Nafeij"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"Nafeij"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-03-19"},{"lineNumber":179,"author":{"gitId":"Nafeij"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":180,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":181,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":182,"author":{"gitId":"Nafeij"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":183,"author":{"gitId":"Nafeij"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":184,"author":{"gitId":"Nafeij"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":185,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":186,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":187,"author":{"gitId":"Nafeij"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":188,"author":{"gitId":"Nafeij"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2023-03-14"},{"lineNumber":189,"author":{"gitId":"Nafeij"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":190,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"Nafeij"},"content":"    private static class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2023-03-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"Nafeij"},"content":"    private static class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2023-03-14"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Nafeij":57,"Flash161203":10,"-":167,"vaidyanaath":1}},{"path":"src/test/java/seedu/calidr/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.AddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.ModelManager;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.UserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Flash161203":7,"-":25}},{"path":"src/test/java/seedu/calidr/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"Flash161203":1,"-":53}},{"path":"src/test/java/seedu/calidr/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.index.Index;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.AddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Person;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"    public static final String VALID_REMARK_AMY \u003d \"She likes aardvarks.\";","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"    public static final String VALID_REMARK_BOB \u003d \"He can\u0027t take beer!\";","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Flash161203"},"content":"    public static final String REMARK_DESC_AMY \u003d \" \" + PREFIX_REMARK + VALID_REMARK_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Flash161203"},"content":"    public static final String REMARK_DESC_BOB \u003d \" \" + PREFIX_REMARK + VALID_REMARK_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"Flash161203"},"content":"                .withRemark(VALID_REMARK_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"Flash161203"},"content":"                .withRemark(VALID_REMARK_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Flash161203":22,"-":112}},{"path":"src/test/java/seedu/calidr/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.Messages;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.index.Index;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.ModelManager;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.UserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Person;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Flash161203":13,"-":96}},{"path":"src/test/java/seedu/calidr/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.Messages;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.index.Index;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.AddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.ModelManager;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.UserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Person;","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.testutil.PersonBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Flash161203":22,"-":151}},{"path":"src/test/java/seedu/calidr/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Flash161203":10,"-":48}},{"path":"src/test/java/seedu/calidr/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.ModelManager;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Flash161203":5,"-":15}},{"path":"src/test/java/seedu/calidr/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.ModelManager;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.UserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Flash161203":11,"-":72}},{"path":"src/test/java/seedu/calidr/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.ModelManager;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Flash161203":5,"-":15}},{"path":"src/test/java/seedu/calidr/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.ModelManager;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.UserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Flash161203":8,"-":31}},{"path":"src/test/java/seedu/calidr/logic/commands/RemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.Messages;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.index.Index;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.AddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.ModelManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.UserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Person;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Remark;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.testutil.PersonBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"class RemarkCommandTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"    private static final String REMARK_STUB \u003d \"Some remark\";","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"    public void execute_addRemarkUnfilteredList_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRemark(REMARK_STUB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().value));","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Flash161203"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Flash161203"},"content":"    public void execute_deleteRemarkUnfilteredList_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Flash161203"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Flash161203"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRemark(\"\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Flash161203"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Flash161203"},"content":"                new Remark(editedPerson.getRemark().toString()));","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Flash161203"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_DELETE_REMARK_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Flash161203"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Flash161203"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Flash161203"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Flash161203"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Flash161203"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Flash161203"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Flash161203"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Flash161203"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Flash161203"},"content":"                .withRemark(REMARK_STUB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Flash161203"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().value));","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Flash161203"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Flash161203"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Flash161203"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"Flash161203"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"Flash161203"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"Flash161203"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Flash161203"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"Flash161203"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"Flash161203"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Flash161203"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"Flash161203"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"Flash161203"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"Flash161203"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"Flash161203"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"Flash161203"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"Flash161203"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"Flash161203"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"Flash161203"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"Flash161203"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Flash161203":102}},{"path":"src/test/java/seedu/calidr/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.REMARK_DESC_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.AddCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Address;","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Email;","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Person;","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.tag.Tag;","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.testutil.PersonBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"                + ADDRESS_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"Flash161203"},"content":"                + ADDRESS_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"Flash161203"},"content":"                + ADDRESS_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"Flash161203"},"content":"                + ADDRESS_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"Flash161203"},"content":"                + ADDRESS_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"Flash161203"},"content":"                + REMARK_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":83,"author":{"gitId":"Flash161203"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"Flash161203"},"content":"                        + ADDRESS_DESC_AMY + REMARK_DESC_AMY,","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"Flash161203"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"Flash161203"},"content":"                + ADDRESS_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"Flash161203"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"Flash161203"},"content":"                + ADDRESS_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"Flash161203"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"Flash161203"},"content":"                + ADDRESS_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"Flash161203"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"Flash161203"},"content":"                + INVALID_ADDRESS_DESC + REMARK_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"Flash161203"},"content":"                Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"Flash161203"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"Flash161203"},"content":"                + ADDRESS_DESC_BOB + REMARK_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"Flash161203"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"Flash161203"},"content":"                        + INVALID_ADDRESS_DESC + REMARK_DESC_BOB,","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":143,"author":{"gitId":"Flash161203"},"content":"                + ADDRESS_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Flash161203":62,"-":84}},{"path":"src/test/java/seedu/calidr/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.AddCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.EditCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.FindCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.ListCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Person;","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.testutil.PersonBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.testutil.PersonUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Flash161203":20,"-":81}},{"path":"src/test/java/seedu/calidr/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"Flash161203":1,"-":149}},{"path":"src/test/java/seedu/calidr/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.Command;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"Flash161203":3,"-":36}},{"path":"src/test/java/seedu/calidr/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Flash161203":6,"-":26}},{"path":"src/test/java/seedu/calidr/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.index.Index;","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.EditCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Address;","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Email;","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.tag.Tag;","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Flash161203":40,"-":171}},{"path":"src/test/java/seedu/calidr/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.FindCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"Flash161203":6,"-":28}},{"path":"src/test/java/seedu/calidr/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Address;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Email;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.tag.Tag;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Flash161203":10,"-":186}},{"path":"src/test/java/seedu/calidr/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Person;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.testutil.PersonBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Flash161203":9,"-":93}},{"path":"src/test/java/seedu/calidr/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.GuiSettings;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.testutil.AddressBookBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"Flash161203":8,"-":124}},{"path":"src/test/java/seedu/calidr/model/TaskEntryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package seedu.calidr.model;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.params.Priority;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"class TaskEntryTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"    private final TaskEntry taskEntry \u003d new TaskEntry();","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"    void priority() {","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"        assertNull(taskEntry.getPriority());","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"        taskEntry.setPriority(Priority.LOW);","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"        assertEquals(Priority.LOW, taskEntry.getPriority());","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"    void isDone() {","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"        assertFalse(taskEntry.getIsDone());","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"        taskEntry.setIsDone(true);","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"        assertTrue(taskEntry.getIsDone());","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"    void createRecurrence() {","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"        TaskEntry recurrence \u003d taskEntry.createRecurrence();","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"        assertEquals(taskEntry.getPriority(), recurrence.getPriority());","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"        assertEquals(taskEntry.getIsDone(), recurrence.getIsDone());","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"    void testToString() {","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"        taskEntry.setTitle(\"title\");","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"        taskEntry.setPriority(Priority.LOW);","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"        taskEntry.setIsDone(true);","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"        assertEquals(\"Task Entry: title LOW true\", taskEntry.toString());","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Nafeij":43,"Flash161203":1}},{"path":"src/test/java/seedu/calidr/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"Flash161203":2,"-":19}},{"path":"src/test/java/seedu/calidr/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model.person;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Flash161203":2,"-":34}},{"path":"src/test/java/seedu/calidr/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model.person;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Flash161203":2,"-":66}},{"path":"src/test/java/seedu/calidr/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model.person;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.testutil.PersonBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Flash161203":2,"-":73}},{"path":"src/test/java/seedu/calidr/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model.person;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Flash161203":2,"-":38}},{"path":"src/test/java/seedu/calidr/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model.person;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.testutil.PersonBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Flash161203":10,"-":81}},{"path":"src/test/java/seedu/calidr/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model.person;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Flash161203":2,"-":38}},{"path":"src/test/java/seedu/calidr/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model.person;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.testutil.PersonBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Flash161203":9,"-":161}},{"path":"src/test/java/seedu/calidr/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.model.tag;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"Flash161203":2,"-":24}},{"path":"src/test/java/seedu/calidr/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Address;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Email;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"    private static final String VALID_REMARK \u003d BENSON.getRemark().toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"Flash161203"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Flash161203"},"content":"                        VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"Flash161203"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"                null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"Flash161203"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Flash161203"},"content":"                        VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"Flash161203"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Flash161203"},"content":"                VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"Flash161203"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"Flash161203"},"content":"                        VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"Flash161203"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Flash161203"},"content":"                VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"Flash161203"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Flash161203"},"content":"                        INVALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"Flash161203"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"Flash161203"},"content":"                null, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"Flash161203"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"Flash161203"},"content":"                        VALID_ADDRESS, VALID_REMARK, invalidTags);","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Flash161203":28,"-":92}},{"path":"src/test/java/seedu/calidr/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalPersons.HOON;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalPersons.IDA;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.AddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Flash161203":9,"-":101}},{"path":"src/test/java/seedu/calidr/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.util.JsonUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.AddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.testutil.TypicalPersons;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Flash161203":6,"-":41}},{"path":"src/test/java/seedu/calidr/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.GuiSettings;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.UserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Flash161203":5,"-":118}},{"path":"src/test/java/seedu/calidr/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.GuiSettings;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.AddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.UserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Flash161203":6,"-":62}},{"path":"src/test/java/seedu/calidr/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.testutil;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.AddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Person;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Flash161203":3,"-":31}},{"path":"src/test/java/seedu/calidr/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.testutil;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"Flash161203":1,"-":33}},{"path":"src/test/java/seedu/calidr/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.testutil;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Address;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Email;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Person;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.person.Remark;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.tag.Tag;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"    private final EditPersonDescriptor descriptor;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"        descriptor.setRemark(person.getRemark());","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"        descriptor.setRemark(person.getRemark());","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"Flash161203"},"content":"     * Sets the {@code Remark} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"Flash161203"},"content":"    public EditPersonDescriptorBuilder withRemark(String remark) {","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"Flash161203"},"content":"        descriptor.setRemark(new Remark(remark));","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"Flash161203"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Nafeij":3,"Flash161203":17,"-":78}},{"path":"src/test/java/seedu/calidr/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.testutil;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Address;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Email;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Person;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Remark;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.tag.Tag;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"    public static final String DEFAULT_REMARK \u003d \"\";","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"    private Remark remark;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"Flash161203"},"content":"        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"Flash161203"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"Flash161203"},"content":"    public PersonBuilder withRemark(String remark) {","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"Flash161203"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"Flash161203"},"content":"        return this;","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":106,"author":{"gitId":"Flash161203"},"content":"        return new Person(name, phone, email, address, remark, tags);","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"Flash161203":22,"-":87}},{"path":"src/test/java/seedu/calidr/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.testutil;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.AddCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Person;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.tag.Tag;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"        sb.append(PREFIX_REMARK + person.getRemark().value + \" \");","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"        descriptor.getRemark().ifPresent(remark -\u003e sb.append(PREFIX_REMARK).append(remark.value).append(\" \"));","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Flash161203":13,"-":52}},{"path":"src/test/java/seedu/calidr/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.testutil;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Flash161203":1,"-":71}},{"path":"src/test/java/seedu/calidr/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.testutil;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.index.Index;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Person;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Flash161203":4,"-":51}},{"path":"src/test/java/seedu/calidr/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.testutil;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.commons.core.index.Index;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"Flash161203":2,"-":10}},{"path":"src/test/java/seedu/calidr/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.testutil;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.AddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.person.Person;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"            .withPhone(\"94351253\").withRemark(\"She likes aardvarks.\")","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withRemark(\"He can\u0027t take beer!\")","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"Flash161203"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withRemark(VALID_REMARK_AMY)","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Flash161203"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"Flash161203"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withRemark(VALID_REMARK_BOB)","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"Flash161203"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Flash161203":21,"-":59}},{"path":"src/test/java/seedu/calidr/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package seedu.calidr.testutil;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.task.Event;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"import seedu.calidr.model.task.ToDo;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.params.EventDateTimes;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.params.Priority;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.params.Title;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.model.task.params.TodoDateTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"public class TypicalTasks {","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"    public static final LocalDateTime DATE_TIME1 \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"            LocalDateTime.of(2023, 3,","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"                    10, 10, 10);","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"    public static final LocalDateTime DATE_TIME2 \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"            LocalDateTime.of(2023, 3,","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"                    11, 10, 10);","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"    public static final LocalDateTime DATE_TIME3 \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"            LocalDateTime.of(2023, 3,","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"                    12, 10, 10);","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"    public static final ToDo TODO1 \u003d new ToDo(","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"            new Title(\"CS2101 Quiz 2\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"            new TodoDateTime(DATE_TIME1),","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"            Priority.HIGH","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"    );","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"    public static final ToDo TODO2 \u003d (","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"            (Supplier\u003cToDo\u003e) () -\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"                ToDo temp \u003d new ToDo(","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"                        new Title(\"CS2101 Quiz 3\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"                        new TodoDateTime(DATE_TIME2),","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"                        Priority.LOW","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"                );","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"                temp.setDone(true);","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"                return temp;","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"    ).get();","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"    public static final Event EVENT1 \u003d new Event(","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Flash161203"},"content":"            new Title(\"CS2103T Lecture 1\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Flash161203"},"content":"            new EventDateTimes(DATE_TIME1,","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Flash161203"},"content":"                    DATE_TIME2)","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"    );","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"    public static final Event EVENT2 \u003d new Event(","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"            new Title(\"CS2103T Lecture 2\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Flash161203"},"content":"            new EventDateTimes(DATE_TIME2,","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Flash161203"},"content":"                    DATE_TIME3),","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"            Priority.HIGH","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"    );","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"Nafeij"},"content":"    public static final Event EVENT3 \u003d (","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"Nafeij"},"content":"            (Supplier\u003cEvent\u003e) () -\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"Nafeij"},"content":"                Event temp \u003d new Event(","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"Flash161203"},"content":"                        new Title(\"CS2103T Lecture 3\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"Flash161203"},"content":"                        new EventDateTimes(DATE_TIME1,","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"Flash161203"},"content":"                                DATE_TIME3),","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"Nafeij"},"content":"                        Priority.LOW","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"Nafeij"},"content":"                );","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"Nafeij"},"content":"                temp.setDone(true);","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"Nafeij"},"content":"                return temp;","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"Nafeij"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"Nafeij"},"content":"    ).get();","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Nafeij":56,"Flash161203":17}},{"path":"src/test/java/seedu/calidr/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"Flash161203":1,"-":34}},{"path":"src/test/java/seedu/calidr/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package seedu.calidr.ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import static seedu.calidr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"import seedu.calidr.MainApp;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"Flash161203":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"\u003c?import seedu.calidr.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"Flash161203":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"\u003cfx:root type\u003d\"seedu.calidr.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Flash161203":1,"-":5}}]
