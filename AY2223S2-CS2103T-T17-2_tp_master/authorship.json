[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"### SudoHR ###","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-T17-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-T17-2/tp/actions)","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"\u0026nbsp;[![CI Status](https://github.com/AY2223S2-CS2103T-T17-2/tp/workflows/Build/badge.svg)](https://github.com/AY2223S2-CS2103T-T17-2/tp/actions)","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"\u0026nbsp;[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-T17-2/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2223S2-CS2103T-T17-2/tp)","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"* This is **a tool for HR to consolidate data about employees**.\u003cbr\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"  * update data about employees phone number, department, etc.","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"  * list all employees in a department.","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"* The project builds upon an ongoing software project for a desktop application (called _AddressBook_) used for managing contact details.","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kennethk-1201":9,"-":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"mainClassName \u003d \u0027seedu.sudohr.Main\u0027","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"pkwangjoo"},"content":"    archiveFileName \u003d \u0027sudohr.jar\u0027","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"pkwangjoo":2,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"### Andre Lin","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"\u003cimg src\u003d\"images/4ndrelim.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"[[github](https://github.com/4ndrelim)]","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"[[portfolio](team/andre.md)]","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"pkwangjoo"},"content":"- Role: Developer","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"pkwangjoo"},"content":"- Responsibilities: Integration \u0026 Tracking","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"pkwangjoo"},"content":"- In-charge of: Leave features","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"### Kenneth Kiang","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"\u003cimg src\u003d\"images/kennethk-1201.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"[[github](https://github.com/kennethk-1201)]","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"[[portfolio](team/kennethk-1201.md)]","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"pkwangjoo"},"content":"- Role: Team Lead","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"pkwangjoo"},"content":"### Park Kwangjoo","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"pkwangjoo"},"content":"\u003cimg src\u003d\"images/pkwangjoo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"[[github](http://github.com/johndoe)]","lastModifiedDate":"2020-06-17"},{"lineNumber":35,"author":{"gitId":"pkwangjoo"},"content":"[[portfolio](team/pkwangjoo.md)]","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"pkwangjoo"},"content":"- Role: Developer","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"pkwangjoo"},"content":"- Responsibilities: Integration","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"pkwangjoo"},"content":"- In-charge of: Performance review features","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"jerrrren"},"content":"### Chee Jer En","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"jerrrren"},"content":"\u003cimg src\u003d\"images/jerrrren.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"jweeyh"},"content":"[[github](http://github.com/jerrrren)]","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"jweeyh"},"content":"[[portfolio](team/jerrrren.md)]","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"jerrrren"},"content":"- Role: Code reviewer","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"jerrrren"},"content":"- Responsibilities: Review Code","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"jweeyh"},"content":"### Johnathan Wee","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"jweeyh"},"content":"\u003cimg src\u003d\"images/jweeyh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"jweeyh"},"content":"[[github](http://github.com/jweeyh)]","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"jweeyh"},"content":"[[portfolio](team/jweeyh.md)]","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"pkwangjoo"},"content":"- Role: Developer","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"jweeyh"},"content":"- Responsibilities: Secretary","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"jweeyh"},"content":"- In-charge of: Department features","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"jerrrren":4,"jweeyh":8,"pkwangjoo":11,"4ndrelim":4,"kennethk-1201":4,"-":30}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressBook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressBook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressBook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"kennethk-1201"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressBook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"kennethk-1201"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressBook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressBook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"kennethk-1201"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressBook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"kennethk-1201"},"content":"1. When `Logic` is called upon to execute a command, it uses the `SudoHRParser` class to parse the user command.","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"kennethk-1201"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add an employee).","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"kennethk-1201"},"content":"* When called upon to parse a user command, the `SudoHRParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `SudoHRParser` returns back as a `Command` object.","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"kennethk-1201"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressBook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"kennethk-1201"},"content":"* stores the system data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"kennethk-1201"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `SudoHR`, which `Person` references. This allows `SudoHR` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"kennethk-1201"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressBook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"kennethk-1201"},"content":"* can save both SudoHR data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"kennethk-1201"},"content":"* inherits from both `SudoHRStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"kennethk-1201"},"content":"Classes used by multiple components are in the `seedu.SudoHR.commons` package.","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"kennethk-1201"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedSudoHR`. It extends `SudoHR` with an undo/redo history, stored internally as an `SudoHRStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2023-03-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"kennethk-1201"},"content":"* `VersionedSudoHR#commit()` — Saves the current system state in its history.","lastModifiedDate":"2023-03-05"},{"lineNumber":164,"author":{"gitId":"kennethk-1201"},"content":"* `VersionedSudoHR#undo()` — Restores the previous system state from its history.","lastModifiedDate":"2023-03-05"},{"lineNumber":165,"author":{"gitId":"kennethk-1201"},"content":"* `VersionedSudoHR#redo()` — Restores a previously undone system state from its history.","lastModifiedDate":"2023-03-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"kennethk-1201"},"content":"These operations are exposed in the `Model` interface as `Model#commitSudoHR()`, `Model#undoSudoHR()` and `Model#redoSudoHR()` respectively.","lastModifiedDate":"2023-03-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"kennethk-1201"},"content":"Step 1. The user launches the application for the first time. The `VersionedSudoHR` will be initialized with the initial system state, and the `currentStatePointer` pointing to that single system state.","lastModifiedDate":"2023-03-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"kennethk-1201"},"content":"Step 2. The user executes `delete 5` command to delete the 5th employee in the system. The `delete` command calls `Model#commitSudoHR()`, causing the modified state of the system after the `delete 5` command executes to be saved in the `SudoHRStateList`, and the `currentStatePointer` is shifted to the newly inserted system state.","lastModifiedDate":"2023-03-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"kennethk-1201"},"content":"Step 3. The user executes `add n/David …​` to add a new employee. The `add` command also calls `Model#commitSudoHR()`, causing another modified system state to be saved into the `SudoHRStateList`.","lastModifiedDate":"2023-03-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"kennethk-1201"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitSudoHR()`, so the system state will not be saved into the `SudoHRStateList`.","lastModifiedDate":"2023-03-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"kennethk-1201"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoSudoHR()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous system state, and restores the system to that state.","lastModifiedDate":"2023-03-05"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"kennethk-1201"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial SudoHR state, then there are no previous SudoHR states to restore. The `undo` command uses `Model#canUndoSudoHR()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-03-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"kennethk-1201"},"content":"The `redo` command does the opposite — it calls `Model#redoSudoHR()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the system to that state.","lastModifiedDate":"2023-03-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"kennethk-1201"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `SudoHRStateList.size() - 1`, pointing to the latest system state, then there are no undone SudoHR states to restore. The `redo` command uses `Model#canRedoSudoHR()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-03-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"kennethk-1201"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the system, such as `list`, will usually not call `Model#commitSudoHR()`, `Model#undoSudoHR()` or `Model#redoSudoHR()`. Thus, the `SudoHRStateList` remains unchanged.","lastModifiedDate":"2023-03-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"kennethk-1201"},"content":"Step 6. The user executes `clear`, which calls `Model#commitSudoHR()`. Since the `currentStatePointer` is not pointing at the end of the `SudoHRStateList`, all system states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2023-03-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"kennethk-1201"},"content":"* **Alternative 1 (current choice):** Saves the entire system.","lastModifiedDate":"2023-03-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"kennethk-1201"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the employee being deleted).","lastModifiedDate":"2023-03-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"kennethk-1201"},"content":"**Target user profile**: HR in company who has a need to manage a significant number of employees","lastModifiedDate":"2023-03-06"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"kennethk-1201"},"content":"**Value proposition**: data management for employees faster than a typical mouse/GUI driven app","lastModifiedDate":"2023-03-05"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"| Priority | As a …​                                | I want to …​                                               | So that I can…​                                                          |","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"kennethk-1201"},"content":"| -------- |----------------------------------------|------------------------------------------------------------|--------------------------------------------------------------------------|","lastModifiedDate":"2023-03-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"| `* * *`  | new user                               | see usage instructions                                     | refer to instructions when I forget how to use the App                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"kennethk-1201"},"content":"| `* * *`  | user                                   | add a new employee                                         |                                                                          |","lastModifiedDate":"2023-03-05"},{"lineNumber":271,"author":{"gitId":"kennethk-1201"},"content":"| `* * *`  | user                                   | delete an employee                                         | remove entries that I no longer need                                     |","lastModifiedDate":"2023-03-05"},{"lineNumber":272,"author":{"gitId":"kennethk-1201"},"content":"| `* * *`  | user                                   | find an employee by name                                   | locate details of employees without having to go through the entire list |","lastModifiedDate":"2023-03-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"| `* *`    | user                                   | hide private contact details                               | minimize chance of someone else seeing them by accident                  |","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"kennethk-1201"},"content":"| `*`      | user with many employees in the system | sort employees by name                                     | locate an employee","lastModifiedDate":"2023-03-05"},{"lineNumber":275,"author":{"gitId":"kennethk-1201"},"content":"| `***` | HR personnel                           | Add an employee’s leave to SudoHR                          | Ensure consolidation of information","lastModifiedDate":"2023-03-05"},{"lineNumber":276,"author":{"gitId":"kennethk-1201"},"content":"| `***` | HR personnel                           | be able to view all the leave the employee has applied for | Access an employee availability easily","lastModifiedDate":"2023-03-05"},{"lineNumber":277,"author":{"gitId":"jerrrren"},"content":"| `***` | HR personnel                           | Be able to view everyone who has applied leave on a day    | Better plan company events","lastModifiedDate":"2023-03-05"},{"lineNumber":278,"author":{"gitId":"kennethk-1201"},"content":"| `***` | HR personnel                           | Creae a department                                         | Create a department to add employees in","lastModifiedDate":"2023-03-05"},{"lineNumber":279,"author":{"gitId":"kennethk-1201"},"content":"| `***` | HR personnel                           | Add an employee to a department                            | Apply department-level operations (e.g announcements) on the employee","lastModifiedDate":"2023-03-05"},{"lineNumber":280,"author":{"gitId":"kennethk-1201"},"content":"| `***`| HR personnel                           | Create a project                                           | create project to add employees inside","lastModifiedDate":"2023-03-05"},{"lineNumber":281,"author":{"gitId":"kennethk-1201"},"content":"| `***`| HR personnel                           | Update a project                                           | modify a project","lastModifiedDate":"2023-03-05"},{"lineNumber":282,"author":{"gitId":"kennethk-1201"},"content":"| `***`| HR personnel                           | Delete a project                                           | delete old projects","lastModifiedDate":"2023-03-05"},{"lineNumber":283,"author":{"gitId":"kennethk-1201"},"content":"| `***`| HR personnel                           | List projects                                              | list all existing projects","lastModifiedDate":"2023-03-05"},{"lineNumber":284,"author":{"gitId":"kennethk-1201"},"content":"| `***`| HR personnel                           | Add employee to a project                                  | add employees to projects that they are doing","lastModifiedDate":"2023-03-05"},{"lineNumber":285,"author":{"gitId":"kennethk-1201"},"content":"| `***`| HR personnel                           | Remove employee from a project                             | remove employees from projects they are no longer doing","lastModifiedDate":"2023-03-05"},{"lineNumber":286,"author":{"gitId":"kennethk-1201"},"content":"| `***`| HR personnel                           | List all employees doing a project                         | list all employees doing a certain project","lastModifiedDate":"2023-03-05"},{"lineNumber":287,"author":{"gitId":"kennethk-1201"},"content":"| `*` | user with many employees in the system | sort employees by name                                     | locate an employee easily","lastModifiedDate":"2023-03-05"},{"lineNumber":288,"author":{"gitId":"jerrrren"},"content":"| `***` | HR personnel                           | Create a new event                                         | keep track of all the event details of the company","lastModifiedDate":"2023-03-05"},{"lineNumber":289,"author":{"gitId":"jerrrren"},"content":"| `***` | HR personnel                           | Delete a event                                             | Remove events I no longer need","lastModifiedDate":"2023-03-05"},{"lineNumber":290,"author":{"gitId":"jerrrren"},"content":"| `**` | HR personnel                           | Update a event                                             | Update the details of an event","lastModifiedDate":"2023-03-05"},{"lineNumber":291,"author":{"gitId":"jerrrren"},"content":"| `***` | HR personnel                           | List a event                                               | See all the events added to the management system","lastModifiedDate":"2023-03-05"},{"lineNumber":292,"author":{"gitId":"jerrrren"},"content":"| `***` | HR personnel                           | Add a employee to a event                                  | Know which employee is involved in a event","lastModifiedDate":"2023-03-05"},{"lineNumber":293,"author":{"gitId":"jerrrren"},"content":"| `***` | HR personnel                           | Delete a employee from a event                             | Remove employees that are not participating in a event","lastModifiedDate":"2023-03-05"},{"lineNumber":294,"author":{"gitId":"jerrrren"},"content":"| `***` | HR personnel                           | List employees attending a specific event                  | Obtain the contact details of all employees attending a specific event","lastModifiedDate":"2023-03-05"},{"lineNumber":295,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"jerrrren"},"content":"(For all use cases below, the **System** is  `SudoHR` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-03-05"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"kennethk-1201"},"content":"**Use case: Delete an employee**","lastModifiedDate":"2023-03-05"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"kennethk-1201"},"content":"1.  User requests to list employees","lastModifiedDate":"2023-03-05"},{"lineNumber":308,"author":{"gitId":"kennethk-1201"},"content":"2.  SudoHR shows a list of employees","lastModifiedDate":"2023-03-05"},{"lineNumber":309,"author":{"gitId":"kennethk-1201"},"content":"3.  User requests to delete a specific employee in the list","lastModifiedDate":"2023-03-05"},{"lineNumber":310,"author":{"gitId":"kennethk-1201"},"content":"4.  SudoHR deletes the employee","lastModifiedDate":"2023-03-05"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"kennethk-1201"},"content":"    * 3a1. SudoHR shows an error message.","lastModifiedDate":"2023-03-05"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"jerrrren"},"content":"**Use case: UC1 - Create a department**","lastModifiedDate":"2023-03-05"},{"lineNumber":327,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":328,"author":{"gitId":"jerrrren"},"content":"**MSS:**","lastModifiedDate":"2023-03-05"},{"lineNumber":329,"author":{"gitId":"jerrrren"},"content":"1. User requests to create a department.","lastModifiedDate":"2023-03-05"},{"lineNumber":330,"author":{"gitId":"jerrrren"},"content":"2. SudoHR creates the department.","lastModifiedDate":"2023-03-05"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":334,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-03-05"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":336,"author":{"gitId":"jerrrren"},"content":"* 1a. The given argument is invalid.","lastModifiedDate":"2023-03-05"},{"lineNumber":337,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":338,"author":{"gitId":"jerrrren"},"content":"    * 1a1. SudoHR shows an error message.","lastModifiedDate":"2023-03-05"},{"lineNumber":339,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":340,"author":{"gitId":"jerrrren"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-03-05"},{"lineNumber":341,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":342,"author":{"gitId":"jerrrren"},"content":"**Use case: UC2 - Add employee to department**","lastModifiedDate":"2023-03-05"},{"lineNumber":343,"author":{"gitId":"jerrrren"},"content":"**MSS:**","lastModifiedDate":"2023-03-05"},{"lineNumber":344,"author":{"gitId":"jerrrren"},"content":"1. User lists department","lastModifiedDate":"2023-03-05"},{"lineNumber":345,"author":{"gitId":"jerrrren"},"content":"2. User requests to add employee to the department.","lastModifiedDate":"2023-03-05"},{"lineNumber":346,"author":{"gitId":"jerrrren"},"content":"3. SudoHR adds employee to the department.","lastModifiedDate":"2023-03-05"},{"lineNumber":347,"author":{"gitId":"jerrrren"},"content":"4. Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":348,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":349,"author":{"gitId":"jerrrren"},"content":"**Extensions**","lastModifiedDate":"2023-03-05"},{"lineNumber":350,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":351,"author":{"gitId":"jerrrren"},"content":"* 1a. The given argument is invalid.","lastModifiedDate":"2023-03-05"},{"lineNumber":352,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":353,"author":{"gitId":"jerrrren"},"content":"    * 1a1. SudoHR shows an error message.","lastModifiedDate":"2023-03-05"},{"lineNumber":354,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":355,"author":{"gitId":"jerrrren"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-05"},{"lineNumber":356,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":357,"author":{"gitId":"kennethk-1201"},"content":"**Use case: UC3 - Create a project**","lastModifiedDate":"2023-03-05"},{"lineNumber":358,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":359,"author":{"gitId":"kennethk-1201"},"content":"**MSS:**","lastModifiedDate":"2023-03-05"},{"lineNumber":360,"author":{"gitId":"kennethk-1201"},"content":"1. User requests to create a project.","lastModifiedDate":"2023-03-05"},{"lineNumber":361,"author":{"gitId":"kennethk-1201"},"content":"2. SudoHR creates the project.","lastModifiedDate":"2023-03-05"},{"lineNumber":362,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":363,"author":{"gitId":"kennethk-1201"},"content":"   Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":364,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":365,"author":{"gitId":"kennethk-1201"},"content":"**Extensions**","lastModifiedDate":"2023-03-05"},{"lineNumber":366,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":367,"author":{"gitId":"kennethk-1201"},"content":"* 1a. The given argument is invalid.","lastModifiedDate":"2023-03-05"},{"lineNumber":368,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":369,"author":{"gitId":"kennethk-1201"},"content":"    * 1a1. SudoHR shows an error message.","lastModifiedDate":"2023-03-05"},{"lineNumber":370,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":371,"author":{"gitId":"kennethk-1201"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-03-05"},{"lineNumber":372,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":373,"author":{"gitId":"kennethk-1201"},"content":"**Use case: UC4 - Update a project**","lastModifiedDate":"2023-03-05"},{"lineNumber":374,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":375,"author":{"gitId":"kennethk-1201"},"content":"**MSS:**","lastModifiedDate":"2023-03-05"},{"lineNumber":376,"author":{"gitId":"kennethk-1201"},"content":"1. User lists all existing projects.","lastModifiedDate":"2023-03-05"},{"lineNumber":377,"author":{"gitId":"kennethk-1201"},"content":"2. User requests to update a project.","lastModifiedDate":"2023-03-05"},{"lineNumber":378,"author":{"gitId":"kennethk-1201"},"content":"3. SudoHR updates the project.","lastModifiedDate":"2023-03-05"},{"lineNumber":379,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":380,"author":{"gitId":"kennethk-1201"},"content":"   Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":381,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":382,"author":{"gitId":"kennethk-1201"},"content":"**Extensions**","lastModifiedDate":"2023-03-05"},{"lineNumber":383,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":384,"author":{"gitId":"kennethk-1201"},"content":"* 1a. The given argument is invalid.","lastModifiedDate":"2023-03-05"},{"lineNumber":385,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":386,"author":{"gitId":"kennethk-1201"},"content":"    * 1a1. SudoHR shows an error message.","lastModifiedDate":"2023-03-05"},{"lineNumber":387,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":388,"author":{"gitId":"kennethk-1201"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-05"},{"lineNumber":389,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":390,"author":{"gitId":"kennethk-1201"},"content":"**Use case: UC5 - Delete a project**","lastModifiedDate":"2023-03-05"},{"lineNumber":391,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":392,"author":{"gitId":"kennethk-1201"},"content":"**MSS:**","lastModifiedDate":"2023-03-05"},{"lineNumber":393,"author":{"gitId":"kennethk-1201"},"content":"1. User lists all existing projects.","lastModifiedDate":"2023-03-05"},{"lineNumber":394,"author":{"gitId":"kennethk-1201"},"content":"2. User requests to delete a project.","lastModifiedDate":"2023-03-05"},{"lineNumber":395,"author":{"gitId":"kennethk-1201"},"content":"3. SudoHR deletes the project.","lastModifiedDate":"2023-03-05"},{"lineNumber":396,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":397,"author":{"gitId":"kennethk-1201"},"content":"   Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":398,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":399,"author":{"gitId":"kennethk-1201"},"content":"**Extensions**","lastModifiedDate":"2023-03-05"},{"lineNumber":400,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":401,"author":{"gitId":"kennethk-1201"},"content":"* 1a. The given argument is invalid.","lastModifiedDate":"2023-03-05"},{"lineNumber":402,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":403,"author":{"gitId":"kennethk-1201"},"content":"    * 1a1. SudoHR shows an error message.","lastModifiedDate":"2023-03-05"},{"lineNumber":404,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":405,"author":{"gitId":"kennethk-1201"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-05"},{"lineNumber":406,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":407,"author":{"gitId":"kennethk-1201"},"content":"**Use case: UC6 - List projects**","lastModifiedDate":"2023-03-05"},{"lineNumber":408,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":409,"author":{"gitId":"kennethk-1201"},"content":"**MSS:**","lastModifiedDate":"2023-03-05"},{"lineNumber":410,"author":{"gitId":"kennethk-1201"},"content":"1. User lists all existing projects.","lastModifiedDate":"2023-03-05"},{"lineNumber":411,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":412,"author":{"gitId":"kennethk-1201"},"content":"   Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":413,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":414,"author":{"gitId":"kennethk-1201"},"content":"**Use case: UC7 - Add employee to a project**","lastModifiedDate":"2023-03-05"},{"lineNumber":415,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":416,"author":{"gitId":"kennethk-1201"},"content":"**MSS:**","lastModifiedDate":"2023-03-05"},{"lineNumber":417,"author":{"gitId":"kennethk-1201"},"content":"1. User lists all existing projects.","lastModifiedDate":"2023-03-05"},{"lineNumber":418,"author":{"gitId":"kennethk-1201"},"content":"2. User lists all employees.","lastModifiedDate":"2023-03-05"},{"lineNumber":419,"author":{"gitId":"kennethk-1201"},"content":"3. User requests to add employee to a specific project.","lastModifiedDate":"2023-03-05"},{"lineNumber":420,"author":{"gitId":"kennethk-1201"},"content":"4. SudoHR adds employee to the project.","lastModifiedDate":"2023-03-05"},{"lineNumber":421,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":422,"author":{"gitId":"kennethk-1201"},"content":"   Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":423,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":424,"author":{"gitId":"kennethk-1201"},"content":"**Extensions**","lastModifiedDate":"2023-03-05"},{"lineNumber":425,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":426,"author":{"gitId":"kennethk-1201"},"content":"* 1a. The given argument(s) is invalid.","lastModifiedDate":"2023-03-05"},{"lineNumber":427,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":428,"author":{"gitId":"kennethk-1201"},"content":"    * 1a1. SudoHR shows an error message.","lastModifiedDate":"2023-03-05"},{"lineNumber":429,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":430,"author":{"gitId":"kennethk-1201"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-03-05"},{"lineNumber":431,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":432,"author":{"gitId":"kennethk-1201"},"content":"**Use case: UC8 - Remove employee from a project**","lastModifiedDate":"2023-03-05"},{"lineNumber":433,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":434,"author":{"gitId":"kennethk-1201"},"content":"**MSS:**","lastModifiedDate":"2023-03-05"},{"lineNumber":435,"author":{"gitId":"kennethk-1201"},"content":"1. User lists all existing projects.","lastModifiedDate":"2023-03-05"},{"lineNumber":436,"author":{"gitId":"kennethk-1201"},"content":"2. User lists all employees.","lastModifiedDate":"2023-03-05"},{"lineNumber":437,"author":{"gitId":"kennethk-1201"},"content":"3. User requests to remove employee from a specific project.","lastModifiedDate":"2023-03-05"},{"lineNumber":438,"author":{"gitId":"kennethk-1201"},"content":"4. SudoHR removes employee from the project.","lastModifiedDate":"2023-03-05"},{"lineNumber":439,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":440,"author":{"gitId":"kennethk-1201"},"content":"   Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":441,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":442,"author":{"gitId":"kennethk-1201"},"content":"**Extensions**","lastModifiedDate":"2023-03-05"},{"lineNumber":443,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":444,"author":{"gitId":"kennethk-1201"},"content":"* 1a. The given argument(s) is invalid.","lastModifiedDate":"2023-03-05"},{"lineNumber":445,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":446,"author":{"gitId":"kennethk-1201"},"content":"    * 1a1. SudoHR shows an error message.","lastModifiedDate":"2023-03-05"},{"lineNumber":447,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":448,"author":{"gitId":"kennethk-1201"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-03-05"},{"lineNumber":449,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":450,"author":{"gitId":"kennethk-1201"},"content":"**Use case: UC9 - List all employees doing a project**","lastModifiedDate":"2023-03-05"},{"lineNumber":451,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":452,"author":{"gitId":"kennethk-1201"},"content":"**MSS:**","lastModifiedDate":"2023-03-05"},{"lineNumber":453,"author":{"gitId":"kennethk-1201"},"content":"1. User lists all existing projects.","lastModifiedDate":"2023-03-05"},{"lineNumber":454,"author":{"gitId":"kennethk-1201"},"content":"2. User requests to list all employees doing a project.","lastModifiedDate":"2023-03-05"},{"lineNumber":455,"author":{"gitId":"kennethk-1201"},"content":"3. SudoHR lists all the employees doing a project","lastModifiedDate":"2023-03-05"},{"lineNumber":456,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":457,"author":{"gitId":"kennethk-1201"},"content":"   Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":458,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":459,"author":{"gitId":"kennethk-1201"},"content":"**Extensions**","lastModifiedDate":"2023-03-05"},{"lineNumber":460,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":461,"author":{"gitId":"kennethk-1201"},"content":"* 1a. The given argument(s) is invalid.","lastModifiedDate":"2023-03-05"},{"lineNumber":462,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":463,"author":{"gitId":"kennethk-1201"},"content":"    * 1a1. SudoHR shows an error message.","lastModifiedDate":"2023-03-05"},{"lineNumber":464,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":465,"author":{"gitId":"kennethk-1201"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-05"},{"lineNumber":466,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":467,"author":{"gitId":"kennethk-1201"},"content":"**Use case: UC10 - Add event**","lastModifiedDate":"2023-03-05"},{"lineNumber":468,"author":{"gitId":"jerrrren"},"content":"**MSS:**","lastModifiedDate":"2023-03-05"},{"lineNumber":469,"author":{"gitId":"jerrrren"},"content":"1. User request to add event with corresponding event title description and date","lastModifiedDate":"2023-03-05"},{"lineNumber":470,"author":{"gitId":"jerrrren"},"content":"2. SudoHR adds event.","lastModifiedDate":"2023-03-05"},{"lineNumber":471,"author":{"gitId":"jerrrren"},"content":"3. Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":472,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":473,"author":{"gitId":"jerrrren"},"content":"**Extensions**","lastModifiedDate":"2023-03-05"},{"lineNumber":474,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":475,"author":{"gitId":"jerrrren"},"content":"* 1a. The given argument has invalid fields.","lastModifiedDate":"2023-03-05"},{"lineNumber":476,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":477,"author":{"gitId":"jerrrren"},"content":"   * 1a1. SudoHR shows an error message.","lastModifiedDate":"2023-03-05"},{"lineNumber":478,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":479,"author":{"gitId":"jerrrren"},"content":"     Use case resumes at step 1.","lastModifiedDate":"2023-03-05"},{"lineNumber":480,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":481,"author":{"gitId":"jerrrren"},"content":"* 1b. The given argument has missing fields.","lastModifiedDate":"2023-03-05"},{"lineNumber":482,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":483,"author":{"gitId":"jerrrren"},"content":"    * 1b1. SudoHR shows an error message.","lastModifiedDate":"2023-03-05"},{"lineNumber":484,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":485,"author":{"gitId":"jerrrren"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-03-05"},{"lineNumber":486,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":487,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":488,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":489,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":490,"author":{"gitId":"kennethk-1201"},"content":"**Use case: UC11 - Delete event**","lastModifiedDate":"2023-03-05"},{"lineNumber":491,"author":{"gitId":"jerrrren"},"content":"**MSS:**","lastModifiedDate":"2023-03-05"},{"lineNumber":492,"author":{"gitId":"jerrrren"},"content":"1. User request to list event","lastModifiedDate":"2023-03-05"},{"lineNumber":493,"author":{"gitId":"jerrrren"},"content":"2. SudoHR shows all events","lastModifiedDate":"2023-03-05"},{"lineNumber":494,"author":{"gitId":"jerrrren"},"content":"3. User requests to delete event from SudoHR","lastModifiedDate":"2023-03-05"},{"lineNumber":495,"author":{"gitId":"jerrrren"},"content":"4. SudoHR deletes event.","lastModifiedDate":"2023-03-05"},{"lineNumber":496,"author":{"gitId":"jerrrren"},"content":"5. Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":497,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":498,"author":{"gitId":"jerrrren"},"content":"**Extensions**","lastModifiedDate":"2023-03-05"},{"lineNumber":499,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":500,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-03-05"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":502,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":504,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-03-05"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":506,"author":{"gitId":"jerrrren"},"content":"    * 3a1. SudoHR shows an error message.","lastModifiedDate":"2023-03-05"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":508,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-05"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":510,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":511,"author":{"gitId":"kennethk-1201"},"content":"**Use case: UC12 - Update event**","lastModifiedDate":"2023-03-05"},{"lineNumber":512,"author":{"gitId":"jerrrren"},"content":"**MSS:**","lastModifiedDate":"2023-03-05"},{"lineNumber":513,"author":{"gitId":"jerrrren"},"content":"1. User resuest to list event","lastModifiedDate":"2023-03-05"},{"lineNumber":514,"author":{"gitId":"jerrrren"},"content":"2. SudoHR shows all events and their details","lastModifiedDate":"2023-03-05"},{"lineNumber":515,"author":{"gitId":"jerrrren"},"content":"3. User requests to update event details on SudoHR","lastModifiedDate":"2023-03-05"},{"lineNumber":516,"author":{"gitId":"jerrrren"},"content":"4. SudoHR update event.","lastModifiedDate":"2023-03-05"},{"lineNumber":517,"author":{"gitId":"jerrrren"},"content":"5. Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":518,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":519,"author":{"gitId":"jerrrren"},"content":"**Extensions**","lastModifiedDate":"2023-03-05"},{"lineNumber":520,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":521,"author":{"gitId":"jerrrren"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-03-05"},{"lineNumber":522,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":523,"author":{"gitId":"jerrrren"},"content":"  Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":524,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":525,"author":{"gitId":"jerrrren"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-03-05"},{"lineNumber":526,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":527,"author":{"gitId":"jerrrren"},"content":"    * 3a1. SudoHR shows an error message.","lastModifiedDate":"2023-03-05"},{"lineNumber":528,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":529,"author":{"gitId":"jerrrren"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-05"},{"lineNumber":530,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":531,"author":{"gitId":"jerrrren"},"content":"* 3b. The given argument is empty.","lastModifiedDate":"2023-03-05"},{"lineNumber":532,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":533,"author":{"gitId":"jerrrren"},"content":"    * 3b1. SudoHR shows an error message.","lastModifiedDate":"2023-03-05"},{"lineNumber":534,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":535,"author":{"gitId":"jerrrren"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-05"},{"lineNumber":536,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":537,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":538,"author":{"gitId":"kennethk-1201"},"content":"**Use case: UC13 - List event**","lastModifiedDate":"2023-03-05"},{"lineNumber":539,"author":{"gitId":"jerrrren"},"content":"**MSS:**","lastModifiedDate":"2023-03-05"},{"lineNumber":540,"author":{"gitId":"jerrrren"},"content":"1. User requests SudoHR to list all events","lastModifiedDate":"2023-03-05"},{"lineNumber":541,"author":{"gitId":"jerrrren"},"content":"2. SudoHR shows all events and their details","lastModifiedDate":"2023-03-05"},{"lineNumber":542,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":543,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":544,"author":{"gitId":"kennethk-1201"},"content":"**Use case: UC14 - Add employee to event**","lastModifiedDate":"2023-03-05"},{"lineNumber":545,"author":{"gitId":"jerrrren"},"content":"**MSS:**","lastModifiedDate":"2023-03-05"},{"lineNumber":546,"author":{"gitId":"jerrrren"},"content":"1. User requests to list event","lastModifiedDate":"2023-03-05"},{"lineNumber":547,"author":{"gitId":"jerrrren"},"content":"2. SudoHR shows all events and their details","lastModifiedDate":"2023-03-05"},{"lineNumber":548,"author":{"gitId":"jerrrren"},"content":"3. User requests to list employees","lastModifiedDate":"2023-03-05"},{"lineNumber":549,"author":{"gitId":"jerrrren"},"content":"4. SudoHR shows all employees and their details","lastModifiedDate":"2023-03-05"},{"lineNumber":550,"author":{"gitId":"jerrrren"},"content":"5. User requests to add employee to event on SudoHR","lastModifiedDate":"2023-03-05"},{"lineNumber":551,"author":{"gitId":"jerrrren"},"content":"6. SudoHR add employee to event.","lastModifiedDate":"2023-03-05"},{"lineNumber":552,"author":{"gitId":"jerrrren"},"content":"7. Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":553,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":554,"author":{"gitId":"jerrrren"},"content":"**Extensions**","lastModifiedDate":"2023-03-05"},{"lineNumber":555,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":556,"author":{"gitId":"jerrrren"},"content":"* 2a. The event list is empty.","lastModifiedDate":"2023-03-05"},{"lineNumber":557,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":558,"author":{"gitId":"jerrrren"},"content":"  Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":559,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":560,"author":{"gitId":"jerrrren"},"content":"* 4a. The employee list is empty.","lastModifiedDate":"2023-03-05"},{"lineNumber":561,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":562,"author":{"gitId":"jerrrren"},"content":"  Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":563,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":564,"author":{"gitId":"jerrrren"},"content":"* 5a. The given Employeeindex is invalid.","lastModifiedDate":"2023-03-05"},{"lineNumber":565,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":566,"author":{"gitId":"jerrrren"},"content":"    * 5a1. SudoHR shows an error message.","lastModifiedDate":"2023-03-05"},{"lineNumber":567,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":568,"author":{"gitId":"jerrrren"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2023-03-05"},{"lineNumber":569,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":570,"author":{"gitId":"jerrrren"},"content":"* 5b. The given Eventindex is invalid.","lastModifiedDate":"2023-03-05"},{"lineNumber":571,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":572,"author":{"gitId":"jerrrren"},"content":"    * 5b1. SudoHR shows an error message.","lastModifiedDate":"2023-03-05"},{"lineNumber":573,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":574,"author":{"gitId":"jerrrren"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2023-03-05"},{"lineNumber":575,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":576,"author":{"gitId":"kennethk-1201"},"content":"**Use case: UC15 - List employees in an event**","lastModifiedDate":"2023-03-05"},{"lineNumber":577,"author":{"gitId":"jerrrren"},"content":"**MSS:**","lastModifiedDate":"2023-03-05"},{"lineNumber":578,"author":{"gitId":"jerrrren"},"content":"1. User request to list events","lastModifiedDate":"2023-03-05"},{"lineNumber":579,"author":{"gitId":"jerrrren"},"content":"2. SudoHR shows all events and their details","lastModifiedDate":"2023-03-05"},{"lineNumber":580,"author":{"gitId":"jerrrren"},"content":"3. User requests to list employees added to an event","lastModifiedDate":"2023-03-05"},{"lineNumber":581,"author":{"gitId":"jerrrren"},"content":"4. SudoHR shows all employees added to an event and their details","lastModifiedDate":"2023-03-05"},{"lineNumber":582,"author":{"gitId":"jerrrren"},"content":"5. Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":583,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":584,"author":{"gitId":"jerrrren"},"content":"**Extensions**","lastModifiedDate":"2023-03-05"},{"lineNumber":585,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":586,"author":{"gitId":"jerrrren"},"content":"* 2a. The event list is empty.","lastModifiedDate":"2023-03-05"},{"lineNumber":587,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":588,"author":{"gitId":"jerrrren"},"content":"  Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":589,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":590,"author":{"gitId":"jerrrren"},"content":"* 3a. The given Index is invalid.","lastModifiedDate":"2023-03-05"},{"lineNumber":591,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":592,"author":{"gitId":"jerrrren"},"content":"    * 3a1. SudoHR shows an error message.","lastModifiedDate":"2023-03-05"},{"lineNumber":593,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":594,"author":{"gitId":"jerrrren"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2023-03-05"},{"lineNumber":595,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":596,"author":{"gitId":"kennethk-1201"},"content":"**Use case: UC16 - Delete employee from event**","lastModifiedDate":"2023-03-05"},{"lineNumber":597,"author":{"gitId":"jerrrren"},"content":"**MSS:**","lastModifiedDate":"2023-03-05"},{"lineNumber":598,"author":{"gitId":"jerrrren"},"content":"1. User requests to __list events(UC6)__","lastModifiedDate":"2023-03-05"},{"lineNumber":599,"author":{"gitId":"jerrrren"},"content":"2. SudoHR shows all events and their details","lastModifiedDate":"2023-03-05"},{"lineNumber":600,"author":{"gitId":"jerrrren"},"content":"3. User requests to __list employees in a event(UC8)__","lastModifiedDate":"2023-03-05"},{"lineNumber":601,"author":{"gitId":"jerrrren"},"content":"4. SudoHR shows all employees added to an event and their details","lastModifiedDate":"2023-03-05"},{"lineNumber":602,"author":{"gitId":"jerrrren"},"content":"5. User requests to delete employee to event on SudoHR","lastModifiedDate":"2023-03-05"},{"lineNumber":603,"author":{"gitId":"jerrrren"},"content":"6. SudoHR delete employee from event.","lastModifiedDate":"2023-03-05"},{"lineNumber":604,"author":{"gitId":"jerrrren"},"content":"7. Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":605,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":606,"author":{"gitId":"jerrrren"},"content":"**Extensions**","lastModifiedDate":"2023-03-05"},{"lineNumber":607,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":608,"author":{"gitId":"jerrrren"},"content":"* 2a. The event list is empty.","lastModifiedDate":"2023-03-05"},{"lineNumber":609,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":610,"author":{"gitId":"jerrrren"},"content":"  Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":611,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":612,"author":{"gitId":"jerrrren"},"content":"* 4a. The employee list is empty.","lastModifiedDate":"2023-03-05"},{"lineNumber":613,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":614,"author":{"gitId":"jerrrren"},"content":"  Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":615,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":616,"author":{"gitId":"jerrrren"},"content":"* 5a. The given Employeeindex is invalid.","lastModifiedDate":"2023-03-05"},{"lineNumber":617,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":618,"author":{"gitId":"jerrrren"},"content":"    * 5a1. SudoHR shows an error message.","lastModifiedDate":"2023-03-05"},{"lineNumber":619,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":620,"author":{"gitId":"jerrrren"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2023-03-05"},{"lineNumber":621,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":622,"author":{"gitId":"jerrrren"},"content":"* 5b. The given Eventindex is invalid.","lastModifiedDate":"2023-03-05"},{"lineNumber":623,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":624,"author":{"gitId":"jerrrren"},"content":"    * 5b1. SudoHR shows an error message.","lastModifiedDate":"2023-03-05"},{"lineNumber":625,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":626,"author":{"gitId":"jerrrren"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2023-03-05"},{"lineNumber":627,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":628,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":629,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"kennethk-1201"},"content":"2. Should be able to hold up to 1000 employees without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-03-05"},{"lineNumber":635,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"kennethk-1201"},"content":"4. Comfortable working with CLI.","lastModifiedDate":"2023-03-06"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"kennethk-1201"},"content":"### Deleting an employee","lastModifiedDate":"2023-03-05"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"kennethk-1201"},"content":"1. Deleting an employee while all employees are being shown","lastModifiedDate":"2023-03-05"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"kennethk-1201"},"content":"   1. Prerequisites: List all employees using the `list` command. Multiple employees in the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":679,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":680,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":682,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"kennethk-1201"},"content":"      Expected: No employee is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-03-05"},{"lineNumber":684,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":690,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":696,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jerrrren":183,"kennethk-1201":179,"-":334}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"pkwangjoo"},"content":"   1. Run the `seedu.sudohr.Main` and try a few commands.","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"pkwangjoo":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"pkwangjoo"},"content":"   e.g. `seedu.sudohr.commons.StringUtilTest`","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"pkwangjoo"},"content":"   e.g. `seedu.sudohr.storage.StorageManagerTest`","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"pkwangjoo"},"content":"   e.g. `seedu.sudohr.logic.LogicManagerTest`","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"pkwangjoo":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"SudoHR is a **desktop app specially catered for HR professionals in managing manpower, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, SudoHR can get your management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"1. Download the latest `sudohr.jar`.","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your application.","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar sudohr.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"Shows a message explaining how to access the help page for SudoHR.","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"kennethk-1201"},"content":"Adds an employee to SudoHR.","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"kennethk-1201"},"content":"An employee can have any number of tags (including 0)","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"kennethk-1201"},"content":"Shows a list of all employees in SudoHR.","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"kennethk-1201"},"content":"### Editing an employee : `edit`","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"kennethk-1201"},"content":"Edits an existing employee in SudoHR.","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"kennethk-1201"},"content":"* Edits the employee at the specified `INDEX`. The index refers to the index number shown in the displayed employees list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"kennethk-1201"},"content":"* When editing tags, the existing tags of the employees will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"kennethk-1201"},"content":"* You can remove all the employee’s tags by typing `t/` without","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"kennethk-1201"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st employee to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"kennethk-1201"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd employee to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"kennethk-1201"},"content":"### Locating employees by name: `find`","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"kennethk-1201"},"content":"Finds employees whose names contain any of the given keywords.","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"kennethk-1201"},"content":"* Employees matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"kennethk-1201"},"content":"### Deleting an employee : `delete`","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"kennethk-1201"},"content":"Deletes the specified employee from SudoHR.","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"kennethk-1201"},"content":"* Deletes the employee at the specified `INDEX`.","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"kennethk-1201"},"content":"* The index refers to the index number shown in the displayed employee list.","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"kennethk-1201"},"content":"* `list` followed by `delete 2` deletes the 2nd employee in SudoHR.","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"kennethk-1201"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st employee in the results of the `find` command.","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"kennethk-1201"},"content":"### Adding a department: `jonathan`","lastModifiedDate":"2023-03-04"},{"lineNumber":114,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":115,"author":{"gitId":"kennethk-1201"},"content":"Adds a person to SudoHR.","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":117,"author":{"gitId":"kennethk-1201"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2023-03-04"},{"lineNumber":118,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":119,"author":{"gitId":"kennethk-1201"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-03-04"},{"lineNumber":120,"author":{"gitId":"kennethk-1201"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2023-03-04"},{"lineNumber":121,"author":{"gitId":"kennethk-1201"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":122,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":123,"author":{"gitId":"kennethk-1201"},"content":"Examples:","lastModifiedDate":"2023-03-04"},{"lineNumber":124,"author":{"gitId":"kennethk-1201"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"kennethk-1201"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2023-03-04"},{"lineNumber":126,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":127,"author":{"gitId":"kennethk-1201"},"content":"### Updating a department: `jonathan`","lastModifiedDate":"2023-03-04"},{"lineNumber":128,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":129,"author":{"gitId":"kennethk-1201"},"content":"Adds a person to SudoHR.","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":131,"author":{"gitId":"kennethk-1201"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2023-03-04"},{"lineNumber":132,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":133,"author":{"gitId":"kennethk-1201"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-03-04"},{"lineNumber":134,"author":{"gitId":"kennethk-1201"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2023-03-04"},{"lineNumber":135,"author":{"gitId":"kennethk-1201"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":136,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":137,"author":{"gitId":"kennethk-1201"},"content":"Examples:","lastModifiedDate":"2023-03-04"},{"lineNumber":138,"author":{"gitId":"kennethk-1201"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2023-03-04"},{"lineNumber":139,"author":{"gitId":"kennethk-1201"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2023-03-04"},{"lineNumber":140,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":141,"author":{"gitId":"kennethk-1201"},"content":"### Deleting a department: `jonathan`","lastModifiedDate":"2023-03-04"},{"lineNumber":142,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":143,"author":{"gitId":"kennethk-1201"},"content":"Adds a person to SudoHR.","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":145,"author":{"gitId":"kennethk-1201"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2023-03-04"},{"lineNumber":146,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":147,"author":{"gitId":"kennethk-1201"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-03-04"},{"lineNumber":148,"author":{"gitId":"kennethk-1201"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2023-03-04"},{"lineNumber":149,"author":{"gitId":"kennethk-1201"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":150,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":151,"author":{"gitId":"kennethk-1201"},"content":"Examples:","lastModifiedDate":"2023-03-04"},{"lineNumber":152,"author":{"gitId":"kennethk-1201"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2023-03-04"},{"lineNumber":153,"author":{"gitId":"kennethk-1201"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2023-03-04"},{"lineNumber":154,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":155,"author":{"gitId":"kennethk-1201"},"content":"### Listing all departments: `jonathan`","lastModifiedDate":"2023-03-04"},{"lineNumber":156,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":157,"author":{"gitId":"kennethk-1201"},"content":"Adds a person to the SudoHR.","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":159,"author":{"gitId":"kennethk-1201"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2023-03-04"},{"lineNumber":160,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":161,"author":{"gitId":"kennethk-1201"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-03-04"},{"lineNumber":162,"author":{"gitId":"kennethk-1201"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2023-03-04"},{"lineNumber":163,"author":{"gitId":"kennethk-1201"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":164,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":165,"author":{"gitId":"kennethk-1201"},"content":"Examples:","lastModifiedDate":"2023-03-04"},{"lineNumber":166,"author":{"gitId":"kennethk-1201"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2023-03-04"},{"lineNumber":167,"author":{"gitId":"kennethk-1201"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2023-03-04"},{"lineNumber":168,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":169,"author":{"gitId":"kennethk-1201"},"content":"### Add employee to a department: `jonathan`","lastModifiedDate":"2023-03-04"},{"lineNumber":170,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":171,"author":{"gitId":"kennethk-1201"},"content":"Adds a person to the SudoHR.","lastModifiedDate":"2023-03-06"},{"lineNumber":172,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":173,"author":{"gitId":"kennethk-1201"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2023-03-04"},{"lineNumber":174,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":175,"author":{"gitId":"kennethk-1201"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-03-04"},{"lineNumber":176,"author":{"gitId":"kennethk-1201"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2023-03-04"},{"lineNumber":177,"author":{"gitId":"kennethk-1201"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":178,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":179,"author":{"gitId":"kennethk-1201"},"content":"Examples:","lastModifiedDate":"2023-03-04"},{"lineNumber":180,"author":{"gitId":"kennethk-1201"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2023-03-04"},{"lineNumber":181,"author":{"gitId":"kennethk-1201"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2023-03-04"},{"lineNumber":182,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":183,"author":{"gitId":"kennethk-1201"},"content":"### Remove employee from a department: `jonathan`","lastModifiedDate":"2023-03-04"},{"lineNumber":184,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":185,"author":{"gitId":"kennethk-1201"},"content":"Adds a person to the SudoHR.","lastModifiedDate":"2023-03-06"},{"lineNumber":186,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":187,"author":{"gitId":"kennethk-1201"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2023-03-04"},{"lineNumber":188,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":189,"author":{"gitId":"kennethk-1201"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-03-04"},{"lineNumber":190,"author":{"gitId":"kennethk-1201"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2023-03-04"},{"lineNumber":191,"author":{"gitId":"kennethk-1201"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":192,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":193,"author":{"gitId":"kennethk-1201"},"content":"Examples:","lastModifiedDate":"2023-03-04"},{"lineNumber":194,"author":{"gitId":"kennethk-1201"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2023-03-04"},{"lineNumber":195,"author":{"gitId":"kennethk-1201"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2023-03-04"},{"lineNumber":196,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":197,"author":{"gitId":"kennethk-1201"},"content":"### List all employees in a department: `jonathan`","lastModifiedDate":"2023-03-04"},{"lineNumber":198,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":199,"author":{"gitId":"kennethk-1201"},"content":"Adds a person to the SudoHR.","lastModifiedDate":"2023-03-06"},{"lineNumber":200,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":201,"author":{"gitId":"kennethk-1201"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2023-03-04"},{"lineNumber":202,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":203,"author":{"gitId":"kennethk-1201"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-03-04"},{"lineNumber":204,"author":{"gitId":"kennethk-1201"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2023-03-04"},{"lineNumber":205,"author":{"gitId":"kennethk-1201"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":206,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":207,"author":{"gitId":"kennethk-1201"},"content":"Examples:","lastModifiedDate":"2023-03-04"},{"lineNumber":208,"author":{"gitId":"kennethk-1201"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2023-03-04"},{"lineNumber":209,"author":{"gitId":"kennethk-1201"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2023-03-04"},{"lineNumber":210,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":211,"author":{"gitId":"kennethk-1201"},"content":"### Adding a project: `kenneth`","lastModifiedDate":"2023-03-04"},{"lineNumber":212,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":213,"author":{"gitId":"kennethk-1201"},"content":"Adds a project to the system","lastModifiedDate":"2023-03-05"},{"lineNumber":214,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":215,"author":{"gitId":"kennethk-1201"},"content":"Format: `ap n/NAME`","lastModifiedDate":"2023-03-05"},{"lineNumber":216,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":217,"author":{"gitId":"kennethk-1201"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-03-04"},{"lineNumber":218,"author":{"gitId":"kennethk-1201"},"content":"A project can have any number of employees (including 0)","lastModifiedDate":"2023-03-05"},{"lineNumber":219,"author":{"gitId":"kennethk-1201"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":220,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":221,"author":{"gitId":"kennethk-1201"},"content":"Examples:","lastModifiedDate":"2023-03-04"},{"lineNumber":222,"author":{"gitId":"kennethk-1201"},"content":"* `ap n/Human Resources`","lastModifiedDate":"2023-03-05"},{"lineNumber":223,"author":{"gitId":"kennethk-1201"},"content":"* `ap n/Development`","lastModifiedDate":"2023-03-05"},{"lineNumber":224,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":225,"author":{"gitId":"kennethk-1201"},"content":"### Updating a project: `[Coming soon]`","lastModifiedDate":"2023-03-05"},{"lineNumber":226,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":227,"author":{"gitId":"kennethk-1201"},"content":"### Deleting a project: `[Coming soon]`","lastModifiedDate":"2023-03-05"},{"lineNumber":228,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":229,"author":{"gitId":"kennethk-1201"},"content":"### Listing all projects: `[Coming soon]`","lastModifiedDate":"2023-03-05"},{"lineNumber":230,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":231,"author":{"gitId":"kennethk-1201"},"content":"### Add user to a project: `[Coming soon]`","lastModifiedDate":"2023-03-05"},{"lineNumber":232,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":233,"author":{"gitId":"kennethk-1201"},"content":"### Remove employee from a project: `[Coming soon]`","lastModifiedDate":"2023-03-05"},{"lineNumber":234,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":235,"author":{"gitId":"kennethk-1201"},"content":"### List all employees in a project: `[Coming soon]`","lastModifiedDate":"2023-03-05"},{"lineNumber":236,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":237,"author":{"gitId":"kennethk-1201"},"content":"### Adding a leave: `andre`","lastModifiedDate":"2023-03-04"},{"lineNumber":238,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":239,"author":{"gitId":"4ndrelim"},"content":"Tracks a person\u0027s leave.","lastModifiedDate":"2023-03-05"},{"lineNumber":240,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":241,"author":{"gitId":"4ndrelim"},"content":"Format: `add_leave n/NAME d/DATE`","lastModifiedDate":"2023-03-05"},{"lineNumber":242,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":243,"author":{"gitId":"kennethk-1201"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-03-04"},{"lineNumber":244,"author":{"gitId":"kennethk-1201"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2023-03-04"},{"lineNumber":245,"author":{"gitId":"kennethk-1201"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":246,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":247,"author":{"gitId":"kennethk-1201"},"content":"Examples:","lastModifiedDate":"2023-03-04"},{"lineNumber":248,"author":{"gitId":"4ndrelim"},"content":"* `add_leave n/John Doe d/2023-03-05`","lastModifiedDate":"2023-03-05"},{"lineNumber":249,"author":{"gitId":"4ndrelim"},"content":"* `add_leave n/Betsy Crowe d/2023-03-05~2023-03-10`","lastModifiedDate":"2023-03-05"},{"lineNumber":250,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":251,"author":{"gitId":"kennethk-1201"},"content":"### Updating a leave: `andre`","lastModifiedDate":"2023-03-04"},{"lineNumber":252,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":253,"author":{"gitId":"4ndrelim"},"content":"TBC. Seemingly only relevant if we introduce half-day leaves.","lastModifiedDate":"2023-03-05"},{"lineNumber":254,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":255,"author":{"gitId":"4ndrelim"},"content":"Format: `TBC`","lastModifiedDate":"2023-03-05"},{"lineNumber":256,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":257,"author":{"gitId":"kennethk-1201"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-03-04"},{"lineNumber":258,"author":{"gitId":"kennethk-1201"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2023-03-04"},{"lineNumber":259,"author":{"gitId":"kennethk-1201"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":260,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":261,"author":{"gitId":"kennethk-1201"},"content":"Examples:","lastModifiedDate":"2023-03-04"},{"lineNumber":262,"author":{"gitId":"4ndrelim"},"content":"* `TBC`","lastModifiedDate":"2023-03-05"},{"lineNumber":263,"author":{"gitId":"4ndrelim"},"content":"* `TBC`","lastModifiedDate":"2023-03-05"},{"lineNumber":264,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":265,"author":{"gitId":"kennethk-1201"},"content":"### Deleting a leave: `andre`","lastModifiedDate":"2023-03-04"},{"lineNumber":266,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":267,"author":{"gitId":"4ndrelim"},"content":"Removes leave dates that are now cancelled.","lastModifiedDate":"2023-03-05"},{"lineNumber":268,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":269,"author":{"gitId":"4ndrelim"},"content":"Format: `del_leave n/NAME d/DATE`","lastModifiedDate":"2023-03-05"},{"lineNumber":270,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":271,"author":{"gitId":"kennethk-1201"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-03-04"},{"lineNumber":272,"author":{"gitId":"kennethk-1201"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2023-03-04"},{"lineNumber":273,"author":{"gitId":"kennethk-1201"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":274,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":275,"author":{"gitId":"kennethk-1201"},"content":"Examples:","lastModifiedDate":"2023-03-04"},{"lineNumber":276,"author":{"gitId":"4ndrelim"},"content":"* `del_leave n/John Doe d/2023-03-05`","lastModifiedDate":"2023-03-05"},{"lineNumber":277,"author":{"gitId":"4ndrelim"},"content":"* `del_leave n/Betsy Crowe d/2023-03-06~2023-03-08`","lastModifiedDate":"2023-03-05"},{"lineNumber":278,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":279,"author":{"gitId":"4ndrelim"},"content":"### Listing all leaves for a person: `andre`","lastModifiedDate":"2023-03-05"},{"lineNumber":280,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":281,"author":{"gitId":"4ndrelim"},"content":"Lists all the leave date(s) of an employee.","lastModifiedDate":"2023-03-05"},{"lineNumber":282,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":283,"author":{"gitId":"4ndrelim"},"content":"Format: `ls_leave n/NAME`","lastModifiedDate":"2023-03-05"},{"lineNumber":284,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":285,"author":{"gitId":"kennethk-1201"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-03-04"},{"lineNumber":286,"author":{"gitId":"kennethk-1201"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2023-03-04"},{"lineNumber":287,"author":{"gitId":"kennethk-1201"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":288,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":289,"author":{"gitId":"kennethk-1201"},"content":"Examples:","lastModifiedDate":"2023-03-04"},{"lineNumber":290,"author":{"gitId":"4ndrelim"},"content":"* `ls_leave n/John Doe `","lastModifiedDate":"2023-03-05"},{"lineNumber":291,"author":{"gitId":"4ndrelim"},"content":"* `ls_leave n/Betsy Crowe`","lastModifiedDate":"2023-03-05"},{"lineNumber":292,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":293,"author":{"gitId":"4ndrelim"},"content":"### Listing all users on leave for a given date: `andre`","lastModifiedDate":"2023-03-05"},{"lineNumber":294,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":295,"author":{"gitId":"4ndrelim"},"content":"Lists all personnel that are on leave for a given date(s).","lastModifiedDate":"2023-03-05"},{"lineNumber":296,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":297,"author":{"gitId":"4ndrelim"},"content":"Format: `ls_on_leave d/DATE`","lastModifiedDate":"2023-03-05"},{"lineNumber":298,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":299,"author":{"gitId":"kennethk-1201"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-03-04"},{"lineNumber":300,"author":{"gitId":"kennethk-1201"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2023-03-04"},{"lineNumber":301,"author":{"gitId":"kennethk-1201"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":302,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":303,"author":{"gitId":"kennethk-1201"},"content":"Examples:","lastModifiedDate":"2023-03-04"},{"lineNumber":304,"author":{"gitId":"4ndrelim"},"content":"* `ls_on_leave d/2023-03-05`","lastModifiedDate":"2023-03-05"},{"lineNumber":305,"author":{"gitId":"4ndrelim"},"content":"* `ls_on_leave d/2023-03-05~2023-05-7`","lastModifiedDate":"2023-03-05"},{"lineNumber":306,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":307,"author":{"gitId":"pkwangjoo"},"content":"### Adding a performance review statement: `Kwangjoo`","lastModifiedDate":"2023-03-05"},{"lineNumber":308,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":309,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":310,"author":{"gitId":"pkwangjoo"},"content":"Adds a performance review statement for a specified employee. Allows option to specify the subsequent performance review date. If unspecified, the next performance review date is set to default interval.","lastModifiedDate":"2023-03-05"},{"lineNumber":311,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":312,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":313,"author":{"gitId":"pkwangjoo"},"content":"Format: `addPR INDEX pr/REVIEW_STATEMENT d/DATE [nextPRd/DATE]​`","lastModifiedDate":"2023-03-05"},{"lineNumber":314,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":315,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":316,"author":{"gitId":"kennethk-1201"},"content":"Examples:","lastModifiedDate":"2023-03-04"},{"lineNumber":317,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":318,"author":{"gitId":"pkwangjoo"},"content":"* `addPR 1 pr/Met Expectations this month, expected to be promoted at the end of this year. d/2023-03-23`","lastModifiedDate":"2023-03-05"},{"lineNumber":319,"author":{"gitId":"pkwangjoo"},"content":"* `addPR 2 pr/Below expectations. To be sent for counselling and training regarding low performance. Early performance review next week d/2023-03-23 nextPRd/2023-03-20`","lastModifiedDate":"2023-03-05"},{"lineNumber":320,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":321,"author":{"gitId":"pkwangjoo"},"content":"### Listing all performance reviews done on employee: `Kwangjoo`","lastModifiedDate":"2023-03-05"},{"lineNumber":322,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":323,"author":{"gitId":"pkwangjoo"},"content":"Lists all the performance review of the specified employee.","lastModifiedDate":"2023-03-05"},{"lineNumber":324,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":325,"author":{"gitId":"pkwangjoo"},"content":"Format: `listPR INDEX`","lastModifiedDate":"2023-03-05"},{"lineNumber":326,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":327,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":328,"author":{"gitId":"kennethk-1201"},"content":"Examples:","lastModifiedDate":"2023-03-04"},{"lineNumber":329,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":330,"author":{"gitId":"pkwangjoo"},"content":"* `listPR 1`","lastModifiedDate":"2023-03-05"},{"lineNumber":331,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":332,"author":{"gitId":"pkwangjoo"},"content":"### Deleting a performance review statement: `Kwangjoo`","lastModifiedDate":"2023-03-05"},{"lineNumber":333,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":334,"author":{"gitId":"pkwangjoo"},"content":"Deletes erroneous performance reviews possibly due to administrative errors. There can only be at most one performance review per person in a given day.","lastModifiedDate":"2023-03-05"},{"lineNumber":335,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":336,"author":{"gitId":"pkwangjoo"},"content":"\u003c!-- It could be better to include a unique employee id so that the user wont mess up and delete a wrong performance review.  --\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":337,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":338,"author":{"gitId":"pkwangjoo"},"content":"Format: `deletePR INDEX d/DATE`","lastModifiedDate":"2023-03-05"},{"lineNumber":339,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":340,"author":{"gitId":"kennethk-1201"},"content":"Examples:","lastModifiedDate":"2023-03-04"},{"lineNumber":341,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":342,"author":{"gitId":"pkwangjoo"},"content":"* `deletePR 3 d/2023-03-23`","lastModifiedDate":"2023-03-05"},{"lineNumber":343,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":344,"author":{"gitId":"pkwangjoo"},"content":"### Listing all employees due for a performance review: `Kwangjoo`","lastModifiedDate":"2023-03-05"},{"lineNumber":345,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":346,"author":{"gitId":"pkwangjoo"},"content":"Lists all employees who have a performance review due within the next specified number of days. If the DAYS in unspecified, set to default number of days.","lastModifiedDate":"2023-03-05"},{"lineNumber":347,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":348,"author":{"gitId":"pkwangjoo"},"content":"A date can be specified and SudoHR shows the employees who need to have their performance reviewed by the specified date.","lastModifiedDate":"2023-03-05"},{"lineNumber":349,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":350,"author":{"gitId":"pkwangjoo"},"content":"If both DAYS and DATE is specified, DATE takes precedence. And If neither is specified, SudoHR displays the performance review due within the default number of days.","lastModifiedDate":"2023-03-05"},{"lineNumber":351,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":352,"author":{"gitId":"pkwangjoo"},"content":"Format: `listPRdue [within/DAYS] [by/DATE]​`","lastModifiedDate":"2023-03-05"},{"lineNumber":353,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":354,"author":{"gitId":"pkwangjoo"},"content":"Examples:","lastModifiedDate":"2023-03-05"},{"lineNumber":355,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":356,"author":{"gitId":"pkwangjoo"},"content":"* `listPRdue within/5`","lastModifiedDate":"2023-03-05"},{"lineNumber":357,"author":{"gitId":"pkwangjoo"},"content":"* `ListPRdue by/2023-04-05`","lastModifiedDate":"2023-03-05"},{"lineNumber":358,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":359,"author":{"gitId":"jerrrren"},"content":"### Adding an event: `addEvent`","lastModifiedDate":"2023-03-05"},{"lineNumber":360,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":361,"author":{"gitId":"jerrrren"},"content":"Adds an event to the HR management System.","lastModifiedDate":"2023-03-05"},{"lineNumber":362,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":363,"author":{"gitId":"jerrrren"},"content":"Format: `addEvent t/title d/description s/date ​`","lastModifiedDate":"2023-03-05"},{"lineNumber":364,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":365,"author":{"gitId":"kennethk-1201"},"content":"Examples:","lastModifiedDate":"2023-03-04"},{"lineNumber":366,"author":{"gitId":"jerrrren"},"content":"* `addEvent t/Company Dinner d/Company dinner at Raffles Hotel d/2014-02-12`","lastModifiedDate":"2023-03-05"},{"lineNumber":367,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":368,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":369,"author":{"gitId":"jerrrren"},"content":"### List all employees attending an event: `listEvent`","lastModifiedDate":"2023-03-05"},{"lineNumber":370,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":371,"author":{"gitId":"jerrrren"},"content":"Lists the employees added to an event in the HR Management","lastModifiedDate":"2023-03-05"},{"lineNumber":372,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":373,"author":{"gitId":"jerrrren"},"content":"Format: `listEvent`","lastModifiedDate":"2023-03-05"},{"lineNumber":374,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":375,"author":{"gitId":"jerrrren"},"content":"Examples:","lastModifiedDate":"2023-03-05"},{"lineNumber":376,"author":{"gitId":"jerrrren"},"content":"* `listEvent`","lastModifiedDate":"2023-03-05"},{"lineNumber":377,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":378,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":379,"author":{"gitId":"jerrrren"},"content":"### Updating an event: `updateEvent`","lastModifiedDate":"2023-03-05"},{"lineNumber":380,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":381,"author":{"gitId":"jerrrren"},"content":"Updates an event to the HR Management System.","lastModifiedDate":"2023-03-05"},{"lineNumber":382,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":383,"author":{"gitId":"jerrrren"},"content":"Format: `updateEvent INDEX t/title d/description s/date ​`","lastModifiedDate":"2023-03-05"},{"lineNumber":384,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":385,"author":{"gitId":"jerrrren"},"content":"* Edits the event at the specified `INDEX`. The index refers to the index number shown in the displayed event list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-05"},{"lineNumber":386,"author":{"gitId":"jerrrren"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2023-03-05"},{"lineNumber":387,"author":{"gitId":"jerrrren"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2023-03-05"},{"lineNumber":388,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":389,"author":{"gitId":"kennethk-1201"},"content":"Examples:","lastModifiedDate":"2023-03-04"},{"lineNumber":390,"author":{"gitId":"jerrrren"},"content":"* `updateEvent 2 t/Company Dinner d/Company dinner at Raffles Hotel d/2014-02-12`","lastModifiedDate":"2023-03-05"},{"lineNumber":391,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":392,"author":{"gitId":"jerrrren"},"content":"### Deleting an event: `deleteEvent`","lastModifiedDate":"2023-03-05"},{"lineNumber":393,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":394,"author":{"gitId":"jerrrren"},"content":"Deletes an event from the HR Management System.","lastModifiedDate":"2023-03-05"},{"lineNumber":395,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":396,"author":{"gitId":"jerrrren"},"content":"Format: `deleteEvent INDEX`","lastModifiedDate":"2023-03-05"},{"lineNumber":397,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":398,"author":{"gitId":"jerrrren"},"content":"* Edits the event at the specified `INDEX`. The index refers to the index number shown in the displayed event list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-05"},{"lineNumber":399,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":400,"author":{"gitId":"kennethk-1201"},"content":"Examples:","lastModifiedDate":"2023-03-04"},{"lineNumber":401,"author":{"gitId":"jerrrren"},"content":"* `deleteEvent 1`","lastModifiedDate":"2023-03-05"},{"lineNumber":402,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":403,"author":{"gitId":"jerrrren"},"content":"### Adding an employee to an event: `addEmployeeEvent`","lastModifiedDate":"2023-03-05"},{"lineNumber":404,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":405,"author":{"gitId":"jerrrren"},"content":"Adds a person to the event in the HR Management System.","lastModifiedDate":"2023-03-05"},{"lineNumber":406,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":407,"author":{"gitId":"jerrrren"},"content":"Format: `addEmployeeEvent EVENTINDEX EMPLOYEEINDEX`","lastModifiedDate":"2023-03-05"},{"lineNumber":408,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":409,"author":{"gitId":"jerrrren"},"content":"* Add the employee at the specified `EMPLOYEEINDEX` to the event at the specified `EVENTINDEX`. The `EVENTINDEX` refers to the index number shown in the displayed event list. The `EMPLOYEEINDEX` refers to the index number shown in the displayed employee list.  Both indexes **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-05"},{"lineNumber":410,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":411,"author":{"gitId":"kennethk-1201"},"content":"Examples:","lastModifiedDate":"2023-03-04"},{"lineNumber":412,"author":{"gitId":"jerrrren"},"content":"* `addEmployeeEvent 1 1`","lastModifiedDate":"2023-03-05"},{"lineNumber":413,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":414,"author":{"gitId":"jerrrren"},"content":"### List all employees attending an event: `listEventEmployee`","lastModifiedDate":"2023-03-05"},{"lineNumber":415,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":416,"author":{"gitId":"jerrrren"},"content":"Lists the employees added to an event in the HR Management","lastModifiedDate":"2023-03-05"},{"lineNumber":417,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":418,"author":{"gitId":"jerrrren"},"content":"Format: `listEventEmployee INDEX​`","lastModifiedDate":"2023-03-05"},{"lineNumber":419,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":420,"author":{"gitId":"jerrrren"},"content":"* List the employees attending the event at the specified `INDEX`. The index refers to the index number shown in the displayed event list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-05"},{"lineNumber":421,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":422,"author":{"gitId":"kennethk-1201"},"content":"Examples:","lastModifiedDate":"2023-03-04"},{"lineNumber":423,"author":{"gitId":"jerrrren"},"content":"* `listEventEmployee 1`","lastModifiedDate":"2023-03-05"},{"lineNumber":424,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":425,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":426,"author":{"gitId":"jerrrren"},"content":"### Remove employee from an event: `deleteEmployeeEvent`","lastModifiedDate":"2023-03-05"},{"lineNumber":427,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":428,"author":{"gitId":"jerrrren"},"content":"Remove a person from a event in the HR Management System.","lastModifiedDate":"2023-03-05"},{"lineNumber":429,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":430,"author":{"gitId":"jerrrren"},"content":"Format: `deleteEmployeeEvent EVENTINDEX EMPLOYEEINDEX`","lastModifiedDate":"2023-03-05"},{"lineNumber":431,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":432,"author":{"gitId":"jerrrren"},"content":"* Remove the employee at the specified `EMPLOYEEINDEX` from the event at the specified `EVENTINDEX`. The `EVENTINDEX` refers to the index number shown in the displayed event list. The `EMPLOYEEINDEX` refers to the index number shown in the **displayed list of employees added to the event**.  Both indexes **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-05"},{"lineNumber":433,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":434,"author":{"gitId":"kennethk-1201"},"content":"Examples:","lastModifiedDate":"2023-03-04"},{"lineNumber":435,"author":{"gitId":"jerrrren"},"content":"* `deleteEmployeeEvent 1 1`","lastModifiedDate":"2023-03-05"},{"lineNumber":436,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":438,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"kennethk-1201"},"content":"Clears all entries from SudoHR.","lastModifiedDate":"2023-03-05"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"kennethk-1201"},"content":"SudoHR data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-03-06"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":456,"author":{"gitId":"kennethk-1201"},"content":"SudoHR data are saved as a JSON file `[JAR file location]/data/sudohr.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-03-06"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":458,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":459,"author":{"gitId":"kennethk-1201"},"content":"If your changes to the data file makes its format invalid, SudoHR will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-03-06"},{"lineNumber":460,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":462,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"kennethk-1201"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous SudoHR home folder.","lastModifiedDate":"2023-03-06"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jerrrren":44,"pkwangjoo":38,"kennethk-1201":249,"4ndrelim":22,"-":126}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"kennethk-1201"},"content":"    content: \"SudoHR\";","lastModifiedDate":"2023-03-04"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"kennethk-1201":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"pkwangjoo"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(sudoHr)","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"pkwangjoo":1,"-":37}},{"path":"docs/team/4ndrelim.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"layout: page","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"title: Andre\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"### Project: SudoHR","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"SudoHR is a desktop app specially catered for HR professionals in managing manpower,","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"optimized for use via a Command Line Interface (CLI) while still","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"If you can type fast, SudoHR can get your","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"* **New Feature**: Apply for different types of leaves.","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"  * What it does: TBA","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"  * Justification: TBA","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"  * Highlights: TBA","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"  * Credits: TBA","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"* **New Feature**: TBA","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"* **Project management**:","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"  * Managed releases `...` (X releases) on GitHub","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"  * Sample - Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"  * User Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"    * Sample - Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"4ndrelim"},"content":"* **Community**:","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"  * Sample - PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"4ndrelim"},"content":"  * Sample - Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"4ndrelim"},"content":"  * Sample - Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"  * Sample - Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"* **Tools**:","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"4ndrelim"},"content":"  * TBA","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"4ndrelim":43}},{"path":"docs/team/jerrrren.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jerrrren"},"content":"---","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"jerrrren"},"content":"layout: page","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"jerrrren"},"content":"title: Jer En\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"jerrrren"},"content":"---","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"jerrrren"},"content":"### Project: SudoHR","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"jerrrren"},"content":"SudoHR is a desktop HR management application that aims to consolidate employee information to help HR personnel manage employee information more quickly as compared to doing it manually.","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"jerrrren"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"jerrrren"},"content":"* **Code contributed:**","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"jerrrren"},"content":"* **Enhancements implemented:**","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"jerrrren"},"content":"* **Contributions to the UG:**","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"jerrrren"},"content":"* **Contributions to the DG:**","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"jerrrren"},"content":"* **Contributions to team-based tasks**","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"jerrrren"},"content":"* **Review/mentoring contributions:**","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"jerrrren"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"jerrrren"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"jerrrren":26}},{"path":"docs/team/jweeyh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jweeyh"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"jweeyh"},"content":"layout: page","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"jweeyh"},"content":"title: Johnathan\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"jweeyh"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"jweeyh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"jweeyh"},"content":"### Project: SudoHR","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"jweeyh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"jweeyh"},"content":"SudoHR is a desktop app specially catered for HR professionals in managing manpower,","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"jweeyh"},"content":"optimized for use via a Command Line Interface (CLI) while still","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"jweeyh"},"content":"having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"jweeyh"},"content":"If you can type fast, SudoHR can get your","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"jweeyh"},"content":"management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"jweeyh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"jweeyh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"jweeyh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"jweeyh"},"content":"* **New Feature**: Apply for different types of leaves.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"jweeyh"},"content":"    * What it does: TBA","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"jweeyh"},"content":"    * Justification: TBA","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"jweeyh"},"content":"    * Highlights: TBA","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"jweeyh"},"content":"    * Credits: TBA","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"jweeyh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"jweeyh"},"content":"* **New Feature**: TBA","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"jweeyh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"jweeyh"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"jweeyh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"jweeyh"},"content":"* **Project management**:","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"jweeyh"},"content":"    * Managed releases `...` (X releases) on GitHub","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"jweeyh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"jweeyh"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"jweeyh"},"content":"    * Sample - Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"jweeyh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"jweeyh"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"jweeyh"},"content":"    * User Guide:","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"jweeyh"},"content":"        * Sample - Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"jweeyh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"jweeyh"},"content":"* **Community**:","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"jweeyh"},"content":"    * Sample - PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"jweeyh"},"content":"    * Sample - Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"jweeyh"},"content":"    * Sample - Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"jweeyh"},"content":"    * Sample - Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"jweeyh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"jweeyh"},"content":"* **Tools**:","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"jweeyh"},"content":"    * TBA","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"jweeyh":43}},{"path":"docs/team/kennethk-1201.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"title: Kenneth Kiang\u0027s Project Portfolio","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"### Project: SudoHR","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"SudoHR is a desktop application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"* **New Feature**: CRUD operations for Project class","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"* **New Feature**: Adding/Removing employees for Project class","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"* **Code contributed**: to be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"* **Project management**: to be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"* **Enhancements to existing features**: to be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"* **Documentation**: to be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"* **Community**: to be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"* **Tools**: to be added soon","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"kennethk-1201":11,"-":14}},{"path":"docs/team/pkwangjoo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"pkwangjoo"},"content":"layout: page","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"pkwangjoo"},"content":"title: Park Kwangjoo\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"pkwangjoo"},"content":"### Project: SudoHR","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"SudoHR is a desktop app specially catered for HR professionals in managing manpower,","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"optimized for use via a Command Line Interface (CLI) while still","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"If you can type fast, SudoHR can get your","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"pkwangjoo"},"content":"management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"pkwangjoo"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"pkwangjoo"},"content":"- **New Feature**: Add performance review for employees.","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"pkwangjoo"},"content":"  - What it does: TBA","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"pkwangjoo"},"content":"  - Justification: TBA","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"pkwangjoo"},"content":"  - Highlights: TBA","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"pkwangjoo"},"content":"  - Credits: TBA","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"pkwangjoo"},"content":"- **New Feature**: List the employees due for performance review.","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"pkwangjoo"},"content":"- **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"pkwangjoo"},"content":"- **Project management**:","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"pkwangjoo"},"content":"  - Managed releases `...` (X releases) on GitHub","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"pkwangjoo"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"pkwangjoo"},"content":"  - Sample - Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"pkwangjoo"},"content":"- **Documentation**:","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"pkwangjoo"},"content":"  - User Guide:","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"pkwangjoo"},"content":"    - Sample - Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"pkwangjoo"},"content":"- **Community**:","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"pkwangjoo"},"content":"  - Sample - PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"pkwangjoo"},"content":"  - Sample - Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"pkwangjoo"},"content":"  - Sample - Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"pkwangjoo"},"content":"  - Sample - Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"pkwangjoo"},"content":"- **Tools**:","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"pkwangjoo"},"content":"  - TBA","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"pkwangjoo":48}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"pkwangjoo"},"content":"Create a `RemarkCommandParser` class in the `seedu.sudohr.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"pkwangjoo"},"content":"Create a new `Remark` in `seedu.sudohr.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-03-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"pkwangjoo"},"content":"Simply add the following to [`seedu.sudohr.ui.EmployeeCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-03-13"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"pkwangjoo":6,"-":395}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"pkwangjoo"},"content":"The `address` field in `Person` is actually an instance of the `seedu.sudohr.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"pkwangjoo":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"pkwangjoo"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.sudohr.logic.Logic`.","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"pkwangjoo"},"content":"A quick look at the `seedu.sudohr.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"pkwangjoo":2,"-":299}},{"path":"src/main/java/seedu/sudohr/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.LogsCenter;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.util.FileUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"pkwangjoo":3,"-":61}},{"path":"src/main/java/seedu/sudohr/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"pkwangjoo":1,"-":24}},{"path":"src/main/java/seedu/sudohr/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.Config;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.LogsCenter;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.Version;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.util.ConfigUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.util.StringUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.Logic;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.LogicManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.Model;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.ModelManager;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.ReadOnlySudoHr;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.SudoHr;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.UserPrefs;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.storage.JsonSudoHrStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.storage.Storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.storage.StorageManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.storage.SudoHrStorage;","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.storage.UserPrefsStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.ui.Ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.ui.UiManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"pkwangjoo"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing SudoHr ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"pkwangjoo"},"content":"        SudoHrStorage sudoHrStorage \u003d new JsonSudoHrStorage(userPrefs.getSudoHrFilePath());","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"pkwangjoo"},"content":"        storage \u003d new StorageManager(sudoHrStorage, userPrefsStorage);","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"pkwangjoo"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s sudohr book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"pkwangjoo"},"content":"     * The data from the sample sudohr book will be used instead if {@code storage}\u0027s sudohr book is not found,","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"pkwangjoo"},"content":"     * or an empty sudohr book will be used instead if errors occur when reading {@code storage}\u0027s sudohr book.","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"pkwangjoo"},"content":"        Optional\u003cReadOnlySudoHr\u003e sudoHrOptional;","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"pkwangjoo"},"content":"        ReadOnlySudoHr initialData;","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"pkwangjoo"},"content":"            sudoHrOptional \u003d storage.readSudoHr();","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"pkwangjoo"},"content":"            if (!sudoHrOptional.isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"pkwangjoo"},"content":"                logger.info(\"Data file not found. Will be starting with a sample SudoHr\");","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"pkwangjoo"},"content":"            initialData \u003d sudoHrOptional.orElseGet(SampleDataUtil::getSampleSudoHr);","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"pkwangjoo"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty SudoHr\");","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"pkwangjoo"},"content":"            initialData \u003d new SudoHr();","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"pkwangjoo"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty SudoHr\");","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"pkwangjoo"},"content":"            initialData \u003d new SudoHr();","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"pkwangjoo"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty SudoHr\");","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"pkwangjoo"},"content":"        logger.info(\"Starting SudoHr \" + MainApp.VERSION);","lastModifiedDate":"2023-03-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"pkwangjoo":42,"-":141}},{"path":"src/main/java/seedu/sudohr/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.commons.core;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"pkwangjoo":1,"-":62}},{"path":"src/main/java/seedu/sudohr/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.commons.core;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"pkwangjoo":1,"-":78}},{"path":"src/main/java/seedu/sudohr/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.commons.core;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"pkwangjoo":1,"-":111}},{"path":"src/main/java/seedu/sudohr/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.commons.core;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"    public static final String MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX \u003d \"The employee index provided is invalid\";","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"pkwangjoo"},"content":"    public static final String MESSAGE_EMPLOYEES_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"    public static final String MESSAGE_DEPARTMENT_NOT_FOUND \u003d \"The department to edit does not exist in SudoHR.\";","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pkwangjoo":3,"kennethk-1201":2,"-":10}},{"path":"src/main/java/seedu/sudohr/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.commons.core;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"pkwangjoo":1,"-":115}},{"path":"src/main/java/seedu/sudohr/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.commons.core.index;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"pkwangjoo":1,"-":53}},{"path":"src/main/java/seedu/sudohr/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.commons.exceptions;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"pkwangjoo":1,"-":10}},{"path":"src/main/java/seedu/sudohr/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.commons.exceptions;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pkwangjoo":1,"-":20}},{"path":"src/main/java/seedu/sudohr/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.commons.util;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.MainApp;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"pkwangjoo":2,"-":40}},{"path":"src/main/java/seedu/sudohr/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.commons.util;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pkwangjoo":1,"-":34}},{"path":"src/main/java/seedu/sudohr/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.commons.util;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.Config;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"pkwangjoo":3,"-":20}},{"path":"src/main/java/seedu/sudohr/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.commons.util;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"pkwangjoo":1,"-":82}},{"path":"src/main/java/seedu/sudohr/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.commons.util;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.LogsCenter;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"pkwangjoo":3,"-":140}},{"path":"src/main/java/seedu/sudohr/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.commons.util;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"pkwangjoo":2,"-":66}},{"path":"src/main/java/seedu/sudohr/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.GuiSettings;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.CommandResult;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.ReadOnlySudoHr;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"pkwangjoo"},"content":"     * Returns the SudoHr.","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"pkwangjoo"},"content":"     * @see seedu.sudohr.model.Model#getSudoHr()","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"pkwangjoo"},"content":"    ReadOnlySudoHr getSudoHr();","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"pkwangjoo"},"content":"    /** Returns an unmodifiable view of the filtered list of employees. */","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"pkwangjoo"},"content":"    ObservableList\u003cEmployee\u003e getFilteredEmployeeList();","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"pkwangjoo"},"content":"     * Returns the user prefs\u0027 sudohr book file path.","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"pkwangjoo"},"content":"    Path getSudoHrFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"pkwangjoo":14,"-":36}},{"path":"src/main/java/seedu/sudohr/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.GuiSettings;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.LogsCenter;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.Command;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.CommandResult;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.parser.SudoHrParser;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.ReadOnlySudoHr;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.storage.Storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"pkwangjoo"},"content":"    private final SudoHrParser sudoHrParser;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"pkwangjoo"},"content":"        sudoHrParser \u003d new SudoHrParser();","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"pkwangjoo"},"content":"        Command command \u003d sudoHrParser.parseCommand(commandText);","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"pkwangjoo"},"content":"            storage.saveSudoHr(model.getSudoHr());","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"pkwangjoo"},"content":"    public ReadOnlySudoHr getSudoHr() {","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"pkwangjoo"},"content":"        return model.getSudoHr();","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"pkwangjoo"},"content":"    public ObservableList\u003cEmployee\u003e getFilteredEmployeeList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"pkwangjoo"},"content":"        return model.getFilteredEmployeeList();","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"pkwangjoo"},"content":"    public Path getSudoHrFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"pkwangjoo"},"content":"        return model.getSudoHrFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"pkwangjoo":22,"-":59}},{"path":"src/main/java/seedu/sudohr/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":" * Adds an employee to SudoHR.","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an employee to SudoHR. \"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"            + PREFIX_ID + \"EMPLOYEE_ID \"","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"            + PREFIX_ID + \"777 \"","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"pkwangjoo"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New employee added: %1$s\";","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"    public static final String MESSAGE_DUPLICATE_EMPLOYEE \u003d \"This employee already exists in SudoHR\";","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"4ndrelim"},"content":"    public static final String MESSAGE_DUPLICATE_EMAIL \u003d \"There already exists someone with this email!\";","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"    public static final String MESSAGE_DUPLICATE_PHONE \u003d \"There already exists someone with this phone number!\";","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"pkwangjoo"},"content":"    private final Employee toAdd;","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"pkwangjoo"},"content":"     * Creates an AddCommand to add the specified {@code Employee}","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"pkwangjoo"},"content":"    public AddCommand(Employee employee) {","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"pkwangjoo"},"content":"        requireNonNull(employee);","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"pkwangjoo"},"content":"        toAdd \u003d employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"pkwangjoo"},"content":"        if (model.hasEmployee(toAdd)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"pkwangjoo"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EMPLOYEE);","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"4ndrelim"},"content":"        if (model.hasClashingPhoneNumber(toAdd)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"4ndrelim"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PHONE);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"4ndrelim"},"content":"        if (model.hasClashingEmail(toAdd)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"4ndrelim"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EMAIL);","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"pkwangjoo"},"content":"        model.addEmployee(toAdd);","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pkwangjoo":18,"4ndrelim":18,"-":45}},{"path":"src/main/java/seedu/sudohr/logic/commands/AddDepartmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package seedu.sudohr.logic.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_DEPARTMENT_NAME;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.Model;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.Department;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":" * Adds a department to SudoHR.","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"public class AddDepartmentCommand extends Command {","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"    public static final String COMMAND_WORD \u003d \"adep\";","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a department to the SudoHR. \"","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"            + PREFIX_DEPARTMENT_NAME + \"NAME \\n\"","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"            + PREFIX_DEPARTMENT_NAME + \"Human Resources Department \";","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New department added: %1$s\";","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"    public static final String MESSAGE_DUPLICATE_DEPARTMENT \u003d \"This department already exists in SudoHR\";","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"    private final Department toAdd;","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"     * Creates an AddDepartmentCommand to add the specified {@code Department}","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"    public AddDepartmentCommand(Department department) {","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"        requireNonNull(department);","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"        toAdd \u003d department;","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"        if (model.hasDepartment(toAdd)) {","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_DEPARTMENT);","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"        model.addDepartment(toAdd);","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"kennethk-1201"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"kennethk-1201"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"kennethk-1201"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"kennethk-1201"},"content":"                || (other instanceof AddDepartmentCommand // instanceof handles nulls","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"kennethk-1201"},"content":"                \u0026\u0026 toAdd.equals(((AddDepartmentCommand) other).toAdd));","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"kennethk-1201":54}},{"path":"src/main/java/seedu/sudohr/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.SudoHr;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":" * Clears data in SudoHR.","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"pkwangjoo"},"content":"        model.setSudoHr(new SudoHr());","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pkwangjoo":5,"4ndrelim":1,"-":18}},{"path":"src/main/java/seedu/sudohr/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pkwangjoo":3,"-":17}},{"path":"src/main/java/seedu/sudohr/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pkwangjoo":1,"-":70}},{"path":"src/main/java/seedu/sudohr/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.Messages;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":" * Deletes an employee identified using it\u0027s displayed index from SudoHR.","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"pkwangjoo"},"content":"            + \": Deletes the employee identified by the index number used in the displayed employee list.\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"pkwangjoo"},"content":"    public static final String MESSAGE_DELETE_EMPLOYEE_SUCCESS \u003d \"Deleted Employee: %1$s\";","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"pkwangjoo"},"content":"        List\u003cEmployee\u003e lastShownList \u003d model.getFilteredEmployeeList();","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"pkwangjoo"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"pkwangjoo"},"content":"        Employee employeeToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"pkwangjoo"},"content":"        model.deleteEmployee(employeeToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"pkwangjoo"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_EMPLOYEE_SUCCESS, employeeToDelete));","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pkwangjoo":13,"4ndrelim":1,"-":39}},{"path":"src/main/java/seedu/sudohr/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.model.Model.PREDICATE_SHOW_ALL_EMPLOYEES;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.Messages;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Email;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Id;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":" * Edits the details of an existing employee in SudoHR.","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"pkwangjoo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the employee identified \"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"pkwangjoo"},"content":"            + \"by the index number used in the displayed employee list. \"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"            + \"[\" + PREFIX_ID + \"ID] \"","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"pkwangjoo"},"content":"    public static final String MESSAGE_EDIT_EMPLOYEE_SUCCESS \u003d \"Edited Employee: %1$s\";","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"4ndrelim"},"content":"    public static final String MESSAGE_DUPLICATE_EMPLOYEE \u003d \"This employee already exists in SudoHR\";","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"4ndrelim"},"content":"    public static final String MESSAGE_DUPLICATE_EMAIL \u003d \"There already exists someone with this email!\";","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"4ndrelim"},"content":"    public static final String MESSAGE_DUPLICATE_PHONE \u003d \"There already exists someone with this phone number!\";","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"pkwangjoo"},"content":"    private final EditEmployeeDescriptor editEmployeeDescriptor;","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"pkwangjoo"},"content":"     * @param index of the employee in the filtered employee list to edit","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"pkwangjoo"},"content":"     * @param editEmployeeDescriptor details to edit the employee with","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"pkwangjoo"},"content":"    public EditCommand(Index index, EditEmployeeDescriptor editEmployeeDescriptor) {","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"pkwangjoo"},"content":"        requireNonNull(editEmployeeDescriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"pkwangjoo"},"content":"        this.editEmployeeDescriptor \u003d new EditEmployeeDescriptor(editEmployeeDescriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"pkwangjoo"},"content":"        List\u003cEmployee\u003e lastShownList \u003d model.getFilteredEmployeeList();","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"pkwangjoo"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"pkwangjoo"},"content":"        Employee employeeToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"pkwangjoo"},"content":"        Employee editedEmployee \u003d createEditedEmployee(employeeToEdit, editEmployeeDescriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"4ndrelim"},"content":"        if (model.hasEmployee(editedEmployee, employeeToEdit)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"pkwangjoo"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EMPLOYEE);","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"4ndrelim"},"content":"        if (model.hasClashingPhoneNumber(editedEmployee, employeeToEdit)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"4ndrelim"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PHONE);","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"4ndrelim"},"content":"        if (model.hasClashingEmail(editedEmployee, employeeToEdit)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"4ndrelim"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EMAIL);","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"pkwangjoo"},"content":"        model.setEmployee(employeeToEdit, editedEmployee);","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"pkwangjoo"},"content":"        model.updateFilteredEmployeeList(PREDICATE_SHOW_ALL_EMPLOYEES);","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"pkwangjoo"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_EMPLOYEE_SUCCESS, editedEmployee));","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"pkwangjoo"},"content":"     * Creates and returns a {@code Employee} with the details of {@code employeeToEdit}","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"pkwangjoo"},"content":"     * edited with {@code editEmployeeDescriptor}.","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"pkwangjoo"},"content":"    private static Employee createEditedEmployee(Employee employeeToEdit,","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"pkwangjoo"},"content":"                                                 EditEmployeeDescriptor editEmployeeDescriptor) {","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"pkwangjoo"},"content":"        assert employeeToEdit !\u003d null;","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"pkwangjoo"},"content":"        Id updatedId \u003d editEmployeeDescriptor.getId().orElse(employeeToEdit.getId());","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"pkwangjoo"},"content":"        Name updatedName \u003d editEmployeeDescriptor.getName().orElse(employeeToEdit.getName());","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"pkwangjoo"},"content":"        Phone updatedPhone \u003d editEmployeeDescriptor.getPhone().orElse(employeeToEdit.getPhone());","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"pkwangjoo"},"content":"        Email updatedEmail \u003d editEmployeeDescriptor.getEmail().orElse(employeeToEdit.getEmail());","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"pkwangjoo"},"content":"        Address updatedAddress \u003d editEmployeeDescriptor.getAddress().orElse(employeeToEdit.getAddress());","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"pkwangjoo"},"content":"        Set\u003cTag\u003e updatedTags \u003d editEmployeeDescriptor.getTags().orElse(employeeToEdit.getTags());","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"pkwangjoo"},"content":"        return new Employee(updatedId, updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":137,"author":{"gitId":"pkwangjoo"},"content":"                \u0026\u0026 editEmployeeDescriptor.equals(e.editEmployeeDescriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"pkwangjoo"},"content":"     * Stores the details to edit the employee with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"pkwangjoo"},"content":"     * corresponding field value of the employee.","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"pkwangjoo"},"content":"    public static class EditEmployeeDescriptor {","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"4ndrelim"},"content":"        private Id id;","lastModifiedDate":"2023-03-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"pkwangjoo"},"content":"        public EditEmployeeDescriptor() {}","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":158,"author":{"gitId":"pkwangjoo"},"content":"        public EditEmployeeDescriptor(EditEmployeeDescriptor toCopy) {","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"4ndrelim"},"content":"            setId(toCopy.id);","lastModifiedDate":"2023-03-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"4ndrelim"},"content":"            return CollectionUtil.isAnyNonNull(id, name, phone, email, address, tags);","lastModifiedDate":"2023-03-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"4ndrelim"},"content":"        public void setId(Id id) {","lastModifiedDate":"2023-03-12"},{"lineNumber":175,"author":{"gitId":"4ndrelim"},"content":"            this.id \u003d id;","lastModifiedDate":"2023-03-12"},{"lineNumber":176,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":177,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":178,"author":{"gitId":"4ndrelim"},"content":"        public Optional\u003cId\u003e getId() {","lastModifiedDate":"2023-03-12"},{"lineNumber":179,"author":{"gitId":"4ndrelim"},"content":"            return Optional.ofNullable(id);","lastModifiedDate":"2023-03-12"},{"lineNumber":180,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":181,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":225,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"pkwangjoo"},"content":"            if (!(other instanceof EditEmployeeDescriptor)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"pkwangjoo"},"content":"            EditEmployeeDescriptor e \u003d (EditEmployeeDescriptor) other;","lastModifiedDate":"2023-03-13"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":246,"author":{"gitId":"4ndrelim"},"content":"            return getId().equals(e.getId())","lastModifiedDate":"2023-03-11"},{"lineNumber":247,"author":{"gitId":"4ndrelim"},"content":"                    \u0026\u0026 getName().equals(e.getName())","lastModifiedDate":"2023-03-11"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"pkwangjoo":56,"4ndrelim":31,"-":167}},{"path":"src/main/java/seedu/sudohr/logic/commands/EditDepartmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package seedu.sudohr.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_DEPARTMENT_NAME;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.Model;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.Department;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.DepartmentName;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":" * Edits the details of an existing department inside SudoHR.","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"public class EditDepartmentCommand extends Command {","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"    public static final String COMMAND_WORD \u003d \"edep\";","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the department identified \"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"            + \"by the department name.\"","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"            + \"[\" + PREFIX_DEPARTMENT_NAME + \"NAME] \"","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"            + \"Example: \" + COMMAND_WORD + \" Engineering \"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"            + PREFIX_DEPARTMENT_NAME + \"Software Engineering\";","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"    public static final String MESSAGE_EDIT_DEPARTMENT_SUCCESS \u003d \"Edited Department: %1$s\";","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"    public static final String MESSAGE_DUPLICATE_DEPARTMENT \u003d \"This department already exists in SudoHR.\";","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"    public static final String MESSAGE_DEPARTMENT_NOT_FOUND \u003d \"The department to edit does not exist in SudoHR.\";","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"    private final DepartmentName name;","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"    private final EditDepartmentCommand.EditDepartmentDescriptor editDepartmentDescriptor;","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"     * @param name of the department in the filtered department list to edit","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"     * @param editDepartmentDescriptor details to edit the department with","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"    public EditDepartmentCommand(DepartmentName name,","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"             EditDepartmentCommand.EditDepartmentDescriptor editDepartmentDescriptor) {","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"kennethk-1201"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"        requireNonNull(editDepartmentDescriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"kennethk-1201"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"kennethk-1201"},"content":"        this.editDepartmentDescriptor \u003d new EditDepartmentCommand.EditDepartmentDescriptor(editDepartmentDescriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"kennethk-1201"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"kennethk-1201"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"kennethk-1201"},"content":"        Department departmentToEdit \u003d model.getDepartment(name);","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"kennethk-1201"},"content":"        if (departmentToEdit \u003d\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"kennethk-1201"},"content":"            throw new CommandException(MESSAGE_DEPARTMENT_NOT_FOUND);","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"kennethk-1201"},"content":"        Department editedDepartment \u003d createEditedDepartment(departmentToEdit, editDepartmentDescriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"kennethk-1201"},"content":"        if (!departmentToEdit.equals(editedDepartment) \u0026\u0026 model.hasDepartment(editedDepartment)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"kennethk-1201"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_DEPARTMENT);","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"kennethk-1201"},"content":"        model.setDepartment(departmentToEdit, editedDepartment);","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"kennethk-1201"},"content":"        // MISSING STEP: Update Department view?","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"kennethk-1201"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_DEPARTMENT_SUCCESS, editedDepartment));","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"kennethk-1201"},"content":"     * Creates and returns a {@code Department} with the details of {@code departmentToEdit}","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"kennethk-1201"},"content":"     * edited with {@code editDepartmentDescriptor}.","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"kennethk-1201"},"content":"    private static Department createEditedDepartment(Department departmentToEdit,","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"kennethk-1201"},"content":"             EditDepartmentCommand.EditDepartmentDescriptor editDepartmentDescriptor) {","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"kennethk-1201"},"content":"        assert departmentToEdit !\u003d null;","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"kennethk-1201"},"content":"        DepartmentName updatedDepartmentName \u003d editDepartmentDescriptor.getName().orElse(departmentToEdit.getName());","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"kennethk-1201"},"content":"        return new Department(updatedDepartmentName, departmentToEdit.getEmployees());","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"kennethk-1201"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"kennethk-1201"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"kennethk-1201"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"kennethk-1201"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"kennethk-1201"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"kennethk-1201"},"content":"        if (!(other instanceof EditDepartmentCommand)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"kennethk-1201"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"kennethk-1201"},"content":"        // state check","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"kennethk-1201"},"content":"        EditDepartmentCommand e \u003d (EditDepartmentCommand) other;","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"kennethk-1201"},"content":"        return name.equals(e.name)","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"kennethk-1201"},"content":"                \u0026\u0026 editDepartmentDescriptor.equals(e.editDepartmentDescriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"kennethk-1201"},"content":"     * Stores the details to edit the department with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"kennethk-1201"},"content":"     * corresponding field value of the department.","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"kennethk-1201"},"content":"    public static class EditDepartmentDescriptor {","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"kennethk-1201"},"content":"        private DepartmentName name;","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"kennethk-1201"},"content":"        public EditDepartmentDescriptor() {}","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"kennethk-1201"},"content":"        /**","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"kennethk-1201"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"kennethk-1201"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"kennethk-1201"},"content":"         */","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"kennethk-1201"},"content":"        public EditDepartmentDescriptor(EditDepartmentCommand.EditDepartmentDescriptor toCopy) {","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"kennethk-1201"},"content":"            setName(toCopy.name);","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"kennethk-1201"},"content":"        /**","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"kennethk-1201"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-12"},{"lineNumber":120,"author":{"gitId":"kennethk-1201"},"content":"         */","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"kennethk-1201"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-12"},{"lineNumber":122,"author":{"gitId":"kennethk-1201"},"content":"            return CollectionUtil.isAnyNonNull(name);","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":124,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"kennethk-1201"},"content":"        public void setName(DepartmentName name) {","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"kennethk-1201"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-03-12"},{"lineNumber":127,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"kennethk-1201"},"content":"        public Optional\u003cDepartmentName\u003e getName() {","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"kennethk-1201"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":132,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":134,"author":{"gitId":"kennethk-1201"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":135,"author":{"gitId":"kennethk-1201"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":136,"author":{"gitId":"kennethk-1201"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-12"},{"lineNumber":137,"author":{"gitId":"kennethk-1201"},"content":"                return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":138,"author":{"gitId":"kennethk-1201"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":139,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":140,"author":{"gitId":"kennethk-1201"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":141,"author":{"gitId":"kennethk-1201"},"content":"            if (!(other instanceof EditDepartmentCommand.EditDepartmentDescriptor)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":142,"author":{"gitId":"kennethk-1201"},"content":"                return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":143,"author":{"gitId":"kennethk-1201"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":144,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":145,"author":{"gitId":"kennethk-1201"},"content":"            // state check","lastModifiedDate":"2023-03-12"},{"lineNumber":146,"author":{"gitId":"kennethk-1201"},"content":"            EditDepartmentCommand.EditDepartmentDescriptor e \u003d (EditDepartmentCommand.EditDepartmentDescriptor) other;","lastModifiedDate":"2023-03-12"},{"lineNumber":147,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":148,"author":{"gitId":"kennethk-1201"},"content":"            return getName().equals(e.getName());","lastModifiedDate":"2023-03-12"},{"lineNumber":149,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":150,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":151,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"kennethk-1201":151}},{"path":"src/main/java/seedu/sudohr/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"pkwangjoo":2,"-":17}},{"path":"src/main/java/seedu/sudohr/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.Messages;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":" * Finds and lists all employees in SudoHr whose name contains any of the argument keywords.","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"pkwangjoo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all employees whose names contain any of \"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"pkwangjoo"},"content":"        model.updateFilteredEmployeeList(predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"pkwangjoo"},"content":"                String.format(Messages.MESSAGE_EMPLOYEES_LISTED_OVERVIEW, model.getFilteredEmployeeList().size()));","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"pkwangjoo":8,"-":34}},{"path":"src/main/java/seedu/sudohr/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pkwangjoo":2,"-":19}},{"path":"src/main/java/seedu/sudohr/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.model.Model.PREDICATE_SHOW_ALL_EMPLOYEES;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":" * Lists all employees in the SudoHr to the user.","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all employees\";","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"pkwangjoo"},"content":"        model.updateFilteredEmployeeList(PREDICATE_SHOW_ALL_EMPLOYEES);","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pkwangjoo":6,"-":18}},{"path":"src/main/java/seedu/sudohr/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.commands.exceptions;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"pkwangjoo":1,"-":16}},{"path":"src/main/java/seedu/sudohr/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.AddCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Email;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Id;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"     * Parses the given {@code String} of arguments in the context of the AddDepartmentCommand","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"     * and returns an AddDepartmentCommand object for execution.","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ID, PREFIX_NAME,","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"4ndrelim"},"content":"                        PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ID, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"4ndrelim"},"content":"        Id id \u003d ParserUtil.parseId(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"pkwangjoo"},"content":"        Employee employee \u003d new Employee(id, name, phone, email, address, tagList);","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"pkwangjoo"},"content":"        return new AddCommand(employee);","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"pkwangjoo":18,"4ndrelim":5,"kennethk-1201":3,"-":39}},{"path":"src/main/java/seedu/sudohr/logic/parser/AddDepartmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package seedu.sudohr.logic.parser;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_DEPARTMENT_NAME;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.logic.commands.AddDepartmentCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.Department;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.DepartmentName;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":" * Parses input arguments and creates a new AddDepartmentCommand object","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"public class AddDepartmentCommandParser implements Parser\u003cAddDepartmentCommand\u003e {","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"    public AddDepartmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DEPARTMENT_NAME);","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DEPARTMENT_NAME)","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDepartmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"        DepartmentName name \u003d ParserUtil.parseDepartmentName(argMultimap.getValue(PREFIX_DEPARTMENT_NAME).get());","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"        Department department \u003d new Department(name);","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"        return new AddDepartmentCommand(department);","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"kennethk-1201"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"kennethk-1201":45}},{"path":"src/main/java/seedu/sudohr/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"pkwangjoo":1,"-":59}},{"path":"src/main/java/seedu/sudohr/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"pkwangjoo":1,"-":147}},{"path":"src/main/java/seedu/sudohr/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"    // Employee level definitions","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"    public static final Prefix PREFIX_ID \u003d new Prefix(\"id/\");","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"    // Department level definitions","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"    public static final Prefix PREFIX_DEPARTMENT_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"pkwangjoo":1,"kennethk-1201":2,"4ndrelim":3,"-":14}},{"path":"src/main/java/seedu/sudohr/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"pkwangjoo":5,"-":24}},{"path":"src/main/java/seedu/sudohr/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.EditCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.EditCommand.EditEmployeeDescriptor;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"4ndrelim"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ID, PREFIX_NAME,","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"                        PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"pkwangjoo"},"content":"        EditEmployeeDescriptor editEmployeeDescriptor \u003d new EditCommand.EditEmployeeDescriptor();","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"4ndrelim"},"content":"        if (argMultimap.getValue(PREFIX_ID).isPresent()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"pkwangjoo"},"content":"            editEmployeeDescriptor.setId(ParserUtil.parseId(argMultimap.getValue(PREFIX_ID).get()));","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"pkwangjoo"},"content":"            editEmployeeDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"pkwangjoo"},"content":"            editEmployeeDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"pkwangjoo"},"content":"            editEmployeeDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"pkwangjoo"},"content":"            editEmployeeDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"pkwangjoo"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editEmployeeDescriptor::setTags);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"pkwangjoo"},"content":"        if (!editEmployeeDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"pkwangjoo"},"content":"        return new EditCommand(index, editEmployeeDescriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"pkwangjoo":21,"4ndrelim":5,"-":61}},{"path":"src/main/java/seedu/sudohr/logic/parser/EditDepartmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package seedu.sudohr.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_DEPARTMENT_NAME;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.logic.commands.EditDepartmentCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.DepartmentName;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":" * Parses input arguments and creates a new EditDepartmentCommand object","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"public class EditDepartmentCommandParser implements Parser\u003cEditDepartmentCommand\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"     * Parses the given {@code String} of arguments in the context of the EditDepartmentCommand","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"     * and returns an EditDepartmentCommand object for execution.","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"    public EditDepartmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DEPARTMENT_NAME);","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"        DepartmentName name;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"            name \u003d ParserUtil.parseDepartmentName(argMultimap.getPreamble());","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"                    EditDepartmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"        EditDepartmentCommand.EditDepartmentDescriptor editDepartmentDescriptor \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"                new EditDepartmentCommand.EditDepartmentDescriptor();","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"        if (argMultimap.getValue(PREFIX_DEPARTMENT_NAME).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"            editDepartmentDescriptor.setName(ParserUtil.parseDepartmentName(argMultimap","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"                    .getValue(PREFIX_DEPARTMENT_NAME).get()));","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"        if (!editDepartmentDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"            throw new ParseException(EditDepartmentCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"kennethk-1201"},"content":"        return new EditDepartmentCommand(name, editDepartmentDescriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"kennethk-1201":47}},{"path":"src/main/java/seedu/sudohr/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.FindCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"pkwangjoo":5,"-":28}},{"path":"src/main/java/seedu/sudohr/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.Command;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"pkwangjoo":3,"-":13}},{"path":"src/main/java/seedu/sudohr/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.util.StringUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.DepartmentName;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Email;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Id;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"4ndrelim"},"content":"     * Parses a {@code String id} into a {@code Id}.","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"4ndrelim"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"4ndrelim"},"content":"     * @throws ParseException if the given {@code id} is invalid.","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"4ndrelim"},"content":"    public static Id parseId(String id) throws ParseException {","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"4ndrelim"},"content":"        requireNonNull(id);","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"4ndrelim"},"content":"        String trimmedId \u003d id.trim();","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"4ndrelim"},"content":"        if (!Id.isValidId(trimmedId)) {","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"4ndrelim"},"content":"            throw new ParseException(Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"4ndrelim"},"content":"        return new Id(trimmedId);","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"pkwangjoo"},"content":"     * Parses a {@code String sudohr} into an {@code Address}.","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"pkwangjoo"},"content":"     * @throws ParseException if the given {@code sudohr} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":141,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":142,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":143,"author":{"gitId":"kennethk-1201"},"content":"     * Parses a {@code String name} into a {@code DepartmentName}.","lastModifiedDate":"2023-03-10"},{"lineNumber":144,"author":{"gitId":"kennethk-1201"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-10"},{"lineNumber":145,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":146,"author":{"gitId":"kennethk-1201"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2023-03-10"},{"lineNumber":147,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":148,"author":{"gitId":"kennethk-1201"},"content":"    public static DepartmentName parseDepartmentName(String name) throws ParseException {","lastModifiedDate":"2023-03-10"},{"lineNumber":149,"author":{"gitId":"kennethk-1201"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-10"},{"lineNumber":150,"author":{"gitId":"kennethk-1201"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2023-03-10"},{"lineNumber":151,"author":{"gitId":"kennethk-1201"},"content":"        if (!DepartmentName.isValidName(trimmedName)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":152,"author":{"gitId":"kennethk-1201"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-10"},{"lineNumber":153,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":154,"author":{"gitId":"kennethk-1201"},"content":"        return new DepartmentName(trimmedName);","lastModifiedDate":"2023-03-10"},{"lineNumber":155,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"pkwangjoo":12,"kennethk-1201":16,"4ndrelim":15,"-":113}},{"path":"src/main/java/seedu/sudohr/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"pkwangjoo":1,"-":38}},{"path":"src/main/java/seedu/sudohr/logic/parser/SudoHrParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.logic.commands.AddCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.logic.commands.AddDepartmentCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.logic.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.logic.commands.EditCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.logic.commands.EditDepartmentCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.logic.commands.FindCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.logic.commands.ListCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"pkwangjoo"},"content":"public class SudoHrParser {","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"kennethk-1201"},"content":"        case AddDepartmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"kennethk-1201"},"content":"            return new AddDepartmentCommandParser().parse(arguments);","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"kennethk-1201"},"content":"        case EditDepartmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"kennethk-1201"},"content":"            return new EditDepartmentCommandParser().parse(arguments);","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pkwangjoo":5,"kennethk-1201":17,"-":62}},{"path":"src/main/java/seedu/sudohr/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.parser.exceptions;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"pkwangjoo":2,"-":15}},{"path":"src/main/java/seedu/sudohr/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.model;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.GuiSettings;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.Department;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.DepartmentName;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"pkwangjoo"},"content":"    Predicate\u003cEmployee\u003e PREDICATE_SHOW_ALL_EMPLOYEES \u003d unused -\u003e true;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"pkwangjoo"},"content":"     * Returns the user prefs\u0027 sudohr book file path.","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"pkwangjoo"},"content":"    Path getSudoHrFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"pkwangjoo"},"content":"     * Sets the user prefs\u0027 sudohr book file path.","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"pkwangjoo"},"content":"    void setSudoHrFilePath(Path sudoHrFilePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"pkwangjoo"},"content":"     * Replaces sudohr book data with the data in {@code sudoHr}.","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"pkwangjoo"},"content":"    void setSudoHr(ReadOnlySudoHr sudoHr);","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"pkwangjoo"},"content":"    /** Returns the SudoHr */","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"pkwangjoo"},"content":"    ReadOnlySudoHr getSudoHr();","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"pkwangjoo"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Employee-Level Operations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"4ndrelim"},"content":"     * Returns true if an employee with the same identity as {@code person} exists in SudoHR.","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"pkwangjoo"},"content":"    boolean hasEmployee(Employee employee);","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"4ndrelim"},"content":"     * Returns true if an employee with the same identity as {@code person} exists in SudoHR,","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"4ndrelim"},"content":"     * excluding the specified person/","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"4ndrelim"},"content":"    boolean hasEmployee(Employee employee, Employee excludeFromCheck);","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"4ndrelim"},"content":"     * Returns true if a person shares the same email with a different {@code person} (different id).","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"4ndrelim"},"content":"    boolean hasClashingEmail(Employee person);","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"4ndrelim"},"content":"     * Returns true if a person shares the same email with a different {@code person} (different id),","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"4ndrelim"},"content":"     * excluding the specified person.","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"4ndrelim"},"content":"    boolean hasClashingEmail(Employee person, Employee excludeFromCheck);","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"4ndrelim"},"content":"     * Returns true if a person shares the same phone number with a different {@code person} (different id).","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"4ndrelim"},"content":"    boolean hasClashingPhoneNumber(Employee person);","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"4ndrelim"},"content":"     * Returns true if a person shares the same phone number with a different {@code person} (different id),","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"4ndrelim"},"content":"     * excluding the specified person.","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"4ndrelim"},"content":"    boolean hasClashingPhoneNumber(Employee person, Employee excludeFromCheck);","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"pkwangjoo"},"content":"     * Deletes the given employee.","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"4ndrelim"},"content":"     * The person must exist in SudoHR.","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"pkwangjoo"},"content":"    void deleteEmployee(Employee target);","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"pkwangjoo"},"content":"     * Adds the given employee.","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"pkwangjoo"},"content":"     * {@code employee} must not already exist in the sudohr book.","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"pkwangjoo"},"content":"    void addEmployee(Employee employee);","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":105,"author":{"gitId":"pkwangjoo"},"content":"     * Replaces the given employee {@code target} with {@code editedEmployee}.","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"pkwangjoo"},"content":"     * {@code target} must exist in the sudohr book.","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"pkwangjoo"},"content":"     * The employee identity of {@code editedEmployee} must not be the same as another existing","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"pkwangjoo"},"content":"     * employee in the sudohr book.","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":110,"author":{"gitId":"pkwangjoo"},"content":"    void setEmployee(Employee target, Employee editedEmployee);","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"pkwangjoo"},"content":"    /** Returns an unmodifiable view of the filtered employee list */","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"pkwangjoo"},"content":"    ObservableList\u003cEmployee\u003e getFilteredEmployeeList();","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":116,"author":{"gitId":"pkwangjoo"},"content":"     * Updates the filter of the filtered employee list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":119,"author":{"gitId":"pkwangjoo"},"content":"    void updateFilteredEmployeeList(Predicate\u003cEmployee\u003e predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":121,"author":{"gitId":"kennethk-1201"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Department-Level Operations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-10"},{"lineNumber":122,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":123,"author":{"gitId":"kennethk-1201"},"content":"    public Department getDepartment(DepartmentName name);","lastModifiedDate":"2023-03-12"},{"lineNumber":124,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":126,"author":{"gitId":"kennethk-1201"},"content":"     * Returns true if a department with the same identity as {@code department} exists in the address book.","lastModifiedDate":"2023-03-10"},{"lineNumber":127,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":128,"author":{"gitId":"kennethk-1201"},"content":"    public boolean hasDepartment(Department department);","lastModifiedDate":"2023-03-10"},{"lineNumber":129,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":130,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":131,"author":{"gitId":"kennethk-1201"},"content":"     * Adds a department to the address book.","lastModifiedDate":"2023-03-10"},{"lineNumber":132,"author":{"gitId":"kennethk-1201"},"content":"     * The department must not already exist in the address book.","lastModifiedDate":"2023-03-10"},{"lineNumber":133,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":134,"author":{"gitId":"kennethk-1201"},"content":"    void addDepartment(Department d);","lastModifiedDate":"2023-03-10"},{"lineNumber":135,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":136,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":137,"author":{"gitId":"pkwangjoo"},"content":"     * Replaces the given department {@code target} in the list with {@code editedDepartment}.","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"kennethk-1201"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-10"},{"lineNumber":139,"author":{"gitId":"pkwangjoo"},"content":"     * The department identity of {@code editedDepartment} must not be the same as another existing","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"pkwangjoo"},"content":"     * department in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":142,"author":{"gitId":"kennethk-1201"},"content":"    void setDepartment(Department target, Department editedDepartment);","lastModifiedDate":"2023-03-10"},{"lineNumber":143,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":144,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":145,"author":{"gitId":"kennethk-1201"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-03-10"},{"lineNumber":146,"author":{"gitId":"kennethk-1201"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-03-10"},{"lineNumber":147,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":148,"author":{"gitId":"kennethk-1201"},"content":"    void removeDepartment(Department key);","lastModifiedDate":"2023-03-10"},{"lineNumber":149,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":150,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":151,"author":{"gitId":"kennethk-1201"},"content":"     * Adds a given employee from a given department","lastModifiedDate":"2023-03-10"},{"lineNumber":152,"author":{"gitId":"kennethk-1201"},"content":"     * @param p The employee to add","lastModifiedDate":"2023-03-10"},{"lineNumber":153,"author":{"gitId":"kennethk-1201"},"content":"     * @param d The department to add the employee to","lastModifiedDate":"2023-03-10"},{"lineNumber":154,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":155,"author":{"gitId":"pkwangjoo"},"content":"    void addEmployeeToDepartment(Employee p, Department d);","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":157,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":158,"author":{"gitId":"kennethk-1201"},"content":"     * Removes a given employee from a given department","lastModifiedDate":"2023-03-10"},{"lineNumber":159,"author":{"gitId":"kennethk-1201"},"content":"     * @param p The employee to remove","lastModifiedDate":"2023-03-10"},{"lineNumber":160,"author":{"gitId":"kennethk-1201"},"content":"     * @param d The department to remove the employee fro","lastModifiedDate":"2023-03-10"},{"lineNumber":161,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":162,"author":{"gitId":"pkwangjoo"},"content":"    void removeEmployeeFromDepartment(Employee p, Department d);","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":164,"author":{"gitId":"kennethk-1201"},"content":"    /** Returns an unmodifiable view of the filtered department list */","lastModifiedDate":"2023-03-10"},{"lineNumber":165,"author":{"gitId":"kennethk-1201"},"content":"    ObservableList\u003cDepartment\u003e getFilteredDepartmentList();","lastModifiedDate":"2023-03-10"},{"lineNumber":166,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":167,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":168,"author":{"gitId":"kennethk-1201"},"content":"     * Updates the filter of the filtered department list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-10"},{"lineNumber":169,"author":{"gitId":"kennethk-1201"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-10"},{"lineNumber":170,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":171,"author":{"gitId":"kennethk-1201"},"content":"    void updateFilteredDepartmentList(Predicate\u003cDepartment\u003e predicate);","lastModifiedDate":"2023-03-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"pkwangjoo":33,"kennethk-1201":50,"4ndrelim":30,"-":59}},{"path":"src/main/java/seedu/sudohr/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.model;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.GuiSettings;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.LogsCenter;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.Department;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.DepartmentName;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"pkwangjoo"},"content":" * Represents the in-memory model of the sudohr book data.","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"pkwangjoo"},"content":"    private final SudoHr sudoHr;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"pkwangjoo"},"content":"    private final FilteredList\u003cEmployee\u003e filteredEmployees;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"    private final FilteredList\u003cDepartment\u003e filteredDepartments;","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"pkwangjoo"},"content":"     * Initializes a ModelManager with the given sudoHr and userPrefs.","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"pkwangjoo"},"content":"    public ModelManager(ReadOnlySudoHr sudoHr, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"pkwangjoo"},"content":"        requireAllNonNull(sudoHr, userPrefs);","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"        logger.fine(\"Initializing with SudoHR: \" + sudoHr + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"pkwangjoo"},"content":"        this.sudoHr \u003d new SudoHr(sudoHr);","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"pkwangjoo"},"content":"        filteredEmployees \u003d new FilteredList\u003c\u003e(this.sudoHr.getEmployeeList());","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"        filteredDepartments \u003d new FilteredList\u003c\u003e(this.sudoHr.getDepartmentList());","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"pkwangjoo"},"content":"        this(new SudoHr(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"pkwangjoo"},"content":"    public Path getSudoHrFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"pkwangjoo"},"content":"        return userPrefs.getSudoHrFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"pkwangjoo"},"content":"    public void setSudoHrFilePath(Path sudoHrFilePath) {","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"pkwangjoo"},"content":"        requireNonNull(sudoHrFilePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"pkwangjoo"},"content":"        userPrefs.setSudoHrFilePath(sudoHrFilePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"pkwangjoo"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SudoHr \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"pkwangjoo"},"content":"    public void setSudoHr(ReadOnlySudoHr sudoHr) {","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"pkwangjoo"},"content":"        this.sudoHr.resetData(sudoHr);","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"pkwangjoo"},"content":"    public ReadOnlySudoHr getSudoHr() {","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"pkwangjoo"},"content":"        return sudoHr;","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"pkwangjoo"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Employee-Level Operations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"4ndrelim"},"content":"    public boolean hasEmployee(Employee person) {","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"4ndrelim"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"4ndrelim"},"content":"        return sudoHr.hasEmployee(person);","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"4ndrelim"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"4ndrelim"},"content":"    public boolean hasEmployee(Employee person, Employee excludeFromCheck) {","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"4ndrelim"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"4ndrelim"},"content":"        requireAllNonNull(excludeFromCheck);","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"4ndrelim"},"content":"        return sudoHr.hasEmployee(person, excludeFromCheck);","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"4ndrelim"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"4ndrelim"},"content":"    public boolean hasClashingEmail(Employee person) {","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"4ndrelim"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"4ndrelim"},"content":"        return sudoHr.hasClashingEmail(person);","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"4ndrelim"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"4ndrelim"},"content":"    public boolean hasClashingEmail(Employee person, Employee excludeFromCheck) {","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"4ndrelim"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"4ndrelim"},"content":"        requireNonNull(excludeFromCheck);","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"4ndrelim"},"content":"        return sudoHr.hasClashingEmail(person, excludeFromCheck);","lastModifiedDate":"2023-03-15"},{"lineNumber":121,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"4ndrelim"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"4ndrelim"},"content":"    public boolean hasClashingPhoneNumber(Employee person) {","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"4ndrelim"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"4ndrelim"},"content":"        return sudoHr.hasClashingPhoneNumber(person);","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"4ndrelim"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":130,"author":{"gitId":"4ndrelim"},"content":"    public boolean hasClashingPhoneNumber(Employee person, Employee excludeFromCheck) {","lastModifiedDate":"2023-03-15"},{"lineNumber":131,"author":{"gitId":"4ndrelim"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-03-15"},{"lineNumber":132,"author":{"gitId":"4ndrelim"},"content":"        requireNonNull(excludeFromCheck);","lastModifiedDate":"2023-03-15"},{"lineNumber":133,"author":{"gitId":"4ndrelim"},"content":"        return sudoHr.hasClashingPhoneNumber(person, excludeFromCheck);","lastModifiedDate":"2023-03-15"},{"lineNumber":134,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":135,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":137,"author":{"gitId":"pkwangjoo"},"content":"    public void deleteEmployee(Employee target) {","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"pkwangjoo"},"content":"        sudoHr.removeEmployee(target);","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":142,"author":{"gitId":"pkwangjoo"},"content":"    public void addEmployee(Employee employee) {","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"pkwangjoo"},"content":"        sudoHr.addEmployee(employee);","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"pkwangjoo"},"content":"        updateFilteredEmployeeList(PREDICATE_SHOW_ALL_EMPLOYEES);","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":148,"author":{"gitId":"pkwangjoo"},"content":"    public void setEmployee(Employee target, Employee editedEmployee) {","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"pkwangjoo"},"content":"        requireAllNonNull(target, editedEmployee);","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":151,"author":{"gitId":"pkwangjoo"},"content":"        sudoHr.setEmployee(target, editedEmployee);","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":154,"author":{"gitId":"pkwangjoo"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Employee List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":157,"author":{"gitId":"pkwangjoo"},"content":"     * Returns an unmodifiable view of the list of {@code Employee} backed by the internal list of","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"pkwangjoo"},"content":"     * {@code versionedSudoHr}","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"pkwangjoo"},"content":"    public ObservableList\u003cEmployee\u003e getFilteredEmployeeList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"pkwangjoo"},"content":"        return filteredEmployees;","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":166,"author":{"gitId":"pkwangjoo"},"content":"    public void updateFilteredEmployeeList(Predicate\u003cEmployee\u003e predicate) {","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":168,"author":{"gitId":"pkwangjoo"},"content":"        filteredEmployees.setPredicate(predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":171,"author":{"gitId":"kennethk-1201"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Department-Level Operations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-10"},{"lineNumber":172,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":173,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":174,"author":{"gitId":"kennethk-1201"},"content":"    public Department getDepartment(DepartmentName name) {","lastModifiedDate":"2023-03-12"},{"lineNumber":175,"author":{"gitId":"kennethk-1201"},"content":"        return sudoHr.getDepartment(name);","lastModifiedDate":"2023-03-12"},{"lineNumber":176,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":177,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":178,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":179,"author":{"gitId":"kennethk-1201"},"content":"    public boolean hasDepartment(Department department) {","lastModifiedDate":"2023-03-10"},{"lineNumber":180,"author":{"gitId":"kennethk-1201"},"content":"        requireNonNull(department);","lastModifiedDate":"2023-03-10"},{"lineNumber":181,"author":{"gitId":"kennethk-1201"},"content":"        return sudoHr.hasDepartment(department);","lastModifiedDate":"2023-03-10"},{"lineNumber":182,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":183,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":184,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":185,"author":{"gitId":"kennethk-1201"},"content":"    public void addDepartment(Department d) {","lastModifiedDate":"2023-03-10"},{"lineNumber":186,"author":{"gitId":"kennethk-1201"},"content":"        sudoHr.addDepartment(d);","lastModifiedDate":"2023-03-10"},{"lineNumber":187,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":188,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":189,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":190,"author":{"gitId":"kennethk-1201"},"content":"    public void setDepartment(Department target, Department editedDepartment) {","lastModifiedDate":"2023-03-10"},{"lineNumber":191,"author":{"gitId":"kennethk-1201"},"content":"        sudoHr.setDepartment(target, editedDepartment);","lastModifiedDate":"2023-03-10"},{"lineNumber":192,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":193,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":194,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":195,"author":{"gitId":"kennethk-1201"},"content":"    public void removeDepartment(Department key) {","lastModifiedDate":"2023-03-10"},{"lineNumber":196,"author":{"gitId":"kennethk-1201"},"content":"        sudoHr.removeDepartment(key);","lastModifiedDate":"2023-03-10"},{"lineNumber":197,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":198,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":199,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":200,"author":{"gitId":"pkwangjoo"},"content":"    public void addEmployeeToDepartment(Employee p, Department d) {","lastModifiedDate":"2023-03-13"},{"lineNumber":201,"author":{"gitId":"kennethk-1201"},"content":"        sudoHr.addEmployeeToDepartment(p, d);","lastModifiedDate":"2023-03-10"},{"lineNumber":202,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":203,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":204,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":205,"author":{"gitId":"pkwangjoo"},"content":"    public void removeEmployeeFromDepartment(Employee p, Department d) {","lastModifiedDate":"2023-03-13"},{"lineNumber":206,"author":{"gitId":"kennethk-1201"},"content":"        sudoHr.removeEmployeeFromDepartment(p, d);","lastModifiedDate":"2023-03-10"},{"lineNumber":207,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":208,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":209,"author":{"gitId":"kennethk-1201"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Department List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-10"},{"lineNumber":210,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":211,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":212,"author":{"gitId":"kennethk-1201"},"content":"     * Returns an unmodifiable view of the list of {@code Department} backed by the internal list of","lastModifiedDate":"2023-03-10"},{"lineNumber":213,"author":{"gitId":"kennethk-1201"},"content":"     * {@code versionedsudoHr}","lastModifiedDate":"2023-03-10"},{"lineNumber":214,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":215,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":216,"author":{"gitId":"kennethk-1201"},"content":"    public ObservableList\u003cDepartment\u003e getFilteredDepartmentList() {","lastModifiedDate":"2023-03-10"},{"lineNumber":217,"author":{"gitId":"kennethk-1201"},"content":"        return filteredDepartments;","lastModifiedDate":"2023-03-10"},{"lineNumber":218,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":219,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":220,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":221,"author":{"gitId":"kennethk-1201"},"content":"    public void updateFilteredDepartmentList(Predicate\u003cDepartment\u003e predicate) {","lastModifiedDate":"2023-03-10"},{"lineNumber":222,"author":{"gitId":"kennethk-1201"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-10"},{"lineNumber":223,"author":{"gitId":"kennethk-1201"},"content":"        filteredDepartments.setPredicate(predicate);","lastModifiedDate":"2023-03-10"},{"lineNumber":224,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":225,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":240,"author":{"gitId":"pkwangjoo"},"content":"        return sudoHr.equals(other.sudoHr)","lastModifiedDate":"2023-03-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":242,"author":{"gitId":"pkwangjoo"},"content":"                \u0026\u0026 filteredEmployees.equals(other.filteredEmployees);","lastModifiedDate":"2023-03-13"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"pkwangjoo":44,"kennethk-1201":59,"4ndrelim":37,"-":105}},{"path":"src/main/java/seedu/sudohr/model/ReadOnlySudoHr.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.model;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.Department;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":" * Unmodifiable view of an sudohr book","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"public interface ReadOnlySudoHr {","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"pkwangjoo"},"content":"     * Returns an unmodifiable view of the employee list.","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"pkwangjoo"},"content":"     * This list will not contain any duplicate employees.","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"pkwangjoo"},"content":"    ObservableList\u003cEmployee\u003e getEmployeeList();","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"     * Returns an unmodifiable view of the departments list.","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"     * This list will not contain any duplicate departments.","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"    ObservableList\u003cDepartment\u003e getDepartmentList();","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"pkwangjoo":7,"kennethk-1201":7,"-":10}},{"path":"src/main/java/seedu/sudohr/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.model;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.GuiSettings;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"pkwangjoo"},"content":"    Path getSudoHrFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"pkwangjoo":3,"-":13}},{"path":"src/main/java/seedu/sudohr/model/SudoHr.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.model;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.Department;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.DepartmentName;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.UniqueDepartmentList;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.UniqueEmployeeList;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":" * Wraps all data at the sudohr-book level","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"pkwangjoo"},"content":" * Duplicates are not allowed (by .isSameEmployee comparison)","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"pkwangjoo"},"content":"public class SudoHr implements ReadOnlySudoHr {","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"pkwangjoo"},"content":"    private final UniqueEmployeeList employees;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"    private final UniqueDepartmentList departments;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"pkwangjoo"},"content":"        employees \u003d new UniqueEmployeeList();","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"        departments \u003d new UniqueDepartmentList();","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"pkwangjoo"},"content":"    public SudoHr() {}","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"4ndrelim"},"content":"     * Creates an SudoHr using the Persons in the {@code toBeCopied}","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"pkwangjoo"},"content":"    public SudoHr(ReadOnlySudoHr toBeCopied) {","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"4ndrelim"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"4ndrelim"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"pkwangjoo"},"content":"    public void setEmployees(List\u003cEmployee\u003e employees) {","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"pkwangjoo"},"content":"        this.employees.setEmployees(employees);","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"kennethk-1201"},"content":"     * Replaces the contents of the department list with {@code departments}.","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"kennethk-1201"},"content":"     * {@code departments} must not contain duplicate departments.","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"kennethk-1201"},"content":"    public void setDepartments(List\u003cDepartment\u003e departments) {","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"kennethk-1201"},"content":"        this.departments.setDepartments(departments);","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"4ndrelim"},"content":"     * Resets the existing data of this {@code SudoHr} with {@code newData}.","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"pkwangjoo"},"content":"    public void resetData(ReadOnlySudoHr newData) {","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"pkwangjoo"},"content":"        setEmployees(newData.getEmployeeList());","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"kennethk-1201"},"content":"        setDepartments(newData.getDepartmentList());","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"pkwangjoo"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Employee-Level Operations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"4ndrelim"},"content":"     * Returns true if a person with the same identity as {@code person} exists in SudoHR.","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"pkwangjoo"},"content":"    public boolean hasEmployee(Employee employee) {","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"pkwangjoo"},"content":"        requireNonNull(employee);","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"pkwangjoo"},"content":"        return employees.contains(employee);","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"4ndrelim"},"content":"     * Returns true if a person with the same identity as {@code person} exists in SudoHR,","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"4ndrelim"},"content":"     * excluding the specified person","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"4ndrelim"},"content":"    public boolean hasEmployee(Employee employee, Employee excludeFromCheck) {","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"4ndrelim"},"content":"        requireNonNull(employee);","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"4ndrelim"},"content":"        requireNonNull(excludeFromCheck);","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"4ndrelim"},"content":"        return employees.contains(employee, excludeFromCheck);","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"4ndrelim"},"content":"     * Returns true if a person shares the same email with a different {@code person} (different id).","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"4ndrelim"},"content":"    public boolean hasClashingEmail(Employee person) {","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"4ndrelim"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"4ndrelim"},"content":"        return employees.sharesEmail(person);","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"4ndrelim"},"content":"     * Returns true if a person shares the same email with a different {@code person} (different id),","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"4ndrelim"},"content":"     * excluding the specified person","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"4ndrelim"},"content":"    public boolean hasClashingEmail(Employee person, Employee excludeFromCheck) {","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"4ndrelim"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"4ndrelim"},"content":"        requireNonNull(excludeFromCheck);","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"4ndrelim"},"content":"        return employees.sharesEmail(person, excludeFromCheck);","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"4ndrelim"},"content":"     * Returns true if a person shares the same phone number with a different {@code person} (different id).","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"4ndrelim"},"content":"    public boolean hasClashingPhoneNumber(Employee person) {","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"4ndrelim"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"4ndrelim"},"content":"        return employees.sharesPhoneNumber(person);","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"4ndrelim"},"content":"     * Returns true if a person shares the same phone number with a different {@code person} (different id),","lastModifiedDate":"2023-03-15"},{"lineNumber":121,"author":{"gitId":"4ndrelim"},"content":"     * excluding the specified person","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"4ndrelim"},"content":"    public boolean hasClashingPhoneNumber(Employee person, Employee excludeFromCheck) {","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"4ndrelim"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-03-15"},{"lineNumber":125,"author":{"gitId":"4ndrelim"},"content":"        requireNonNull(excludeFromCheck);","lastModifiedDate":"2023-03-15"},{"lineNumber":126,"author":{"gitId":"4ndrelim"},"content":"        return employees.sharesPhoneNumber(person, excludeFromCheck);","lastModifiedDate":"2023-03-15"},{"lineNumber":127,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":128,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":129,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"4ndrelim"},"content":"     * Adds an employee to SudoHR.","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"4ndrelim"},"content":"     * The person must not already exist in SudoHR and","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"4ndrelim"},"content":"     * should not have any clashes with email or phone number fields","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"4ndrelim"},"content":"    public void addEmployee(Employee person) {","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"4ndrelim"},"content":"        employees.add(person);","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":139,"author":{"gitId":"4ndrelim"},"content":"     * Replaces the given person {@code target} in the list with {@code editedEmployee}.","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"4ndrelim"},"content":"     * {@code target} must exist in SudoHR.","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"4ndrelim"},"content":"     * The person identity of {@code editedEmployee} must not be the same as","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"4ndrelim"},"content":"     * another existing employee in SudoHR.","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":144,"author":{"gitId":"pkwangjoo"},"content":"    public void setEmployee(Employee target, Employee editedEmployee) {","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"pkwangjoo"},"content":"        requireNonNull(editedEmployee);","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":147,"author":{"gitId":"pkwangjoo"},"content":"        employees.setEmployee(target, editedEmployee);","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"pkwangjoo"},"content":"     * Removes {@code key} from this {@code SudoHr}.","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"4ndrelim"},"content":"     * {@code key} must exist in SudoHR.","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"pkwangjoo"},"content":"    public void removeEmployee(Employee key) {","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"pkwangjoo"},"content":"        employees.remove(key);","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"kennethk-1201"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Department-Level Operations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-10"},{"lineNumber":159,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":160,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":161,"author":{"gitId":"kennethk-1201"},"content":"     * Returns true if a department with the same identity as {@code department} exists in SudoHR.","lastModifiedDate":"2023-03-10"},{"lineNumber":162,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":163,"author":{"gitId":"kennethk-1201"},"content":"    public boolean hasDepartment(Department department) {","lastModifiedDate":"2023-03-10"},{"lineNumber":164,"author":{"gitId":"kennethk-1201"},"content":"        requireNonNull(department);","lastModifiedDate":"2023-03-10"},{"lineNumber":165,"author":{"gitId":"kennethk-1201"},"content":"        return departments.contains(department);","lastModifiedDate":"2023-03-10"},{"lineNumber":166,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":167,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":168,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":169,"author":{"gitId":"kennethk-1201"},"content":"     * Returns the department with the given name.","lastModifiedDate":"2023-03-12"},{"lineNumber":170,"author":{"gitId":"kennethk-1201"},"content":"     * @param name The department name to find.","lastModifiedDate":"2023-03-12"},{"lineNumber":171,"author":{"gitId":"kennethk-1201"},"content":"     * @return The corresponding department.","lastModifiedDate":"2023-03-12"},{"lineNumber":172,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":173,"author":{"gitId":"kennethk-1201"},"content":"    public Department getDepartment(DepartmentName name) {","lastModifiedDate":"2023-03-12"},{"lineNumber":174,"author":{"gitId":"kennethk-1201"},"content":"        return departments.getDepartment(name);","lastModifiedDate":"2023-03-12"},{"lineNumber":175,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":176,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":177,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":178,"author":{"gitId":"kennethk-1201"},"content":"     * Adds a department to the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"kennethk-1201"},"content":"     * The department must not already exist in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"kennethk-1201"},"content":"    public void addDepartment(Department d) {","lastModifiedDate":"2023-03-08"},{"lineNumber":182,"author":{"gitId":"kennethk-1201"},"content":"        departments.add(d);","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"4ndrelim"},"content":"     * Replaces the given department {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2023-03-14"},{"lineNumber":187,"author":{"gitId":"4ndrelim"},"content":"     * {@code target} must exist in SudoHR.","lastModifiedDate":"2023-03-14"},{"lineNumber":188,"author":{"gitId":"4ndrelim"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in SudoHR.","lastModifiedDate":"2023-03-14"},{"lineNumber":189,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":190,"author":{"gitId":"kennethk-1201"},"content":"    public void setDepartment(Department target, Department editedDepartment) {","lastModifiedDate":"2023-03-08"},{"lineNumber":191,"author":{"gitId":"kennethk-1201"},"content":"        requireNonNull(editedDepartment);","lastModifiedDate":"2023-03-10"},{"lineNumber":192,"author":{"gitId":"kennethk-1201"},"content":"        departments.setDepartment(target, editedDepartment);","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":194,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":195,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":196,"author":{"gitId":"kennethk-1201"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-03-08"},{"lineNumber":197,"author":{"gitId":"kennethk-1201"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":198,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":199,"author":{"gitId":"kennethk-1201"},"content":"    public void removeDepartment(Department key) {","lastModifiedDate":"2023-03-08"},{"lineNumber":200,"author":{"gitId":"kennethk-1201"},"content":"        departments.remove(key);","lastModifiedDate":"2023-03-08"},{"lineNumber":201,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":202,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":203,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":204,"author":{"gitId":"kennethk-1201"},"content":"     * Adds a given employee from a given department","lastModifiedDate":"2023-03-08"},{"lineNumber":205,"author":{"gitId":"kennethk-1201"},"content":"     * @param p The employee to add","lastModifiedDate":"2023-03-08"},{"lineNumber":206,"author":{"gitId":"kennethk-1201"},"content":"     * @param d The department to add the employee to","lastModifiedDate":"2023-03-08"},{"lineNumber":207,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":208,"author":{"gitId":"pkwangjoo"},"content":"    public void addEmployeeToDepartment(Employee p, Department d) {","lastModifiedDate":"2023-03-13"},{"lineNumber":209,"author":{"gitId":"kennethk-1201"},"content":"        requireNonNull(p);","lastModifiedDate":"2023-03-10"},{"lineNumber":210,"author":{"gitId":"kennethk-1201"},"content":"        requireNonNull(d);","lastModifiedDate":"2023-03-10"},{"lineNumber":211,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":212,"author":{"gitId":"kennethk-1201"},"content":"        d.addEmployee(p);","lastModifiedDate":"2023-03-08"},{"lineNumber":213,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":214,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":215,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":216,"author":{"gitId":"kennethk-1201"},"content":"     * Removes a given employee from a given department","lastModifiedDate":"2023-03-08"},{"lineNumber":217,"author":{"gitId":"kennethk-1201"},"content":"     * @param p The employee to remove","lastModifiedDate":"2023-03-08"},{"lineNumber":218,"author":{"gitId":"kennethk-1201"},"content":"     * @param d The department to remove the employee fro","lastModifiedDate":"2023-03-08"},{"lineNumber":219,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":220,"author":{"gitId":"pkwangjoo"},"content":"    public void removeEmployeeFromDepartment(Employee p, Department d) {","lastModifiedDate":"2023-03-13"},{"lineNumber":221,"author":{"gitId":"kennethk-1201"},"content":"        requireNonNull(p);","lastModifiedDate":"2023-03-10"},{"lineNumber":222,"author":{"gitId":"kennethk-1201"},"content":"        requireNonNull(d);","lastModifiedDate":"2023-03-10"},{"lineNumber":223,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":224,"author":{"gitId":"kennethk-1201"},"content":"        d.removeEmployee(p);","lastModifiedDate":"2023-03-08"},{"lineNumber":225,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":226,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":227,"author":{"gitId":"kennethk-1201"},"content":"    //// event-level operations","lastModifiedDate":"2023-03-08"},{"lineNumber":228,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":229,"author":{"gitId":"kennethk-1201"},"content":"    //// leave-level operations","lastModifiedDate":"2023-03-08"},{"lineNumber":230,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"pkwangjoo"},"content":"        return employees.asUnmodifiableObservableList().size() + \" employees\";","lastModifiedDate":"2023-03-13"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"pkwangjoo"},"content":"    public ObservableList\u003cEmployee\u003e getEmployeeList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":241,"author":{"gitId":"pkwangjoo"},"content":"        return employees.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-13"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":244,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":245,"author":{"gitId":"kennethk-1201"},"content":"    public ObservableList\u003cDepartment\u003e getDepartmentList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":246,"author":{"gitId":"kennethk-1201"},"content":"        return departments.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-08"},{"lineNumber":247,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":248,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":252,"author":{"gitId":"pkwangjoo"},"content":"                || (other instanceof SudoHr // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":253,"author":{"gitId":"pkwangjoo"},"content":"                \u0026\u0026 employees.equals(((SudoHr) other).employees));","lastModifiedDate":"2023-03-13"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":258,"author":{"gitId":"pkwangjoo"},"content":"        return employees.hashCode();","lastModifiedDate":"2023-03-13"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"pkwangjoo":32,"kennethk-1201":87,"4ndrelim":64,"-":77}},{"path":"src/main/java/seedu/sudohr/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.model;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.GuiSettings;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"pkwangjoo"},"content":"    private Path sudoHrFilePath \u003d Paths.get(\"data\" , \"sudohr.json\");","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"pkwangjoo"},"content":"        setSudoHrFilePath(newUserPrefs.getSudoHrFilePath());","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"pkwangjoo"},"content":"    public Path getSudoHrFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"pkwangjoo"},"content":"        return sudoHrFilePath;","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"pkwangjoo"},"content":"    public void setSudoHrFilePath(Path sudoHrFilePath) {","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"pkwangjoo"},"content":"        requireNonNull(sudoHrFilePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"pkwangjoo"},"content":"        this.sudoHrFilePath \u003d sudoHrFilePath;","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"pkwangjoo"},"content":"                \u0026\u0026 sudoHrFilePath.equals(o.sudoHrFilePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"pkwangjoo"},"content":"        return Objects.hash(guiSettings, sudoHrFilePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"pkwangjoo"},"content":"        sb.append(\"\\nLocal data file location : \" + sudoHrFilePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"pkwangjoo":12,"-":75}},{"path":"src/main/java/seedu/sudohr/model/department/Department.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package seedu.sudohr.model.department;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":" * Represents a Department in SudoHR.","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"public class Department {","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"    private final DepartmentName name;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":"    private final Set\u003cEmployee\u003e employees \u003d new HashSet\u003c\u003e(); // To convert to UniqueList","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"    public Department(DepartmentName name) {","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"     * Conversion from JSON to Department","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"     * @param name name of department","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"     * @param employees employees in the department","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"pkwangjoo"},"content":"    public Department(DepartmentName name, Set\u003cEmployee\u003e employees) {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"        this.employees.addAll(employees);","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"    public DepartmentName getName() {","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"        return name;","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"pkwangjoo"},"content":"    public Set\u003cEmployee\u003e getEmployees() {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"        return Collections.unmodifiableSet(employees);","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"     * Adds an employee to the department.","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"     * The employee must not already exist in the department.","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"pkwangjoo"},"content":"    public void addEmployee(Employee e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"        employees.add(e);","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"kennethk-1201"},"content":"     * Removes {@code key} from this {@code sudohrBook}.","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"kennethk-1201"},"content":"     * {@code key} must exist in the department.","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"pkwangjoo"},"content":"    public void removeEmployee(Employee key) {","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"kennethk-1201"},"content":"        employees.remove(key);","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"kennethk-1201"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"kennethk-1201"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"kennethk-1201"},"content":"        builder.append(getName());","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"kennethk-1201"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"kennethk-1201"},"content":"     * Equality only compares by department name.","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"kennethk-1201"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"kennethk-1201"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"kennethk-1201"},"content":"                || (other instanceof Department // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"kennethk-1201"},"content":"                \u0026\u0026 name.equals(((Department) other).name));","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"kennethk-1201"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"kennethk-1201"},"content":"        return employees.hashCode();","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"pkwangjoo":6,"kennethk-1201":71}},{"path":"src/main/java/seedu/sudohr/model/department/DepartmentName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package seedu.sudohr.model.department;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":" * Represents a Employee\u0027s name in the address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"public class DepartmentName {","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"    /*","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"    public final String fullName;","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"     * @param name A valid name.","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"    public DepartmentName(String name) {","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"        fullName \u003d name;","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"kennethk-1201"},"content":"    public String toString() {","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"        return fullName;","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"kennethk-1201"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"kennethk-1201"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"kennethk-1201"},"content":"                || (other instanceof DepartmentName // instanceof handles nulls","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"kennethk-1201"},"content":"                \u0026\u0026 fullName.equals(((DepartmentName) other).fullName)); // state check","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"kennethk-1201"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"kennethk-1201"},"content":"        return fullName.hashCode();","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"pkwangjoo":1,"kennethk-1201":59}},{"path":"src/main/java/seedu/sudohr/model/department/UniqueDepartmentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package seedu.sudohr.model.department;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.exceptions.DepartmentNotFoundException;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.exceptions.DuplicateDepartmentException;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":" * A list of departments that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":" * A department is considered unique by comparing using {@code Department#equals(Department)}. As such, adding and","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":" * updating of departments uses Department#equals(Department) for equality so as to ensure that the department being","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":" * added or updated is unique in terms of identity in the UniqueDepartmentList. Also, the removal of a department","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":" * uses Department#equals(Department) so as to ensure that the department with exactly the same name will be removed.","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":" *","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"public class UniqueDepartmentList implements Iterable\u003cDepartment\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"    private final ObservableList\u003cDepartment\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"    private final ObservableList\u003cDepartment\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"     * Returns true if the list contains an equivalent department as the given argument.","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"    public boolean contains(Department toCheck) {","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"     * Adds a department to the list.","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"     * The department must not already exist in the list.","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"    public void add(Department toAdd) {","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"kennethk-1201"},"content":"            throw new DuplicateDepartmentException();","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"kennethk-1201"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"kennethk-1201"},"content":"     * Returns a department that has the given name","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"kennethk-1201"},"content":"     * @param name the department name","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"kennethk-1201"},"content":"     * @return the corresponding department","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"kennethk-1201"},"content":"    public Department getDepartment(DepartmentName name) {","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"kennethk-1201"},"content":"        for (Department department: internalList) {","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"kennethk-1201"},"content":"            if (department.getName().equals(name)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"kennethk-1201"},"content":"                return department;","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"kennethk-1201"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"kennethk-1201"},"content":"        return null;","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"kennethk-1201"},"content":"     * Replaces the department {@code target} in the list with {@code editedDepartment}.","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"kennethk-1201"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"kennethk-1201"},"content":"     * The department identity of {@code editedDepartment} must not be the same as another existing department in the","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"kennethk-1201"},"content":"     * list.","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"kennethk-1201"},"content":"    public void setDepartment(Department target, Department editedDepartment) {","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"kennethk-1201"},"content":"        requireAllNonNull(target, editedDepartment);","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"kennethk-1201"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"kennethk-1201"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"kennethk-1201"},"content":"            throw new DepartmentNotFoundException();","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"kennethk-1201"},"content":"        if (!target.equals(editedDepartment) \u0026\u0026 contains(editedDepartment)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"kennethk-1201"},"content":"            throw new DuplicateDepartmentException();","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"kennethk-1201"},"content":"        internalList.set(index, editedDepartment);","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"kennethk-1201"},"content":"     * Removes the equivalent department from the list.","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"kennethk-1201"},"content":"     * The department must exist in the list.","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"kennethk-1201"},"content":"    public void remove(Department toRemove) {","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"kennethk-1201"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"kennethk-1201"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"kennethk-1201"},"content":"            throw new DepartmentNotFoundException();","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"kennethk-1201"},"content":"    public void setDepartments(UniqueDepartmentList replacement) {","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"kennethk-1201"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"kennethk-1201"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"kennethk-1201"},"content":"     * Replaces the contents of this list with {@code d}.","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"kennethk-1201"},"content":"     * {@code d} must not contain duplicate internalList.","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"kennethk-1201"},"content":"    public void setDepartments(List\u003cDepartment\u003e d) {","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"kennethk-1201"},"content":"        requireAllNonNull(d);","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"kennethk-1201"},"content":"        if (!internalListAreUnique(d)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"kennethk-1201"},"content":"            throw new DuplicateDepartmentException();","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"kennethk-1201"},"content":"        // Replace department with new set of internalList","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"kennethk-1201"},"content":"        internalList.setAll(d);","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"kennethk-1201"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"kennethk-1201"},"content":"    public ObservableList\u003cDepartment\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"kennethk-1201"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"kennethk-1201"},"content":"    public Iterator\u003cDepartment\u003e iterator() {","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"kennethk-1201"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"kennethk-1201"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"kennethk-1201"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"kennethk-1201"},"content":"                || (other instanceof UniqueDepartmentList // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"kennethk-1201"},"content":"                \u0026\u0026 internalList.equals(((UniqueDepartmentList) other).internalList));","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"kennethk-1201"},"content":"     * Returns true if {@code d} contains only unique internalList.","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"kennethk-1201"},"content":"    private boolean internalListAreUnique(List\u003cDepartment\u003e departments) {","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"kennethk-1201"},"content":"        if (departments \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"kennethk-1201"},"content":"            return true; // Maybe replace with assertion?","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"kennethk-1201"},"content":"        for (int i \u003d 0; i \u003c departments.size() - 1; i++) {","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"kennethk-1201"},"content":"            for (int j \u003d i + 1; j \u003c departments.size(); j++) {","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"kennethk-1201"},"content":"                if (departments.get(i).equals(departments.get(j))) {","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"kennethk-1201"},"content":"                    return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"kennethk-1201"},"content":"                }","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"kennethk-1201"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"kennethk-1201"},"content":"        return true;","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"kennethk-1201":149}},{"path":"src/main/java/seedu/sudohr/model/department/exceptions/DepartmentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package seedu.sudohr.model.department.exceptions;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":" * Signals that the operation is unable to find the specified department.","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"public class DepartmentNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"kennethk-1201":6}},{"path":"src/main/java/seedu/sudohr/model/department/exceptions/DuplicateDepartmentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package seedu.sudohr.model.department.exceptions;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":" * identity).","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"public class DuplicateDepartmentException extends RuntimeException {","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"    public DuplicateDepartmentException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"        super(\"Operation would result in duplicate departments\");","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"kennethk-1201":11}},{"path":"src/main/java/seedu/sudohr/model/employee/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.model.employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":" * Represents a Employee\u0027s sudohr in the sudohr book.","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"pkwangjoo"},"content":"     * @param address A valid sudohr.","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pkwangjoo":4,"-":53}},{"path":"src/main/java/seedu/sudohr/model/employee/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.model.employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":" * Represents a Employee\u0027s email in the sudohr book.","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"pkwangjoo"},"content":"     * @param email A valid email sudohr.","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pkwangjoo":4,"-":67}},{"path":"src/main/java/seedu/sudohr/model/employee/Employee.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.model.employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"pkwangjoo"},"content":" * Represents a Employee in the sudohr book.","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"pkwangjoo"},"content":"public class Employee {","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"    private final Id id;","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"pkwangjoo"},"content":"    public Employee(Id id, Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"        requireAllNonNull(id, name, phone, email, address, tags);","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"4ndrelim"},"content":"    public Id getId() {","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"        return id;","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"pkwangjoo"},"content":"     * Returns true if both employees have the same id.","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"pkwangjoo"},"content":"    public boolean isSameEmployee(Employee otherEmployee) {","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"pkwangjoo"},"content":"        if (otherEmployee \u003d\u003d this) {","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"pkwangjoo"},"content":"        return otherEmployee !\u003d null","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"pkwangjoo"},"content":"                \u0026\u0026 otherEmployee.getId().equals(getId());","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"pkwangjoo"},"content":"     * Returns true if both employees have the same identity and data fields.","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"pkwangjoo"},"content":"     * This defines a stronger notion of equality between two employees.","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"pkwangjoo"},"content":"        if (!(other instanceof Employee)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"pkwangjoo"},"content":"        Employee otherEmployee \u003d (Employee) other;","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"pkwangjoo"},"content":"        return otherEmployee.getId().equals(getId())","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"pkwangjoo"},"content":"                \u0026\u0026 otherEmployee.getName().equals(getName())","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"pkwangjoo"},"content":"                \u0026\u0026 otherEmployee.getPhone().equals(getPhone())","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"pkwangjoo"},"content":"                \u0026\u0026 otherEmployee.getEmail().equals(getEmail())","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"pkwangjoo"},"content":"                \u0026\u0026 otherEmployee.getAddress().equals(getAddress())","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"pkwangjoo"},"content":"                \u0026\u0026 otherEmployee.getTags().equals(getTags());","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":105,"author":{"gitId":"4ndrelim"},"content":"     * Returns true if a different person shares the same email.","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":107,"author":{"gitId":"4ndrelim"},"content":"    public boolean emailClashes(Employee otherPerson) {","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"4ndrelim"},"content":"        if (!(otherPerson instanceof Employee)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"4ndrelim"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"4ndrelim"},"content":"        if (isSameEmployee(otherPerson)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"4ndrelim"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"4ndrelim"},"content":"        return otherPerson.getEmail().equals(getEmail());","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":118,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":120,"author":{"gitId":"4ndrelim"},"content":"     * Returns true if a different person shares the same phone number.","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":122,"author":{"gitId":"4ndrelim"},"content":"    public boolean phoneClashes(Employee otherPerson) {","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"4ndrelim"},"content":"        if (!(otherPerson instanceof Employee)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"4ndrelim"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":127,"author":{"gitId":"4ndrelim"},"content":"        if (isSameEmployee(otherPerson)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"4ndrelim"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"4ndrelim"},"content":"        return otherPerson.getPhone().equals(getPhone());","lastModifiedDate":"2023-03-12"},{"lineNumber":132,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":134,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":135,"author":{"gitId":"4ndrelim"},"content":"     * Returns true if there is a clash in any of the two fields: email, phone.","lastModifiedDate":"2023-03-12"},{"lineNumber":136,"author":{"gitId":"4ndrelim"},"content":"     * Name is excluded since several people can share the same names.","lastModifiedDate":"2023-03-12"},{"lineNumber":137,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":138,"author":{"gitId":"4ndrelim"},"content":"    public boolean clashes(Employee otherPerson) {","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"4ndrelim"},"content":"        if (isSameEmployee(otherPerson)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"4ndrelim"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":141,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":142,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":143,"author":{"gitId":"4ndrelim"},"content":"        return emailClashes(otherPerson) || phoneClashes(otherPerson);","lastModifiedDate":"2023-03-12"},{"lineNumber":144,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":145,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"4ndrelim"},"content":"        return Objects.hash(id, name, phone, email, address, tags);","lastModifiedDate":"2023-03-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"4ndrelim"},"content":"                .append(\"; Employee ID: \")","lastModifiedDate":"2023-03-10"},{"lineNumber":157,"author":{"gitId":"4ndrelim"},"content":"                .append(getId())","lastModifiedDate":"2023-03-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pkwangjoo":21,"4ndrelim":52,"-":99}},{"path":"src/main/java/seedu/sudohr/model/employee/Id.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.model.employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":" * Represents an employee\u0027s assigned identity number in the company.","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidId(String)}","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"public class Id {","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"            \"IDs can take any non-zero (integral) values, and it should not be blank. \"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"            + \"Note that ID is a field for an employee\u0027s unique identification in the company\";","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"    /*","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"     * Must have at least 1 non-zero digit in a sequence that is fully digits","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[0-9]*[1-9][0-9]*$\";","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"    public final String value;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"     * @param id A valid employee identification number.","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"    public Id(String id) {","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"        requireNonNull(id);","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"        checkArgument(isValidId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"        value \u003d removeLeadingZeroes(id);","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"     * Removes leading zeroes from any given string","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"4ndrelim"},"content":"    public static String removeLeadingZeroes(String str) {","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"        String strPattern \u003d \"^0+(?!$)\";","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"4ndrelim"},"content":"        str \u003d str.replaceAll(strPattern, \"\");","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"4ndrelim"},"content":"        return str;","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"4ndrelim"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"4ndrelim"},"content":"    public static boolean isValidId(String id) {","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"4ndrelim"},"content":"        return id.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"4ndrelim"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"4ndrelim"},"content":"    public String toString() {","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"4ndrelim"},"content":"        return value;","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"4ndrelim"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"4ndrelim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"4ndrelim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"4ndrelim"},"content":"                || (other instanceof Id // instanceof handles nulls","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"4ndrelim"},"content":"                \u0026\u0026 value.equals(((Id) other).value)); // state check","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"4ndrelim"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"4ndrelim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"4ndrelim"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"pkwangjoo":1,"4ndrelim":64}},{"path":"src/main/java/seedu/sudohr/model/employee/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.model.employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":" * Represents a Employee\u0027s name in the sudohr book.","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pkwangjoo":3,"4ndrelim":1,"-":55}},{"path":"src/main/java/seedu/sudohr/model/employee/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.model.employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.util.StringUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":" * Tests that a {@code Employee}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cEmployee\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"pkwangjoo"},"content":"    public boolean test(Employee employee) {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"pkwangjoo"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(employee.getName().fullName, keyword));","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"pkwangjoo":6,"-":25}},{"path":"src/main/java/seedu/sudohr/model/employee/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.model.employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":" * Represents a Employee\u0027s phone number in the sudohr book.","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pkwangjoo":3,"-":50}},{"path":"src/main/java/seedu/sudohr/model/employee/UniqueEmployeeList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.model.employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":3,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"import seedu.sudohr.model.employee.exceptions.DuplicateEmailException;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.exceptions.DuplicateEmployeeException;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"import seedu.sudohr.model.employee.exceptions.DuplicatePhoneNumberException;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.exceptions.EmployeeNotFoundException;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"pkwangjoo"},"content":" * A list of employees that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":" * An employee is considered unique by comparing using {@code Employee#isSameEmployee(Employee)}. As such, adding and","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":" * updating of employees uses Employee#isSameEmployee(Employee) for equality to ensure that the person being added or","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":" * updated isunique in terms of identity in the UniqueEmployeeList. However, the removal of a person uses","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":" * Employee#equals(Object) to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"pkwangjoo"},"content":" * @see Employee#isSameEmployee(Employee)","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"pkwangjoo"},"content":"public class UniqueEmployeeList implements Iterable\u003cEmployee\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"pkwangjoo"},"content":"    private final ObservableList\u003cEmployee\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"pkwangjoo"},"content":"    private final ObservableList\u003cEmployee\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"pkwangjoo"},"content":"    public boolean contains(Employee toCheck) {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"pkwangjoo"},"content":"        return internalList.stream().anyMatch(toCheck::isSameEmployee);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"4ndrelim"},"content":"     * Returns true if the list contains an equivalent person as the given argument,","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"     * excluding the specified person.","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"4ndrelim"},"content":"    public boolean contains(Employee toCheck, Employee toExclude) {","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"4ndrelim"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"4ndrelim"},"content":"        requireNonNull(toExclude);","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"4ndrelim"},"content":"        return internalList.stream().filter(","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"4ndrelim"},"content":"                e -\u003e !toExclude.isSameEmployee(e))","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"4ndrelim"},"content":"                .anyMatch(toCheck::isSameEmployee);","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"4ndrelim"},"content":"     * Returns true if the list contains a different person with the same email as the given argument.","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"4ndrelim"},"content":"    public boolean sharesEmail(Employee toCheck) {","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"4ndrelim"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"4ndrelim"},"content":"        return internalList.stream().anyMatch(toCheck::emailClashes);","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"4ndrelim"},"content":"     * Returns true if the list contains a different person with the same email as the given argument,","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"4ndrelim"},"content":"     * excluding the specified person.","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"4ndrelim"},"content":"    public boolean sharesEmail(Employee toCheck, Employee toExclude) {","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"4ndrelim"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"4ndrelim"},"content":"        requireNonNull(toExclude);","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"4ndrelim"},"content":"        return internalList.stream().filter(","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"4ndrelim"},"content":"                        e -\u003e !toExclude.isSameEmployee(e))","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"4ndrelim"},"content":"                .anyMatch(toCheck::emailClashes);","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"4ndrelim"},"content":"     * Returns true if the list contains a different person with the same phone number as the given argument.","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"4ndrelim"},"content":"    public boolean sharesPhoneNumber(Employee toCheck) {","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"4ndrelim"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"4ndrelim"},"content":"        return internalList.stream().anyMatch(toCheck::phoneClashes);","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"4ndrelim"},"content":"     * Returns true if the list contains a different person with the same phone number as the given argument,","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"4ndrelim"},"content":"     * excluding the specified person.","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"4ndrelim"},"content":"    public boolean sharesPhoneNumber(Employee toCheck, Employee toExclude) {","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"4ndrelim"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"4ndrelim"},"content":"        requireNonNull(toExclude);","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"4ndrelim"},"content":"        return internalList.stream().filter(","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"4ndrelim"},"content":"                        e -\u003e !toExclude.isSameEmployee(e))","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"4ndrelim"},"content":"                .anyMatch(toCheck::phoneClashes);","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"4ndrelim"},"content":"     * The person must not share the same email or phone number with another.","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"pkwangjoo"},"content":"    public void add(Employee toAdd) {","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"pkwangjoo"},"content":"            throw new DuplicateEmployeeException();","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"4ndrelim"},"content":"        if (sharesPhoneNumber(toAdd)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"4ndrelim"},"content":"            throw new DuplicatePhoneNumberException();","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"4ndrelim"},"content":"        if (sharesEmail(toAdd)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"4ndrelim"},"content":"            throw new DuplicateEmailException();","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"4ndrelim"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"4ndrelim"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"4ndrelim"},"content":"    public void setEmployee(Employee target, Employee editedPerson) {","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"4ndrelim"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":121,"author":{"gitId":"pkwangjoo"},"content":"            throw new EmployeeNotFoundException();","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":123,"author":{"gitId":"4ndrelim"},"content":"        if (contains(editedPerson, target)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"pkwangjoo"},"content":"            throw new DuplicateEmployeeException();","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"4ndrelim"},"content":"        if (sharesPhoneNumber(editedPerson, target)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":128,"author":{"gitId":"4ndrelim"},"content":"            throw new DuplicatePhoneNumberException();","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"4ndrelim"},"content":"        if (sharesEmail(editedPerson, target)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":132,"author":{"gitId":"4ndrelim"},"content":"            throw new DuplicateEmailException();","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"4ndrelim"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"pkwangjoo"},"content":"    public void remove(Employee toRemove) {","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":145,"author":{"gitId":"pkwangjoo"},"content":"            throw new EmployeeNotFoundException();","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"pkwangjoo"},"content":"    public void setEmployees(UniqueEmployeeList replacement) {","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":153,"author":{"gitId":"4ndrelim"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"4ndrelim"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":156,"author":{"gitId":"4ndrelim"},"content":"    public void setEmployees(List\u003cEmployee\u003e persons) {","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"4ndrelim"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"4ndrelim"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"pkwangjoo"},"content":"            throw new DuplicateEmployeeException();","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":161,"author":{"gitId":"4ndrelim"},"content":"        if (!phoneNumbersAreUnique(persons)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"4ndrelim"},"content":"            throw new DuplicatePhoneNumberException();","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"4ndrelim"},"content":"        if (!emailsAreUnique(persons)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"4ndrelim"},"content":"            throw new DuplicateEmailException();","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":168,"author":{"gitId":"4ndrelim"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2023-03-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":173,"author":{"gitId":"pkwangjoo"},"content":"    public ObservableList\u003cEmployee\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":177,"author":{"gitId":"pkwangjoo"},"content":"    public Iterator\u003cEmployee\u003e iterator() {","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":180,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":181,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":182,"author":{"gitId":"4ndrelim"},"content":"     * Returns if two lists are equal by checking the contents of the lists.","lastModifiedDate":"2023-03-15"},{"lineNumber":183,"author":{"gitId":"4ndrelim"},"content":"     * @param other the list to check against","lastModifiedDate":"2023-03-15"},{"lineNumber":184,"author":{"gitId":"4ndrelim"},"content":"     * @return a boolean value indicating equality.","lastModifiedDate":"2023-03-15"},{"lineNumber":185,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":188,"author":{"gitId":"4ndrelim"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":189,"author":{"gitId":"4ndrelim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-15"},{"lineNumber":190,"author":{"gitId":"4ndrelim"},"content":"            return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":191,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":192,"author":{"gitId":"4ndrelim"},"content":"        if (other instanceof UniqueEmployeeList) { // handles null","lastModifiedDate":"2023-03-15"},{"lineNumber":193,"author":{"gitId":"4ndrelim"},"content":"            // idea it to make sure each list is a subset of the other","lastModifiedDate":"2023-03-15"},{"lineNumber":194,"author":{"gitId":"4ndrelim"},"content":"            Map\u003cId, Employee\u003e currentList \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-15"},{"lineNumber":195,"author":{"gitId":"4ndrelim"},"content":"            Map\u003cId, Employee\u003e otherList \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-15"},{"lineNumber":196,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":197,"author":{"gitId":"4ndrelim"},"content":"            for (Employee e : internalList) {","lastModifiedDate":"2023-03-15"},{"lineNumber":198,"author":{"gitId":"4ndrelim"},"content":"                currentList.put(e.getId(), e);","lastModifiedDate":"2023-03-15"},{"lineNumber":199,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":200,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":201,"author":{"gitId":"4ndrelim"},"content":"            for (Employee e : (UniqueEmployeeList) other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":202,"author":{"gitId":"4ndrelim"},"content":"                otherList.put(e.getId(), e);","lastModifiedDate":"2023-03-15"},{"lineNumber":203,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":204,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":205,"author":{"gitId":"4ndrelim"},"content":"            for (Id id : currentList.keySet()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":206,"author":{"gitId":"4ndrelim"},"content":"                Employee employeeFromCurrent \u003d currentList.get(id);","lastModifiedDate":"2023-03-15"},{"lineNumber":207,"author":{"gitId":"4ndrelim"},"content":"                Employee employeeFromOther \u003d otherList.getOrDefault(id, null);","lastModifiedDate":"2023-03-15"},{"lineNumber":208,"author":{"gitId":"4ndrelim"},"content":"                if (employeeFromOther \u003d\u003d null","lastModifiedDate":"2023-03-15"},{"lineNumber":209,"author":{"gitId":"4ndrelim"},"content":"                        || !employeeFromCurrent.equals(employeeFromOther)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":210,"author":{"gitId":"4ndrelim"},"content":"                    return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":211,"author":{"gitId":"4ndrelim"},"content":"                }","lastModifiedDate":"2023-03-15"},{"lineNumber":212,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":213,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":214,"author":{"gitId":"4ndrelim"},"content":"            for (Id id : otherList.keySet()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":215,"author":{"gitId":"4ndrelim"},"content":"                Employee employeeFromCurrent \u003d currentList.getOrDefault(id, null);","lastModifiedDate":"2023-03-15"},{"lineNumber":216,"author":{"gitId":"4ndrelim"},"content":"                Employee employeeFromOther \u003d otherList.get(id);","lastModifiedDate":"2023-03-15"},{"lineNumber":217,"author":{"gitId":"4ndrelim"},"content":"                if (employeeFromCurrent \u003d\u003d null","lastModifiedDate":"2023-03-15"},{"lineNumber":218,"author":{"gitId":"4ndrelim"},"content":"                        || !employeeFromCurrent.equals(employeeFromOther)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":219,"author":{"gitId":"4ndrelim"},"content":"                    return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":220,"author":{"gitId":"4ndrelim"},"content":"                }","lastModifiedDate":"2023-03-15"},{"lineNumber":221,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":222,"author":{"gitId":"4ndrelim"},"content":"            return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":224,"author":{"gitId":"4ndrelim"},"content":"        return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":225,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":231,"author":{"gitId":"4ndrelim"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2023-03-14"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":233,"author":{"gitId":"4ndrelim"},"content":"    private boolean personsAreUnique(List\u003cEmployee\u003e persons) {","lastModifiedDate":"2023-03-14"},{"lineNumber":234,"author":{"gitId":"4ndrelim"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":235,"author":{"gitId":"4ndrelim"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":236,"author":{"gitId":"4ndrelim"},"content":"                if (persons.get(i).isSameEmployee(persons.get(j))) {","lastModifiedDate":"2023-03-14"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":243,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":244,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":245,"author":{"gitId":"4ndrelim"},"content":"     * Returns true if {@code persons} contains only unique emails.","lastModifiedDate":"2023-03-14"},{"lineNumber":246,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":247,"author":{"gitId":"4ndrelim"},"content":"    private boolean emailsAreUnique(List\u003cEmployee\u003e persons) {","lastModifiedDate":"2023-03-14"},{"lineNumber":248,"author":{"gitId":"4ndrelim"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":249,"author":{"gitId":"4ndrelim"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":250,"author":{"gitId":"4ndrelim"},"content":"                if (persons.get(i).emailClashes(persons.get(j))) {","lastModifiedDate":"2023-03-14"},{"lineNumber":251,"author":{"gitId":"4ndrelim"},"content":"                    return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":252,"author":{"gitId":"4ndrelim"},"content":"                }","lastModifiedDate":"2023-03-13"},{"lineNumber":253,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":254,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":255,"author":{"gitId":"4ndrelim"},"content":"        return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":256,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":257,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":258,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":259,"author":{"gitId":"4ndrelim"},"content":"     * Returns true if {@code persons} contains only unique phone numbers.","lastModifiedDate":"2023-03-14"},{"lineNumber":260,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":261,"author":{"gitId":"4ndrelim"},"content":"    private boolean phoneNumbersAreUnique(List\u003cEmployee\u003e persons) {","lastModifiedDate":"2023-03-14"},{"lineNumber":262,"author":{"gitId":"4ndrelim"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":263,"author":{"gitId":"4ndrelim"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":264,"author":{"gitId":"4ndrelim"},"content":"                if (persons.get(i).phoneClashes(persons.get(j))) {","lastModifiedDate":"2023-03-14"},{"lineNumber":265,"author":{"gitId":"4ndrelim"},"content":"                    return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":266,"author":{"gitId":"4ndrelim"},"content":"                }","lastModifiedDate":"2023-03-13"},{"lineNumber":267,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":268,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":269,"author":{"gitId":"4ndrelim"},"content":"        return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":270,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pkwangjoo":21,"4ndrelim":171,"-":79}},{"path":"src/main/java/seedu/sudohr/model/employee/exceptions/DuplicateEmailException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package seedu.sudohr.model.employee.exceptions;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":" * Signals that the operation will result in duplicate emails for different employees","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"public class DuplicateEmailException extends RuntimeException {","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"    public DuplicateEmailException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"        super(\"Operation would result in duplicate emails\");","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"4ndrelim":10}},{"path":"src/main/java/seedu/sudohr/model/employee/exceptions/DuplicateEmployeeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.model.employee.exceptions;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"pkwangjoo"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":" * Signals that the operation will result in duplicate Employees.","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":" * Employees are considered duplicates if they have the same identity field.","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"pkwangjoo"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"public class DuplicateEmployeeException extends RuntimeException {","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"    public DuplicateEmployeeException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"        super(\"Operation would result in duplicate employees\");","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"pkwangjoo":9,"4ndrelim":2}},{"path":"src/main/java/seedu/sudohr/model/employee/exceptions/DuplicatePhoneNumberException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package seedu.sudohr.model.employee.exceptions;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":" * Signals that the operation will result in duplicate phone number for different employees","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"public class DuplicatePhoneNumberException extends RuntimeException {","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"    public DuplicatePhoneNumberException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"        super(\"Operation would result in duplicate phone numbers\");","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"4ndrelim":10}},{"path":"src/main/java/seedu/sudohr/model/employee/exceptions/EmployeeNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.model.employee.exceptions;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"pkwangjoo"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":" * Signals that the operation is unable to find the specified employee.","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"pkwangjoo"},"content":"public class EmployeeNotFoundException extends RuntimeException {","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"    // add implementation for person not found..? TODO","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"pkwangjoo":8}},{"path":"src/main/java/seedu/sudohr/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.model.tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":" * Represents a Tag in the sudohr book.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pkwangjoo":3,"-":51}},{"path":"src/main/java/seedu/sudohr/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.model.util;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.ReadOnlySudoHr;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.SudoHr;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Email;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Id;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"pkwangjoo"},"content":" * Contains utility methods for populating {@code SudoHr} with sample data.","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"pkwangjoo"},"content":"    public static Employee[] getSampleEmployees() {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"pkwangjoo"},"content":"        return new Employee[] {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"pkwangjoo"},"content":"            new Employee(new Id(\"1\"), new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":26,"author":{"gitId":"pkwangjoo"},"content":"            new Employee(new Id(\"2\"), new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":29,"author":{"gitId":"pkwangjoo"},"content":"            new Employee(new Id(\"3\"), new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"                    new Email(\"charlotte@example.com\"), new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"pkwangjoo"},"content":"            new Employee(new Id(\"4\"), new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"pkwangjoo"},"content":"            new Employee(new Id(\"5\"), new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"pkwangjoo"},"content":"            new Employee(new Id(\"6\"), new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"pkwangjoo"},"content":"                new Email(\"royb@example.com\"), new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"                getTagSet(\"colleagues\")),","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"4ndrelim"},"content":"            new Employee(new Id(\"7\"), new Name(\"TheMythDaMith\"), new Phone(\"98987676\"),","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"                    new Email(\"themyth@example.com\"), new Address(\"COM2 NUS 85, #03-10\"),","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"4ndrelim"},"content":"                    getTagSet(\"professor\"))","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"pkwangjoo"},"content":"    public static ReadOnlySudoHr getSampleSudoHr() {","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"pkwangjoo"},"content":"        SudoHr sampleAb \u003d new SudoHr();","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"pkwangjoo"},"content":"        for (Employee sampleEmployee : getSampleEmployees()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"pkwangjoo"},"content":"            sampleAb.addEmployee(sampleEmployee);","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"pkwangjoo":24,"4ndrelim":5,"-":34}},{"path":"src/main/java/seedu/sudohr/storage/JsonAdaptedDepartment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package seedu.sudohr.storage;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.Department;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.DepartmentName;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"pkwangjoo"},"content":" * Jackson-friendly version of {@link Employee}.","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"class JsonAdaptedDepartment {","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Department\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"    private final String name;","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"pkwangjoo"},"content":"    private final List\u003cJsonAdaptedEmployee\u003e employees \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"     * Constructs a {@code JsonAdaptedDepartment} with the given department details.","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"    public JsonAdaptedDepartment(@JsonProperty(\"name\") String name,","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"pkwangjoo"},"content":"                                 @JsonProperty(\"employees\") List\u003cJsonAdaptedEmployee\u003e employees) {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"        if (employees !\u003d null) {","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"            this.employees.addAll(employees);","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"     * Converts a given {@code Department} into this class for Jackson use.","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"    public JsonAdaptedDepartment(Department source) {","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"kennethk-1201"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"        this.employees.addAll(source.getEmployees().stream()","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"pkwangjoo"},"content":"                .map(JsonAdaptedEmployee::new)","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"kennethk-1201"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"pkwangjoo"},"content":"     * Converts this Jackson-friendly adapted department object into the model\u0027s {@code Employee} object.","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"pkwangjoo"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted employee.","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"kennethk-1201"},"content":"    public Department toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"pkwangjoo"},"content":"        final List\u003cEmployee\u003e departmentEmployees \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"pkwangjoo"},"content":"        for (JsonAdaptedEmployee employee : employees) {","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"kennethk-1201"},"content":"            departmentEmployees.add(employee.toModelType());","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"kennethk-1201"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"kennethk-1201"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"kennethk-1201"},"content":"                    DepartmentName.class.getSimpleName()));","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"kennethk-1201"},"content":"        if (!DepartmentName.isValidName(name)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"kennethk-1201"},"content":"            throw new IllegalValueException(DepartmentName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"kennethk-1201"},"content":"        final DepartmentName departmentName \u003d new DepartmentName(name);","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"pkwangjoo"},"content":"        final Set\u003cEmployee\u003e modelEmployees \u003d new HashSet\u003c\u003e(departmentEmployees);","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"kennethk-1201"},"content":"        return new Department(departmentName, modelEmployees);","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"pkwangjoo":10,"kennethk-1201":65}},{"path":"src/main/java/seedu/sudohr/storage/JsonAdaptedEmployee.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Email;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Id;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"pkwangjoo"},"content":" * Jackson-friendly version of {@link Employee}.","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"pkwangjoo"},"content":"class JsonAdaptedEmployee {","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"pkwangjoo"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Employee\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"    private final String id;","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"pkwangjoo"},"content":"     * Constructs a {@code JsonAdaptedEmployee} with the given employee details.","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"pkwangjoo"},"content":"    public JsonAdaptedEmployee(@JsonProperty(\"id\") String id,","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"                               @JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"pkwangjoo"},"content":"                               @JsonProperty(\"email\") String email, @JsonProperty(\"sudohr\") String address,","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                               @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"4ndrelim"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"pkwangjoo"},"content":"     * Converts a given {@code Employee} into this class for Jackson use.","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"pkwangjoo"},"content":"    public JsonAdaptedEmployee(Employee source) {","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"4ndrelim"},"content":"        id \u003d source.getId().value;","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"pkwangjoo"},"content":"     * Converts this Jackson-friendly adapted employee object into the model\u0027s {@code Employee} object.","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"pkwangjoo"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted employee.","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"pkwangjoo"},"content":"    public Employee toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"pkwangjoo"},"content":"        final List\u003cTag\u003e employeeTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"pkwangjoo"},"content":"            employeeTags.add(tag.toModelType());","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"4ndrelim"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"4ndrelim"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Id.class.getSimpleName()));","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"4ndrelim"},"content":"        if (!Id.isValidId(id)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"4ndrelim"},"content":"            throw new IllegalValueException(Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"4ndrelim"},"content":"        final Id modelId \u003d new Id(id);","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"pkwangjoo"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(employeeTags);","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"pkwangjoo"},"content":"        return new Employee(modelId, modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"pkwangjoo":24,"4ndrelim":14,"-":86}},{"path":"src/main/java/seedu/sudohr/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"pkwangjoo":3,"-":45}},{"path":"src/main/java/seedu/sudohr/storage/JsonSerializableSudoHr.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.ReadOnlySudoHr;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.SudoHr;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.Department;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"pkwangjoo"},"content":" * An Immutable SudoHr that is serializable to JSON format.","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"pkwangjoo"},"content":"@JsonRootName(value \u003d \"sudohr\")","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"pkwangjoo"},"content":"class JsonSerializableSudoHr {","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"pkwangjoo"},"content":"    public static final String MESSAGE_DUPLICATE_EMPLOYEE \u003d \"Employees list contains duplicate employee(s).\";","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"    public static final String MESSAGE_DUPLICATE_PHONE \u003d \"There are duplicate phone numbers in the employee list.\";","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"    public static final String MESSAGE_DUPLICATE_EMAIL \u003d \"There are duplicate email addresses in the employee list\";","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"    public static final String MESSAGE_DUPLICATE_DEPARTMENTS \u003d \"Departments list contains duplicate department(s).\";","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"pkwangjoo"},"content":"    private final List\u003cJsonAdaptedEmployee\u003e employees \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"    private final List\u003cJsonAdaptedDepartment\u003e departments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"pkwangjoo"},"content":"     * Constructs a {@code JsonSerializableSudoHr} with the given employees.","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"pkwangjoo"},"content":"    public JsonSerializableSudoHr(@JsonProperty(\"employees\") List\u003cJsonAdaptedEmployee\u003e employees,","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"                                  @JsonProperty(\"departments\") List\u003cJsonAdaptedDepartment\u003e departments) {","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"pkwangjoo"},"content":"        this.employees.addAll(employees);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"        this.departments.addAll(departments);","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"pkwangjoo"},"content":"     * Converts a given {@code ReadOnlySudoHr} into this class for Jackson use.","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"pkwangjoo"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableSudoHr}.","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"pkwangjoo"},"content":"    public JsonSerializableSudoHr(ReadOnlySudoHr source) {","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"pkwangjoo"},"content":"        employees.addAll(source.getEmployeeList().stream().map(JsonAdaptedEmployee::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"kennethk-1201"},"content":"        departments.addAll(source.getDepartmentList().stream().map(JsonAdaptedDepartment::new)","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"kennethk-1201"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"pkwangjoo"},"content":"     * Converts this sudohr book into the model\u0027s {@code SudoHr} object.","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"pkwangjoo"},"content":"    public SudoHr toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"pkwangjoo"},"content":"        SudoHr sudoHr \u003d new SudoHr();","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"pkwangjoo"},"content":"        for (JsonAdaptedEmployee jsonAdaptedEmployee : employees) {","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"pkwangjoo"},"content":"            Employee employee \u003d jsonAdaptedEmployee.toModelType();","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"pkwangjoo"},"content":"            if (sudoHr.hasEmployee(employee)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"pkwangjoo"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_EMPLOYEE);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"4ndrelim"},"content":"            if (sudoHr.hasClashingPhoneNumber(employee)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"4ndrelim"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PHONE);","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"4ndrelim"},"content":"            if (sudoHr.hasClashingEmail(employee)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"4ndrelim"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_EMAIL);","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"pkwangjoo"},"content":"            sudoHr.addEmployee(employee);","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"kennethk-1201"},"content":"        for (JsonAdaptedDepartment jsonAdaptedDepartment : departments) {","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"kennethk-1201"},"content":"            Department department \u003d jsonAdaptedDepartment.toModelType();","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"kennethk-1201"},"content":"            if (sudoHr.hasDepartment(department)) {","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"kennethk-1201"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_DEPARTMENTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"kennethk-1201"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"kennethk-1201"},"content":"            sudoHr.addDepartment(department);","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"pkwangjoo"},"content":"        return sudoHr;","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"pkwangjoo":26,"kennethk-1201":17,"4ndrelim":8,"-":34}},{"path":"src/main/java/seedu/sudohr/storage/JsonSudoHrStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.LogsCenter;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.util.FileUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.util.JsonUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.ReadOnlySudoHr;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"pkwangjoo"},"content":" * A class to access SudoHr data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"pkwangjoo"},"content":"public class JsonSudoHrStorage implements SudoHrStorage {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"pkwangjoo"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonSudoHrStorage.class);","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"pkwangjoo"},"content":"    public JsonSudoHrStorage(Path filePath) {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"pkwangjoo"},"content":"    public Path getSudoHrFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"pkwangjoo"},"content":"    public Optional\u003cReadOnlySudoHr\u003e readSudoHr() throws DataConversionException {","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"pkwangjoo"},"content":"        return readSudoHr(filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"pkwangjoo"},"content":"     * Similar to {@link #readSudoHr()}.","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"pkwangjoo"},"content":"    public Optional\u003cReadOnlySudoHr\u003e readSudoHr(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"pkwangjoo"},"content":"        Optional\u003cJsonSerializableSudoHr\u003e jsonSudoHr \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"pkwangjoo"},"content":"                filePath, JsonSerializableSudoHr.class);","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"pkwangjoo"},"content":"        if (!jsonSudoHr.isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"pkwangjoo"},"content":"            return Optional.of(jsonSudoHr.get().toModelType());","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"pkwangjoo"},"content":"    public void saveSudoHr(ReadOnlySudoHr sudoHr) throws IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"pkwangjoo"},"content":"        saveSudoHr(sudoHr, filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"pkwangjoo"},"content":"     * Similar to {@link #saveSudoHr(ReadOnlySudoHr)}.","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"pkwangjoo"},"content":"    public void saveSudoHr(ReadOnlySudoHr sudoHr, Path filePath) throws IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"pkwangjoo"},"content":"        requireNonNull(sudoHr);","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"pkwangjoo"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableSudoHr(sudoHr), filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"pkwangjoo":26,"-":54}},{"path":"src/main/java/seedu/sudohr/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.util.JsonUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"pkwangjoo":5,"-":42}},{"path":"src/main/java/seedu/sudohr/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.ReadOnlySudoHr;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":"public interface Storage extends SudoHrStorage, UserPrefsStorage {","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"pkwangjoo"},"content":"    Path getSudoHrFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"pkwangjoo"},"content":"    Optional\u003cReadOnlySudoHr\u003e readSudoHr() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"pkwangjoo"},"content":"    void saveSudoHr(ReadOnlySudoHr sudoHr) throws IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"pkwangjoo":9,"-":23}},{"path":"src/main/java/seedu/sudohr/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.LogsCenter;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.ReadOnlySudoHr;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":" * Manages storage of SudoHr data in local storage.","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"pkwangjoo"},"content":"    private SudoHrStorage sudoHrStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"pkwangjoo"},"content":"     * Creates a {@code StorageManager} with the given {@code SudoHrStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"pkwangjoo"},"content":"    public StorageManager(SudoHrStorage sudoHrStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"pkwangjoo"},"content":"        this.sudoHrStorage \u003d sudoHrStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"pkwangjoo"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SudoHr methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"pkwangjoo"},"content":"    public Path getSudoHrFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"pkwangjoo"},"content":"        return sudoHrStorage.getSudoHrFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"pkwangjoo"},"content":"    public Optional\u003cReadOnlySudoHr\u003e readSudoHr() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"pkwangjoo"},"content":"        return readSudoHr(sudoHrStorage.getSudoHrFilePath());","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"pkwangjoo"},"content":"    public Optional\u003cReadOnlySudoHr\u003e readSudoHr(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"pkwangjoo"},"content":"        return sudoHrStorage.readSudoHr(filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"pkwangjoo"},"content":"    public void saveSudoHr(ReadOnlySudoHr sudoHr) throws IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"pkwangjoo"},"content":"        saveSudoHr(sudoHr, sudoHrStorage.getSudoHrFilePath());","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"pkwangjoo"},"content":"    public void saveSudoHr(ReadOnlySudoHr sudoHr, Path filePath) throws IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"pkwangjoo"},"content":"        sudoHrStorage.saveSudoHr(sudoHr, filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"pkwangjoo":22,"-":56}},{"path":"src/main/java/seedu/sudohr/storage/SudoHrStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.ReadOnlySudoHr;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.SudoHr;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"pkwangjoo"},"content":" * Represents a storage for {@link SudoHr}.","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"pkwangjoo"},"content":"public interface SudoHrStorage {","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"pkwangjoo"},"content":"    Path getSudoHrFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"pkwangjoo"},"content":"     * Returns SudoHr data as a {@link ReadOnlySudoHr}.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"pkwangjoo"},"content":"    Optional\u003cReadOnlySudoHr\u003e readSudoHr() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"pkwangjoo"},"content":"     * @see #getSudoHrFilePath()","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"pkwangjoo"},"content":"    Optional\u003cReadOnlySudoHr\u003e readSudoHr(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"pkwangjoo"},"content":"     * Saves the given {@link ReadOnlySudoHr} to the storage.","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"pkwangjoo"},"content":"     * @param sudoHr cannot be null.","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"pkwangjoo"},"content":"    void saveSudoHr(ReadOnlySudoHr sudoHr) throws IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"pkwangjoo"},"content":"     * @see #saveSudoHr(ReadOnlySudoHr)","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"pkwangjoo"},"content":"    void saveSudoHr(ReadOnlySudoHr sudoHr, Path filePath) throws IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"pkwangjoo":16,"-":30}},{"path":"src/main/java/seedu/sudohr/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"pkwangjoo"},"content":" * Represents a storage for {@link seedu.sudohr.model.UserPrefs}.","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"pkwangjoo"},"content":"     * Saves the given {@link seedu.sudohr.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"pkwangjoo":6,"-":30}},{"path":"src/main/java/seedu/sudohr/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.CommandResult;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"pkwangjoo"},"content":"         * @see seedu.sudohr.logic.Logic#execute(String)","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"pkwangjoo":5,"-":80}},{"path":"src/main/java/seedu/sudohr/ui/EmployeeCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"pkwangjoo"},"content":" * An UI component that displays information of a {@code Employee}.","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":"public class EmployeeCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"pkwangjoo"},"content":"    private static final String FXML \u003d \"EmployeeListCard.fxml\";","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"pkwangjoo"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on SudoHr level 4\u003c/a\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"pkwangjoo"},"content":"    public final Employee employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"    private Label employeeId;","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"    @FXML","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"4ndrelim"},"content":"    private Label index;","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"pkwangjoo"},"content":"     * Creates a {@code PersonCode} with the given {@code Employee} and index to display.","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"pkwangjoo"},"content":"    public EmployeeCard(Employee employee, int displayedIndex) {","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"pkwangjoo"},"content":"        this.employee \u003d employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"4ndrelim"},"content":"        index.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"pkwangjoo"},"content":"        name.setText(employee.getName().fullName);","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"pkwangjoo"},"content":"        employeeId.setText(\"Employee ID: \" + employee.getId().value);","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"pkwangjoo"},"content":"        phone.setText(employee.getPhone().value);","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"pkwangjoo"},"content":"        address.setText(employee.getAddress().value);","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"pkwangjoo"},"content":"        email.setText(employee.getEmail().value);","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"pkwangjoo"},"content":"        employee.getTags().stream()","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"pkwangjoo"},"content":"        if (!(other instanceof EmployeeCard)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"pkwangjoo"},"content":"        EmployeeCard card \u003d (EmployeeCard) other;","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"4ndrelim"},"content":"        return index.getText().equals(card.index.getText())","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"pkwangjoo"},"content":"                \u0026\u0026 employee.equals(card.employee);","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"pkwangjoo":19,"4ndrelim":5,"-":56}},{"path":"src/main/java/seedu/sudohr/ui/EmployeeListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.ui;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"pkwangjoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"pkwangjoo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.LogsCenter;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"pkwangjoo"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"pkwangjoo"},"content":" * Panel containing the list of employees.","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"pkwangjoo"},"content":"public class EmployeeListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"pkwangjoo"},"content":"    private static final String FXML \u003d \"EmployeeListPanel.fxml\";","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"pkwangjoo"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(EmployeeListPanel.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"pkwangjoo"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"pkwangjoo"},"content":"    private ListView\u003cEmployee\u003e employeeListView;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"pkwangjoo"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"pkwangjoo"},"content":"     * Creates a {@code EmployeeListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"pkwangjoo"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"pkwangjoo"},"content":"    public EmployeeListPanel(ObservableList\u003cEmployee\u003e employeeList) {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"pkwangjoo"},"content":"        super(FXML);","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"pkwangjoo"},"content":"        employeeListView.setItems(employeeList);","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"pkwangjoo"},"content":"        employeeListView.setCellFactory(listView -\u003e new EmployeeListViewCell());","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"pkwangjoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"pkwangjoo"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"pkwangjoo"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Employee} using a {@code EmployeeCard}.","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"pkwangjoo"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"pkwangjoo"},"content":"    class EmployeeListViewCell extends ListCell\u003cEmployee\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"pkwangjoo"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"pkwangjoo"},"content":"        protected void updateItem(Employee employee, boolean empty) {","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"pkwangjoo"},"content":"            super.updateItem(employee, empty);","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"pkwangjoo"},"content":"            if (empty || employee \u003d\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"pkwangjoo"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"pkwangjoo"},"content":"                setText(null);","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"pkwangjoo"},"content":"            } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"pkwangjoo"},"content":"                setGraphic(new EmployeeCard(employee, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"pkwangjoo"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"pkwangjoo"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"pkwangjoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"pkwangjoo"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"pkwangjoo":49}},{"path":"src/main/java/seedu/sudohr/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.LogsCenter;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String USERGUIDE_URL \u003d \"https://se-education.org/addressbook-level3/UserGuide.html\";","lastModifiedDate":"2019-08-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"pkwangjoo":2,"-":100}},{"path":"src/main/java/seedu/sudohr/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.GuiSettings;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.LogsCenter;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.Logic;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.CommandResult;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"pkwangjoo"},"content":"    private EmployeeListPanel employeeListPanel;","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"pkwangjoo"},"content":"    private StackPane employeeListPanelPlaceholder;","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"pkwangjoo"},"content":"        employeeListPanel \u003d new EmployeeListPanel(logic.getFilteredEmployeeList());","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"pkwangjoo"},"content":"        employeeListPanelPlaceholder.getChildren().add(employeeListPanel.getRoot());","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"pkwangjoo"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getSudoHrFilePath());","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"pkwangjoo"},"content":"    public EmployeeListPanel getEmployeeListPanel() {","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"pkwangjoo"},"content":"        return employeeListPanel;","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"pkwangjoo"},"content":"     * @see seedu.sudohr.logic.Logic#execute(String)","lastModifiedDate":"2023-03-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"pkwangjoo":15,"-":181}},{"path":"src/main/java/seedu/sudohr/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"pkwangjoo":1,"-":27}},{"path":"src/main/java/seedu/sudohr/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"pkwangjoo":1,"-":27}},{"path":"src/main/java/seedu/sudohr/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"pkwangjoo":1,"-":12}},{"path":"src/main/java/seedu/sudohr/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.MainApp;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.LogsCenter;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.util.StringUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.Logic;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"pkwangjoo":5,"-":83}},{"path":"src/main/java/seedu/sudohr/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.MainApp;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"pkwangjoo":2,"-":86}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"pkwangjoo"},"content":"#filterField, #employeeListPanel, #personWebpage {","lastModifiedDate":"2023-03-13"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"pkwangjoo":1,"-":351}},{"path":"src/main/resources/view/EmployeeListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"        \u003cLabel fx:id\u003d\"index\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"      \u003cLabel fx:id\u003d\"employeeId\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$employeeId\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"4ndrelim":2,"-":35}},{"path":"src/main/resources/view/EmployeeListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"  \u003cListView fx:id\u003d\"employeeListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"pkwangjoo":1,"-":7}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"pkwangjoo"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"pkwangjoo"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"pkwangjoo":2,"-":43}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"pkwangjoo"},"content":"        \u003cVBox fx:id\u003d\"employeeList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"pkwangjoo"},"content":"          \u003cStackPane fx:id\u003d\"employeeListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"pkwangjoo":2,"-":58}},{"path":"src/test/java/seedu/sudohr/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"pkwangjoo":1,"-":57}},{"path":"src/test/java/seedu/sudohr/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.commons.core;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"pkwangjoo":1,"-":26}},{"path":"src/test/java/seedu/sudohr/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.commons.core;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"pkwangjoo":2,"-":133}},{"path":"src/test/java/seedu/sudohr/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.commons.core.index;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"pkwangjoo":2,"-":58}},{"path":"src/test/java/seedu/sudohr/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.commons.util;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"pkwangjoo":2,"-":34}},{"path":"src/test/java/seedu/sudohr/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.commons.util;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"pkwangjoo":3,"-":105}},{"path":"src/test/java/seedu/sudohr/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.commons.util;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.Config;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"pkwangjoo":4,"-":112}},{"path":"src/test/java/seedu/sudohr/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.commons.util;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"pkwangjoo":2,"-":21}},{"path":"src/test/java/seedu/sudohr/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.commons.util;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.testutil.SerializableTestClass;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.testutil.TestUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"pkwangjoo":3,"-":42}},{"path":"src/test/java/seedu/sudohr/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.commons.util;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"pkwangjoo":2,"-":141}},{"path":"src/test/java/seedu/sudohr/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.commons.core.Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.AddCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.CommandResult;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.ListCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.ModelManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.ReadOnlySudoHr;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.storage.JsonSudoHrStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.storage.StorageManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.testutil.PersonBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"pkwangjoo"},"content":"        JsonSudoHrStorage addressBookStorage \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"pkwangjoo"},"content":"                new JsonSudoHrStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"pkwangjoo"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"pkwangjoo"},"content":"        // Setup LogicManager with JsonSudoHrIoExceptionThrowingStub","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"pkwangjoo"},"content":"        JsonSudoHrStorage addressBookStorage \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"pkwangjoo"},"content":"                new JsonSudoHrIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"4ndrelim"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + ID_DESC_AMY + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"pkwangjoo"},"content":"        Employee expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"pkwangjoo"},"content":"        expectedModel.addEmployee(expectedPerson);","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"pkwangjoo"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredEmployeeList().remove(0));","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"pkwangjoo"},"content":"        Model expectedModel \u003d new ModelManager(model.getSudoHr(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"pkwangjoo"},"content":"    private static class JsonSudoHrIoExceptionThrowingStub extends JsonSudoHrStorage {","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"pkwangjoo"},"content":"        private JsonSudoHrIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"pkwangjoo"},"content":"        public void saveSudoHr(ReadOnlySudoHr sudoHr, Path filePath) throws IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"pkwangjoo":36,"4ndrelim":2,"-":125}},{"path":"src/test/java/seedu/sudohr/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.testutil.TypicalPersons.getTypicalSudoHr;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.ModelManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.testutil.PersonBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"        model \u003d new ModelManager(getTypicalSudoHr(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"        Employee validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"pkwangjoo"},"content":"        Model expectedModel \u003d new ModelManager(model.getSudoHr(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"        expectedModel.addEmployee(validPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"4ndrelim"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"4ndrelim"},"content":"        Employee personInList \u003d model.getSudoHr().getEmployeeList().get(0);","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"4ndrelim"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_EMPLOYEE);","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"4ndrelim"},"content":"    public void execute_duplicateIdOnly_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"4ndrelim"},"content":"        Employee personInList \u003d model.getSudoHr().getEmployeeList().get(0);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"4ndrelim"},"content":"        Employee duplicateIdPerson \u003d new PersonBuilder(BOB).withId(personInList.getId().value)","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"4ndrelim"},"content":"        assertCommandFailure(new AddCommand(duplicateIdPerson), model, AddCommand.MESSAGE_DUPLICATE_EMPLOYEE);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"4ndrelim"},"content":"    public void execute_duplicateEmailOnly_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"4ndrelim"},"content":"        Employee personInList \u003d model.getSudoHr().getEmployeeList().get(0);","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"4ndrelim"},"content":"        Employee duplicateEmailPerson \u003d new PersonBuilder(BOB).withEmail(personInList.getEmail().value)","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"4ndrelim"},"content":"        assertCommandFailure(new AddCommand(duplicateEmailPerson), model, AddCommand.MESSAGE_DUPLICATE_EMAIL);","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"4ndrelim"},"content":"    public void execute_duplicatePhoneNumberOnly_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"4ndrelim"},"content":"        Employee personInList \u003d model.getSudoHr().getEmployeeList().get(0);","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"4ndrelim"},"content":"        Employee duplicatePhonePerson \u003d new PersonBuilder(BOB).withPhone(personInList.getPhone().value)","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"4ndrelim"},"content":"        assertCommandFailure(new AddCommand(duplicatePhonePerson), model, AddCommand.MESSAGE_DUPLICATE_PHONE);","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"4ndrelim"},"content":"    // Duplicate phone number should be identified first","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"4ndrelim"},"content":"    public void execute_differentIdOnly_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"4ndrelim"},"content":"        Employee personInList \u003d model.getSudoHr().getEmployeeList().get(0);","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"4ndrelim"},"content":"        Employee differentIdPerson \u003d new PersonBuilder(personInList).withId(VALID_ID_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"4ndrelim"},"content":"        assertCommandFailure(new AddCommand(differentIdPerson), model, AddCommand.MESSAGE_DUPLICATE_PHONE);","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"pkwangjoo":7,"4ndrelim":45,"kennethk-1201":2,"-":26}},{"path":"src/test/java/seedu/sudohr/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.GuiSettings;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.ReadOnlySudoHr;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.SudoHr;","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.Department;","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.DepartmentName;","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.testutil.PersonBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"4ndrelim"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"4ndrelim"},"content":"        Employee validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"4ndrelim"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"4ndrelim"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"4ndrelim"},"content":"        Employee validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"4ndrelim"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"4ndrelim"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"pkwangjoo"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_EMPLOYEE, () -\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"pkwangjoo"},"content":"                addCommand.execute(modelStub));","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":62,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"4ndrelim"},"content":"    public void execute_duplicateIdOnly_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"4ndrelim"},"content":"        Employee validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"4ndrelim"},"content":"        Employee sameIdPerson \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"4ndrelim"},"content":"                .withAddress(VALID_ADDRESS_BOB).withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"4ndrelim"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"4ndrelim"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(sameIdPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"4ndrelim"},"content":"                AddCommand.MESSAGE_DUPLICATE_EMPLOYEE, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"4ndrelim"},"content":"    public void execute_duplicateEmailOnly_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"4ndrelim"},"content":"        Employee validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"4ndrelim"},"content":"        Employee sameEmail \u003d new PersonBuilder().withName(VALID_NAME_BOB).withId(VALID_ID_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"4ndrelim"},"content":"                .withAddress(VALID_ADDRESS_BOB).withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"4ndrelim"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"4ndrelim"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(sameEmail);","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_EMAIL, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"4ndrelim"},"content":"    public void execute_duplicatePhoneNumberOnly_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"4ndrelim"},"content":"        Employee validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"4ndrelim"},"content":"        Employee samePhone \u003d new PersonBuilder().withName(VALID_NAME_BOB).withId(VALID_ID_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"4ndrelim"},"content":"                .withAddress(VALID_ADDRESS_BOB).withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"4ndrelim"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"4ndrelim"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(samePhone);","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PHONE, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"4ndrelim"},"content":"    // duplicate phone should be identified first","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"4ndrelim"},"content":"    public void execute_differentIdOnly_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"4ndrelim"},"content":"        Employee validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"4ndrelim"},"content":"        Employee diffId \u003d new PersonBuilder().withId(VALID_ID_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"4ndrelim"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"4ndrelim"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(diffId);","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PHONE, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"4ndrelim"},"content":"        // note default ID for person builder is \"0777\"","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"pkwangjoo"},"content":"        Employee alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"pkwangjoo"},"content":"        Employee bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"4ndrelim"},"content":"        Employee differentBob \u003d new PersonBuilder().withName(\"BOB\").withId(VALID_ID_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":119,"author":{"gitId":"4ndrelim"},"content":"        AddCommand addDifferentBobCommand \u003d new AddCommand(differentBob);","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":134,"author":{"gitId":"4ndrelim"},"content":"        // same person id -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"4ndrelim"},"content":"        // Note: strict equality across every field","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":137,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"4ndrelim"},"content":"        // different person id -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(addDifferentBobCommand.equals(addAliceCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"4ndrelim"},"content":"     * A default model stub that have all of its methods failing.","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":167,"author":{"gitId":"pkwangjoo"},"content":"        public Path getSudoHrFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":172,"author":{"gitId":"pkwangjoo"},"content":"        public void setSudoHrFilePath(Path sudoHrFilePath) {","lastModifiedDate":"2023-03-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"4ndrelim"},"content":"        public void addEmployee(Employee employee) {","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"pkwangjoo"},"content":"        public void setSudoHr(ReadOnlySudoHr sudoHr) {","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"pkwangjoo"},"content":"        public ReadOnlySudoHr getSudoHr() {","lastModifiedDate":"2023-03-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":192,"author":{"gitId":"4ndrelim"},"content":"        public boolean hasEmployee(Employee employee) {","lastModifiedDate":"2023-03-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":196,"author":{"gitId":"4ndrelim"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":197,"author":{"gitId":"4ndrelim"},"content":"        public boolean hasEmployee(Employee employee, Employee excludeFromCheck) {","lastModifiedDate":"2023-03-15"},{"lineNumber":198,"author":{"gitId":"4ndrelim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":199,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":200,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":201,"author":{"gitId":"4ndrelim"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":202,"author":{"gitId":"4ndrelim"},"content":"        public boolean hasClashingEmail(Employee person) {","lastModifiedDate":"2023-03-14"},{"lineNumber":203,"author":{"gitId":"4ndrelim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":204,"author":{"gitId":"4ndrelim"},"content":"        };","lastModifiedDate":"2023-03-15"},{"lineNumber":205,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":206,"author":{"gitId":"4ndrelim"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":207,"author":{"gitId":"4ndrelim"},"content":"        public boolean hasClashingEmail(Employee employee, Employee excludeFromCheck) {","lastModifiedDate":"2023-03-15"},{"lineNumber":208,"author":{"gitId":"4ndrelim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":209,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":210,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":211,"author":{"gitId":"4ndrelim"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":212,"author":{"gitId":"4ndrelim"},"content":"        public boolean hasClashingPhoneNumber(Employee person) {","lastModifiedDate":"2023-03-14"},{"lineNumber":213,"author":{"gitId":"4ndrelim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":214,"author":{"gitId":"4ndrelim"},"content":"        };","lastModifiedDate":"2023-03-15"},{"lineNumber":215,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":216,"author":{"gitId":"4ndrelim"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":217,"author":{"gitId":"4ndrelim"},"content":"        public boolean hasClashingPhoneNumber(Employee employee, Employee excludeFromCheck) {","lastModifiedDate":"2023-03-15"},{"lineNumber":218,"author":{"gitId":"4ndrelim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":219,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":220,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"pkwangjoo"},"content":"        public void deleteEmployee(Employee target) {","lastModifiedDate":"2023-03-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"pkwangjoo"},"content":"        public void setEmployee(Employee target, Employee editedEmployee) {","lastModifiedDate":"2023-03-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"pkwangjoo"},"content":"        public ObservableList\u003cEmployee\u003e getFilteredEmployeeList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"pkwangjoo"},"content":"        public void updateFilteredEmployeeList(Predicate\u003cEmployee\u003e predicate) {","lastModifiedDate":"2023-03-13"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":241,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":242,"author":{"gitId":"kennethk-1201"},"content":"        public Department getDepartment(DepartmentName name) {","lastModifiedDate":"2023-03-12"},{"lineNumber":243,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":244,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":245,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":246,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":247,"author":{"gitId":"kennethk-1201"},"content":"        public boolean hasDepartment(Department department) {","lastModifiedDate":"2023-03-10"},{"lineNumber":248,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-10"},{"lineNumber":249,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":250,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":251,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":252,"author":{"gitId":"kennethk-1201"},"content":"        public void addDepartment(Department d) {","lastModifiedDate":"2023-03-10"},{"lineNumber":253,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-10"},{"lineNumber":254,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":255,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":256,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":257,"author":{"gitId":"kennethk-1201"},"content":"        public void setDepartment(Department target, Department editedDepartment) {","lastModifiedDate":"2023-03-10"},{"lineNumber":258,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-10"},{"lineNumber":259,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":260,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":261,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":262,"author":{"gitId":"kennethk-1201"},"content":"        public void removeDepartment(Department key) {","lastModifiedDate":"2023-03-10"},{"lineNumber":263,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-10"},{"lineNumber":264,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":265,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":266,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":267,"author":{"gitId":"pkwangjoo"},"content":"        public void addEmployeeToDepartment(Employee p, Department d) {","lastModifiedDate":"2023-03-13"},{"lineNumber":268,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-10"},{"lineNumber":269,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":270,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":271,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":272,"author":{"gitId":"pkwangjoo"},"content":"        public void removeEmployeeFromDepartment(Employee p, Department d) {","lastModifiedDate":"2023-03-13"},{"lineNumber":273,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-10"},{"lineNumber":274,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":275,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":276,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":277,"author":{"gitId":"kennethk-1201"},"content":"        public ObservableList\u003cDepartment\u003e getFilteredDepartmentList() {","lastModifiedDate":"2023-03-10"},{"lineNumber":278,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-10"},{"lineNumber":279,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":280,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":281,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":282,"author":{"gitId":"kennethk-1201"},"content":"        public void updateFilteredDepartmentList(Predicate\u003cDepartment\u003e predicate) {","lastModifiedDate":"2023-03-10"},{"lineNumber":283,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-10"},{"lineNumber":284,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":289,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":290,"author":{"gitId":"4ndrelim"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2023-03-14"},{"lineNumber":291,"author":{"gitId":"pkwangjoo"},"content":"        private final Employee person;","lastModifiedDate":"2023-03-13"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":293,"author":{"gitId":"4ndrelim"},"content":"        ModelStubWithPerson(Employee person) {","lastModifiedDate":"2023-03-14"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":295,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":299,"author":{"gitId":"4ndrelim"},"content":"        public boolean hasEmployee(Employee employee) {","lastModifiedDate":"2023-03-14"},{"lineNumber":300,"author":{"gitId":"4ndrelim"},"content":"            requireNonNull(employee);","lastModifiedDate":"2023-03-14"},{"lineNumber":301,"author":{"gitId":"4ndrelim"},"content":"            return this.person.isSameEmployee(employee);","lastModifiedDate":"2023-03-14"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":303,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":304,"author":{"gitId":"4ndrelim"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":305,"author":{"gitId":"4ndrelim"},"content":"        public boolean hasClashingEmail(Employee person) {","lastModifiedDate":"2023-03-14"},{"lineNumber":306,"author":{"gitId":"4ndrelim"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-03-13"},{"lineNumber":307,"author":{"gitId":"4ndrelim"},"content":"            return this.person.emailClashes(person);","lastModifiedDate":"2023-03-13"},{"lineNumber":308,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":309,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":310,"author":{"gitId":"4ndrelim"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":311,"author":{"gitId":"4ndrelim"},"content":"        public boolean hasClashingPhoneNumber(Employee person) {","lastModifiedDate":"2023-03-14"},{"lineNumber":312,"author":{"gitId":"4ndrelim"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-03-13"},{"lineNumber":313,"author":{"gitId":"4ndrelim"},"content":"            return this.person.phoneClashes(person);","lastModifiedDate":"2023-03-13"},{"lineNumber":314,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":318,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":319,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":320,"author":{"gitId":"4ndrelim"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2023-03-14"},{"lineNumber":321,"author":{"gitId":"pkwangjoo"},"content":"        final ArrayList\u003cEmployee\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":324,"author":{"gitId":"4ndrelim"},"content":"        public boolean hasEmployee(Employee employee) {","lastModifiedDate":"2023-03-14"},{"lineNumber":325,"author":{"gitId":"4ndrelim"},"content":"            requireNonNull(employee);","lastModifiedDate":"2023-03-14"},{"lineNumber":326,"author":{"gitId":"4ndrelim"},"content":"            return personsAdded.stream().anyMatch(employee::isSameEmployee);","lastModifiedDate":"2023-03-14"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":329,"author":{"gitId":"4ndrelim"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":330,"author":{"gitId":"4ndrelim"},"content":"        public boolean hasClashingEmail(Employee person) {","lastModifiedDate":"2023-03-14"},{"lineNumber":331,"author":{"gitId":"4ndrelim"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-03-13"},{"lineNumber":332,"author":{"gitId":"4ndrelim"},"content":"            return personsAdded.stream().anyMatch(person::emailClashes);","lastModifiedDate":"2023-03-13"},{"lineNumber":333,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":334,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":335,"author":{"gitId":"4ndrelim"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":336,"author":{"gitId":"4ndrelim"},"content":"        public boolean hasClashingPhoneNumber(Employee person) {","lastModifiedDate":"2023-03-14"},{"lineNumber":337,"author":{"gitId":"4ndrelim"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-03-13"},{"lineNumber":338,"author":{"gitId":"4ndrelim"},"content":"            return personsAdded.stream().anyMatch(person::phoneClashes);","lastModifiedDate":"2023-03-13"},{"lineNumber":339,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":340,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":342,"author":{"gitId":"4ndrelim"},"content":"        public void addEmployee(Employee person) {","lastModifiedDate":"2023-03-14"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":344,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":348,"author":{"gitId":"pkwangjoo"},"content":"        public ReadOnlySudoHr getSudoHr() {","lastModifiedDate":"2023-03-08"},{"lineNumber":349,"author":{"gitId":"pkwangjoo"},"content":"            return new SudoHr();","lastModifiedDate":"2023-03-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"pkwangjoo":28,"4ndrelim":135,"kennethk-1201":45,"-":145}},{"path":"src/test/java/seedu/sudohr/logic/commands/AddDepartmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package seedu.sudohr.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.commons.core.GuiSettings;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.ReadOnlySudoHr;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.SudoHr;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.Department;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.DepartmentName;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.testutil.DepartmentBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"public class AddDepartmentCommandTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"    public void constructor_nullDepartment_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddDepartmentCommand(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"    public void execute_departmentAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"        AddDepartmentCommandTest.ModelStubAcceptingDepartmentAdded modelStub \u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"                new AddDepartmentCommandTest.ModelStubAcceptingDepartmentAdded();","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"        Department validDepartment \u003d new DepartmentBuilder().build();","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"        CommandResult commandResult \u003d new AddDepartmentCommand(validDepartment).execute(modelStub);","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"kennethk-1201"},"content":"        assertEquals(String.format(AddDepartmentCommand.MESSAGE_SUCCESS, validDepartment),","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"kennethk-1201"},"content":"        assertEquals(Arrays.asList(validDepartment), modelStub.departmentsAdded);","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"kennethk-1201"},"content":"    public void execute_duplicateDepartment_throwsCommandException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"kennethk-1201"},"content":"        Department validDepartment \u003d new DepartmentBuilder().build();","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"kennethk-1201"},"content":"        AddDepartmentCommand addDepartmentCommand \u003d new AddDepartmentCommand(validDepartment);","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"kennethk-1201"},"content":"        AddDepartmentCommandTest.ModelStub modelStub \u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"kennethk-1201"},"content":"                new AddDepartmentCommandTest.ModelStubWithDepartment(validDepartment);","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"kennethk-1201"},"content":"        assertThrows(CommandException.class, AddDepartmentCommand.MESSAGE_DUPLICATE_DEPARTMENT, () -\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"kennethk-1201"},"content":"                addDepartmentCommand.execute(modelStub));","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"kennethk-1201"},"content":"    public void equals() {","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"kennethk-1201"},"content":"        Department humanResources \u003d new DepartmentBuilder().withDepartmentName(\"Human Resources\").build();","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"kennethk-1201"},"content":"        Department engineering \u003d new DepartmentBuilder().withDepartmentName(\"Engineering\").build();","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"kennethk-1201"},"content":"        AddDepartmentCommand addHumanResourcesCommand \u003d new AddDepartmentCommand(humanResources);","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"kennethk-1201"},"content":"        AddDepartmentCommand addEngineeringCommand \u003d new AddDepartmentCommand(engineering);","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"kennethk-1201"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"kennethk-1201"},"content":"        assertTrue(addHumanResourcesCommand.equals(addHumanResourcesCommand));","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"kennethk-1201"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"kennethk-1201"},"content":"        AddDepartmentCommand addHumanResourcesCommandCopy \u003d new AddDepartmentCommand(humanResources);","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"kennethk-1201"},"content":"        assertTrue(addHumanResourcesCommand.equals(addHumanResourcesCommandCopy));","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"kennethk-1201"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"kennethk-1201"},"content":"        assertFalse(addHumanResourcesCommand.equals(1));","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"kennethk-1201"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"kennethk-1201"},"content":"        assertFalse(addHumanResourcesCommand.equals(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"kennethk-1201"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"kennethk-1201"},"content":"        assertFalse(addHumanResourcesCommand.equals(addEngineeringCommand));","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"kennethk-1201"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"kennethk-1201"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"kennethk-1201"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"kennethk-1201"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"kennethk-1201"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"kennethk-1201"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"kennethk-1201"},"content":"        public Path getSudoHrFilePath() {","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"kennethk-1201"},"content":"        public void setSudoHrFilePath(Path sudoHrFilePath) {","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"pkwangjoo"},"content":"        public void addEmployee(Employee employee) {","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"kennethk-1201"},"content":"        public void setSudoHr(ReadOnlySudoHr sudoHr) {","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"kennethk-1201"},"content":"        public ReadOnlySudoHr getSudoHr() {","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"pkwangjoo"},"content":"        public boolean hasEmployee(Employee employee) {","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"4ndrelim"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":137,"author":{"gitId":"4ndrelim"},"content":"        public boolean hasEmployee(Employee employee, Employee excludeFromCheck) {","lastModifiedDate":"2023-03-15"},{"lineNumber":138,"author":{"gitId":"4ndrelim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":139,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":140,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":141,"author":{"gitId":"4ndrelim"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"4ndrelim"},"content":"        public boolean hasClashingEmail(Employee person) {","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"4ndrelim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"4ndrelim"},"content":"        };","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"4ndrelim"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":147,"author":{"gitId":"4ndrelim"},"content":"        public boolean hasClashingEmail(Employee employee, Employee excludeFromCheck) {","lastModifiedDate":"2023-03-15"},{"lineNumber":148,"author":{"gitId":"4ndrelim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":149,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":150,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":151,"author":{"gitId":"4ndrelim"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"4ndrelim"},"content":"        public boolean hasClashingPhoneNumber(Employee person) {","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"4ndrelim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"4ndrelim"},"content":"        };","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"4ndrelim"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":157,"author":{"gitId":"4ndrelim"},"content":"        public boolean hasClashingPhoneNumber(Employee employee, Employee excludeFromCheck) {","lastModifiedDate":"2023-03-15"},{"lineNumber":158,"author":{"gitId":"4ndrelim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":159,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":160,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":161,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":162,"author":{"gitId":"pkwangjoo"},"content":"        public void deleteEmployee(Employee target) {","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":164,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":165,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":166,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":167,"author":{"gitId":"pkwangjoo"},"content":"        public void setEmployee(Employee target, Employee editedEmployee) {","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":169,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":170,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":171,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":172,"author":{"gitId":"pkwangjoo"},"content":"        public ObservableList\u003cEmployee\u003e getFilteredEmployeeList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":174,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":175,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":176,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":177,"author":{"gitId":"pkwangjoo"},"content":"        public void updateFilteredEmployeeList(Predicate\u003cEmployee\u003e predicate) {","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":179,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":180,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":181,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":182,"author":{"gitId":"kennethk-1201"},"content":"        public Department getDepartment(DepartmentName name) {","lastModifiedDate":"2023-03-12"},{"lineNumber":183,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":184,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":185,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":186,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":187,"author":{"gitId":"kennethk-1201"},"content":"        public boolean hasDepartment(Department department) {","lastModifiedDate":"2023-03-11"},{"lineNumber":188,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":189,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":190,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":191,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":192,"author":{"gitId":"kennethk-1201"},"content":"        public void addDepartment(Department d) {","lastModifiedDate":"2023-03-11"},{"lineNumber":193,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":194,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":195,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":196,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":197,"author":{"gitId":"kennethk-1201"},"content":"        public void setDepartment(Department target, Department editedDepartment) {","lastModifiedDate":"2023-03-11"},{"lineNumber":198,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":199,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":200,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":201,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":202,"author":{"gitId":"kennethk-1201"},"content":"        public void removeDepartment(Department key) {","lastModifiedDate":"2023-03-11"},{"lineNumber":203,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":204,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":205,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":206,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":207,"author":{"gitId":"pkwangjoo"},"content":"        public void addEmployeeToDepartment(Employee p, Department d) {","lastModifiedDate":"2023-03-13"},{"lineNumber":208,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":209,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":210,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":211,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":212,"author":{"gitId":"pkwangjoo"},"content":"        public void removeEmployeeFromDepartment(Employee p, Department d) {","lastModifiedDate":"2023-03-13"},{"lineNumber":213,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":214,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":215,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":216,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":217,"author":{"gitId":"kennethk-1201"},"content":"        public ObservableList\u003cDepartment\u003e getFilteredDepartmentList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":218,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":219,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":220,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":221,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":222,"author":{"gitId":"kennethk-1201"},"content":"        public void updateFilteredDepartmentList(Predicate\u003cDepartment\u003e predicate) {","lastModifiedDate":"2023-03-11"},{"lineNumber":223,"author":{"gitId":"kennethk-1201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":224,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":225,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":226,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":227,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":228,"author":{"gitId":"kennethk-1201"},"content":"     * A Model stub that contains a single department.","lastModifiedDate":"2023-03-11"},{"lineNumber":229,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":230,"author":{"gitId":"kennethk-1201"},"content":"    private class ModelStubWithDepartment extends AddDepartmentCommandTest.ModelStub {","lastModifiedDate":"2023-03-11"},{"lineNumber":231,"author":{"gitId":"kennethk-1201"},"content":"        private final Department department;","lastModifiedDate":"2023-03-11"},{"lineNumber":232,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":233,"author":{"gitId":"kennethk-1201"},"content":"        ModelStubWithDepartment(Department department) {","lastModifiedDate":"2023-03-11"},{"lineNumber":234,"author":{"gitId":"kennethk-1201"},"content":"            requireNonNull(department);","lastModifiedDate":"2023-03-11"},{"lineNumber":235,"author":{"gitId":"kennethk-1201"},"content":"            this.department \u003d department;","lastModifiedDate":"2023-03-11"},{"lineNumber":236,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":237,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":238,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":239,"author":{"gitId":"kennethk-1201"},"content":"        public boolean hasDepartment(Department department) {","lastModifiedDate":"2023-03-11"},{"lineNumber":240,"author":{"gitId":"kennethk-1201"},"content":"            requireNonNull(department);","lastModifiedDate":"2023-03-11"},{"lineNumber":241,"author":{"gitId":"kennethk-1201"},"content":"            return this.department.equals(department);","lastModifiedDate":"2023-03-11"},{"lineNumber":242,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":243,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":244,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":245,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":246,"author":{"gitId":"kennethk-1201"},"content":"     * A Model stub that always accept the department being added.","lastModifiedDate":"2023-03-11"},{"lineNumber":247,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":248,"author":{"gitId":"kennethk-1201"},"content":"    private class ModelStubAcceptingDepartmentAdded extends AddDepartmentCommandTest.ModelStub {","lastModifiedDate":"2023-03-11"},{"lineNumber":249,"author":{"gitId":"kennethk-1201"},"content":"        final ArrayList\u003cDepartment\u003e departmentsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-11"},{"lineNumber":250,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":251,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":252,"author":{"gitId":"kennethk-1201"},"content":"        public boolean hasDepartment(Department department) {","lastModifiedDate":"2023-03-11"},{"lineNumber":253,"author":{"gitId":"kennethk-1201"},"content":"            requireNonNull(department);","lastModifiedDate":"2023-03-11"},{"lineNumber":254,"author":{"gitId":"kennethk-1201"},"content":"            return departmentsAdded.stream().anyMatch(department::equals);","lastModifiedDate":"2023-03-11"},{"lineNumber":255,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":256,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":257,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":258,"author":{"gitId":"kennethk-1201"},"content":"        public void addDepartment(Department department) {","lastModifiedDate":"2023-03-11"},{"lineNumber":259,"author":{"gitId":"kennethk-1201"},"content":"            requireNonNull(department);","lastModifiedDate":"2023-03-11"},{"lineNumber":260,"author":{"gitId":"kennethk-1201"},"content":"            departmentsAdded.add(department);","lastModifiedDate":"2023-03-11"},{"lineNumber":261,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":262,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":263,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":264,"author":{"gitId":"kennethk-1201"},"content":"        public ReadOnlySudoHr getSudoHr() {","lastModifiedDate":"2023-03-11"},{"lineNumber":265,"author":{"gitId":"kennethk-1201"},"content":"            return new SudoHr();","lastModifiedDate":"2023-03-11"},{"lineNumber":266,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":267,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":268,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"pkwangjoo":9,"kennethk-1201":234,"4ndrelim":25}},{"path":"src/test/java/seedu/sudohr/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.testutil.TypicalPersons.getTypicalSudoHr;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.ModelManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.SudoHr;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"        Model model \u003d new ModelManager(getTypicalSudoHr(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalSudoHr(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"pkwangjoo"},"content":"        expectedModel.setSudoHr(new SudoHr());","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"pkwangjoo":7,"kennethk-1201":3,"-":22}},{"path":"src/test/java/seedu/sudohr/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"pkwangjoo":1,"-":53}},{"path":"src/test/java/seedu/sudohr/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_DEPARTMENT_NAME;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.SudoHr;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.DepartmentName;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.testutil.EditDepartmentDescriptorBuilder;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"    public static final String VALID_ID_AMY \u003d \"001\"; // treated as 1","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"    public static final String VALID_ID_BOB \u003d \"100\";","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"4ndrelim"},"content":"    public static final String ID_DESC_AMY \u003d \" \" + PREFIX_ID + VALID_ID_AMY;","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"4ndrelim"},"content":"    public static final String ID_DESC_BOB \u003d \" \" + PREFIX_ID + VALID_ID_BOB;","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"4ndrelim"},"content":"    public static final String INVALID_ID_DESC \u003d \" \" + PREFIX_ID + \"help123\"; // not allowed to have characters","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"4ndrelim"},"content":"    public static final String INVALID_ID_DESC_ZERO \u003d \" \" + PREFIX_ID + \"000\"; // need at least 1 non-zero digit","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"pkwangjoo"},"content":"    public static final EditCommand.EditEmployeeDescriptor DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"pkwangjoo"},"content":"    public static final EditCommand.EditEmployeeDescriptor DESC_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"kennethk-1201"},"content":"    public static final String VALID_DEPARTMENT_NAME_HUMAN_RESOURCES \u003d \"Human Resources\";","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"kennethk-1201"},"content":"    public static final String VALID_DEPARTMENT_NAME_ENGINEERING \u003d \"Engineering\";","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"kennethk-1201"},"content":"    public static final String DEPARTMENT_NAME_DESC_HUMAN_RESOURCES \u003d \" \" + PREFIX_DEPARTMENT_NAME","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"kennethk-1201"},"content":"            + VALID_DEPARTMENT_NAME_HUMAN_RESOURCES;","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"kennethk-1201"},"content":"    public static final String DEPARTMENT_NAME_DESC_ENGINEERING \u003d \" \" + PREFIX_DEPARTMENT_NAME","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"kennethk-1201"},"content":"            + VALID_DEPARTMENT_NAME_ENGINEERING;","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"kennethk-1201"},"content":"    // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"kennethk-1201"},"content":"    public static final String INVALID_DEPARTMENT_NAME_DESC \u003d \" \" + PREFIX_DEPARTMENT_NAME + \"Engineering\u0026\";","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"kennethk-1201"},"content":"    public static final EditDepartmentCommand.EditDepartmentDescriptor DESC_DEPARTMENT_ENGINEERING;","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"kennethk-1201"},"content":"    public static final EditDepartmentCommand.EditDepartmentDescriptor DESC_DEPARTMENT_HUMAN_RESOURCES;","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"4ndrelim"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withId(VALID_ID_AMY)","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"4ndrelim"},"content":"                .withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"4ndrelim"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withId(VALID_ID_BOB)","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"4ndrelim"},"content":"                .withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"kennethk-1201"},"content":"        DESC_DEPARTMENT_ENGINEERING \u003d new EditDepartmentDescriptorBuilder()","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"kennethk-1201"},"content":"                .withName(new DepartmentName(VALID_DEPARTMENT_NAME_ENGINEERING)).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"kennethk-1201"},"content":"        DESC_DEPARTMENT_HUMAN_RESOURCES \u003d new EditDepartmentDescriptorBuilder()","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"kennethk-1201"},"content":"                .withName(new DepartmentName(VALID_DEPARTMENT_NAME_HUMAN_RESOURCES)).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"pkwangjoo"},"content":"     * - the sudohr book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"pkwangjoo"},"content":"        SudoHr expectedSudoHr \u003d new SudoHr(actualModel.getSudoHr());","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"pkwangjoo"},"content":"        List\u003cEmployee\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredEmployeeList());","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":141,"author":{"gitId":"pkwangjoo"},"content":"        assertEquals(expectedSudoHr, actualModel.getSudoHr());","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"pkwangjoo"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredEmployeeList());","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"pkwangjoo"},"content":"     * {@code model}\u0027s sudohr book.","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":149,"author":{"gitId":"pkwangjoo"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredEmployeeList().size());","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":151,"author":{"gitId":"pkwangjoo"},"content":"        Employee person \u003d model.getFilteredEmployeeList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":153,"author":{"gitId":"pkwangjoo"},"content":"        model.updateFilteredEmployeeList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":155,"author":{"gitId":"pkwangjoo"},"content":"        assertEquals(1, model.getFilteredEmployeeList().size());","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"pkwangjoo":26,"kennethk-1201":20,"4ndrelim":11,"-":101}},{"path":"src/test/java/seedu/sudohr/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.testutil.TypicalPersons.getTypicalSudoHr;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.Messages;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.ModelManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"    private Model model \u003d new ModelManager(getTypicalSudoHr(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"pkwangjoo"},"content":"        Employee personToDelete \u003d model.getFilteredEmployeeList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"pkwangjoo"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_EMPLOYEE_SUCCESS, personToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"pkwangjoo"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getSudoHr(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"pkwangjoo"},"content":"        expectedModel.deleteEmployee(personToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"pkwangjoo"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEmployeeList().size() + 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"pkwangjoo"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"pkwangjoo"},"content":"        Employee personToDelete \u003d model.getFilteredEmployeeList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"pkwangjoo"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_EMPLOYEE_SUCCESS, personToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"pkwangjoo"},"content":"        Model expectedModel \u003d new ModelManager(model.getSudoHr(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"pkwangjoo"},"content":"        expectedModel.deleteEmployee(personToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"pkwangjoo"},"content":"        // ensures that outOfBoundIndex is still in bounds of sudohr book list","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"pkwangjoo"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getSudoHr().getEmployeeList().size());","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"pkwangjoo"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"pkwangjoo"},"content":"        model.updateFilteredEmployeeList(p -\u003e false);","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"pkwangjoo"},"content":"        assertTrue(model.getFilteredEmployeeList().isEmpty());","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"pkwangjoo":27,"kennethk-1201":2,"-":80}},{"path":"src/test/java/seedu/sudohr/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.testutil.TypicalPersons.getTypicalSudoHr;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.Messages;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.EditCommand.EditEmployeeDescriptor;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.ModelManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.SudoHr;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.testutil.PersonBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"    private Model model \u003d new ModelManager(getTypicalSudoHr(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"pkwangjoo"},"content":"        Employee editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"pkwangjoo"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"pkwangjoo"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_EMPLOYEE_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"pkwangjoo"},"content":"        Model expectedModel \u003d new ModelManager(new SudoHr(model.getSudoHr()), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"pkwangjoo"},"content":"        expectedModel.setEmployee(model.getFilteredEmployeeList().get(0), editedPerson);","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"pkwangjoo"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredEmployeeList().size());","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"pkwangjoo"},"content":"        Employee lastPerson \u003d model.getFilteredEmployeeList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"pkwangjoo"},"content":"        Employee editedPerson \u003d personInList.withId(VALID_ID_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"4ndrelim"},"content":"                .withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"pkwangjoo"},"content":"        EditCommand.EditEmployeeDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withId(VALID_ID_BOB)","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"4ndrelim"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"4ndrelim"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_EMPLOYEE_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"4ndrelim"},"content":"        Model expectedModel \u003d new ModelManager(new SudoHr(model.getSudoHr()), new UserPrefs());","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"4ndrelim"},"content":"        expectedModel.setEmployee(lastPerson, editedPerson);","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"4ndrelim"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"4ndrelim"},"content":"    public void execute_otherFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"4ndrelim"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredEmployeeList().size());","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"4ndrelim"},"content":"        Employee lastPerson \u003d model.getFilteredEmployeeList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"4ndrelim"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"4ndrelim"},"content":"        Employee editedPerson \u003d personInList.withId(VALID_ID_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"4ndrelim"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"4ndrelim"},"content":"        EditCommand.EditEmployeeDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withId(VALID_ID_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"4ndrelim"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"4ndrelim"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"pkwangjoo"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_EMPLOYEE_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"pkwangjoo"},"content":"        Model expectedModel \u003d new ModelManager(new SudoHr(model.getSudoHr()), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"pkwangjoo"},"content":"        expectedModel.setEmployee(lastPerson, editedPerson);","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"4ndrelim"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"pkwangjoo"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditCommand.EditEmployeeDescriptor());","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"pkwangjoo"},"content":"        Employee editedPerson \u003d model.getFilteredEmployeeList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"pkwangjoo"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_EMPLOYEE_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"pkwangjoo"},"content":"        Model expectedModel \u003d new ModelManager(new SudoHr(model.getSudoHr()), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"pkwangjoo"},"content":"        Employee personInFilteredList \u003d model.getFilteredEmployeeList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"pkwangjoo"},"content":"        Employee editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"pkwangjoo"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_EMPLOYEE_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"pkwangjoo"},"content":"        Model expectedModel \u003d new ModelManager(new SudoHr(model.getSudoHr()), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"pkwangjoo"},"content":"        expectedModel.setEmployee(model.getFilteredEmployeeList().get(0), editedPerson);","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":128,"author":{"gitId":"pkwangjoo"},"content":"        Employee firstPerson \u003d model.getFilteredEmployeeList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"pkwangjoo"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"pkwangjoo"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_EMPLOYEE);","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"pkwangjoo"},"content":"        // edit person in filtered list into a duplicate in sudohr book","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"pkwangjoo"},"content":"        Employee personInList \u003d model.getSudoHr().getEmployeeList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"pkwangjoo"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_EMPLOYEE);","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":149,"author":{"gitId":"pkwangjoo"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEmployeeList().size() + 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"pkwangjoo"},"content":"        EditCommand.EditEmployeeDescriptor descriptor \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":151,"author":{"gitId":"pkwangjoo"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"pkwangjoo"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":159,"author":{"gitId":"pkwangjoo"},"content":"     * but smaller than size of sudohr book","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":165,"author":{"gitId":"pkwangjoo"},"content":"        // ensures that outOfBoundIndex is still in bounds of sudohr book list","lastModifiedDate":"2023-03-08"},{"lineNumber":166,"author":{"gitId":"pkwangjoo"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getSudoHr().getEmployeeList().size());","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":171,"author":{"gitId":"pkwangjoo"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"pkwangjoo"},"content":"        EditEmployeeDescriptor copyDescriptor \u003d new EditEmployeeDescriptor(DESC_AMY);","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"pkwangjoo":49,"4ndrelim":36,"kennethk-1201":2,"-":112}},{"path":"src/test/java/seedu/sudohr/logic/commands/EditDepartmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package seedu.sudohr.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.DESC_DEPARTMENT_ENGINEERING;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.DESC_DEPARTMENT_HUMAN_RESOURCES;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_DEPARTMENT_NAME_ENGINEERING;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_DEPARTMENT_NAME_HUMAN_RESOURCES;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.testutil.TypicalDepartmentNames.DEPARTMENT_NAME_FIRST;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.testutil.TypicalDepartmentNames.DEPARTMENT_NAME_SECOND;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.testutil.TypicalDepartmentNames.DEPARTMENT_NAME_THIRD;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.testutil.TypicalDepartments.getTypicalSudoHr;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.commons.core.Messages;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.Model;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.ModelManager;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.SudoHr;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.UserPrefs;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.Department;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.DepartmentName;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.testutil.DepartmentBuilder;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.testutil.EditDepartmentDescriptorBuilder;","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditDepartmentCommand.","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"public class EditDepartmentCommandTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"    private Model model \u003d new ModelManager(getTypicalSudoHr(), new UserPrefs());","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"        Department editedDepartment \u003d new DepartmentBuilder().build();","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"        EditDepartmentCommand.EditDepartmentDescriptor descriptor \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"                new EditDepartmentDescriptorBuilder(editedDepartment).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"        EditDepartmentCommand editDepartmentCommand \u003d new EditDepartmentCommand(DEPARTMENT_NAME_SECOND, descriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"        String expectedMessage \u003d String.format(EditDepartmentCommand.MESSAGE_EDIT_DEPARTMENT_SUCCESS, editedDepartment);","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"        Model expectedModel \u003d new ModelManager(new SudoHr(model.getSudoHr()), new UserPrefs());","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"kennethk-1201"},"content":"        expectedModel.setDepartment(model.getDepartment(DEPARTMENT_NAME_FIRST), editedDepartment);","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"kennethk-1201"},"content":"        model.removeDepartment(new Department(DEPARTMENT_NAME_FIRST));","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"kennethk-1201"},"content":"        assertCommandSuccess(editDepartmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"kennethk-1201"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"kennethk-1201"},"content":"        EditDepartmentCommand editDepartmentCommand \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"kennethk-1201"},"content":"                new EditDepartmentCommand(DEPARTMENT_NAME_FIRST, new EditDepartmentCommand.EditDepartmentDescriptor());","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"kennethk-1201"},"content":"        Department editedDepartment \u003d model.getDepartment(DEPARTMENT_NAME_FIRST);","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"kennethk-1201"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"kennethk-1201"},"content":"                String.format(EditDepartmentCommand.MESSAGE_EDIT_DEPARTMENT_SUCCESS, editedDepartment);","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"kennethk-1201"},"content":"        Model expectedModel \u003d new ModelManager(new SudoHr(model.getSudoHr()), new UserPrefs());","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"kennethk-1201"},"content":"        assertCommandSuccess(editDepartmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"kennethk-1201"},"content":"    public void execute_duplicateDepartmentUnfilteredList_failure() {","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"kennethk-1201"},"content":"        Department firstDepartment \u003d model.getDepartment(DEPARTMENT_NAME_FIRST);","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"kennethk-1201"},"content":"        EditDepartmentCommand.EditDepartmentDescriptor descriptor \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"kennethk-1201"},"content":"                new EditDepartmentDescriptorBuilder(firstDepartment).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"kennethk-1201"},"content":"        EditDepartmentCommand editDepartmentCommand \u003d new EditDepartmentCommand(DEPARTMENT_NAME_SECOND, descriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"kennethk-1201"},"content":"        assertCommandFailure(editDepartmentCommand, model, EditDepartmentCommand.MESSAGE_DUPLICATE_DEPARTMENT);","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"kennethk-1201"},"content":"    public void execute_invalidDepartmentIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"kennethk-1201"},"content":"        EditDepartmentCommand.EditDepartmentDescriptor descriptor \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"kennethk-1201"},"content":"                new EditDepartmentDescriptorBuilder().withName(DEPARTMENT_NAME_THIRD).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"kennethk-1201"},"content":"        EditDepartmentCommand editDepartmentCommand \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"kennethk-1201"},"content":"                new EditDepartmentCommand(new DepartmentName(\"Fake Department\"), descriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"kennethk-1201"},"content":"        assertCommandFailure(editDepartmentCommand, model, Messages.MESSAGE_DEPARTMENT_NOT_FOUND);","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"kennethk-1201"},"content":"    public void equals() {","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"kennethk-1201"},"content":"        final EditDepartmentCommand standardCommand \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"kennethk-1201"},"content":"                new EditDepartmentCommand(new DepartmentName(VALID_DEPARTMENT_NAME_HUMAN_RESOURCES),","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"kennethk-1201"},"content":"                DESC_DEPARTMENT_ENGINEERING);","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"kennethk-1201"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"kennethk-1201"},"content":"        EditDepartmentCommand.EditDepartmentDescriptor copyDescriptor \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"kennethk-1201"},"content":"                new EditDepartmentCommand.EditDepartmentDescriptor(DESC_DEPARTMENT_ENGINEERING);","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"kennethk-1201"},"content":"        EditDepartmentCommand commandWithSameValues \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"kennethk-1201"},"content":"                new EditDepartmentCommand(new DepartmentName(VALID_DEPARTMENT_NAME_HUMAN_RESOURCES), copyDescriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"kennethk-1201"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"kennethk-1201"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"kennethk-1201"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"kennethk-1201"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"kennethk-1201"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"kennethk-1201"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"kennethk-1201"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"kennethk-1201"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"kennethk-1201"},"content":"        assertFalse(standardCommand.equals(new EditDepartmentCommand(","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"kennethk-1201"},"content":"                new DepartmentName(VALID_DEPARTMENT_NAME_ENGINEERING), DESC_DEPARTMENT_ENGINEERING)));","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"kennethk-1201"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"kennethk-1201"},"content":"        assertFalse(standardCommand.equals(new EditDepartmentCommand(","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"kennethk-1201"},"content":"                new DepartmentName(VALID_DEPARTMENT_NAME_HUMAN_RESOURCES), DESC_DEPARTMENT_HUMAN_RESOURCES)));","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"kennethk-1201":117}},{"path":"src/test/java/seedu/sudohr/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.EditCommand.EditEmployeeDescriptor;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"pkwangjoo"},"content":"        EditEmployeeDescriptor descriptorWithSameValues \u003d new EditEmployeeDescriptor(DESC_AMY);","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"4ndrelim"},"content":"        // different id -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"pkwangjoo"},"content":"        EditEmployeeDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withId(VALID_ID_BOB).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"4ndrelim"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"pkwangjoo":12,"4ndrelim":5,"-":46}},{"path":"src/test/java/seedu/sudohr/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.ModelManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"pkwangjoo":5,"-":15}},{"path":"src/test/java/seedu/sudohr/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.commons.core.Messages.MESSAGE_EMPLOYEES_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.testutil.TypicalPersons.getTypicalSudoHr;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.ModelManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"    private Model model \u003d new ModelManager(getTypicalSudoHr(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalSudoHr(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"pkwangjoo"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EMPLOYEES_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"pkwangjoo"},"content":"        expectedModel.updateFilteredEmployeeList(predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"pkwangjoo"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredEmployeeList());","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"pkwangjoo"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EMPLOYEES_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"pkwangjoo"},"content":"        expectedModel.updateFilteredEmployeeList(predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"pkwangjoo"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredEmployeeList());","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"pkwangjoo":16,"kennethk-1201":3,"-":64}},{"path":"src/test/java/seedu/sudohr/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.ModelManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"pkwangjoo":5,"-":15}},{"path":"src/test/java/seedu/sudohr/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.testutil.TypicalPersons.getTypicalSudoHr;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.ModelManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"        model \u003d new ModelManager(getTypicalSudoHr(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"pkwangjoo"},"content":"        expectedModel \u003d new ModelManager(model.getSudoHr(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"pkwangjoo":8,"kennethk-1201":2,"-":29}},{"path":"src/test/java/seedu/sudohr/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.ID_DESC_BOB;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.INVALID_ID_DESC;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.INVALID_ID_DESC_ZERO;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.AddCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Email;","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Id;","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.testutil.PersonBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"pkwangjoo"},"content":"        Employee expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"4ndrelim"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + ID_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"4ndrelim"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"4ndrelim"},"content":"        // multiple ids - last id accepted","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"4ndrelim"},"content":"        assertParseSuccess(parser, ID_DESC_AMY + ID_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"4ndrelim"},"content":"        assertParseSuccess(parser, ID_DESC_BOB + NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"4ndrelim"},"content":"        assertParseSuccess(parser, ID_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"4ndrelim"},"content":"        assertParseSuccess(parser, ID_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"4ndrelim"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"4ndrelim"},"content":"        assertParseSuccess(parser, ID_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"pkwangjoo"},"content":"        Employee expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":83,"author":{"gitId":"4ndrelim"},"content":"        assertParseSuccess(parser, ID_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"pkwangjoo"},"content":"        Employee expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"4ndrelim"},"content":"        assertParseSuccess(parser, ID_DESC_AMY + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"4ndrelim"},"content":"        // missing id prefix","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"4ndrelim"},"content":"        assertParseFailure(parser, VALID_ID_BOB + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"4ndrelim"},"content":"                expectedMessage);","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"4ndrelim"},"content":"        assertParseFailure(parser, ID_DESC_BOB + VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"4ndrelim"},"content":"        assertParseFailure(parser, ID_DESC_BOB + NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"4ndrelim"},"content":"        assertParseFailure(parser, ID_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"4ndrelim"},"content":"        // missing address prefix","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"4ndrelim"},"content":"        assertParseFailure(parser, ID_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"4ndrelim"},"content":"        assertParseFailure(parser, ID_DESC_BOB + VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"4ndrelim"},"content":"        // invalid id","lastModifiedDate":"2023-03-12"},{"lineNumber":127,"author":{"gitId":"4ndrelim"},"content":"        assertParseFailure(parser, INVALID_ID_DESC + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"4ndrelim"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"4ndrelim"},"content":"        assertParseFailure(parser, INVALID_ID_DESC_ZERO + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"4ndrelim"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-12"},{"lineNumber":132,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"4ndrelim"},"content":"        assertParseFailure(parser, ID_DESC_BOB + INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"4ndrelim"},"content":"        assertParseFailure(parser, ID_DESC_BOB + NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"4ndrelim"},"content":"        assertParseFailure(parser, ID_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"4ndrelim"},"content":"        // invalid address","lastModifiedDate":"2023-03-12"},{"lineNumber":146,"author":{"gitId":"4ndrelim"},"content":"        assertParseFailure(parser, ID_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-03-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"4ndrelim"},"content":"        assertParseFailure(parser, ID_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"4ndrelim"},"content":"        assertParseFailure(parser, ID_DESC_BOB + INVALID_NAME_DESC + PHONE_DESC_BOB","lastModifiedDate":"2023-03-12"},{"lineNumber":155,"author":{"gitId":"4ndrelim"},"content":"                        + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":158,"author":{"gitId":"4ndrelim"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + ID_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"pkwangjoo":42,"4ndrelim":43,"-":77}},{"path":"src/test/java/seedu/sudohr/logic/parser/AddDepartmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package seedu.sudohr.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.DEPARTMENT_NAME_DESC_ENGINEERING;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.DEPARTMENT_NAME_DESC_HUMAN_RESOURCES;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.INVALID_DEPARTMENT_NAME_DESC;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_DEPARTMENT_NAME_HUMAN_RESOURCES;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.logic.commands.AddDepartmentCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.Department;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.DepartmentName;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.testutil.DepartmentBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"public class AddDepartmentCommandParserTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"    private AddDepartmentCommandParser parser \u003d new AddDepartmentCommandParser();","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"        Department expectedDepartment \u003d new DepartmentBuilder().withDepartmentName(\"Engineering\").build();","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + DEPARTMENT_NAME_DESC_ENGINEERING,","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"                new AddDepartmentCommand(expectedDepartment));","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"        assertParseSuccess(parser, DEPARTMENT_NAME_DESC_HUMAN_RESOURCES + DEPARTMENT_NAME_DESC_ENGINEERING,","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"                new AddDepartmentCommand(expectedDepartment));","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDepartmentCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"        // missing name prefix","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"        assertParseFailure(parser, VALID_DEPARTMENT_NAME_HUMAN_RESOURCES, expectedMessage);","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"kennethk-1201"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"kennethk-1201"},"content":"        // invalid name","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"kennethk-1201"},"content":"        assertParseFailure(parser, INVALID_DEPARTMENT_NAME_DESC, DepartmentName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"kennethk-1201"},"content":"        // non-empty preamble","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"kennethk-1201"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + DEPARTMENT_NAME_DESC_ENGINEERING,","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"kennethk-1201"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDepartmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"kennethk-1201":53}},{"path":"src/test/java/seedu/sudohr/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"pkwangjoo":1,"-":149}},{"path":"src/test/java/seedu/sudohr/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.Command;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"pkwangjoo":3,"-":36}},{"path":"src/test/java/seedu/sudohr/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"pkwangjoo":6,"-":26}},{"path":"src/test/java/seedu/sudohr/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.ID_DESC_BOB;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.INVALID_ID_DESC;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.INVALID_ID_DESC_ZERO;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.EditCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.EditCommand.EditEmployeeDescriptor;","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Email;","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Id;","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"4ndrelim"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ID_DESC, Id.MESSAGE_CONSTRAINTS); // invalid id","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"4ndrelim"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ID_DESC_ZERO, Id.MESSAGE_CONSTRAINTS); // invalid id; all 0s","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"4ndrelim"},"content":"        // invalid id followed by invalid phone","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"4ndrelim"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ID_DESC + INVALID_PHONE_DESC, Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"pkwangjoo"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Employee} being edited,","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"4ndrelim"},"content":"        assertParseFailure(parser, \"1\" + VALID_ID_AMY + INVALID_NAME_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"4ndrelim"},"content":"                        + VALID_ADDRESS_AMY + VALID_PHONE_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":124,"author":{"gitId":"4ndrelim"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + ID_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"pkwangjoo"},"content":"        EditCommand.EditEmployeeDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withId(VALID_ID_AMY)","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"4ndrelim"},"content":"                .withName(VALID_NAME_AMY).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"4ndrelim"},"content":"                .withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"pkwangjoo"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":148,"author":{"gitId":"4ndrelim"},"content":"        // id","lastModifiedDate":"2023-03-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":150,"author":{"gitId":"4ndrelim"},"content":"        String userInput \u003d targetIndex.getOneBased() + ID_DESC_AMY;","lastModifiedDate":"2023-03-12"},{"lineNumber":151,"author":{"gitId":"pkwangjoo"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withId(VALID_ID_AMY).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"4ndrelim"},"content":"        // name","lastModifiedDate":"2023-03-12"},{"lineNumber":156,"author":{"gitId":"4ndrelim"},"content":"        targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-12"},{"lineNumber":157,"author":{"gitId":"4ndrelim"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2023-03-12"},{"lineNumber":158,"author":{"gitId":"4ndrelim"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":159,"author":{"gitId":"4ndrelim"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":160,"author":{"gitId":"4ndrelim"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-12"},{"lineNumber":161,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2023-03-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"pkwangjoo"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":207,"author":{"gitId":"pkwangjoo"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"4ndrelim"},"content":"        userInput \u003d targetIndex.getOneBased() + ID_DESC_BOB + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":214,"author":{"gitId":"4ndrelim"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withId(VALID_ID_BOB)","lastModifiedDate":"2023-03-12"},{"lineNumber":215,"author":{"gitId":"4ndrelim"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"pkwangjoo"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"pkwangjoo":48,"4ndrelim":29,"-":154}},{"path":"src/test/java/seedu/sudohr/logic/parser/EditDepartmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package seedu.sudohr.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.DEPARTMENT_NAME_DESC_ENGINEERING;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.DEPARTMENT_NAME_DESC_HUMAN_RESOURCES;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.INVALID_DEPARTMENT_NAME_DESC;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_DEPARTMENT_NAME_ENGINEERING;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_DEPARTMENT_NAME_HUMAN_RESOURCES;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.logic.commands.EditDepartmentCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.DepartmentName;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.testutil.EditDepartmentDescriptorBuilder;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"public class EditDepartmentCommandParserTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditDepartmentCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"    private EditDepartmentCommandParser parser \u003d new EditDepartmentCommandParser();","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"        // no field specified","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"        assertParseFailure(parser, VALID_DEPARTMENT_NAME_ENGINEERING, EditDepartmentCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"        // no index and no field specified","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"        assertParseFailure(parser, \"\u0026Engineering\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"kennethk-1201"},"content":"        assertParseFailure(parser, \"Engineering i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"kennethk-1201"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"kennethk-1201"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DEPARTMENT_NAME_DESC,","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"kennethk-1201"},"content":"                DepartmentName.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"kennethk-1201"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"kennethk-1201"},"content":"        DepartmentName targetDepartment \u003d new DepartmentName(VALID_DEPARTMENT_NAME_ENGINEERING);","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"kennethk-1201"},"content":"        String userInput \u003d targetDepartment + DEPARTMENT_NAME_DESC_HUMAN_RESOURCES;","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"kennethk-1201"},"content":"        EditDepartmentCommand.EditDepartmentDescriptor descriptor \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"kennethk-1201"},"content":"                new EditDepartmentDescriptorBuilder()","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"kennethk-1201"},"content":"                        .withName(new DepartmentName(VALID_DEPARTMENT_NAME_HUMAN_RESOURCES)).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"kennethk-1201"},"content":"        EditDepartmentCommand expectedCommand \u003d new EditDepartmentCommand(targetDepartment, descriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"kennethk-1201"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"kennethk-1201"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"kennethk-1201"},"content":"        DepartmentName targetDepartment \u003d new DepartmentName(\"Sales\");","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"kennethk-1201"},"content":"        String userInput \u003d targetDepartment + DEPARTMENT_NAME_DESC_HUMAN_RESOURCES + DEPARTMENT_NAME_DESC_ENGINEERING;","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"kennethk-1201"},"content":"        EditDepartmentCommand.EditDepartmentDescriptor descriptor \u003d new EditDepartmentDescriptorBuilder()","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"kennethk-1201"},"content":"                .withName(new DepartmentName(VALID_DEPARTMENT_NAME_ENGINEERING)).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"kennethk-1201"},"content":"        EditDepartmentCommand expectedCommand \u003d new EditDepartmentCommand(targetDepartment, descriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"kennethk-1201"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"kennethk-1201"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"kennethk-1201"},"content":"        // no other valid values specified","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"kennethk-1201"},"content":"        DepartmentName targetDepartment \u003d new DepartmentName(\"Sales\");","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"kennethk-1201"},"content":"        String userInput \u003d targetDepartment + INVALID_DEPARTMENT_NAME_DESC","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"kennethk-1201"},"content":"                + DEPARTMENT_NAME_DESC_HUMAN_RESOURCES + DEPARTMENT_NAME_DESC_ENGINEERING;","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"kennethk-1201"},"content":"        EditDepartmentCommand.EditDepartmentDescriptor descriptor \u003d new EditDepartmentDescriptorBuilder()","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"kennethk-1201"},"content":"                .withName(new DepartmentName(VALID_DEPARTMENT_NAME_ENGINEERING)).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"kennethk-1201"},"content":"        EditDepartmentCommand expectedCommand \u003d new EditDepartmentCommand(targetDepartment, descriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"kennethk-1201"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"kennethk-1201":91}},{"path":"src/test/java/seedu/sudohr/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.FindCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"pkwangjoo":6,"-":28}},{"path":"src/test/java/seedu/sudohr/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Email;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"pkwangjoo":10,"-":186}},{"path":"src/test/java/seedu/sudohr/logic/parser/SudoHrParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.AddCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.EditCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.FindCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.ListCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.testutil.PersonBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.testutil.PersonUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"pkwangjoo"},"content":"public class SudoHrParserTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"pkwangjoo"},"content":"    private final SudoHrParser parser \u003d new SudoHrParser();","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"pkwangjoo"},"content":"        Employee person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"pkwangjoo"},"content":"        Employee person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"pkwangjoo"},"content":"        EditCommand.EditEmployeeDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"pkwangjoo":24,"-":76}},{"path":"src/test/java/seedu/sudohr/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.model;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.model.Model.PREDICATE_SHOW_ALL_EMPLOYEES;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":26,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.GuiSettings;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"import seedu.sudohr.model.employee.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"import seedu.sudohr.model.employee.exceptions.DuplicateEmailException;","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"import seedu.sudohr.model.employee.exceptions.DuplicateEmployeeException;","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"import seedu.sudohr.model.employee.exceptions.DuplicatePhoneNumberException;","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"import seedu.sudohr.model.employee.exceptions.EmployeeNotFoundException;","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.testutil.AddressBookBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"import seedu.sudohr.testutil.PersonBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"pkwangjoo"},"content":"        assertEquals(new SudoHr(), new SudoHr(modelManager.getSudoHr()));","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"pkwangjoo"},"content":"        userPrefs.setSudoHrFilePath(Paths.get(\"sudohr/book/file/path\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"pkwangjoo"},"content":"        userPrefs.setSudoHrFilePath(Paths.get(\"new/sudohr/book/file/path\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"pkwangjoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setSudoHrFilePath(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"pkwangjoo"},"content":"        Path path \u003d Paths.get(\"sudohr/book/file/path\");","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"pkwangjoo"},"content":"        modelManager.setSudoHrFilePath(path);","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"pkwangjoo"},"content":"        assertEquals(path, modelManager.getSudoHrFilePath());","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"pkwangjoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasEmployee(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"pkwangjoo"},"content":"        assertFalse(modelManager.hasEmployee(ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"pkwangjoo"},"content":"        modelManager.addEmployee(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"pkwangjoo"},"content":"        assertTrue(modelManager.hasEmployee(ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"4ndrelim"},"content":"    public void hasPerson_personWithSameIdInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(BOB);","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"4ndrelim"},"content":"        assertTrue(modelManager.hasEmployee(editedAlice));","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"4ndrelim"},"content":"    public void hasClashingEmail_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasClashingEmail(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"4ndrelim"},"content":"    public void hasClashingEmail_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(modelManager.hasClashingEmail(ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"4ndrelim"},"content":"    public void hasClashingEmail_personWithSameIdInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(BOB);","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(modelManager.hasClashingEmail(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"4ndrelim"},"content":"    public void hasClashingEmail_personWithDifferentIdInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(ALICE);","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"4ndrelim"},"content":"        assertTrue(modelManager.hasClashingEmail(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"4ndrelim"},"content":"    public void hasClashingEmail_personWithSameEmailOnlyInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(BOB);","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"4ndrelim"},"content":"        assertTrue(modelManager.hasClashingEmail(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"4ndrelim"},"content":"    public void hasClashingPhoneNumber_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasClashingPhoneNumber(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"4ndrelim"},"content":"    public void hasClashingPhoneNumber_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(modelManager.hasClashingPhoneNumber(ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"4ndrelim"},"content":"    public void hasClashingPhoneNumber_personWithSameIdInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(BOB);","lastModifiedDate":"2023-03-14"},{"lineNumber":161,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(modelManager.hasClashingPhoneNumber(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"4ndrelim"},"content":"    public void hasClashingPhoneNumber_personWithDifferentIdInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(ALICE);","lastModifiedDate":"2023-03-14"},{"lineNumber":169,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":170,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"4ndrelim"},"content":"        assertTrue(modelManager.hasClashingPhoneNumber(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"4ndrelim"},"content":"    public void hasClashingPhoneNumber_personWithSamePhoneNumberOnlyInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":176,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(BOB);","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"4ndrelim"},"content":"        assertTrue(modelManager.hasClashingPhoneNumber(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"4ndrelim"},"content":"    /** Tests adding of a person **/","lastModifiedDate":"2023-03-15"},{"lineNumber":183,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":184,"author":{"gitId":"4ndrelim"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":185,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.addEmployee(null));","lastModifiedDate":"2023-03-15"},{"lineNumber":186,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":187,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":188,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":189,"author":{"gitId":"4ndrelim"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":190,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":191,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicateEmployeeException.class, () -\u003e modelManager.addEmployee(ALICE));","lastModifiedDate":"2023-03-15"},{"lineNumber":192,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":193,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":194,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":195,"author":{"gitId":"4ndrelim"},"content":"    public void add_personWithSameId_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":196,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":197,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":198,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicateEmployeeException.class, () -\u003e modelManager.addEmployee(editedAlice));","lastModifiedDate":"2023-03-15"},{"lineNumber":199,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":200,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":201,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":202,"author":{"gitId":"4ndrelim"},"content":"    public void add_differentPersonWithSamePhoneNumber_throwsDuplicatePhoneNumberException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":203,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":204,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":205,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicatePhoneNumberException.class, () -\u003e modelManager.addEmployee(editedAlice));","lastModifiedDate":"2023-03-15"},{"lineNumber":206,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":207,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":208,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":209,"author":{"gitId":"4ndrelim"},"content":"    public void add_differentPersonWithSameEmail_throwsDuplicateEmailException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":210,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":211,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":212,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicateEmailException.class, () -\u003e modelManager.addEmployee(editedAlice));","lastModifiedDate":"2023-03-15"},{"lineNumber":213,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":214,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":215,"author":{"gitId":"4ndrelim"},"content":"    // first error accounted is that of duplicate person","lastModifiedDate":"2023-03-15"},{"lineNumber":216,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":217,"author":{"gitId":"4ndrelim"},"content":"    public void add_personWithSameIdEmailPhone_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":218,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":219,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":220,"author":{"gitId":"4ndrelim"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":221,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":222,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicateEmployeeException.class, () -\u003e modelManager.addEmployee(editedAlice));","lastModifiedDate":"2023-03-15"},{"lineNumber":223,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":224,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":225,"author":{"gitId":"4ndrelim"},"content":"    // first error accounted is that of duplicate phone","lastModifiedDate":"2023-03-15"},{"lineNumber":226,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":227,"author":{"gitId":"4ndrelim"},"content":"    public void add_personWithSameEmailPhone_throwsDuplicatePhoneNumberException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":228,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":229,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":230,"author":{"gitId":"4ndrelim"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":231,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":232,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicatePhoneNumberException.class, () -\u003e modelManager.addEmployee(editedAlice));","lastModifiedDate":"2023-03-15"},{"lineNumber":233,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":234,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":235,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":236,"author":{"gitId":"4ndrelim"},"content":"    /** Tests editing of a person **/","lastModifiedDate":"2023-03-15"},{"lineNumber":237,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":238,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":239,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setEmployee(null, ALICE));","lastModifiedDate":"2023-03-15"},{"lineNumber":240,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":241,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":242,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":243,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":244,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setEmployee(ALICE, null));","lastModifiedDate":"2023-03-15"},{"lineNumber":245,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":246,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":247,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":248,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":249,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(EmployeeNotFoundException.class, () -\u003e modelManager.setEmployee(ALICE, ALICE));","lastModifiedDate":"2023-03-15"},{"lineNumber":250,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":251,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":252,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":253,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":254,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":255,"author":{"gitId":"4ndrelim"},"content":"        modelManager.setEmployee(ALICE, ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":256,"author":{"gitId":"4ndrelim"},"content":"        ModelManager expectedModelManager \u003d new ModelManager();","lastModifiedDate":"2023-03-15"},{"lineNumber":257,"author":{"gitId":"4ndrelim"},"content":"        expectedModelManager.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":258,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedModelManager, modelManager);","lastModifiedDate":"2023-03-15"},{"lineNumber":259,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":260,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":261,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":262,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonAlreadyExists_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":263,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":264,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":265,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicateEmployeeException.class, () -\u003e modelManager.setEmployee(ALICE, BOB));","lastModifiedDate":"2023-03-15"},{"lineNumber":266,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":267,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":268,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":269,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonChangeAllUnique_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":270,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":271,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":272,"author":{"gitId":"4ndrelim"},"content":"        modelManager.setEmployee(ALICE, BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":273,"author":{"gitId":"4ndrelim"},"content":"        ModelManager expectedModelManager \u003d new ModelManager();","lastModifiedDate":"2023-03-15"},{"lineNumber":274,"author":{"gitId":"4ndrelim"},"content":"        expectedModelManager.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":275,"author":{"gitId":"4ndrelim"},"content":"        expectedModelManager.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":276,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedModelManager, modelManager);","lastModifiedDate":"2023-03-15"},{"lineNumber":277,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":278,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":279,"author":{"gitId":"4ndrelim"},"content":"    // edited employee kept same id (ie change every other field)","lastModifiedDate":"2023-03-15"},{"lineNumber":280,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":281,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonHasSameIdentityOnly_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":282,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":283,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":284,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":285,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":286,"author":{"gitId":"4ndrelim"},"content":"        modelManager.setEmployee(BOB, newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":287,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":288,"author":{"gitId":"4ndrelim"},"content":"        ModelManager expectedModelManager \u003d new ModelManager();","lastModifiedDate":"2023-03-15"},{"lineNumber":289,"author":{"gitId":"4ndrelim"},"content":"        expectedModelManager.addEmployee(newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":290,"author":{"gitId":"4ndrelim"},"content":"        expectedModelManager.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":291,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedModelManager, modelManager);","lastModifiedDate":"2023-03-15"},{"lineNumber":292,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":293,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":294,"author":{"gitId":"4ndrelim"},"content":"    // edited employee changed id only (ie no change to other fields)","lastModifiedDate":"2023-03-15"},{"lineNumber":295,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":296,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonChangeUniqueIdOnly_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":297,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":298,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":299,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":300,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withId(VALID_ID_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":301,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":302,"author":{"gitId":"4ndrelim"},"content":"        modelManager.setEmployee(BOB, newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":303,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":304,"author":{"gitId":"4ndrelim"},"content":"        ModelManager expectedModelManager \u003d new ModelManager();","lastModifiedDate":"2023-03-15"},{"lineNumber":305,"author":{"gitId":"4ndrelim"},"content":"        expectedModelManager.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":306,"author":{"gitId":"4ndrelim"},"content":"        expectedModelManager.addEmployee(newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":307,"author":{"gitId":"4ndrelim"},"content":"        expectedModelManager.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":308,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":309,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedModelManager, modelManager);","lastModifiedDate":"2023-03-15"},{"lineNumber":310,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":311,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":312,"author":{"gitId":"4ndrelim"},"content":"    // edited person actually made no change to its own id","lastModifiedDate":"2023-03-15"},{"lineNumber":313,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":314,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonNoChangeToId_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":315,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":316,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(AMY);","lastModifiedDate":"2023-03-15"},{"lineNumber":317,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":318,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withId(VALID_ID_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":319,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":320,"author":{"gitId":"4ndrelim"},"content":"        modelManager.setEmployee(BOB, newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":321,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":322,"author":{"gitId":"4ndrelim"},"content":"        ModelManager expectedModelManager \u003d new ModelManager();","lastModifiedDate":"2023-03-15"},{"lineNumber":323,"author":{"gitId":"4ndrelim"},"content":"        expectedModelManager.addEmployee(newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":324,"author":{"gitId":"4ndrelim"},"content":"        expectedModelManager.addEmployee(AMY);","lastModifiedDate":"2023-03-15"},{"lineNumber":325,"author":{"gitId":"4ndrelim"},"content":"        expectedModelManager.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":326,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":327,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedModelManager, modelManager);","lastModifiedDate":"2023-03-15"},{"lineNumber":328,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":329,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":330,"author":{"gitId":"4ndrelim"},"content":"    // edited person changed to an id that already exists","lastModifiedDate":"2023-03-15"},{"lineNumber":331,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":332,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedIdAlreadyExists_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":333,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":334,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":335,"author":{"gitId":"4ndrelim"},"content":"        Employee sameIdAsBob \u003d new PersonBuilder().withId(VALID_ID_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":336,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":337,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicateEmployeeException.class, () -\u003e modelManager.setEmployee(ALICE, sameIdAsBob));","lastModifiedDate":"2023-03-15"},{"lineNumber":338,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":339,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":340,"author":{"gitId":"4ndrelim"},"content":"    // TODO test with some fields changed, excluding id","lastModifiedDate":"2023-03-15"},{"lineNumber":341,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":342,"author":{"gitId":"4ndrelim"},"content":"    // TODO test with some fields changed, including id","lastModifiedDate":"2023-03-15"},{"lineNumber":343,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":344,"author":{"gitId":"4ndrelim"},"content":"    // edited person change to non-duplicated phone number","lastModifiedDate":"2023-03-15"},{"lineNumber":345,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":346,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonNewPhoneIsUnique_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":347,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":348,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":349,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":350,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":351,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":352,"author":{"gitId":"4ndrelim"},"content":"        modelManager.setEmployee(BOB, newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":353,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":354,"author":{"gitId":"4ndrelim"},"content":"        ModelManager expectedModelManager \u003d new ModelManager();","lastModifiedDate":"2023-03-15"},{"lineNumber":355,"author":{"gitId":"4ndrelim"},"content":"        expectedModelManager.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":356,"author":{"gitId":"4ndrelim"},"content":"        expectedModelManager.addEmployee(newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":357,"author":{"gitId":"4ndrelim"},"content":"        expectedModelManager.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":358,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":359,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedModelManager, modelManager);","lastModifiedDate":"2023-03-15"},{"lineNumber":360,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":361,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":362,"author":{"gitId":"4ndrelim"},"content":"    // edited person made no change to phone number","lastModifiedDate":"2023-03-15"},{"lineNumber":363,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":364,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonPhoneNoChange_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":365,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":366,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":367,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":368,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":369,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":370,"author":{"gitId":"4ndrelim"},"content":"        modelManager.setEmployee(BOB, newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":371,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":372,"author":{"gitId":"4ndrelim"},"content":"        ModelManager expectedModelManager \u003d new ModelManager();","lastModifiedDate":"2023-03-15"},{"lineNumber":373,"author":{"gitId":"4ndrelim"},"content":"        expectedModelManager.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":374,"author":{"gitId":"4ndrelim"},"content":"        expectedModelManager.addEmployee(newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":375,"author":{"gitId":"4ndrelim"},"content":"        expectedModelManager.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":376,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":377,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedModelManager, modelManager);","lastModifiedDate":"2023-03-15"},{"lineNumber":378,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":379,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":380,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":381,"author":{"gitId":"4ndrelim"},"content":"    // edited person change to duplicated phone number shared with someone SudoHR","lastModifiedDate":"2023-03-15"},{"lineNumber":382,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":383,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonDuplicatedPhoneNumber_throwsDuplicatePhoneNumberException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":384,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(AMY);","lastModifiedDate":"2023-03-15"},{"lineNumber":385,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":386,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":387,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":388,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":389,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicatePhoneNumberException.class, () -\u003e modelManager.setEmployee(BOB, newBob));","lastModifiedDate":"2023-03-15"},{"lineNumber":390,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":391,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":392,"author":{"gitId":"4ndrelim"},"content":"    // edited person changed to duplicated phone number and email shared with someone in SudoHR","lastModifiedDate":"2023-03-15"},{"lineNumber":393,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":394,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonChangeEmailPhone_throwsDuplicatePhoneNumberException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":395,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(AMY);","lastModifiedDate":"2023-03-15"},{"lineNumber":396,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":397,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":398,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":399,"author":{"gitId":"4ndrelim"},"content":"                .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":400,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":401,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicatePhoneNumberException.class, () -\u003e modelManager.setEmployee(BOB, newBob));","lastModifiedDate":"2023-03-15"},{"lineNumber":402,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":403,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":404,"author":{"gitId":"4ndrelim"},"content":"    // TODO edited person changed some fields, including phone number","lastModifiedDate":"2023-03-15"},{"lineNumber":405,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":406,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":407,"author":{"gitId":"4ndrelim"},"content":"    // edited person change to non-duplicated email","lastModifiedDate":"2023-03-15"},{"lineNumber":408,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":409,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonNewEmailIsUnique_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":410,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":411,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":412,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":413,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":414,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":415,"author":{"gitId":"4ndrelim"},"content":"        modelManager.setEmployee(BOB, newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":416,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":417,"author":{"gitId":"4ndrelim"},"content":"        ModelManager expectedModelManager \u003d new ModelManager();","lastModifiedDate":"2023-03-15"},{"lineNumber":418,"author":{"gitId":"4ndrelim"},"content":"        expectedModelManager.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":419,"author":{"gitId":"4ndrelim"},"content":"        expectedModelManager.addEmployee(newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":420,"author":{"gitId":"4ndrelim"},"content":"        expectedModelManager.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":421,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":422,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedModelManager, modelManager);","lastModifiedDate":"2023-03-15"},{"lineNumber":423,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":424,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":425,"author":{"gitId":"4ndrelim"},"content":"    // edited person made no change to email","lastModifiedDate":"2023-03-15"},{"lineNumber":426,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":427,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonEmailNoChange_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":428,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":429,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":430,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":431,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":432,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":433,"author":{"gitId":"4ndrelim"},"content":"        modelManager.setEmployee(BOB, newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":434,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":435,"author":{"gitId":"4ndrelim"},"content":"        ModelManager expectedModelManager \u003d new ModelManager();","lastModifiedDate":"2023-03-15"},{"lineNumber":436,"author":{"gitId":"4ndrelim"},"content":"        expectedModelManager.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":437,"author":{"gitId":"4ndrelim"},"content":"        expectedModelManager.addEmployee(newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":438,"author":{"gitId":"4ndrelim"},"content":"        expectedModelManager.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":439,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":440,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedModelManager, modelManager);","lastModifiedDate":"2023-03-15"},{"lineNumber":441,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":442,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":443,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":444,"author":{"gitId":"4ndrelim"},"content":"    // edited person change to duplicated email as someone SudoHR","lastModifiedDate":"2023-03-15"},{"lineNumber":445,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":446,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonDuplicatedEmail_throwsDuplicateEmailException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":447,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(AMY);","lastModifiedDate":"2023-03-15"},{"lineNumber":448,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":449,"author":{"gitId":"4ndrelim"},"content":"        modelManager.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":450,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":451,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":452,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicateEmailException.class, () -\u003e modelManager.setEmployee(BOB, newBob));","lastModifiedDate":"2023-03-15"},{"lineNumber":453,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":454,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":455,"author":{"gitId":"4ndrelim"},"content":"    // TODO edited person changed some fields, including email","lastModifiedDate":"2023-03-15"},{"lineNumber":456,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":457,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":458,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":459,"author":{"gitId":"pkwangjoo"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredEmployeeList().remove(0));","lastModifiedDate":"2023-03-13"},{"lineNumber":460,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":462,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":463,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":464,"author":{"gitId":"pkwangjoo"},"content":"        SudoHr sudoHr \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":465,"author":{"gitId":"pkwangjoo"},"content":"        SudoHr differentSudoHr \u003d new SudoHr();","lastModifiedDate":"2023-03-08"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":468,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":469,"author":{"gitId":"pkwangjoo"},"content":"        modelManager \u003d new ModelManager(sudoHr, userPrefs);","lastModifiedDate":"2023-03-08"},{"lineNumber":470,"author":{"gitId":"pkwangjoo"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(sudoHr, userPrefs);","lastModifiedDate":"2023-03-08"},{"lineNumber":471,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":473,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":474,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":476,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":477,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":479,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":480,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":482,"author":{"gitId":"pkwangjoo"},"content":"        // different sudoHr -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":483,"author":{"gitId":"pkwangjoo"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentSudoHr, userPrefs)));","lastModifiedDate":"2023-03-08"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":485,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":486,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":487,"author":{"gitId":"pkwangjoo"},"content":"        modelManager.updateFilteredEmployeeList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-03-13"},{"lineNumber":488,"author":{"gitId":"pkwangjoo"},"content":"        assertFalse(modelManager.equals(new ModelManager(sudoHr, userPrefs)));","lastModifiedDate":"2023-03-08"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":490,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":491,"author":{"gitId":"pkwangjoo"},"content":"        modelManager.updateFilteredEmployeeList(PREDICATE_SHOW_ALL_EMPLOYEES);","lastModifiedDate":"2023-03-13"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":493,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":494,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":495,"author":{"gitId":"pkwangjoo"},"content":"        differentUserPrefs.setSudoHrFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":496,"author":{"gitId":"pkwangjoo"},"content":"        assertFalse(modelManager.equals(new ModelManager(sudoHr, differentUserPrefs)));","lastModifiedDate":"2023-03-08"},{"lineNumber":497,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":498,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"pkwangjoo":28,"4ndrelim":369,"-":101}},{"path":"src/test/java/seedu/sudohr/model/SudoHrTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.model;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.testutil.TypicalDepartments.ENGINEERING;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.testutil.TypicalDepartments.HUMAN_RESOURCES;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.testutil.TypicalDepartments.SALES;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.testutil.TypicalDepartments.getTypicalSudoHr;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.testutil.TypicalPersons.HOON;","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.testutil.TypicalPersons.IDA;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.Department;","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.exceptions.DuplicateDepartmentException;","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"import seedu.sudohr.model.employee.exceptions.DuplicateEmailException;","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.exceptions.DuplicateEmployeeException;","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"import seedu.sudohr.model.employee.exceptions.DuplicatePhoneNumberException;","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"4ndrelim"},"content":"import seedu.sudohr.model.employee.exceptions.EmployeeNotFoundException;","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.testutil.DepartmentBuilder;","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.testutil.PersonBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"pkwangjoo"},"content":"public class SudoHrTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"pkwangjoo"},"content":"    private final SudoHr sudoHr \u003d new SudoHr();","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"pkwangjoo"},"content":"        assertEquals(Collections.emptyList(), sudoHr.getEmployeeList());","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"pkwangjoo"},"content":"    //// Employee tests","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"pkwangjoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e sudoHr.resetData(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":65,"author":{"gitId":"kennethk-1201"},"content":"        SudoHr newData \u003d getTypicalSudoHr();","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"pkwangjoo"},"content":"        sudoHr.resetData(newData);","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"pkwangjoo"},"content":"        assertEquals(newData, sudoHr);","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"4ndrelim"},"content":"        // adding two person with the exact same fields","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"pkwangjoo"},"content":"        List\u003cEmployee\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"kennethk-1201"},"content":"        List\u003cDepartment\u003e newDepartments \u003d Arrays.asList();","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"kennethk-1201"},"content":"        SudoHrStub newData \u003d new SudoHrStub(newPersons, newDepartments);","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"pkwangjoo"},"content":"        assertThrows(DuplicateEmployeeException.class, () -\u003e sudoHr.resetData(newData));","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"4ndrelim"},"content":"    public void resetData_withDuplicateId_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"4ndrelim"},"content":"        // adding two persons with only id matching","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"4ndrelim"},"content":"        List\u003cEmployee\u003e newPersons \u003d Arrays.asList(BOB, editedAlice);","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"4ndrelim"},"content":"        List\u003cDepartment\u003e newDepartments \u003d Arrays.asList();","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"4ndrelim"},"content":"        SudoHrStub newData \u003d new SudoHrStub(newPersons, newDepartments);","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicateEmployeeException.class, () -\u003e sudoHr.resetData(newData));","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"4ndrelim"},"content":"    public void resetData_withDuplicateEmail_throwsDuplicateEmailException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"4ndrelim"},"content":"        // adding two persons with only email matching","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"4ndrelim"},"content":"        List\u003cEmployee\u003e newPersons \u003d Arrays.asList(BOB, editedAlice);","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"4ndrelim"},"content":"        List\u003cDepartment\u003e newDepartments \u003d Arrays.asList();","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"4ndrelim"},"content":"        SudoHrStub newData \u003d new SudoHrStub(newPersons, newDepartments);","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicateEmailException.class, () -\u003e sudoHr.resetData(newData));","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"4ndrelim"},"content":"    public void resetData_withDuplicatePhoneNumber_throwsDuplicatePhoneNumberException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"4ndrelim"},"content":"        // adding two persons with only phone number matching","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"4ndrelim"},"content":"        List\u003cEmployee\u003e newPersons \u003d Arrays.asList(BOB, editedAlice);","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"4ndrelim"},"content":"        List\u003cDepartment\u003e newDepartments \u003d Arrays.asList();","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"4ndrelim"},"content":"        SudoHrStub newData \u003d new SudoHrStub(newPersons, newDepartments);","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicatePhoneNumberException.class, () -\u003e sudoHr.resetData(newData));","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"4ndrelim"},"content":"    public void resetData_withDuplicateEmailPhoneNumber_throwsDuplicatePhoneNumberException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"4ndrelim"},"content":"        // adding two persons with only phone number matching","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"4ndrelim"},"content":"                .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"4ndrelim"},"content":"        List\u003cEmployee\u003e newPersons \u003d Arrays.asList(BOB, editedAlice);","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"4ndrelim"},"content":"        List\u003cDepartment\u003e newDepartments \u003d Arrays.asList();","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"4ndrelim"},"content":"        SudoHrStub newData \u003d new SudoHrStub(newPersons, newDepartments);","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicatePhoneNumberException.class, () -\u003e sudoHr.resetData(newData));","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"pkwangjoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e sudoHr.hasEmployee(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"pkwangjoo"},"content":"        assertFalse(sudoHr.hasEmployee(ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":142,"author":{"gitId":"pkwangjoo"},"content":"        sudoHr.addEmployee(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"pkwangjoo"},"content":"        assertTrue(sudoHr.hasEmployee(ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"4ndrelim"},"content":"    public void hasPerson_personWithSameIdInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(BOB);","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"pkwangjoo"},"content":"        assertTrue(sudoHr.hasEmployee(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"4ndrelim"},"content":"    public void hasClashingEmail_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(NullPointerException.class, () -\u003e sudoHr.hasClashingEmail(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"4ndrelim"},"content":"    public void hasClashingEmail_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(sudoHr.hasClashingEmail(ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"4ndrelim"},"content":"    public void hasClashingEmail_personWithSameIdInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(BOB);","lastModifiedDate":"2023-03-14"},{"lineNumber":167,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":168,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(sudoHr.hasClashingEmail(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":170,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"4ndrelim"},"content":"    public void hasClashingEmail_personWithDifferentIdInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(ALICE);","lastModifiedDate":"2023-03-14"},{"lineNumber":175,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":176,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"4ndrelim"},"content":"        assertTrue(sudoHr.hasClashingEmail(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"4ndrelim"},"content":"    public void hasClashingEmail_personWithSameEmailOnlyInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(BOB);","lastModifiedDate":"2023-03-14"},{"lineNumber":183,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":184,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"4ndrelim"},"content":"        assertTrue(sudoHr.hasClashingEmail(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":188,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":189,"author":{"gitId":"4ndrelim"},"content":"    public void hasClashingPhoneNumber_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(NullPointerException.class, () -\u003e sudoHr.hasClashingPhoneNumber(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":193,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":194,"author":{"gitId":"4ndrelim"},"content":"    public void hasClashingPhoneNumber_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-13"},{"lineNumber":195,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(sudoHr.hasClashingPhoneNumber(ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":196,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":197,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":198,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":199,"author":{"gitId":"4ndrelim"},"content":"    public void hasClashingPhoneNumber_personWithSameIdInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-13"},{"lineNumber":200,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(BOB);","lastModifiedDate":"2023-03-14"},{"lineNumber":201,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":202,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":203,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(sudoHr.hasClashingPhoneNumber(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":204,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":205,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":206,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":207,"author":{"gitId":"4ndrelim"},"content":"    public void hasClashingPhoneNumber_personWithDifferentIdInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":208,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(ALICE);","lastModifiedDate":"2023-03-14"},{"lineNumber":209,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":210,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":211,"author":{"gitId":"4ndrelim"},"content":"        assertTrue(sudoHr.hasClashingPhoneNumber(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":212,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":213,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":214,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":215,"author":{"gitId":"4ndrelim"},"content":"    public void hasClashingPhoneNumber_personWithSamePhoneNumberOnlyInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":216,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(BOB);","lastModifiedDate":"2023-03-14"},{"lineNumber":217,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":218,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":219,"author":{"gitId":"4ndrelim"},"content":"        assertTrue(sudoHr.hasClashingPhoneNumber(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":220,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":221,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":224,"author":{"gitId":"pkwangjoo"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e sudoHr.getEmployeeList().remove(0));","lastModifiedDate":"2023-03-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":227,"author":{"gitId":"4ndrelim"},"content":"    /** Tests adding of a person **/","lastModifiedDate":"2023-03-15"},{"lineNumber":228,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":229,"author":{"gitId":"4ndrelim"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":230,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(NullPointerException.class, () -\u003e sudoHr.addEmployee(null));","lastModifiedDate":"2023-03-15"},{"lineNumber":231,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":232,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":233,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":234,"author":{"gitId":"4ndrelim"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":235,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":236,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicateEmployeeException.class, () -\u003e sudoHr.addEmployee(ALICE));","lastModifiedDate":"2023-03-15"},{"lineNumber":237,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":238,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":239,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":240,"author":{"gitId":"4ndrelim"},"content":"    public void add_personWithSameId_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":241,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":242,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":243,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicateEmployeeException.class, () -\u003e sudoHr.addEmployee(editedAlice));","lastModifiedDate":"2023-03-15"},{"lineNumber":244,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":245,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":246,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":247,"author":{"gitId":"4ndrelim"},"content":"    public void add_differentPersonWithSamePhoneNumber_throwsDuplicatePhoneNumberException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":248,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":249,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":250,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicatePhoneNumberException.class, () -\u003e sudoHr.addEmployee(editedAlice));","lastModifiedDate":"2023-03-15"},{"lineNumber":251,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":252,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":253,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":254,"author":{"gitId":"4ndrelim"},"content":"    public void add_differentPersonWithSameEmail_throwsDuplicateEmailException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":255,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":256,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":257,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicateEmailException.class, () -\u003e sudoHr.addEmployee(editedAlice));","lastModifiedDate":"2023-03-15"},{"lineNumber":258,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":259,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":260,"author":{"gitId":"4ndrelim"},"content":"    // first error accounted is that of duplicate person","lastModifiedDate":"2023-03-15"},{"lineNumber":261,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":262,"author":{"gitId":"4ndrelim"},"content":"    public void add_personWithSameIdEmailPhone_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":263,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":264,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":265,"author":{"gitId":"4ndrelim"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":266,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":267,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicateEmployeeException.class, () -\u003e sudoHr.addEmployee(editedAlice));","lastModifiedDate":"2023-03-15"},{"lineNumber":268,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":269,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":270,"author":{"gitId":"4ndrelim"},"content":"    // first error accounted is that of duplicate phone","lastModifiedDate":"2023-03-15"},{"lineNumber":271,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":272,"author":{"gitId":"4ndrelim"},"content":"    public void add_personWithSameEmailPhone_throwsDuplicatePhoneNumberException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":273,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":274,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":275,"author":{"gitId":"4ndrelim"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":276,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":277,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicatePhoneNumberException.class, () -\u003e sudoHr.addEmployee(editedAlice));","lastModifiedDate":"2023-03-15"},{"lineNumber":278,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":279,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":280,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":281,"author":{"gitId":"4ndrelim"},"content":"    /** Tests editing of a person **/","lastModifiedDate":"2023-03-15"},{"lineNumber":282,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":283,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":284,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(NullPointerException.class, () -\u003e sudoHr.setEmployee(null, ALICE));","lastModifiedDate":"2023-03-15"},{"lineNumber":285,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":286,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":287,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":288,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":289,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(NullPointerException.class, () -\u003e sudoHr.setEmployee(ALICE, null));","lastModifiedDate":"2023-03-15"},{"lineNumber":290,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":291,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":292,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":293,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":294,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(EmployeeNotFoundException.class, () -\u003e sudoHr.setEmployee(ALICE, ALICE));","lastModifiedDate":"2023-03-15"},{"lineNumber":295,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":296,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":297,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":298,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":299,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":300,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.setEmployee(ALICE, ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":301,"author":{"gitId":"4ndrelim"},"content":"        SudoHr expectedSudoHr \u003d new SudoHr();","lastModifiedDate":"2023-03-15"},{"lineNumber":302,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":303,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedSudoHr, sudoHr);","lastModifiedDate":"2023-03-15"},{"lineNumber":304,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":305,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":306,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":307,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonAlreadyExists_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":308,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":309,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":310,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicateEmployeeException.class, () -\u003e sudoHr.setEmployee(ALICE, BOB));","lastModifiedDate":"2023-03-15"},{"lineNumber":311,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":312,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":313,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":314,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonChangeAllUnique_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":315,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":316,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":317,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.setEmployee(ALICE, BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":318,"author":{"gitId":"4ndrelim"},"content":"        SudoHr expectedSudoHr \u003d new SudoHr();","lastModifiedDate":"2023-03-15"},{"lineNumber":319,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":320,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":321,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedSudoHr, sudoHr);","lastModifiedDate":"2023-03-15"},{"lineNumber":322,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":323,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":324,"author":{"gitId":"4ndrelim"},"content":"    // edited employee kept same id (ie change every other field)","lastModifiedDate":"2023-03-15"},{"lineNumber":325,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":326,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonHasSameIdentityOnly_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":327,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":328,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":329,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":330,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":331,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.setEmployee(BOB, newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":332,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":333,"author":{"gitId":"4ndrelim"},"content":"        SudoHr expectedSudoHr \u003d new SudoHr();","lastModifiedDate":"2023-03-15"},{"lineNumber":334,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":335,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":336,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedSudoHr, sudoHr);","lastModifiedDate":"2023-03-15"},{"lineNumber":337,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":338,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":339,"author":{"gitId":"4ndrelim"},"content":"    // edited employee changed id only (ie no change to other fields)","lastModifiedDate":"2023-03-15"},{"lineNumber":340,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":341,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonChangeUniqueIdOnly_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":342,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":343,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":344,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":345,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withId(VALID_ID_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":346,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":347,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.setEmployee(BOB, newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":348,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":349,"author":{"gitId":"4ndrelim"},"content":"        SudoHr expectedSudoHr \u003d new SudoHr();","lastModifiedDate":"2023-03-15"},{"lineNumber":350,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":351,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":352,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":353,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":354,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedSudoHr, sudoHr);","lastModifiedDate":"2023-03-15"},{"lineNumber":355,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":356,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":357,"author":{"gitId":"4ndrelim"},"content":"    // edited person actually made no change to its own id","lastModifiedDate":"2023-03-15"},{"lineNumber":358,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":359,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonNoChangeToId_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":360,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":361,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(AMY);","lastModifiedDate":"2023-03-15"},{"lineNumber":362,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":363,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withId(VALID_ID_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":364,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":365,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.setEmployee(BOB, newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":366,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":367,"author":{"gitId":"4ndrelim"},"content":"        SudoHr expectedSudoHr \u003d new SudoHr();","lastModifiedDate":"2023-03-15"},{"lineNumber":368,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":369,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(AMY);","lastModifiedDate":"2023-03-15"},{"lineNumber":370,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":371,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":372,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedSudoHr, sudoHr);","lastModifiedDate":"2023-03-15"},{"lineNumber":373,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":374,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":375,"author":{"gitId":"4ndrelim"},"content":"    // edited person changed to an id that already exists","lastModifiedDate":"2023-03-15"},{"lineNumber":376,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":377,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedIdAlreadyExists_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":378,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":379,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":380,"author":{"gitId":"4ndrelim"},"content":"        Employee sameIdAsBob \u003d new PersonBuilder().withId(VALID_ID_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":381,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":382,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicateEmployeeException.class, () -\u003e sudoHr.setEmployee(ALICE, sameIdAsBob));","lastModifiedDate":"2023-03-15"},{"lineNumber":383,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":384,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":385,"author":{"gitId":"4ndrelim"},"content":"    // test with some fields changed, excluding id","lastModifiedDate":"2023-03-15"},{"lineNumber":386,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":387,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonHasSameIdentityAndEmailOnly_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":388,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":389,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":390,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":391,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":392,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.setEmployee(BOB, newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":393,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":394,"author":{"gitId":"4ndrelim"},"content":"        SudoHr expectedSudoHr \u003d new SudoHr();","lastModifiedDate":"2023-03-15"},{"lineNumber":395,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":396,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":397,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":398,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedSudoHr, sudoHr);","lastModifiedDate":"2023-03-15"},{"lineNumber":399,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":400,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":401,"author":{"gitId":"4ndrelim"},"content":"    // test with some fields changed, including id","lastModifiedDate":"2023-03-15"},{"lineNumber":402,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":403,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonChangeIdEmailAddressOnly_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":404,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":405,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":406,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":407,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withId(VALID_ID_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":408,"author":{"gitId":"4ndrelim"},"content":"                .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":409,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":410,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.setEmployee(BOB, newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":411,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":412,"author":{"gitId":"4ndrelim"},"content":"        SudoHr expectedSudoHr \u003d new SudoHr();","lastModifiedDate":"2023-03-15"},{"lineNumber":413,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":414,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":415,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":416,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":417,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedSudoHr, sudoHr);","lastModifiedDate":"2023-03-15"},{"lineNumber":418,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":419,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":420,"author":{"gitId":"4ndrelim"},"content":"    // edited person change to non-duplicated phone number","lastModifiedDate":"2023-03-15"},{"lineNumber":421,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":422,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonNewPhoneIsUnique_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":423,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":424,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":425,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":426,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":427,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":428,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.setEmployee(BOB, newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":429,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":430,"author":{"gitId":"4ndrelim"},"content":"        SudoHr expectedSudoHr \u003d new SudoHr();","lastModifiedDate":"2023-03-15"},{"lineNumber":431,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":432,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":433,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":434,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":435,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedSudoHr, sudoHr);","lastModifiedDate":"2023-03-15"},{"lineNumber":436,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":437,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":438,"author":{"gitId":"4ndrelim"},"content":"    // edited person made no change to phone number","lastModifiedDate":"2023-03-15"},{"lineNumber":439,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":440,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonPhoneNoChange_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":441,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":442,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":443,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":444,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":445,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":446,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.setEmployee(BOB, newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":447,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":448,"author":{"gitId":"4ndrelim"},"content":"        SudoHr expectedSudoHr \u003d new SudoHr();","lastModifiedDate":"2023-03-15"},{"lineNumber":449,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":450,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":451,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":452,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":453,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedSudoHr, sudoHr);","lastModifiedDate":"2023-03-15"},{"lineNumber":454,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":455,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":456,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":457,"author":{"gitId":"4ndrelim"},"content":"    // edited person change to duplicated phone number shared with someone SudoHR","lastModifiedDate":"2023-03-15"},{"lineNumber":458,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":459,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonDuplicatedPhoneNumber_throwsDuplicatePhoneNumberException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":460,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(AMY);","lastModifiedDate":"2023-03-15"},{"lineNumber":461,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":462,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":463,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":464,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":465,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicatePhoneNumberException.class, () -\u003e sudoHr.setEmployee(BOB, newBob));","lastModifiedDate":"2023-03-15"},{"lineNumber":466,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":467,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":468,"author":{"gitId":"4ndrelim"},"content":"    // edited person changed to duplicated phone number and email shared with someone in SudoHR","lastModifiedDate":"2023-03-15"},{"lineNumber":469,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":470,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonChangeEmailPhone_throwsDuplicatePhoneNumberException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":471,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(AMY);","lastModifiedDate":"2023-03-15"},{"lineNumber":472,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":473,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":474,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":475,"author":{"gitId":"4ndrelim"},"content":"                .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":476,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":477,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicatePhoneNumberException.class, () -\u003e sudoHr.setEmployee(BOB, newBob));","lastModifiedDate":"2023-03-15"},{"lineNumber":478,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":479,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":480,"author":{"gitId":"4ndrelim"},"content":"    // edited person changed some fields, including phone number","lastModifiedDate":"2023-03-15"},{"lineNumber":481,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":482,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonSomeChangesAndPhone_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":483,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":484,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":485,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":486,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":487,"author":{"gitId":"4ndrelim"},"content":"                .withAddress(VALID_ADDRESS_AMY).withId(VALID_ID_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":488,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":489,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.setEmployee(BOB, newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":490,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":491,"author":{"gitId":"4ndrelim"},"content":"        SudoHr expectedSudoHr \u003d new SudoHr();","lastModifiedDate":"2023-03-15"},{"lineNumber":492,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":493,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":494,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":495,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":496,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedSudoHr, sudoHr);","lastModifiedDate":"2023-03-15"},{"lineNumber":497,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":498,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":499,"author":{"gitId":"4ndrelim"},"content":"    // edited person change to non-duplicated email","lastModifiedDate":"2023-03-15"},{"lineNumber":500,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":501,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonNewEmailIsUnique_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":502,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":503,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":504,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":505,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":506,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":507,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.setEmployee(BOB, newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":508,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":509,"author":{"gitId":"4ndrelim"},"content":"        SudoHr expectedSudoHr \u003d new SudoHr();","lastModifiedDate":"2023-03-15"},{"lineNumber":510,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":511,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":512,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":513,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":514,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedSudoHr, sudoHr);","lastModifiedDate":"2023-03-15"},{"lineNumber":515,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":516,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":517,"author":{"gitId":"4ndrelim"},"content":"    // edited person made no change to email","lastModifiedDate":"2023-03-15"},{"lineNumber":518,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":519,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonEmailNoChange_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":520,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":521,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":522,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":523,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":524,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":525,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.setEmployee(BOB, newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":526,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":527,"author":{"gitId":"4ndrelim"},"content":"        SudoHr expectedSudoHr \u003d new SudoHr();","lastModifiedDate":"2023-03-15"},{"lineNumber":528,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":529,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":530,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":531,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":532,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedSudoHr, sudoHr);","lastModifiedDate":"2023-03-15"},{"lineNumber":533,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":534,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":535,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":536,"author":{"gitId":"4ndrelim"},"content":"    // edited person change to duplicated email as someone SudoHR","lastModifiedDate":"2023-03-15"},{"lineNumber":537,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":538,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonDuplicatedEmail_throwsDuplicateEmailException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":539,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(AMY);","lastModifiedDate":"2023-03-15"},{"lineNumber":540,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":541,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":542,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":543,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":544,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicateEmailException.class, () -\u003e sudoHr.setEmployee(BOB, newBob));","lastModifiedDate":"2023-03-15"},{"lineNumber":545,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":546,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":547,"author":{"gitId":"4ndrelim"},"content":"    // edited person changed some fields, including email","lastModifiedDate":"2023-03-15"},{"lineNumber":548,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":549,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonSomeChangesAndEmail_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":550,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":551,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":552,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":553,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":554,"author":{"gitId":"4ndrelim"},"content":"                .withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-15"},{"lineNumber":555,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":556,"author":{"gitId":"4ndrelim"},"content":"        sudoHr.setEmployee(BOB, newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":557,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":558,"author":{"gitId":"4ndrelim"},"content":"        SudoHr expectedSudoHr \u003d new SudoHr();","lastModifiedDate":"2023-03-15"},{"lineNumber":559,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":560,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":561,"author":{"gitId":"4ndrelim"},"content":"        expectedSudoHr.addEmployee(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":562,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":563,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedSudoHr, sudoHr);","lastModifiedDate":"2023-03-15"},{"lineNumber":564,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":565,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":566,"author":{"gitId":"kennethk-1201"},"content":"    //// Department tests","lastModifiedDate":"2023-03-10"},{"lineNumber":567,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":568,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":569,"author":{"gitId":"kennethk-1201"},"content":"    public void resetData_withDuplicateDepartments_throwsDuplicateDepartmentException() {","lastModifiedDate":"2023-03-10"},{"lineNumber":570,"author":{"gitId":"kennethk-1201"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2023-03-10"},{"lineNumber":571,"author":{"gitId":"kennethk-1201"},"content":"        Department editedHumanResources \u003d new DepartmentBuilder(HUMAN_RESOURCES).withDepartmentName(\"Sales\").build();","lastModifiedDate":"2023-03-10"},{"lineNumber":572,"author":{"gitId":"pkwangjoo"},"content":"        List\u003cEmployee\u003e newPersons \u003d Arrays.asList(ALICE, BENSON, CARL, GEORGE, HOON, IDA);","lastModifiedDate":"2023-03-13"},{"lineNumber":573,"author":{"gitId":"kennethk-1201"},"content":"        List\u003cDepartment\u003e newDepartments \u003d Arrays.asList(editedHumanResources, SALES);","lastModifiedDate":"2023-03-10"},{"lineNumber":574,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":575,"author":{"gitId":"kennethk-1201"},"content":"        SudoHrStub newData \u003d new SudoHrStub(newPersons, newDepartments);","lastModifiedDate":"2023-03-10"},{"lineNumber":576,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":577,"author":{"gitId":"kennethk-1201"},"content":"        assertThrows(DuplicateDepartmentException.class, () -\u003e sudoHr.resetData(newData));","lastModifiedDate":"2023-03-10"},{"lineNumber":578,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":579,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":580,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":581,"author":{"gitId":"kennethk-1201"},"content":"    public void hasDepartment_nullDepartment_throwsNullPointerException() {","lastModifiedDate":"2023-03-10"},{"lineNumber":582,"author":{"gitId":"kennethk-1201"},"content":"        assertThrows(NullPointerException.class, () -\u003e sudoHr.hasDepartment(null));","lastModifiedDate":"2023-03-10"},{"lineNumber":583,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":584,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":585,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":586,"author":{"gitId":"kennethk-1201"},"content":"    public void hasDepartment_departmentNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-10"},{"lineNumber":587,"author":{"gitId":"kennethk-1201"},"content":"        assertFalse(sudoHr.hasDepartment(HUMAN_RESOURCES));","lastModifiedDate":"2023-03-10"},{"lineNumber":588,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":589,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":590,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":591,"author":{"gitId":"kennethk-1201"},"content":"    public void hasDepartment_departmentInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-10"},{"lineNumber":592,"author":{"gitId":"kennethk-1201"},"content":"        sudoHr.addDepartment(ENGINEERING);","lastModifiedDate":"2023-03-10"},{"lineNumber":593,"author":{"gitId":"kennethk-1201"},"content":"        assertTrue(sudoHr.hasDepartment(ENGINEERING));","lastModifiedDate":"2023-03-10"},{"lineNumber":594,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":595,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":596,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":597,"author":{"gitId":"kennethk-1201"},"content":"    public void hasDepartment_departmentWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-10"},{"lineNumber":598,"author":{"gitId":"kennethk-1201"},"content":"        sudoHr.addDepartment(HUMAN_RESOURCES);","lastModifiedDate":"2023-03-10"},{"lineNumber":599,"author":{"gitId":"kennethk-1201"},"content":"        Department editedEngineering \u003d new DepartmentBuilder(ENGINEERING).withDepartmentName(\"Human Resources\")","lastModifiedDate":"2023-03-10"},{"lineNumber":600,"author":{"gitId":"kennethk-1201"},"content":"                .build();","lastModifiedDate":"2023-03-10"},{"lineNumber":601,"author":{"gitId":"kennethk-1201"},"content":"        assertTrue(sudoHr.hasDepartment(editedEngineering));","lastModifiedDate":"2023-03-10"},{"lineNumber":602,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":603,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":604,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":605,"author":{"gitId":"kennethk-1201"},"content":"    public void getDepartmentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-10"},{"lineNumber":606,"author":{"gitId":"kennethk-1201"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e sudoHr.getDepartmentList().remove(0));","lastModifiedDate":"2023-03-10"},{"lineNumber":607,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":608,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":609,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":610,"author":{"gitId":"kennethk-1201"},"content":"     * A stub ReadOnlySudoHr whose persons and departments list can violate interface constraints.","lastModifiedDate":"2023-03-10"},{"lineNumber":611,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":612,"author":{"gitId":"pkwangjoo"},"content":"    private static class SudoHrStub implements ReadOnlySudoHr {","lastModifiedDate":"2023-03-08"},{"lineNumber":613,"author":{"gitId":"pkwangjoo"},"content":"        private final ObservableList\u003cEmployee\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-13"},{"lineNumber":614,"author":{"gitId":"kennethk-1201"},"content":"        private final ObservableList\u003cDepartment\u003e departments \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-10"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":616,"author":{"gitId":"pkwangjoo"},"content":"        SudoHrStub(Collection\u003cEmployee\u003e persons, Collection\u003cDepartment\u003e departments) {","lastModifiedDate":"2023-03-13"},{"lineNumber":617,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":618,"author":{"gitId":"kennethk-1201"},"content":"            this.departments.setAll(departments);","lastModifiedDate":"2023-03-10"},{"lineNumber":619,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":621,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":622,"author":{"gitId":"pkwangjoo"},"content":"        public ObservableList\u003cEmployee\u003e getEmployeeList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":623,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":624,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":625,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":626,"author":{"gitId":"kennethk-1201"},"content":"        @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":627,"author":{"gitId":"kennethk-1201"},"content":"        public ObservableList\u003cDepartment\u003e getDepartmentList() {","lastModifiedDate":"2023-03-10"},{"lineNumber":628,"author":{"gitId":"kennethk-1201"},"content":"            return departments;","lastModifiedDate":"2023-03-10"},{"lineNumber":629,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":630,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":632,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"pkwangjoo":25,"4ndrelim":480,"kennethk-1201":61,"-":66}},{"path":"src/test/java/seedu/sudohr/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.model;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"pkwangjoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setSudoHrFilePath(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"pkwangjoo":3,"-":18}},{"path":"src/test/java/seedu/sudohr/model/department/DepartmentNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package seedu.sudohr.model.department;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"public class DepartmentNameTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DepartmentName(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DepartmentName(invalidName));","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"    public void isValidName() {","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"        // null name","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"        assertThrows(NullPointerException.class, () -\u003e DepartmentName.isValidName(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"        // invalid name","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"        assertFalse(DepartmentName.isValidName(\"\")); // empty string","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"        assertFalse(DepartmentName.isValidName(\" \")); // spaces only","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"        assertFalse(DepartmentName.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"        assertFalse(DepartmentName.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"        // valid name","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"        assertTrue(DepartmentName.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"        assertTrue(DepartmentName.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"        assertTrue(DepartmentName.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"        assertTrue(DepartmentName.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"        assertTrue(DepartmentName.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"kennethk-1201":40}},{"path":"src/test/java/seedu/sudohr/model/department/DepartmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package seedu.sudohr.model.department;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_DEPARTMENT_NAME_ENGINEERING;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.testutil.TypicalDepartments.ENGINEERING;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.testutil.TypicalDepartments.HUMAN_RESOURCES;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.testutil.DepartmentBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"public class DepartmentTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"        Department department \u003d new DepartmentBuilder().build();","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e department.getEmployees().remove(0));","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"    public void equals() {","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"        Department humanResourcesCopy \u003d new DepartmentBuilder(HUMAN_RESOURCES).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"        assertTrue(HUMAN_RESOURCES.equals(humanResourcesCopy));","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"        assertTrue(HUMAN_RESOURCES.equals(HUMAN_RESOURCES));","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"        assertFalse(HUMAN_RESOURCES.equals(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"        assertFalse(HUMAN_RESOURCES.equals(5));","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"        assertFalse(HUMAN_RESOURCES.equals(ENGINEERING));","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"        Department editedHumanResources \u003d new DepartmentBuilder(HUMAN_RESOURCES)","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"                .withDepartmentName(VALID_DEPARTMENT_NAME_ENGINEERING).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"kennethk-1201"},"content":"        assertFalse(HUMAN_RESOURCES.equals(editedHumanResources));","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"kennethk-1201":45}},{"path":"src/test/java/seedu/sudohr/model/department/UniqueDepartmentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package seedu.sudohr.model.department;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.testutil.TypicalDepartments.ENGINEERING;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.testutil.TypicalDepartments.HUMAN_RESOURCES;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"import java.util.List;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.exceptions.DepartmentNotFoundException;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.exceptions.DuplicateDepartmentException;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.testutil.DepartmentBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"public class UniqueDepartmentListTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"    private final UniqueDepartmentList uniqueDepartmentList \u003d new UniqueDepartmentList();","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"    public void contains_nullDepartment_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueDepartmentList.contains(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"    public void contains_departmentNotInList_returnsFalse() {","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"        assertFalse(uniqueDepartmentList.contains(HUMAN_RESOURCES));","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"    public void contains_departmentInList_returnsTrue() {","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"        uniqueDepartmentList.add(HUMAN_RESOURCES);","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"        assertTrue(uniqueDepartmentList.contains(HUMAN_RESOURCES));","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"    public void contains_departmentWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"        uniqueDepartmentList.add(HUMAN_RESOURCES);","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"kennethk-1201"},"content":"        Department editedHumanResources \u003d new DepartmentBuilder(HUMAN_RESOURCES).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"        assertTrue(uniqueDepartmentList.contains(editedHumanResources));","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"kennethk-1201"},"content":"    public void add_nullDepartment_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"kennethk-1201"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueDepartmentList.add(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"kennethk-1201"},"content":"    public void add_duplicateDepartment_throwsDuplicateDepartmentException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"kennethk-1201"},"content":"        uniqueDepartmentList.add(HUMAN_RESOURCES);","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"kennethk-1201"},"content":"        assertThrows(DuplicateDepartmentException.class, () -\u003e uniqueDepartmentList.add(HUMAN_RESOURCES));","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"kennethk-1201"},"content":"    public void setDepartment_nullTargetDepartment_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"kennethk-1201"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueDepartmentList.setDepartment(null,","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"kennethk-1201"},"content":"                HUMAN_RESOURCES));","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"kennethk-1201"},"content":"    public void setDepartment_nullEditedDepartment_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"kennethk-1201"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"kennethk-1201"},"content":"                uniqueDepartmentList.setDepartment(HUMAN_RESOURCES, null));","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"kennethk-1201"},"content":"    public void setDepartment_targetDepartmentNotInList_throwsDepartmentNotFoundException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"kennethk-1201"},"content":"        assertThrows(DepartmentNotFoundException.class, () -\u003e uniqueDepartmentList.setDepartment(HUMAN_RESOURCES,","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"kennethk-1201"},"content":"                HUMAN_RESOURCES));","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"kennethk-1201"},"content":"    public void setDepartment_editedDepartmentIsSameDepartment_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"kennethk-1201"},"content":"        uniqueDepartmentList.add(HUMAN_RESOURCES);","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"kennethk-1201"},"content":"        uniqueDepartmentList.setDepartment(HUMAN_RESOURCES, HUMAN_RESOURCES);","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"kennethk-1201"},"content":"        UniqueDepartmentList expectedUniqueDepartmentList \u003d new UniqueDepartmentList();","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"kennethk-1201"},"content":"        expectedUniqueDepartmentList.add(HUMAN_RESOURCES);","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"kennethk-1201"},"content":"        assertEquals(expectedUniqueDepartmentList, uniqueDepartmentList);","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"kennethk-1201"},"content":"    public void setDepartment_editedDepartmentHasSameIdentity_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"kennethk-1201"},"content":"        uniqueDepartmentList.add(HUMAN_RESOURCES);","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"kennethk-1201"},"content":"        Department editedHumanResources \u003d new DepartmentBuilder(HUMAN_RESOURCES).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"kennethk-1201"},"content":"        uniqueDepartmentList.setDepartment(HUMAN_RESOURCES, editedHumanResources);","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"kennethk-1201"},"content":"        UniqueDepartmentList expectedUniqueDepartmentList \u003d new UniqueDepartmentList();","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"kennethk-1201"},"content":"        expectedUniqueDepartmentList.add(editedHumanResources);","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"kennethk-1201"},"content":"        assertEquals(expectedUniqueDepartmentList, uniqueDepartmentList);","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"kennethk-1201"},"content":"    public void setDepartment_editedDepartmentHasDifferentIdentity_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"kennethk-1201"},"content":"        uniqueDepartmentList.add(HUMAN_RESOURCES);","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"kennethk-1201"},"content":"        uniqueDepartmentList.setDepartment(HUMAN_RESOURCES, ENGINEERING);","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"kennethk-1201"},"content":"        UniqueDepartmentList expectedUniqueDepartmentList \u003d new UniqueDepartmentList();","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"kennethk-1201"},"content":"        expectedUniqueDepartmentList.add(ENGINEERING);","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"kennethk-1201"},"content":"        assertEquals(expectedUniqueDepartmentList, uniqueDepartmentList);","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"kennethk-1201"},"content":"    public void setDepartment_editedDepartmentHasNonUniqueIdentity_throwsDuplicateDepartmentException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"kennethk-1201"},"content":"        uniqueDepartmentList.add(HUMAN_RESOURCES);","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"kennethk-1201"},"content":"        uniqueDepartmentList.add(ENGINEERING);","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"kennethk-1201"},"content":"        assertThrows(DuplicateDepartmentException.class, () -\u003e uniqueDepartmentList.setDepartment(HUMAN_RESOURCES,","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"kennethk-1201"},"content":"                ENGINEERING));","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"kennethk-1201"},"content":"    public void remove_nullDepartment_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"kennethk-1201"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueDepartmentList.remove(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"kennethk-1201"},"content":"    public void remove_departmentDoesNotExist_throwsDepartmentNotFoundException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"kennethk-1201"},"content":"        assertThrows(DepartmentNotFoundException.class, () -\u003e uniqueDepartmentList.remove(HUMAN_RESOURCES));","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"kennethk-1201"},"content":"    public void remove_existingDepartment_removesDepartment() {","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"kennethk-1201"},"content":"        uniqueDepartmentList.add(HUMAN_RESOURCES);","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"kennethk-1201"},"content":"        uniqueDepartmentList.remove(HUMAN_RESOURCES);","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"kennethk-1201"},"content":"        UniqueDepartmentList expectedUniqueDepartmentList \u003d new UniqueDepartmentList();","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"kennethk-1201"},"content":"        assertEquals(expectedUniqueDepartmentList, uniqueDepartmentList);","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"kennethk-1201"},"content":"    public void setDepartments_nullUniqueDepartmentList_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"kennethk-1201"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"kennethk-1201"},"content":"                uniqueDepartmentList.setDepartments((UniqueDepartmentList) null));","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":137,"author":{"gitId":"kennethk-1201"},"content":"    public void setDepartments_uniqueDepartmentList_replacesOwnListWithProvidedUniqueDepartmentList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"kennethk-1201"},"content":"        uniqueDepartmentList.add(HUMAN_RESOURCES);","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"kennethk-1201"},"content":"        UniqueDepartmentList expectedUniqueDepartmentList \u003d new UniqueDepartmentList();","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"kennethk-1201"},"content":"        expectedUniqueDepartmentList.add(ENGINEERING);","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"kennethk-1201"},"content":"        uniqueDepartmentList.setDepartments(expectedUniqueDepartmentList);","lastModifiedDate":"2023-03-11"},{"lineNumber":142,"author":{"gitId":"kennethk-1201"},"content":"        assertEquals(expectedUniqueDepartmentList, uniqueDepartmentList);","lastModifiedDate":"2023-03-11"},{"lineNumber":143,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":144,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":146,"author":{"gitId":"kennethk-1201"},"content":"    public void setDepartments_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":147,"author":{"gitId":"kennethk-1201"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueDepartmentList.setDepartments((List\u003cDepartment\u003e) null));","lastModifiedDate":"2023-03-11"},{"lineNumber":148,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":149,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":150,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":151,"author":{"gitId":"kennethk-1201"},"content":"    public void setDepartments_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":152,"author":{"gitId":"kennethk-1201"},"content":"        uniqueDepartmentList.add(HUMAN_RESOURCES);","lastModifiedDate":"2023-03-11"},{"lineNumber":153,"author":{"gitId":"kennethk-1201"},"content":"        List\u003cDepartment\u003e departmentList \u003d Collections.singletonList(ENGINEERING);","lastModifiedDate":"2023-03-11"},{"lineNumber":154,"author":{"gitId":"kennethk-1201"},"content":"        uniqueDepartmentList.setDepartments(departmentList);","lastModifiedDate":"2023-03-11"},{"lineNumber":155,"author":{"gitId":"kennethk-1201"},"content":"        UniqueDepartmentList expectedUniqueDepartmentList \u003d new UniqueDepartmentList();","lastModifiedDate":"2023-03-11"},{"lineNumber":156,"author":{"gitId":"kennethk-1201"},"content":"        expectedUniqueDepartmentList.add(ENGINEERING);","lastModifiedDate":"2023-03-11"},{"lineNumber":157,"author":{"gitId":"kennethk-1201"},"content":"        assertEquals(expectedUniqueDepartmentList, uniqueDepartmentList);","lastModifiedDate":"2023-03-11"},{"lineNumber":158,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":159,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":160,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":161,"author":{"gitId":"kennethk-1201"},"content":"    public void setDepartments_listWithDuplicateDepartments_throwsDuplicateDepartmentException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":162,"author":{"gitId":"kennethk-1201"},"content":"        List\u003cDepartment\u003e listWithDuplicateDepartments \u003d Arrays.asList(HUMAN_RESOURCES, HUMAN_RESOURCES);","lastModifiedDate":"2023-03-11"},{"lineNumber":163,"author":{"gitId":"kennethk-1201"},"content":"        assertThrows(DuplicateDepartmentException.class, () -\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":164,"author":{"gitId":"kennethk-1201"},"content":"                uniqueDepartmentList.setDepartments(listWithDuplicateDepartments));","lastModifiedDate":"2023-03-11"},{"lineNumber":165,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":166,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":167,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":168,"author":{"gitId":"kennethk-1201"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":169,"author":{"gitId":"kennethk-1201"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-03-11"},{"lineNumber":170,"author":{"gitId":"kennethk-1201"},"content":"                -\u003e uniqueDepartmentList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-11"},{"lineNumber":171,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":172,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"kennethk-1201":172}},{"path":"src/test/java/seedu/sudohr/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.model.person;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"pkwangjoo"},"content":"        // null sudohr","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"pkwangjoo"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long sudohr","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"pkwangjoo":5,"-":33}},{"path":"src/test/java/seedu/sudohr/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.model.person;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Email;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"pkwangjoo":3,"-":67}},{"path":"src/test/java/seedu/sudohr/model/person/IdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package seedu.sudohr.model.person;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Id;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"public class IdTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Id(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"    public void constructor_invalidId_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"        String invalidId \u003d \"\";","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Id(invalidId));","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"    public void isValidId() {","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"        // null id number","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(NullPointerException.class, () -\u003e Id.isValidId((null)));","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"        // invalid id numbers","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(Id.isValidId(\"\")); // empty string","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(Id.isValidId(\"  \")); // spaces only","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(Id.isValidId(\"id\")); // non-numeric","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(Id.isValidId(\"900l355\")); // alphabets within digits","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(Id.isValidId(\"829 92\")); // spaces within digits","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(Id.isValidId(\"   892  \")); // trailing and leading spaces","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(Id.isValidId(\"0\")); // no non-zero digits","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(Id.isValidId(\"000\")); // no non-zero digits","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"4ndrelim"},"content":"        // valid id numbers","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"4ndrelim"},"content":"        assertTrue(Id.isValidId(\"00099233\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"        assertTrue(Id.isValidId(\"992330000\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"4ndrelim"},"content":"        assertTrue(Id.isValidId(\"0009923300000\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"        assertTrue(Id.isValidId(\"9312015034\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"4ndrelim"},"content":"        assertTrue(Id.isValidId(\"124293842033123\")); // long id numbers","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"pkwangjoo":2,"4ndrelim":45}},{"path":"src/test/java/seedu/sudohr/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.model.person;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.testutil.PersonBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"pkwangjoo"},"content":"        // Keywords match phone, email and sudohr, but does not match name","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"pkwangjoo":4,"-":72}},{"path":"src/test/java/seedu/sudohr/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.model.person;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"pkwangjoo":3,"-":39}},{"path":"src/test/java/seedu/sudohr/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.model.person;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.testutil.PersonBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"pkwangjoo"},"content":"        Employee person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"pkwangjoo"},"content":"        assertTrue(ALICE.isSameEmployee(ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"        // copy of the object","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"4ndrelim"},"content":"        Employee copyAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"4ndrelim"},"content":"        assertTrue(ALICE.isSameEmployee(copyAlice));","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"pkwangjoo"},"content":"        assertFalse(ALICE.isSameEmployee(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"4ndrelim"},"content":"        // same id, all other attributes different -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"pkwangjoo"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"4ndrelim"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"pkwangjoo"},"content":"        assertTrue(ALICE.isSameEmployee(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"4ndrelim"},"content":"        // different id, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"4ndrelim"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"pkwangjoo"},"content":"        assertFalse(ALICE.isSameEmployee(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"4ndrelim"},"content":"        // id has preceding 0s, all other attributes same -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"4ndrelim"},"content":"        String idWithPrecedingZeroes \u003d \"00\" + VALID_ID_BOB;","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"pkwangjoo"},"content":"        Employee editedBob \u003d new PersonBuilder(BOB).withId(idWithPrecedingZeroes).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"pkwangjoo"},"content":"        assertTrue(BOB.isSameEmployee(editedBob));","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"4ndrelim"},"content":"        // id has trailing 0s, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"4ndrelim"},"content":"        String idWithTrailingZeroes \u003d VALID_ID_BOB + \"00\";","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"4ndrelim"},"content":"        editedBob \u003d new PersonBuilder(BOB).withId(idWithTrailingZeroes).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"pkwangjoo"},"content":"        assertFalse(BOB.isSameEmployee(editedBob));","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"pkwangjoo"},"content":"        Employee aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"4ndrelim"},"content":"        // different person (different ID) -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"4ndrelim"},"content":"        // different id -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"pkwangjoo"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"4ndrelim"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"pkwangjoo"},"content":"        // different sudohr -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"4ndrelim"},"content":"    public void emailClashes() {","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"4ndrelim"},"content":"        // same values -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"4ndrelim"},"content":"        Employee aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(ALICE.emailClashes(aliceCopy));","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"4ndrelim"},"content":"        // same object -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(ALICE.emailClashes(ALICE));","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"4ndrelim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(ALICE.emailClashes(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":120,"author":{"gitId":"4ndrelim"},"content":"        // same id only -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"4ndrelim"},"content":"        Employee editedBob \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(BOB.emailClashes(editedBob));","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":124,"author":{"gitId":"4ndrelim"},"content":"        // same email only -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"4ndrelim"},"content":"        editedBob \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"4ndrelim"},"content":"        assertTrue(BOB.emailClashes(editedBob));","lastModifiedDate":"2023-03-12"},{"lineNumber":127,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"4ndrelim"},"content":"        // same phone number only -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"4ndrelim"},"content":"        editedBob \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(BOB.emailClashes(editedBob));","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":132,"author":{"gitId":"4ndrelim"},"content":"        // same name only -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"4ndrelim"},"content":"        editedBob \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":134,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(BOB.emailClashes(editedBob));","lastModifiedDate":"2023-03-12"},{"lineNumber":135,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":136,"author":{"gitId":"4ndrelim"},"content":"        // same address only -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":137,"author":{"gitId":"4ndrelim"},"content":"        editedBob \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":138,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(BOB.emailClashes(editedBob));","lastModifiedDate":"2023-03-12"},{"lineNumber":139,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":140,"author":{"gitId":"4ndrelim"},"content":"        // same tags only -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":141,"author":{"gitId":"4ndrelim"},"content":"        // Note bob has the following two tags","lastModifiedDate":"2023-03-12"},{"lineNumber":142,"author":{"gitId":"4ndrelim"},"content":"        editedBob \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":143,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(BOB.emailClashes(editedBob));","lastModifiedDate":"2023-03-12"},{"lineNumber":144,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":145,"author":{"gitId":"4ndrelim"},"content":"        // same name, phone, address, tags only -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":146,"author":{"gitId":"4ndrelim"},"content":"        editedBob \u003d new PersonBuilder(BOB).withId(VALID_ID_AMY).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":147,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(BOB.emailClashes(editedBob));","lastModifiedDate":"2023-03-12"},{"lineNumber":148,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":149,"author":{"gitId":"4ndrelim"},"content":"        // same id, name, phone, address, tags only -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":150,"author":{"gitId":"4ndrelim"},"content":"        editedBob \u003d new PersonBuilder(BOB).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":151,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(BOB.emailClashes(editedBob));","lastModifiedDate":"2023-03-12"},{"lineNumber":152,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":153,"author":{"gitId":"4ndrelim"},"content":"        // same email, name, phone, address, tags only -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":154,"author":{"gitId":"4ndrelim"},"content":"        editedBob \u003d new PersonBuilder(BOB).withId(VALID_ID_AMY).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":155,"author":{"gitId":"4ndrelim"},"content":"        assertTrue(BOB.emailClashes(editedBob));","lastModifiedDate":"2023-03-12"},{"lineNumber":156,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":157,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":158,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":159,"author":{"gitId":"4ndrelim"},"content":"    public void phoneClashes() {","lastModifiedDate":"2023-03-12"},{"lineNumber":160,"author":{"gitId":"4ndrelim"},"content":"        // same values -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":161,"author":{"gitId":"4ndrelim"},"content":"        Employee aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(ALICE.phoneClashes(aliceCopy));","lastModifiedDate":"2023-03-12"},{"lineNumber":163,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":164,"author":{"gitId":"4ndrelim"},"content":"        // same object -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":165,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(ALICE.phoneClashes(ALICE));","lastModifiedDate":"2023-03-12"},{"lineNumber":166,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":167,"author":{"gitId":"4ndrelim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":168,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(ALICE.phoneClashes(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":169,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":170,"author":{"gitId":"4ndrelim"},"content":"        // same id only -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":171,"author":{"gitId":"4ndrelim"},"content":"        Employee editedBob \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":172,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(BOB.phoneClashes(editedBob));","lastModifiedDate":"2023-03-12"},{"lineNumber":173,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":174,"author":{"gitId":"4ndrelim"},"content":"        // same email only -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":175,"author":{"gitId":"4ndrelim"},"content":"        editedBob \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":176,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(BOB.phoneClashes(editedBob));","lastModifiedDate":"2023-03-12"},{"lineNumber":177,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":178,"author":{"gitId":"4ndrelim"},"content":"        // same phone number only -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":179,"author":{"gitId":"4ndrelim"},"content":"        editedBob \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":180,"author":{"gitId":"4ndrelim"},"content":"        assertTrue(BOB.phoneClashes(editedBob));","lastModifiedDate":"2023-03-12"},{"lineNumber":181,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":182,"author":{"gitId":"4ndrelim"},"content":"        // same name only -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":183,"author":{"gitId":"4ndrelim"},"content":"        editedBob \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":184,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(BOB.phoneClashes(editedBob));","lastModifiedDate":"2023-03-12"},{"lineNumber":185,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":186,"author":{"gitId":"4ndrelim"},"content":"        // same address only -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":187,"author":{"gitId":"4ndrelim"},"content":"        editedBob \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":188,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(BOB.phoneClashes(editedBob));","lastModifiedDate":"2023-03-12"},{"lineNumber":189,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":190,"author":{"gitId":"4ndrelim"},"content":"        // same tags only -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":191,"author":{"gitId":"4ndrelim"},"content":"        // Note bob has the following two tags","lastModifiedDate":"2023-03-12"},{"lineNumber":192,"author":{"gitId":"4ndrelim"},"content":"        editedBob \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":193,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(BOB.phoneClashes(editedBob));","lastModifiedDate":"2023-03-12"},{"lineNumber":194,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":195,"author":{"gitId":"4ndrelim"},"content":"        // same name, email, address, tags only -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":196,"author":{"gitId":"4ndrelim"},"content":"        editedBob \u003d new PersonBuilder(BOB).withId(VALID_ID_AMY).withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":197,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(BOB.phoneClashes(editedBob));","lastModifiedDate":"2023-03-12"},{"lineNumber":198,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":199,"author":{"gitId":"4ndrelim"},"content":"        // same id, name, email, address, tags only -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":200,"author":{"gitId":"4ndrelim"},"content":"        editedBob \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":201,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(BOB.phoneClashes(editedBob));","lastModifiedDate":"2023-03-12"},{"lineNumber":202,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":203,"author":{"gitId":"4ndrelim"},"content":"        // same email, name, phone, address, tags only -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":204,"author":{"gitId":"4ndrelim"},"content":"        editedBob \u003d new PersonBuilder(BOB).withId(VALID_ID_AMY).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":205,"author":{"gitId":"4ndrelim"},"content":"        assertTrue(BOB.phoneClashes(editedBob));","lastModifiedDate":"2023-03-12"},{"lineNumber":206,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":207,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":208,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":209,"author":{"gitId":"4ndrelim"},"content":"    public void clashes() {","lastModifiedDate":"2023-03-12"},{"lineNumber":210,"author":{"gitId":"4ndrelim"},"content":"        // same values -\u003e returns false since same id hence treated as same person","lastModifiedDate":"2023-03-12"},{"lineNumber":211,"author":{"gitId":"pkwangjoo"},"content":"        Employee aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":212,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(ALICE.clashes(aliceCopy));","lastModifiedDate":"2023-03-12"},{"lineNumber":213,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":214,"author":{"gitId":"4ndrelim"},"content":"        // same object -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":215,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(ALICE.clashes(ALICE));","lastModifiedDate":"2023-03-12"},{"lineNumber":216,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":217,"author":{"gitId":"4ndrelim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":218,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(ALICE.clashes(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":219,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":220,"author":{"gitId":"4ndrelim"},"content":"        // same id only -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":221,"author":{"gitId":"pkwangjoo"},"content":"        Employee editedBob \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":222,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(BOB.clashes(editedBob));","lastModifiedDate":"2023-03-12"},{"lineNumber":223,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":224,"author":{"gitId":"4ndrelim"},"content":"        // same id, name, address, tags only -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":225,"author":{"gitId":"4ndrelim"},"content":"        editedBob \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":226,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(BOB.clashes(editedBob));","lastModifiedDate":"2023-03-12"},{"lineNumber":227,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":228,"author":{"gitId":"4ndrelim"},"content":"        // same email only -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":229,"author":{"gitId":"4ndrelim"},"content":"        editedBob \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":230,"author":{"gitId":"4ndrelim"},"content":"        assertTrue(BOB.clashes(editedBob));","lastModifiedDate":"2023-03-12"},{"lineNumber":231,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":232,"author":{"gitId":"4ndrelim"},"content":"        // same phone number only -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":233,"author":{"gitId":"4ndrelim"},"content":"        editedBob \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":234,"author":{"gitId":"4ndrelim"},"content":"        assertTrue(BOB.clashes(editedBob));","lastModifiedDate":"2023-03-12"},{"lineNumber":235,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":236,"author":{"gitId":"4ndrelim"},"content":"        // same name only -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":237,"author":{"gitId":"4ndrelim"},"content":"        editedBob \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":238,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(BOB.clashes(editedBob));","lastModifiedDate":"2023-03-12"},{"lineNumber":239,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":240,"author":{"gitId":"4ndrelim"},"content":"        // same address only -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":241,"author":{"gitId":"4ndrelim"},"content":"        editedBob \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":242,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(BOB.clashes(editedBob));","lastModifiedDate":"2023-03-12"},{"lineNumber":243,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":244,"author":{"gitId":"4ndrelim"},"content":"        // same tags only -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":245,"author":{"gitId":"4ndrelim"},"content":"        // Note bob has the following two tags","lastModifiedDate":"2023-03-12"},{"lineNumber":246,"author":{"gitId":"4ndrelim"},"content":"        editedBob \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":247,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(BOB.clashes(editedBob));","lastModifiedDate":"2023-03-12"},{"lineNumber":248,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":249,"author":{"gitId":"4ndrelim"},"content":"        // same name, address, tags only -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":250,"author":{"gitId":"4ndrelim"},"content":"        editedBob \u003d new PersonBuilder(BOB).withId(VALID_ID_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-12"},{"lineNumber":251,"author":{"gitId":"4ndrelim"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":252,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(BOB.clashes(editedBob));","lastModifiedDate":"2023-03-12"},{"lineNumber":253,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":254,"author":{"gitId":"4ndrelim"},"content":"        // same email, name, address, tags only -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":255,"author":{"gitId":"4ndrelim"},"content":"        editedBob \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_AMY).withId(VALID_ID_AMY).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":256,"author":{"gitId":"4ndrelim"},"content":"        assertTrue(BOB.clashes(editedBob));","lastModifiedDate":"2023-03-12"},{"lineNumber":257,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":258,"author":{"gitId":"4ndrelim"},"content":"        // same phone number, name, address, tags only -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":259,"author":{"gitId":"4ndrelim"},"content":"        editedBob \u003d new PersonBuilder(BOB).withId(VALID_ID_AMY).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":260,"author":{"gitId":"4ndrelim"},"content":"        assertTrue(BOB.clashes(editedBob));","lastModifiedDate":"2023-03-12"},{"lineNumber":261,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":262,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":263,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"pkwangjoo":20,"4ndrelim":184,"-":60}},{"path":"src/test/java/seedu/sudohr/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.model.person;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"pkwangjoo":3,"-":39}},{"path":"src/test/java/seedu/sudohr/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.model.person;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.UniqueEmployeeList;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"import seedu.sudohr.model.employee.exceptions.DuplicateEmailException;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.exceptions.DuplicateEmployeeException;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"import seedu.sudohr.model.employee.exceptions.DuplicatePhoneNumberException;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.exceptions.EmployeeNotFoundException;","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.testutil.PersonBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":38,"author":{"gitId":"pkwangjoo"},"content":"    private final UniqueEmployeeList uniquePersonList \u003d new UniqueEmployeeList();","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"    /** Tests equals method **/","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"    public void equals_bothEmpty_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"4ndrelim"},"content":"        UniqueEmployeeList expectedUniquePersonList \u003d new UniqueEmployeeList();","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"4ndrelim"},"content":"    public void equals_bothNull_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"4ndrelim"},"content":"        UniqueEmployeeList list \u003d new UniqueEmployeeList();","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"4ndrelim"},"content":"        List\u003cInteger\u003e notList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"4ndrelim"},"content":"        assertNotEquals(list, notList);","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"4ndrelim"},"content":"    public void equals_differentClass_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"4ndrelim"},"content":"        UniqueEmployeeList nullListOne \u003d null;","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"4ndrelim"},"content":"        UniqueEmployeeList nullListTwo \u003d null;","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(nullListOne, nullListTwo);","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"4ndrelim"},"content":"    public void equals_bothContainSameContentSameOrder_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"4ndrelim"},"content":"        UniqueEmployeeList expectedUniquePersonList \u003d new UniqueEmployeeList();","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"4ndrelim"},"content":"        Employee duplicatedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"4ndrelim"},"content":"        Employee duplicatedBob \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(duplicatedAlice);","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(duplicatedBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"4ndrelim"},"content":"    public void equals_bothContainSameContentDifferentOrder_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"4ndrelim"},"content":"        UniqueEmployeeList expectedUniquePersonList \u003d new UniqueEmployeeList();","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"4ndrelim"},"content":"        Employee duplicatedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"4ndrelim"},"content":"        Employee duplicatedBob \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(duplicatedBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(duplicatedAlice);","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"4ndrelim"},"content":"    public void equals_sameContentButOneHasLess_notSuccess() {","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"4ndrelim"},"content":"        UniqueEmployeeList expectedUniquePersonList \u003d new UniqueEmployeeList();","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"4ndrelim"},"content":"        Employee duplicatedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"4ndrelim"},"content":"        Employee duplicatedBob \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(duplicatedAlice);","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(duplicatedBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"4ndrelim"},"content":"        assertNotEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"4ndrelim"},"content":"    public void equals_containDifferentContent_notSuccess() {","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"4ndrelim"},"content":"        UniqueEmployeeList expectedUniquePersonList \u003d new UniqueEmployeeList();","lastModifiedDate":"2023-03-15"},{"lineNumber":112,"author":{"gitId":"4ndrelim"},"content":"        Employee duplicatedBob \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(AMY);","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(duplicatedBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"4ndrelim"},"content":"        assertNotEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"4ndrelim"},"content":"    public void equals_containFieldsChanged_notSuccess() {","lastModifiedDate":"2023-03-15"},{"lineNumber":121,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":125,"author":{"gitId":"4ndrelim"},"content":"        UniqueEmployeeList expectedUniquePersonList \u003d new UniqueEmployeeList();","lastModifiedDate":"2023-03-15"},{"lineNumber":126,"author":{"gitId":"4ndrelim"},"content":"        Employee slightlyDifferentBob \u003d new PersonBuilder(BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":127,"author":{"gitId":"4ndrelim"},"content":"                .withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":128,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":129,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":130,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(slightlyDifferentBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":131,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":132,"author":{"gitId":"4ndrelim"},"content":"        assertNotEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-15"},{"lineNumber":133,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":134,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":135,"author":{"gitId":"4ndrelim"},"content":"    /** duplicated person checks **/","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"4ndrelim"},"content":"    // Checks against a different Person object with only the id field being the same","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"4ndrelim"},"content":"    public void contains_personWithSameIdOnlyInList_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"4ndrelim"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"4ndrelim"},"content":"    // Checks against a different Person object with every field the same except id","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"4ndrelim"},"content":"    public void contains_personWithSameFieldsButIdInList_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"4ndrelim"},"content":"    /** duplicated phone number checks **/","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":170,"author":{"gitId":"4ndrelim"},"content":"    public void sharesPhoneNumber_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.sharesPhoneNumber(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"4ndrelim"},"content":"    public void sharesPhoneNumber_personNotInList_returnsFalse() {","lastModifiedDate":"2023-03-13"},{"lineNumber":176,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(uniquePersonList.sharesPhoneNumber(ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"4ndrelim"},"content":"    // returns false because it\u0027s the same person","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"4ndrelim"},"content":"    public void sharesPhoneNumber_personInList_returnsFalse() {","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":183,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(uniquePersonList.sharesPhoneNumber(ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"4ndrelim"},"content":"    // Checks against a different Person object with only the id field being the same,","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"4ndrelim"},"content":"    // returns false even though phone number field is different because it\u0027s still the same person.","lastModifiedDate":"2023-03-13"},{"lineNumber":188,"author":{"gitId":"4ndrelim"},"content":"    // Preventing 2 persons with the same ID is handled separately.","lastModifiedDate":"2023-03-13"},{"lineNumber":189,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"4ndrelim"},"content":"    public void sharesPhoneNumber_personWithSameIdOnlyInList_returnsFalse() {","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":193,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(uniquePersonList.sharesPhoneNumber(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":194,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":195,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":196,"author":{"gitId":"4ndrelim"},"content":"    // Checks against a different Person object with every field the same except id.","lastModifiedDate":"2023-03-13"},{"lineNumber":197,"author":{"gitId":"4ndrelim"},"content":"    // Returns true since different persons but same phone numbers.","lastModifiedDate":"2023-03-13"},{"lineNumber":198,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":199,"author":{"gitId":"4ndrelim"},"content":"    public void sharesPhoneNumber_personWithSameFieldsButIdInList_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":200,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":201,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":202,"author":{"gitId":"4ndrelim"},"content":"        assertTrue(uniquePersonList.sharesPhoneNumber(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":203,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":204,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":205,"author":{"gitId":"4ndrelim"},"content":"    // Checks against a different Person object with every field the same except phone number.","lastModifiedDate":"2023-03-13"},{"lineNumber":206,"author":{"gitId":"4ndrelim"},"content":"    // Returns true since different persons but same phone number field.","lastModifiedDate":"2023-03-13"},{"lineNumber":207,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":208,"author":{"gitId":"4ndrelim"},"content":"    public void sharesPhoneNumber_personWithSameEmailOnlyInList_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":209,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-13"},{"lineNumber":210,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":211,"author":{"gitId":"4ndrelim"},"content":"        assertTrue(uniquePersonList.sharesPhoneNumber(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":212,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":213,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":214,"author":{"gitId":"4ndrelim"},"content":"    // Checks against a different Person object with every field the same except phone number and id.","lastModifiedDate":"2023-03-13"},{"lineNumber":215,"author":{"gitId":"4ndrelim"},"content":"    // Returns false since same person after all.","lastModifiedDate":"2023-03-13"},{"lineNumber":216,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":217,"author":{"gitId":"4ndrelim"},"content":"    public void sharesPhoneNumber_personWithSameEmailAndIdOnlyInList_returnsFalse() {","lastModifiedDate":"2023-03-13"},{"lineNumber":218,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-13"},{"lineNumber":219,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":221,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(uniquePersonList.sharesPhoneNumber(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":222,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":223,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":224,"author":{"gitId":"4ndrelim"},"content":"    /** duplicated emails checks **/","lastModifiedDate":"2023-03-13"},{"lineNumber":225,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":226,"author":{"gitId":"4ndrelim"},"content":"    public void sharesEmail_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":227,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.sharesEmail(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":228,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":229,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":230,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":231,"author":{"gitId":"4ndrelim"},"content":"    public void sharesEmail_personNotInList_returnsFalse() {","lastModifiedDate":"2023-03-13"},{"lineNumber":232,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(uniquePersonList.sharesEmail(ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":235,"author":{"gitId":"4ndrelim"},"content":"    // returns false because it\u0027s the same person","lastModifiedDate":"2023-03-13"},{"lineNumber":236,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":237,"author":{"gitId":"4ndrelim"},"content":"    public void sharesEmail_personInList_returnsFalse() {","lastModifiedDate":"2023-03-13"},{"lineNumber":238,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":239,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(uniquePersonList.sharesEmail(ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":240,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":241,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":242,"author":{"gitId":"4ndrelim"},"content":"    // Checks against a different Person object with only the id field being the same,","lastModifiedDate":"2023-03-13"},{"lineNumber":243,"author":{"gitId":"4ndrelim"},"content":"    // returns false even though email field is different because it\u0027s still the same person.","lastModifiedDate":"2023-03-13"},{"lineNumber":244,"author":{"gitId":"4ndrelim"},"content":"    // Preventing 2 persons with the same ID is handled separately.","lastModifiedDate":"2023-03-13"},{"lineNumber":245,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":246,"author":{"gitId":"4ndrelim"},"content":"    public void sharesEmail_personWithSameIdOnlyInList_returnsFalse() {","lastModifiedDate":"2023-03-13"},{"lineNumber":247,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-13"},{"lineNumber":248,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":249,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(uniquePersonList.sharesEmail(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":250,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":251,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":252,"author":{"gitId":"4ndrelim"},"content":"    // Checks against a different Person object with every field the same except id.","lastModifiedDate":"2023-03-13"},{"lineNumber":253,"author":{"gitId":"4ndrelim"},"content":"    // Returns true since different persons but same email field.","lastModifiedDate":"2023-03-13"},{"lineNumber":254,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":255,"author":{"gitId":"4ndrelim"},"content":"    public void sharesEmail_personWithSameFieldsButIdInList_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":256,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":257,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":258,"author":{"gitId":"4ndrelim"},"content":"        assertTrue(uniquePersonList.sharesEmail(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":259,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":260,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":261,"author":{"gitId":"4ndrelim"},"content":"    // Checks against a different Person object with every field the same except email.","lastModifiedDate":"2023-03-13"},{"lineNumber":262,"author":{"gitId":"4ndrelim"},"content":"    // Returns true since different persons but same email field.","lastModifiedDate":"2023-03-13"},{"lineNumber":263,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":264,"author":{"gitId":"4ndrelim"},"content":"    public void sharesEmail_personWithSameEmailOnlyInList_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":265,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-13"},{"lineNumber":266,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":267,"author":{"gitId":"4ndrelim"},"content":"        assertTrue(uniquePersonList.sharesEmail(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":268,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":269,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":270,"author":{"gitId":"4ndrelim"},"content":"    // Checks against a different Person object with every field the same except email and id.","lastModifiedDate":"2023-03-13"},{"lineNumber":271,"author":{"gitId":"4ndrelim"},"content":"    // Returns false since same person after all.","lastModifiedDate":"2023-03-13"},{"lineNumber":272,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":273,"author":{"gitId":"4ndrelim"},"content":"    public void sharesEmail_personWithSameEmailAndIdOnlyInList_returnsFalse() {","lastModifiedDate":"2023-03-13"},{"lineNumber":274,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-13"},{"lineNumber":275,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":276,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":277,"author":{"gitId":"4ndrelim"},"content":"        assertFalse(uniquePersonList.sharesEmail(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":278,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":279,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":280,"author":{"gitId":"4ndrelim"},"content":"    /** Tests adding of a person **/","lastModifiedDate":"2023-03-13"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":289,"author":{"gitId":"pkwangjoo"},"content":"        assertThrows(DuplicateEmployeeException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":292,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":293,"author":{"gitId":"4ndrelim"},"content":"    public void add_personWithSameId_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":294,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-13"},{"lineNumber":295,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":296,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicateEmployeeException.class, () -\u003e uniquePersonList.add(editedAlice));","lastModifiedDate":"2023-03-14"},{"lineNumber":297,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":298,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":299,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":300,"author":{"gitId":"4ndrelim"},"content":"    public void add_differentPersonWithSamePhoneNumber_throwsDuplicatePhoneNumberException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":301,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-13"},{"lineNumber":302,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":303,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicatePhoneNumberException.class, () -\u003e uniquePersonList.add(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":304,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":305,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":306,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":307,"author":{"gitId":"4ndrelim"},"content":"    public void add_differentPersonWithSameEmail_throwsDuplicateEmailException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":308,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-13"},{"lineNumber":309,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":310,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicateEmailException.class, () -\u003e uniquePersonList.add(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":311,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":312,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":313,"author":{"gitId":"4ndrelim"},"content":"    // first error accounted is that of duplicate person","lastModifiedDate":"2023-03-13"},{"lineNumber":314,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":315,"author":{"gitId":"4ndrelim"},"content":"    public void add_personWithSameIdEmailPhone_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":316,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-13"},{"lineNumber":317,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":318,"author":{"gitId":"4ndrelim"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-13"},{"lineNumber":319,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":320,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicateEmployeeException.class, () -\u003e uniquePersonList.add(editedAlice));","lastModifiedDate":"2023-03-14"},{"lineNumber":321,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":322,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":323,"author":{"gitId":"4ndrelim"},"content":"    // first error accounted is that of duplicate phone","lastModifiedDate":"2023-03-13"},{"lineNumber":324,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":325,"author":{"gitId":"4ndrelim"},"content":"    public void add_personWithSameEmailPhone_throwsDuplicatePhoneNumberException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":326,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-13"},{"lineNumber":327,"author":{"gitId":"4ndrelim"},"content":"        Employee editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":328,"author":{"gitId":"4ndrelim"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-13"},{"lineNumber":329,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":330,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicatePhoneNumberException.class, () -\u003e uniquePersonList.add(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":331,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":332,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":333,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":334,"author":{"gitId":"4ndrelim"},"content":"    /** Tests editing of a person **/","lastModifiedDate":"2023-03-13"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":337,"author":{"gitId":"pkwangjoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setEmployee(null, ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":342,"author":{"gitId":"pkwangjoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setEmployee(ALICE, null));","lastModifiedDate":"2023-03-13"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":347,"author":{"gitId":"pkwangjoo"},"content":"        assertThrows(EmployeeNotFoundException.class, () -\u003e uniquePersonList.setEmployee(ALICE, ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":353,"author":{"gitId":"pkwangjoo"},"content":"        uniquePersonList.setEmployee(ALICE, ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":354,"author":{"gitId":"pkwangjoo"},"content":"        UniqueEmployeeList expectedUniquePersonList \u003d new UniqueEmployeeList();","lastModifiedDate":"2023-03-13"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":359,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":360,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonAlreadyExists_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":361,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":362,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":363,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicateEmployeeException.class, () -\u003e uniquePersonList.setEmployee(ALICE, BOB));","lastModifiedDate":"2023-03-15"},{"lineNumber":364,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":365,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":366,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":367,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonChangeAllUnique_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":368,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":369,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":370,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.setEmployee(ALICE, BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":371,"author":{"gitId":"4ndrelim"},"content":"        UniqueEmployeeList expectedUniquePersonList \u003d new UniqueEmployeeList();","lastModifiedDate":"2023-03-15"},{"lineNumber":372,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":373,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":374,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-15"},{"lineNumber":375,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":376,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":377,"author":{"gitId":"4ndrelim"},"content":"    // edited person kept same id (ie change every other field)","lastModifiedDate":"2023-03-15"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":379,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonHasSameIdentityOnly_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":380,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-14"},{"lineNumber":381,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":382,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":383,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-14"},{"lineNumber":384,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.setEmployee(BOB, newBob);","lastModifiedDate":"2023-03-14"},{"lineNumber":385,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":386,"author":{"gitId":"4ndrelim"},"content":"        UniqueEmployeeList expectedUniquePersonList \u003d new UniqueEmployeeList();","lastModifiedDate":"2023-03-15"},{"lineNumber":387,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":388,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":389,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-15"},{"lineNumber":390,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":391,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":392,"author":{"gitId":"4ndrelim"},"content":"    // edited employee changed id only (ie no change to other fields)","lastModifiedDate":"2023-03-15"},{"lineNumber":393,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":394,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonChangeUniqueIdOnly_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":395,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":396,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":397,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":398,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withId(VALID_ID_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":399,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":400,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.setEmployee(BOB, newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":401,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":402,"author":{"gitId":"pkwangjoo"},"content":"        UniqueEmployeeList expectedUniquePersonList \u003d new UniqueEmployeeList();","lastModifiedDate":"2023-03-13"},{"lineNumber":403,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":404,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(newBob);","lastModifiedDate":"2023-03-14"},{"lineNumber":405,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":406,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":407,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-14"},{"lineNumber":408,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":409,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":410,"author":{"gitId":"4ndrelim"},"content":"    // edited person actually made no change to its own id","lastModifiedDate":"2023-03-15"},{"lineNumber":411,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":412,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonNoChangeToId_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":413,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":414,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(AMY);","lastModifiedDate":"2023-03-15"},{"lineNumber":415,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":416,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withId(VALID_ID_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":417,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":418,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.setEmployee(BOB, newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":419,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":420,"author":{"gitId":"4ndrelim"},"content":"        UniqueEmployeeList expectedUniquePersonList \u003d new UniqueEmployeeList();","lastModifiedDate":"2023-03-15"},{"lineNumber":421,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":422,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(AMY);","lastModifiedDate":"2023-03-15"},{"lineNumber":423,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":424,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":425,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-15"},{"lineNumber":426,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":427,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":428,"author":{"gitId":"4ndrelim"},"content":"    // edited person changed to an id that already exists","lastModifiedDate":"2023-03-15"},{"lineNumber":429,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":430,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedIdAlreadyExists_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":431,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":432,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":433,"author":{"gitId":"4ndrelim"},"content":"        Employee sameIdAsBob \u003d new PersonBuilder().withId(VALID_ID_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":434,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":435,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicateEmployeeException.class, () -\u003e uniquePersonList.setEmployee(ALICE, sameIdAsBob));","lastModifiedDate":"2023-03-15"},{"lineNumber":436,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":437,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":438,"author":{"gitId":"4ndrelim"},"content":"    // test with some fields changed, excluding id","lastModifiedDate":"2023-03-15"},{"lineNumber":439,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":440,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonHasSameIdentityAndEmailOnly_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":441,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-14"},{"lineNumber":442,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":443,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":444,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":445,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.setEmployee(BOB, newBob);","lastModifiedDate":"2023-03-14"},{"lineNumber":446,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":447,"author":{"gitId":"4ndrelim"},"content":"        UniqueEmployeeList expectedUniquePersonList \u003d new UniqueEmployeeList();","lastModifiedDate":"2023-03-14"},{"lineNumber":448,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":449,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(newBob);","lastModifiedDate":"2023-03-14"},{"lineNumber":450,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":451,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":452,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":454,"author":{"gitId":"4ndrelim"},"content":"    // test with some fields changed, including id","lastModifiedDate":"2023-03-15"},{"lineNumber":455,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":456,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonChangeIdEmailAddressOnly_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":457,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":458,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":459,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":460,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withId(VALID_ID_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":461,"author":{"gitId":"4ndrelim"},"content":"                .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":462,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":463,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.setEmployee(BOB, newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":464,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":465,"author":{"gitId":"pkwangjoo"},"content":"        UniqueEmployeeList expectedUniquePersonList \u003d new UniqueEmployeeList();","lastModifiedDate":"2023-03-13"},{"lineNumber":466,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":467,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":468,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":469,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":470,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":471,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":473,"author":{"gitId":"4ndrelim"},"content":"    // edited person change to non-duplicated phone number","lastModifiedDate":"2023-03-15"},{"lineNumber":474,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":475,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonNewPhoneIsUnique_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":476,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":477,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":478,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":479,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":480,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":481,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.setEmployee(BOB, newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":482,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":483,"author":{"gitId":"4ndrelim"},"content":"        UniqueEmployeeList expectedUniquePersonList \u003d new UniqueEmployeeList();","lastModifiedDate":"2023-03-15"},{"lineNumber":484,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":485,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":486,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":487,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":488,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-15"},{"lineNumber":489,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":491,"author":{"gitId":"4ndrelim"},"content":"    // edited person made no change to phone number","lastModifiedDate":"2023-03-15"},{"lineNumber":492,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":493,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonPhoneNoChange_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":494,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":495,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":496,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":497,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":498,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":499,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.setEmployee(BOB, newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":500,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":501,"author":{"gitId":"4ndrelim"},"content":"        UniqueEmployeeList expectedUniquePersonList \u003d new UniqueEmployeeList();","lastModifiedDate":"2023-03-15"},{"lineNumber":502,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":503,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":504,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":505,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":506,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-15"},{"lineNumber":507,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":508,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":509,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":510,"author":{"gitId":"4ndrelim"},"content":"    // edited person change to duplicated phone number shared with someone SudoHR","lastModifiedDate":"2023-03-15"},{"lineNumber":511,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":512,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonDuplicatedPhoneNumber_throwsDuplicatePhoneNumberException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":513,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(AMY);","lastModifiedDate":"2023-03-15"},{"lineNumber":514,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":515,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":516,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":517,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":518,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicatePhoneNumberException.class, () -\u003e uniquePersonList.setEmployee(BOB, newBob));","lastModifiedDate":"2023-03-15"},{"lineNumber":519,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":520,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":521,"author":{"gitId":"4ndrelim"},"content":"    // edited person changed to duplicated phone number and email shared with someone in SudoHR","lastModifiedDate":"2023-03-15"},{"lineNumber":522,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":523,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonChangeEmailPhone_throwsDuplicatePhoneNumberException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":524,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(AMY);","lastModifiedDate":"2023-03-15"},{"lineNumber":525,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":526,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":527,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":528,"author":{"gitId":"4ndrelim"},"content":"                .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":529,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":530,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicatePhoneNumberException.class, () -\u003e uniquePersonList.setEmployee(BOB, newBob));","lastModifiedDate":"2023-03-15"},{"lineNumber":531,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":532,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":533,"author":{"gitId":"4ndrelim"},"content":"    // edited person changed some fields, including phone number","lastModifiedDate":"2023-03-15"},{"lineNumber":534,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":535,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonSomeChangesAndPhone_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":536,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-14"},{"lineNumber":537,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-14"},{"lineNumber":538,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":539,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":540,"author":{"gitId":"4ndrelim"},"content":"                .withAddress(VALID_ADDRESS_AMY).withId(VALID_ID_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":541,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-14"},{"lineNumber":542,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.setEmployee(BOB, newBob);","lastModifiedDate":"2023-03-14"},{"lineNumber":543,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":544,"author":{"gitId":"4ndrelim"},"content":"        UniqueEmployeeList expectedUniquePersonList \u003d new UniqueEmployeeList();","lastModifiedDate":"2023-03-15"},{"lineNumber":545,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":546,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":547,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":548,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":549,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-15"},{"lineNumber":550,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":551,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":552,"author":{"gitId":"4ndrelim"},"content":"    // edited person change to non-duplicated email","lastModifiedDate":"2023-03-15"},{"lineNumber":553,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":554,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonNewEmailIsUnique_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":555,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":556,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":557,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":558,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":559,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":560,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.setEmployee(BOB, newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":561,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":562,"author":{"gitId":"4ndrelim"},"content":"        UniqueEmployeeList expectedUniquePersonList \u003d new UniqueEmployeeList();","lastModifiedDate":"2023-03-15"},{"lineNumber":563,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":564,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":565,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":566,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":567,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-15"},{"lineNumber":568,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":569,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":570,"author":{"gitId":"4ndrelim"},"content":"    // edited person made no change to email","lastModifiedDate":"2023-03-15"},{"lineNumber":571,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":572,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonEmailNoChange_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":573,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":574,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":575,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":576,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":577,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":578,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.setEmployee(BOB, newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":579,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":580,"author":{"gitId":"4ndrelim"},"content":"        UniqueEmployeeList expectedUniquePersonList \u003d new UniqueEmployeeList();","lastModifiedDate":"2023-03-15"},{"lineNumber":581,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":582,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":583,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":584,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":585,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-15"},{"lineNumber":586,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":587,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":588,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":589,"author":{"gitId":"4ndrelim"},"content":"    // edited person change to duplicated email as someone SudoHR","lastModifiedDate":"2023-03-15"},{"lineNumber":590,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":591,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonDuplicatedEmail_throwsDuplicateEmailException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":592,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(AMY);","lastModifiedDate":"2023-03-15"},{"lineNumber":593,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":594,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":595,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":596,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":597,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(DuplicateEmailException.class, () -\u003e uniquePersonList.setEmployee(BOB, newBob));","lastModifiedDate":"2023-03-15"},{"lineNumber":598,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":599,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":600,"author":{"gitId":"4ndrelim"},"content":"    // edited person changed some fields, including email","lastModifiedDate":"2023-03-15"},{"lineNumber":601,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":602,"author":{"gitId":"4ndrelim"},"content":"    public void setPerson_editedPersonSomeChangesAndEmail_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":603,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":604,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":605,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":606,"author":{"gitId":"4ndrelim"},"content":"        Employee newBob \u003d new PersonBuilder(BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":607,"author":{"gitId":"4ndrelim"},"content":"                .withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-15"},{"lineNumber":608,"author":{"gitId":"4ndrelim"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":609,"author":{"gitId":"4ndrelim"},"content":"        uniquePersonList.setEmployee(BOB, newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":610,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":611,"author":{"gitId":"4ndrelim"},"content":"        UniqueEmployeeList expectedUniquePersonList \u003d new UniqueEmployeeList();","lastModifiedDate":"2023-03-15"},{"lineNumber":612,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(newBob);","lastModifiedDate":"2023-03-15"},{"lineNumber":613,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(CARL);","lastModifiedDate":"2023-03-15"},{"lineNumber":614,"author":{"gitId":"4ndrelim"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":615,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":616,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-15"},{"lineNumber":617,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":618,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":619,"author":{"gitId":"4ndrelim"},"content":"    /** Tests removal of a person **/","lastModifiedDate":"2023-03-13"},{"lineNumber":620,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":621,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":622,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":625,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":626,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":627,"author":{"gitId":"pkwangjoo"},"content":"        assertThrows(EmployeeNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":628,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":630,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":631,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":632,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":633,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":634,"author":{"gitId":"pkwangjoo"},"content":"        UniqueEmployeeList expectedUniquePersonList \u003d new UniqueEmployeeList();","lastModifiedDate":"2023-03-13"},{"lineNumber":635,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":636,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":638,"author":{"gitId":"4ndrelim"},"content":"    /** Tests setting of persons with a provided list **/","lastModifiedDate":"2023-03-15"},{"lineNumber":639,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":640,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":641,"author":{"gitId":"pkwangjoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setEmployees((UniqueEmployeeList) null));","lastModifiedDate":"2023-03-13"},{"lineNumber":642,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":643,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":644,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":645,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":646,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":647,"author":{"gitId":"pkwangjoo"},"content":"        UniqueEmployeeList expectedUniquePersonList \u003d new UniqueEmployeeList();","lastModifiedDate":"2023-03-13"},{"lineNumber":648,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":649,"author":{"gitId":"pkwangjoo"},"content":"        uniquePersonList.setEmployees(expectedUniquePersonList);","lastModifiedDate":"2023-03-13"},{"lineNumber":650,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":651,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":653,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":654,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":655,"author":{"gitId":"pkwangjoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setEmployees((List\u003cEmployee\u003e) null));","lastModifiedDate":"2023-03-13"},{"lineNumber":656,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":658,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":659,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":660,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":661,"author":{"gitId":"pkwangjoo"},"content":"        List\u003cEmployee\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2023-03-13"},{"lineNumber":662,"author":{"gitId":"pkwangjoo"},"content":"        uniquePersonList.setEmployees(personList);","lastModifiedDate":"2023-03-13"},{"lineNumber":663,"author":{"gitId":"pkwangjoo"},"content":"        UniqueEmployeeList expectedUniquePersonList \u003d new UniqueEmployeeList();","lastModifiedDate":"2023-03-13"},{"lineNumber":664,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":665,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":666,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":668,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":669,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":670,"author":{"gitId":"pkwangjoo"},"content":"        List\u003cEmployee\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":671,"author":{"gitId":"pkwangjoo"},"content":"        assertThrows(DuplicateEmployeeException.class, () -\u003e uniquePersonList.setEmployees(listWithDuplicatePersons));","lastModifiedDate":"2023-03-13"},{"lineNumber":672,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":673,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":674,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":675,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":676,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":677,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":678,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":679,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"pkwangjoo":29,"4ndrelim":525,"-":125}},{"path":"src/test/java/seedu/sudohr/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.model.tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"pkwangjoo":2,"-":24}},{"path":"src/test/java/seedu/sudohr/storage/JsonAdaptedDepartmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package seedu.sudohr.storage;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.storage.JsonAdaptedDepartment.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.testutil.TypicalDepartments.ENGINEERING;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"import java.util.List;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.DepartmentName;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"public class JsonAdaptedDepartmentTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"    private static final String INVALID_DEPARTMENT_NAME \u003d \"@Engineering\";","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"    private static final String VALID_NAME \u003d ENGINEERING.getName().toString();","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"pkwangjoo"},"content":"    private static final List\u003cJsonAdaptedEmployee\u003e VALID_EMPLOYEES \u003d ENGINEERING.getEmployees().stream()","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"pkwangjoo"},"content":"            .map(JsonAdaptedEmployee::new)","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"    public void toModelType_validDepartmentDetails_returnsDepartment() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"        JsonAdaptedDepartment department \u003d new JsonAdaptedDepartment(ENGINEERING);","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"        assertEquals(ENGINEERING, department.toModelType());","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"    public void toModelType_invalidDepartmentName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"        JsonAdaptedDepartment department \u003d new JsonAdaptedDepartment(INVALID_DEPARTMENT_NAME, VALID_EMPLOYEES);","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"        String expectedMessage \u003d DepartmentName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, department::toModelType);","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"    public void toModelType_nullDepartmentName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"        JsonAdaptedDepartment department \u003d new JsonAdaptedDepartment(null, VALID_EMPLOYEES);","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, DepartmentName.class.getSimpleName());","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, department::toModelType);","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"pkwangjoo":2,"kennethk-1201":41}},{"path":"src/test/java/seedu/sudohr/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.storage.JsonAdaptedEmployee.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Email;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Id;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"    private static final String INVALID_ID \u003d \"D123\";","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"    private static final String VALID_ID \u003d BENSON.getId().toString();","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"pkwangjoo"},"content":"        JsonAdaptedEmployee person \u003d new JsonAdaptedEmployee(BENSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"4ndrelim"},"content":"    public void toModelType_invalidId_throwsIllegalValueException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"pkwangjoo"},"content":"        JsonAdaptedEmployee person \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"pkwangjoo"},"content":"                new JsonAdaptedEmployee(INVALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"4ndrelim"},"content":"        String expectedMessage \u003d Id.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"4ndrelim"},"content":"    public void toModelType_nullId_throwsIllegalValueException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"pkwangjoo"},"content":"        JsonAdaptedEmployee person \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"pkwangjoo"},"content":"                new JsonAdaptedEmployee(null, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"4ndrelim"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Id.class.getSimpleName());","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"pkwangjoo"},"content":"        JsonAdaptedEmployee person \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"pkwangjoo"},"content":"                new JsonAdaptedEmployee(VALID_ID, INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"pkwangjoo"},"content":"        JsonAdaptedEmployee person \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"pkwangjoo"},"content":"                new JsonAdaptedEmployee(VALID_ID, null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"pkwangjoo"},"content":"        JsonAdaptedEmployee person \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"pkwangjoo"},"content":"                new JsonAdaptedEmployee(VALID_ID, VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"pkwangjoo"},"content":"        JsonAdaptedEmployee person \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"pkwangjoo"},"content":"                new JsonAdaptedEmployee(VALID_ID, VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"pkwangjoo"},"content":"        JsonAdaptedEmployee person \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"pkwangjoo"},"content":"                new JsonAdaptedEmployee(VALID_ID, VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"pkwangjoo"},"content":"        JsonAdaptedEmployee person \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"pkwangjoo"},"content":"                new JsonAdaptedEmployee(VALID_ID, VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"pkwangjoo"},"content":"        JsonAdaptedEmployee person \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"pkwangjoo"},"content":"                new JsonAdaptedEmployee(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"pkwangjoo"},"content":"        JsonAdaptedEmployee person \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"pkwangjoo"},"content":"                new JsonAdaptedEmployee(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"pkwangjoo"},"content":"        JsonAdaptedEmployee person \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"pkwangjoo"},"content":"                new JsonAdaptedEmployee(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"pkwangjoo":33,"4ndrelim":14,"-":86}},{"path":"src/test/java/seedu/sudohr/storage/JsonSerializableSudoHrTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.util.JsonUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.SudoHr;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.testutil.TypicalDepartments;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.testutil.TypicalPersons;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"pkwangjoo"},"content":"public class JsonSerializableSudoHrTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"pkwangjoo"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableSudoHrTest\");","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsSudoHr.json\");","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonSudoHr.json\");","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonSudoHr.json\");","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"    private static final Path DUPLICATE_ID_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateIdSudoHr.json\");","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"    private static final Path DUPLICATE_EMAIL_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateEmailSudoHr.json\");","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"    private static final Path DUPLICATE_PHONE_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePhoneSudoHr.json\");","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"    private static final Path DUPLICATE_PHONE_AND_EMAIL_FILE \u003d TEST_DATA_FOLDER.resolve(","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"            \"duplicatePhoneEmailSudoHr.json\");","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"    private static final Path TYPICAL_DEPARTMENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalDepartmentsSudoHr.json\");","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"    private static final Path INVALID_DEPARTMENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidDepartmentSudoHr.json\");","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"    private static final Path DUPLICATE_DEPARTMENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateDepartmentSudoHr.json\");","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"    //// employee-level tests","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"pkwangjoo"},"content":"        JsonSerializableSudoHr dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"pkwangjoo"},"content":"                JsonSerializableSudoHr.class).get();","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"pkwangjoo"},"content":"        SudoHr sudoHrFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"        SudoHr typicalPersonsSudoHr \u003d TypicalPersons.getTypicalSudoHr();","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"pkwangjoo"},"content":"        assertEquals(sudoHrFromFile, typicalPersonsSudoHr);","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"pkwangjoo"},"content":"        JsonSerializableSudoHr dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"pkwangjoo"},"content":"                JsonSerializableSudoHr.class).get();","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"pkwangjoo"},"content":"        JsonSerializableSudoHr dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"pkwangjoo"},"content":"                JsonSerializableSudoHr.class).get();","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"pkwangjoo"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableSudoHr.MESSAGE_DUPLICATE_EMPLOYEE,","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"4ndrelim"},"content":"    public void toModelType_duplicateIds_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"4ndrelim"},"content":"        JsonSerializableSudoHr dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_ID_FILE,","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"4ndrelim"},"content":"                JsonSerializableSudoHr.class).get();","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableSudoHr.MESSAGE_DUPLICATE_EMPLOYEE,","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"4ndrelim"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"4ndrelim"},"content":"    public void toModelType_duplicateEmails_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"4ndrelim"},"content":"        JsonSerializableSudoHr dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_EMAIL_FILE,","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"4ndrelim"},"content":"                JsonSerializableSudoHr.class).get();","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableSudoHr.MESSAGE_DUPLICATE_EMAIL,","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"4ndrelim"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"4ndrelim"},"content":"    public void toModelType_duplicatePhoneNumbers_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"4ndrelim"},"content":"        JsonSerializableSudoHr dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PHONE_FILE,","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"4ndrelim"},"content":"                JsonSerializableSudoHr.class).get();","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableSudoHr.MESSAGE_DUPLICATE_PHONE,","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"4ndrelim"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"4ndrelim"},"content":"    // note the checks for duplicate phone comes before email","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"4ndrelim"},"content":"    public void toModelType_duplicatePhonesAndEmails_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"4ndrelim"},"content":"        JsonSerializableSudoHr dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PHONE_AND_EMAIL_FILE,","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"4ndrelim"},"content":"                JsonSerializableSudoHr.class).get();","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"4ndrelim"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableSudoHr.MESSAGE_DUPLICATE_PHONE,","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"4ndrelim"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"kennethk-1201"},"content":"    //// department-level tests","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"kennethk-1201"},"content":"    public void toModelType_typicalDepartmentsFile_success() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"kennethk-1201"},"content":"        JsonSerializableSudoHr dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_DEPARTMENTS_FILE,","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"kennethk-1201"},"content":"                JsonSerializableSudoHr.class).get();","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"kennethk-1201"},"content":"        SudoHr sudoHrFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"kennethk-1201"},"content":"        SudoHr typicalDepartmentsSudoHr \u003d TypicalDepartments.getTypicalSudoHr();","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"kennethk-1201"},"content":"        assertEquals(sudoHrFromFile, typicalDepartmentsSudoHr);","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"kennethk-1201"},"content":"    public void toModelType_invalidDepartmentFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"kennethk-1201"},"content":"        JsonSerializableSudoHr dataFromFile \u003d JsonUtil.readJsonFile(INVALID_DEPARTMENT_FILE,","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"kennethk-1201"},"content":"                JsonSerializableSudoHr.class).get();","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"kennethk-1201"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"kennethk-1201"},"content":"    public void toModelType_duplicateDepartments_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"kennethk-1201"},"content":"        JsonSerializableSudoHr dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_DEPARTMENT_FILE,","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"kennethk-1201"},"content":"                JsonSerializableSudoHr.class).get();","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"kennethk-1201"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableSudoHr.MESSAGE_DUPLICATE_DEPARTMENTS,","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"kennethk-1201"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"pkwangjoo":17,"kennethk-1201":35,"4ndrelim":38,"-":26}},{"path":"src/test/java/seedu/sudohr/storage/JsonSudoHrStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.TypicalPersons.HOON;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.TypicalPersons.IDA;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.testutil.TypicalPersons.getTypicalSudoHr;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.ReadOnlySudoHr;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.SudoHr;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"pkwangjoo"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"pkwangjoo"},"content":"public class JsonSudoHrStorageTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"pkwangjoo"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSudoHrStorageTest\");","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"pkwangjoo"},"content":"    private java.util.Optional\u003cReadOnlySudoHr\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"pkwangjoo"},"content":"        return new JsonSudoHrStorage(Paths.get(filePath)).readSudoHr(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"kennethk-1201"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatSudoHr.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"kennethk-1201"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonSudoHr.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"kennethk-1201"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonSudoHr.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"kennethk-1201"},"content":"    public void readAddressBook_invalidDepartmentAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"kennethk-1201"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidDepartmentSudoHr.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"kennethk-1201"},"content":"    public void readAddressBook_invalidAndValidDepartmentAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"kennethk-1201"},"content":"        assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"kennethk-1201"},"content":"                readAddressBook(\"invalidAndValidDepartmentSudoHr.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"kennethk-1201"},"content":"        SudoHr original \u003d getTypicalSudoHr();","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"pkwangjoo"},"content":"        JsonSudoHrStorage jsonAddressBookStorage \u003d new JsonSudoHrStorage(filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"pkwangjoo"},"content":"        jsonAddressBookStorage.saveSudoHr(original, filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"pkwangjoo"},"content":"        ReadOnlySudoHr readBack \u003d jsonAddressBookStorage.readSudoHr(filePath).get();","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"pkwangjoo"},"content":"        assertEquals(original, new SudoHr(readBack));","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"pkwangjoo"},"content":"        original.addEmployee(HOON);","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"pkwangjoo"},"content":"        original.removeEmployee(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"pkwangjoo"},"content":"        jsonAddressBookStorage.saveSudoHr(original, filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"pkwangjoo"},"content":"        readBack \u003d jsonAddressBookStorage.readSudoHr(filePath).get();","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"pkwangjoo"},"content":"        assertEquals(original, new SudoHr(readBack));","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"pkwangjoo"},"content":"        original.addEmployee(IDA);","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"pkwangjoo"},"content":"        jsonAddressBookStorage.saveSudoHr(original); // file path not specified","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"pkwangjoo"},"content":"        readBack \u003d jsonAddressBookStorage.readSudoHr().get(); // file path not specified","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"pkwangjoo"},"content":"        assertEquals(original, new SudoHr(readBack));","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"pkwangjoo"},"content":"    private void saveAddressBook(ReadOnlySudoHr addressBook, String filePath) {","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"pkwangjoo"},"content":"            new JsonSudoHrStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"pkwangjoo"},"content":"                    .saveSudoHr(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"pkwangjoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new SudoHr(), null));","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"pkwangjoo":30,"kennethk-1201":16,"-":76}},{"path":"src/test/java/seedu/sudohr/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.GuiSettings;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"pkwangjoo"},"content":"        userPrefs.setSudoHrFilePath(Paths.get(\"data/sudohr.json\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"pkwangjoo":6,"-":117}},{"path":"src/test/java/seedu/sudohr/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"import static seedu.sudohr.testutil.TypicalPersons.getTypicalSudoHr;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.GuiSettings;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.ReadOnlySudoHr;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.SudoHr;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"pkwangjoo"},"content":"        JsonSudoHrStorage addressBookStorage \u003d new JsonSudoHrStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"pkwangjoo"},"content":"         * {@link JsonSudoHrStorage} class.","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"pkwangjoo"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonSudoHrStorageTest} class.","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"kennethk-1201"},"content":"        SudoHr original \u003d getTypicalSudoHr();","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"pkwangjoo"},"content":"        storageManager.saveSudoHr(original);","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"pkwangjoo"},"content":"        ReadOnlySudoHr retrieved \u003d storageManager.readSudoHr().get();","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"pkwangjoo"},"content":"        assertEquals(original, new SudoHr(retrieved));","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"pkwangjoo"},"content":"        assertNotNull(storageManager.getSudoHrFilePath());","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"pkwangjoo":12,"kennethk-1201":2,"-":55}},{"path":"src/test/java/seedu/sudohr/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.testutil;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.SudoHr;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":" *     {@code SudoHr ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"pkwangjoo"},"content":"    private SudoHr sudoHr;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"pkwangjoo"},"content":"        sudoHr \u003d new SudoHr();","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"pkwangjoo"},"content":"    public AddressBookBuilder(SudoHr sudoHr) {","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"pkwangjoo"},"content":"        this.sudoHr \u003d sudoHr;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"pkwangjoo"},"content":"     * Adds a new {@code Employee} to the {@code SudoHr} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"pkwangjoo"},"content":"    public AddressBookBuilder withPerson(Employee person) {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"pkwangjoo"},"content":"        sudoHr.addEmployee(person);","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"pkwangjoo"},"content":"    public SudoHr build() {","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"pkwangjoo"},"content":"        return sudoHr;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"pkwangjoo":13,"-":21}},{"path":"src/test/java/seedu/sudohr/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.testutil;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"pkwangjoo":1,"-":33}},{"path":"src/test/java/seedu/sudohr/testutil/DepartmentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package seedu.sudohr.testutil;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.Department;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.DepartmentName;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":" * A utility class to help with building Department objects.","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"public class DepartmentBuilder {","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"    public static final String DEFAULT_NAME \u003d \"Human Resources\";","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"    private DepartmentName name;","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"pkwangjoo"},"content":"    private Set\u003cEmployee\u003e employees;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"     * Creates a {@code DepartmentBuilder} with the default details.","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"    public DepartmentBuilder() {","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"        name \u003d new DepartmentName(DEFAULT_NAME);","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"        employees \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"     * Initializes the DepartmentBuilder with the data of {@code departmentToCopy}.","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"    public DepartmentBuilder(Department departmentToCopy) {","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"        name \u003d departmentToCopy.getName();","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"        employees \u003d new HashSet\u003c\u003e(departmentToCopy.getEmployees());","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"     * Sets the {@code DepartmentName} of the {@code Department} that we are building.","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"    public DepartmentBuilder withDepartmentName(String name) {","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"        this.name \u003d new DepartmentName(name);","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"kennethk-1201"},"content":"        return this;","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"pkwangjoo"},"content":"     * Parses the {@code employees} into a {@code Set\u003cEmployee\u003e} and set it to the {@code Department} that we are","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"kennethk-1201"},"content":"     * building.","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"pkwangjoo"},"content":"    public DepartmentBuilder withEmployees(Employee... employees) {","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"kennethk-1201"},"content":"        this.employees.addAll(Arrays.asList(employees));","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"kennethk-1201"},"content":"        return this;","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"kennethk-1201"},"content":"    public Department build() {","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"kennethk-1201"},"content":"        return new Department(name, employees);","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"pkwangjoo":4,"kennethk-1201":55}},{"path":"src/test/java/seedu/sudohr/testutil/EditDepartmentDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package seedu.sudohr.testutil;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.logic.commands.EditDepartmentCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.Department;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.DepartmentName;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":" * A utility class to help with building EditDepartmentDescriptor objects.","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"public class EditDepartmentDescriptorBuilder {","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"    private EditDepartmentCommand.EditDepartmentDescriptor descriptor;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"    public EditDepartmentDescriptorBuilder() {","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"        descriptor \u003d new EditDepartmentCommand.EditDepartmentDescriptor();","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"    public EditDepartmentDescriptorBuilder(EditDepartmentCommand.EditDepartmentDescriptor descriptor) {","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"        this.descriptor \u003d new EditDepartmentCommand.EditDepartmentDescriptor(descriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"     * Returns an {@code EditDepartmentDescriptor} with fields containing {@code Department}\u0027s details","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"    public EditDepartmentDescriptorBuilder(Department department) {","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"        descriptor \u003d new EditDepartmentCommand.EditDepartmentDescriptor();","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"        descriptor.setName(department.getName());","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"     * Sets the {@code Name} of the {@code EditDepartmentDescriptor} that we are building.","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"    public EditDepartmentDescriptorBuilder withName(DepartmentName name) {","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"        descriptor.setName(name);","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"        return this;","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"    public EditDepartmentCommand.EditDepartmentDescriptor build() {","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"        return descriptor;","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"kennethk-1201":41}},{"path":"src/test/java/seedu/sudohr/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.testutil;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.EditCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.EditCommand.EditEmployeeDescriptor;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Email;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Id;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"pkwangjoo"},"content":" * A utility class to help with building EditEmployeeDescriptor objects.","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"pkwangjoo"},"content":"    private EditEmployeeDescriptor descriptor;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"pkwangjoo"},"content":"        descriptor \u003d new EditEmployeeDescriptor();","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"pkwangjoo"},"content":"    public EditPersonDescriptorBuilder(EditEmployeeDescriptor descriptor) {","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"pkwangjoo"},"content":"        this.descriptor \u003d new EditEmployeeDescriptor(descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"pkwangjoo"},"content":"     * Returns an {@code EditEmployeeDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"pkwangjoo"},"content":"    public EditPersonDescriptorBuilder(Employee person) {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"pkwangjoo"},"content":"        descriptor \u003d new EditEmployeeDescriptor();","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"        descriptor.setId(person.getId());","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"pkwangjoo"},"content":"     * Sets the {@code id} of the {@code EditEmployeeDescriptor} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"4ndrelim"},"content":"    public EditPersonDescriptorBuilder withId(String id) {","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"4ndrelim"},"content":"        descriptor.setId(new Id(id));","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"4ndrelim"},"content":"        return this;","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"pkwangjoo"},"content":"     * Sets the {@code Name} of the {@code EditEmployeeDescriptor} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"pkwangjoo"},"content":"     * Sets the {@code Phone} of the {@code EditEmployeeDescriptor} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"pkwangjoo"},"content":"     * Sets the {@code Email} of the {@code EditEmployeeDescriptor} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"pkwangjoo"},"content":"     * Sets the {@code Address} of the {@code EditEmployeeDescriptor} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"pkwangjoo"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditEmployeeDescriptor}","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"pkwangjoo"},"content":"    public EditCommand.EditEmployeeDescriptor build() {","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"pkwangjoo":25,"4ndrelim":8,"-":65}},{"path":"src/test/java/seedu/sudohr/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.testutil;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Email;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Id;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"pkwangjoo"},"content":" * A utility class to help with building Employee objects.","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"    public static final String DEFAULT_ID \u003d \"0777\";","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"    private Id id;","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"        id \u003d new Id(DEFAULT_ID);","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"pkwangjoo"},"content":"    public PersonBuilder(Employee personToCopy) {","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"4ndrelim"},"content":"        id \u003d personToCopy.getId();","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"pkwangjoo"},"content":"     * Sets the {@code id} of the {@code Employee} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"4ndrelim"},"content":"    public PersonBuilder withId(String id) {","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"4ndrelim"},"content":"        this.id \u003d new Id(id);","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"4ndrelim"},"content":"        return this;","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"pkwangjoo"},"content":"     * Sets the {@code Name} of the {@code Employee} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"pkwangjoo"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Employee} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"pkwangjoo"},"content":"     * Sets the {@code Address} of the {@code Employee} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"pkwangjoo"},"content":"     * Sets the {@code Phone} of the {@code Employee} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"pkwangjoo"},"content":"     * Sets the {@code Email} of the {@code Employee} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"pkwangjoo"},"content":"    public Employee build() {","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"pkwangjoo"},"content":"        return new Employee(id, name, phone, email, address, tags);","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"pkwangjoo":19,"4ndrelim":10,"-":80}},{"path":"src/test/java/seedu/sudohr/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.testutil;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.AddCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.logic.commands.EditCommand.EditEmployeeDescriptor;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"pkwangjoo"},"content":" * A utility class for Employee.","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"pkwangjoo"},"content":"    public static String getAddCommand(Employee person) {","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"pkwangjoo"},"content":"    public static String getPersonDetails(Employee person) {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"        sb.append(PREFIX_ID + person.getId().value + \" \");","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"pkwangjoo"},"content":"     * Returns the part of command string for the given {@code EditEmployeeDescriptor}\u0027s details.","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"pkwangjoo"},"content":"    public static String getEditPersonDescriptorDetails(EditEmployeeDescriptor descriptor) {","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"4ndrelim"},"content":"        descriptor.getId().ifPresent(id -\u003e sb.append(PREFIX_ID).append(id.value).append(\" \"));","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"pkwangjoo":15,"4ndrelim":3,"-":47}},{"path":"src/test/java/seedu/sudohr/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.testutil;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"pkwangjoo":1,"-":71}},{"path":"src/test/java/seedu/sudohr/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.testutil;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"pkwangjoo"},"content":"        return Index.fromOneBased(model.getFilteredEmployeeList().size() / 2);","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"pkwangjoo"},"content":"        return Index.fromOneBased(model.getFilteredEmployeeList().size());","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"pkwangjoo"},"content":"    public static Employee getPerson(Model model, Index index) {","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"pkwangjoo"},"content":"        return model.getFilteredEmployeeList().get(index.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"pkwangjoo":8,"-":47}},{"path":"src/test/java/seedu/sudohr/testutil/TypicalDepartmentNames.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package seedu.sudohr.testutil;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.DepartmentName;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":" * A utility class containing a list of {@code DepartmentName} objects to be used in tests.","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"public class TypicalDepartmentNames {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"    public static final DepartmentName DEPARTMENT_NAME_FIRST \u003d new DepartmentName(\"Human Resources\");","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"    public static final DepartmentName DEPARTMENT_NAME_SECOND \u003d new DepartmentName(\"Engineering\");","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"    public static final DepartmentName DEPARTMENT_NAME_THIRD \u003d new DepartmentName(\"Sales\");","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"kennethk-1201":12}},{"path":"src/test/java/seedu/sudohr/testutil/TypicalDepartments.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package seedu.sudohr.testutil;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.testutil.TypicalPersons.HOON;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.testutil.TypicalPersons.IDA;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.SudoHr;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"import seedu.sudohr.model.department.Department;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"pkwangjoo"},"content":" * A utility class containing a list of {@code Employee} objects to be used in tests.","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"public class TypicalDepartments {","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"    public static final Department HUMAN_RESOURCES \u003d new DepartmentBuilder().withDepartmentName(\"Human Resources\")","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"            .withEmployees(ALICE, BENSON, CARL).build();","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"    public static final Department ENGINEERING \u003d new DepartmentBuilder().withDepartmentName(\"Engineering\")","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"            .withEmployees(DANIEL, ELLE, FIONA).build();","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"    public static final Department SALES \u003d new DepartmentBuilder().withDepartmentName(\"Sales\")","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"            .withEmployees(GEORGE, HOON, IDA).build();","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"    private TypicalDepartments() {} // prevents instantiation","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"     * Returns an {@code SudoHr} with all the typical persons and departments.","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"    public static SudoHr getTypicalSudoHr() {","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"        SudoHr sh \u003d new SudoHr();","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"pkwangjoo"},"content":"        for (Employee person : TypicalPersons.getTypicalPersons()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"pkwangjoo"},"content":"            sh.addEmployee(person);","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"kennethk-1201"},"content":"        for (Department department : getTypicalDepartments()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"kennethk-1201"},"content":"            sh.addDepartment(department);","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"kennethk-1201"},"content":"        return sh;","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"kennethk-1201"},"content":"    public static List\u003cDepartment\u003e getTypicalDepartments() {","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"kennethk-1201"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(HUMAN_RESOURCES, ENGINEERING, SALES));","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"pkwangjoo":4,"kennethk-1201":42,"4ndrelim":9}},{"path":"src/test/java/seedu/sudohr/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.testutil;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"pkwangjoo":2,"-":10}},{"path":"src/test/java/seedu/sudohr/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.testutil;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.SudoHr;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.model.employee.Employee;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"pkwangjoo"},"content":" * A utility class containing a list of {@code Employee} objects to be used in tests.","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"pkwangjoo"},"content":"    public static final Employee ALICE \u003d new PersonBuilder().withId(\"101\")","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"            .withName(\"Alice Pauline\")","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"pkwangjoo"},"content":"    public static final Employee BENSON \u003d new PersonBuilder().withId(\"102\")","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"            .withName(\"Benson Meier\")","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":38,"author":{"gitId":"pkwangjoo"},"content":"    public static final Employee CARL \u003d new PersonBuilder().withId(\"103\")","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"4ndrelim"},"content":"            .withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"pkwangjoo"},"content":"    public static final Employee DANIEL \u003d new PersonBuilder().withId(\"104\")","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"            .withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"pkwangjoo"},"content":"    public static final Employee ELLE \u003d new PersonBuilder().withId(\"105\")","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"4ndrelim"},"content":"            .withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"pkwangjoo"},"content":"    public static final Employee FIONA \u003d new PersonBuilder().withId(\"106\")","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"4ndrelim"},"content":"            .withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"pkwangjoo"},"content":"    public static final Employee GEORGE \u003d new PersonBuilder().withId(\"107\")","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"4ndrelim"},"content":"            .withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":55,"author":{"gitId":"pkwangjoo"},"content":"    public static final Employee HOON \u003d new PersonBuilder().withId(\"108\")","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"4ndrelim"},"content":"            .withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"pkwangjoo"},"content":"    public static final Employee IDA \u003d new PersonBuilder().withId(\"109\")","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"4ndrelim"},"content":"            .withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":62,"author":{"gitId":"pkwangjoo"},"content":"    // Manually added - Employee\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"pkwangjoo"},"content":"    public static final Employee AMY \u003d new PersonBuilder().withId(VALID_ID_AMY).withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"4ndrelim"},"content":"            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"4ndrelim"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"pkwangjoo"},"content":"    public static final Employee BOB \u003d new PersonBuilder().withId(VALID_ID_BOB).withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"4ndrelim"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"4ndrelim"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"pkwangjoo"},"content":"     * Returns an {@code SudoHr} with all the typical persons.","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"kennethk-1201"},"content":"    public static SudoHr getTypicalSudoHr() {","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"4ndrelim"},"content":"        SudoHr sudoHr \u003d new SudoHr();","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"pkwangjoo"},"content":"        for (Employee person : getTypicalPersons()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"4ndrelim"},"content":"            sudoHr.addEmployee(person);","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":82,"author":{"gitId":"4ndrelim"},"content":"        return sudoHr;","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":85,"author":{"gitId":"pkwangjoo"},"content":"    public static List\u003cEmployee\u003e getTypicalPersons() {","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"pkwangjoo":29,"4ndrelim":18,"kennethk-1201":1,"-":40}},{"path":"src/test/java/seedu/sudohr/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"pkwangjoo":1,"-":34}},{"path":"src/test/java/seedu/sudohr/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkwangjoo"},"content":"package seedu.sudohr.ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"pkwangjoo"},"content":"import static seedu.sudohr.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"pkwangjoo"},"content":"import seedu.sudohr.MainApp;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"pkwangjoo":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"pkwangjoo"},"content":"\u003c?import seedu.sudohr.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"pkwangjoo":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"pkwangjoo"},"content":"\u003cfx:root type\u003d\"seedu.sudohr.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"pkwangjoo":1,"-":5}}]
